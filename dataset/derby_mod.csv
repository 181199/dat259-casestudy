Security;summary;description
0;Network Server Protocol error when select fails and order by is specified   ;Reporting for Army  filed on derbydev list.If  when using the Network Server  one tries to execute a select statement that fails because of an SQL exception ex. dividebyzero  and if an order by clause is specified as part of the select  the server will throw a distributed protocol exception  instead of the appropriate error.Repro using the ij utilityijgt  connect jdbcderbynetlocalhostmyDBuseru passwordp  ijgt  create table t i int  j int  rows insertedupdateddeletedijgt  insert into t values    row insertedupdateddeleted  Without an order by its fine...   gt  Attempt to divide by zero.  which is fineijgt  select fn modi j} from t ERROR  DB SQL error SQLCODE   SQLSTATE   SQLERRMC   With an order by  it dies...ijgt  select fn modi j} from t order by  ERROR  Execution failed due to a distribution protocol error that caused deallocation of the conversation. A DRDA Data Stream Syntax Error was detected. Reason xNOTESThe problem is in the DRDAConnThread.java file  processCommands... method  in the case CodePoint.OPNQRY block of code. In the case of an SQL exception  theres a call to writer.clearBuffer that is used to ensure that only an OPNQFLRM is sent back to the client  not the OPNQRYRM andor QRYDSC that may have been written to buffer before the OPNQFLRM. That call to clearBuffer has to be replaced with something smarter  so that instead of doing a full clear which causes the problem shown above  it only backs out the buffer writes that it has made since beginning the case CodePoint.OPNQRY block...   
0;NPE when trying to create a database at a directory that is not allowed   ;Opening this bug on behalf of Daniel DebrunnerThis bug occurs in embedded Derby and Derby Network Server. In Derby Network Server  it might be best for a security exception to be thrown when trying to create a database at a disallowed directory SQLSTATE ).This bug can be reproduced in IJ like soif your D drive is an inaccessible disk. e.g. your CDROM)ijgt  connect jdbcderbydwombat createtrue ERROR XJ Failed to create database dwombat   
0;Make LOCKS as nonreserved keyword in Derby since it is not a reserved keyword in the SQL standards   ;Since LOCKS is not a reserved keyword in SQL standards  Derby should not make LOCKS as reserved keyword.   
1;When using encryption  do not store the length information about the external key in service.properties   ;When using derby database encryption there is a provision to provide the key to be used for encryption as an external key. In this case the key is not stored in the database for added security. There should not be any useful information about the external key that was used for encrypting the database in the service.properties.Right now  key length is stored in service.properties. This should not be stored in service.properties.   
0;Support for like ? Escape ?   ;Request to have support forSelect * from foo where like ? escape ?This functionality works with other JDBCRDBMS combos including DBDB universal driver.This functionality is beneficial for tools as well as appservers for generating the SQL from EJBQL   
0;Request support for CAST) in Like clause   ;Request support for CAST) in like clause for exampleselect t.ID  t.QUANTITY  t.NAME  t.PRICE  t.PNUM from PRODUCTEJB_TABLE t where t.NAME like CAST ? AS VARCHAR))This is supported by DB and will ease migration between DB and Derby   
0;NPE when creating a trigger on a table and default schema doesnt exist.   ;BACKGROUNDWhen connecting to a Derby db with a user id and password  the default schema is USER. For example  if I connect withijgt  connect jdbcderbymyDB usersomeUser passwordsomePwd then the default schema is SOMEUSER.PROBLEMIt turns out that if a table t exists in a nondefault schema and the default schema in this case  SOMEUSER) doesnt exist yet because no objects have been created in that schema)  then attempts to create a trigger on t using its qualified name will lead to a null pointer exception in the Derby engine.REPROIn ij  Create database with default schema SOMEUSER.ijgt  connect jdbcderbymyDB createtrue usersomeUser passwordsomePwd   Create table t in a nondefault schema  in this case  call it ITKO.ijgt  create table itko.t i int)  rows insertedupdateddeleted  Now schema ITKO exists  and T exists in schema ITKO  but default schema SOMEUSER does NOT exist  because we havent created any objects in that schema yet.  So now we try to create a trigger in the ITKO i.e. the nondefault) schema...ijgt  create trigger trig after update on itko.t for each row mode dbsql select * from sys.systables ERROR XJ Java exception  java.lang.NullPointerException.A look at the derby.log file shows the stack trace given below. In a word  it looks like the compilation schema field of SYS.SYSTRIGGERS isnt getting set  and so it ends up being null. That causes the NPE in subsequent processing...java.lang.NullPointerException at org.apache.derby.impl.sql.catalog.SYSSTATEMENTSRowFactory.makeSYSSTATEMENTSrowSYSSTATEMENTSRowFactory.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addSPSDescriptorDataDictionaryImpl.java) at org.apache.derby.impl.sql.execute.CreateTriggerConstantAction.createSPSCreateTriggerConstantAction.java) at org.apache.derby.impl.sql.execute.CreateTriggerConstantAction.executeConstantActionCreateTriggerConstantAction.java) at org.apache.derby.impl.sql.execute.MiscResultSet.openMiscResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.tools.ij.ij.executeImmediateij.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)   
0;RunSuite summary rounds incorrectly   ;Example output from RunSuite in the report file Tests Run Pass  tests passed)  Fail  tests failed)A single failure should not lead to  fail and  pass.Should round down on pass percentage and round up on fail percentage.   
0;dblook displays message keys instead of their associated text   ;Using Derby version ...  )  when I execute java org.apache.derby.tools.dblookinstead of getting the usage message  I get CSLOOK_UsageSimilarly  when using dblook to generate database schema  the output text contains keys such as the one above  instead of their associated text. e.g.  CSLOOK_Timestamp  lt  .gt   CSLOOK_DBName  lt samplegt   CSLOOK_DBUrl  lt jdbcderbysamplegt   appendLogs false    CSLOOK_SchemasHeader  CREATE SCHEMA SAMP     CSLOOK_TablesHeader  CREATE TABLE SAMP.IN_TRAY RECEIVED TIMESTAMP  SOURCE CHAR)  SUBJECT CHAR)  NOTE_TEXT VARCHAR))    
0;Lock not being released properly  possibly related to occurence of lock escalation   ;In the following scenario lt code snippetgt  String sel  select * from t FOR UPDATE of i  PreparedStatement ps  conn.prepareStatement sel  int val    ps.setMaxRowsval  ResultSet rs  ps.executeQuery  String ins  Update t set i? WHERE CURRENT OF rs.getCursorName   PreparedStatement ps  conn.prepareStatementins  ps.setInt iteration  whilers.next  ps.executeUpdate  }   print lock table information System.out.printlnLock Table before commit transaction  printLockTableconn  conn.commit lt end code snippetgt Running the above transaction twice causes a lock timeout the second time.It seems like locks are not being released properly on the table even after the transaction commits and the connection is closed. Also  this condition seems to happen only when lock escalation to table lock occurs. By increasing lock escalation threshold to prevent lock escalation and with only row level locking  the locks are released properly.I printed out the locks information and see a U row level lock on the table   and also a table level lock as a result of lock escalation. After commit  and resultset being closed  the U row level lock is not released. Thus in the second iteration of the test  the unreleased U row level lock causes a lock timeout to happen. In case of the second iteration of the test  the lock table shows the previous U row lock with a null transaction id. This is not right. The transactions are running at the default isolation level  read committed.By default  the lock escalation threshold is set to httpincubator.apache.orgderbymanualstuningperf.htmlIDXI will be attaching the program for reproduction. To reproduce the problem with less number of rows in the table  please run the program with the following derby properties set derby.locks.deadlockTracetruederby.locks.escalationThreshold   
0;Add support for insert functionality using JDBC . updatable resultset apis   ;The JDBC . API introduced the ability to updatedeleteinsert rows from a resultset using methods in the Java programming language rather than having to send an SQL command. This Jira entry is to track the insert rows functionality using JDBC . apis.   
0;[PATCH] Improvements on the NetServlet   ;Hi all I did some minor enhancements on the Net Servlet changed Cloudscape to Derby in the in bundles added pt_BT to know languages the bundle was already there  but the language was not set at the .java)  improved use of tracingDirectory initparameter is now used it was documented but not used before) current value is shown when the user try to change it improved function that handles the request locale for instance  mozilla uses a  instead of _ to separate the country from language) shows on the screen which port the server is running on added a new SRV_POrtNumber message key for such infoSo  Im sending a trunk patch with such changes.  Felipe   
0;Suite jdk is skipped incorrectly with JSE .   ;Since JSE . is a super set of JDK .  and JDK. tests should run in JSE.   
0;Derby incorrectly rounds double values down during insert into NUMERIC   ;When inserting a double value into a field defined as NUMERICa b) using PreparedStatement.setDouble)  Derby may incorrectly round the number down. For example  a NUMERIC ) field with a double  . ends up with a value of . in the database. This works fine in Oracle and other databases.The problem occurs because double cannot represent . exactly  so the actual value is .... SQLDecimal.setCoreValue uses BigDecimaldouble) which constructs a BigDecimal of .... and then SQLDecimal.setWidth uses value.setScaledesiredScale  BigDecimal.ROUND_DOWN)  Note that BigDecimal javadoc recommends that the double constructor be avoided for this reason.One fix appears to be to change SQLDecimal.setCoreValuedouble) to avoid using the double constructor of BigDecimal. Using Double.toString) and BigDecimalString) looks as if it would work as expected  because Double.toString) has special rounding abilities and converts .... back to ..   
0;Aliased Columns not recognized after group by... order by combination   ;Ive been doing work to try and integrate Derby with the Mondrian ROLAP engine  which has uncovered a bug in Derby when a query involves column aliasing  a group by clause  and an order by clause.For example Mondrian will generate the following queryselect STORE.STORE_COUNTRY as c  STORE.STORE_STATE as c  STORE.STORE_CITY as c  STORE.STORE_NAME as c  STORE.STORE_TYPE as c  STORE.STORE_MANAGER as c  STORE.STORE_SQFT as c  STORE.GROCERY_SQFT as c  STORE.FROZEN_SQFT as c  STORE.MEAT_SQFT as c  STORE.COFFEE_BAR as c  STORE.STORE_STREET_ADDRESS as c from STORE as STORE group by STORE.STORE_COUNTRY  STORE.STORE_STATE  STORE.STORE_CITY  STORE.STORE_NAME  STORE.STORE_TYPE  STORE.STORE_MANAGER  STORE.STORE_SQFT  STORE.GROCERY_SQFT  STORE.FROZEN_SQFT  STORE.MEAT_SQFT  STORE.COFFEE_BAR  STORE.STORE_STREET_ADDRESS order by STORE.STORE_COUNTRY  STORE.STORE_STATE  STORE.STORE_CITY  STORE.STORE_NAMEwhich should be valid SQL. I have tested this query outside of the Mondrian environment and still receive the same error which isColumn STORE.STORE_COUNTRY is not in any table in the FROM list or it appears within a join specification and is outside the scope of the join specification or it appears in a HAVING clause and is not in the GROUP BY list.SQL State xError Code However  if I remove any one of the three elements aliasing  group by  order by) or if the order by uses the aliased names  the query works. It is only the combination of all  elements that is causing a problem. ie. all of the following queries work correctly select STORE.STORE_COUNTRY   STORE.STORE_STATE   STORE.STORE_CITY   STORE.STORE_NAME   STORE.STORE_TYPE   STORE.STORE_MANAGER   STORE.STORE_SQFT   STORE.GROCERY_SQFT   STORE.FROZEN_SQFT   STORE.MEAT_SQFT   STORE.COFFEE_BAR   STORE.STORE_STREET_ADDRESS from STORE as STORE group by STORE.STORE_COUNTRY  STORE.STORE_STATE  STORE.STORE_CITY  STORE.STORE_NAME  STORE.STORE_TYPE  STORE.STORE_MANAGER  STORE.STORE_SQFT  STORE.GROCERY_SQFT  STORE.FROZEN_SQFT  STORE.MEAT_SQFT  STORE.COFFEE_BAR  STORE.STORE_STREET_ADDRESS order by STORE.STORE_COUNTRY  STORE.STORE_STATE  STORE.STORE_CITY  STORE.STORE_NAMEselect STORE.STORE_COUNTRY as c  STORE.STORE_STATE as c  STORE.STORE_CITY as c  STORE.STORE_NAME as c  STORE.STORE_TYPE as c  STORE.STORE_MANAGER as c  STORE.STORE_SQFT as c  STORE.GROCERY_SQFT as c  STORE.FROZEN_SQFT as c  STORE.MEAT_SQFT as c  STORE.COFFEE_BAR as c  STORE.STORE_STREET_ADDRESS as c from STORE as STORE group by STORE.STORE_COUNTRY  STORE.STORE_STATE  STORE.STORE_CITY  STORE.STORE_NAME  STORE.STORE_TYPE  STORE.STORE_MANAGER  STORE.STORE_SQFT  STORE.GROCERY_SQFT  STORE.FROZEN_SQFT  STORE.MEAT_SQFT  STORE.COFFEE_BAR  STORE.STORE_STREET_ADDRESSselect STORE.STORE_COUNTRY as c  STORE.STORE_STATE as c  STORE.STORE_CITY as c  STORE.STORE_NAME as c  STORE.STORE_TYPE as c  STORE.STORE_MANAGER as c  STORE.STORE_SQFT as c  STORE.GROCERY_SQFT as c  STORE.FROZEN_SQFT as c  STORE.MEAT_SQFT as c  STORE.COFFEE_BAR as c  STORE.STORE_STREET_ADDRESS as c from STORE as STORE order by STORE.STORE_COUNTRY  STORE.STORE_STATE  STORE.STORE_CITY  STORE.STORE_NAMEselect STORE.STORE_COUNTRY as c  STORE.STORE_STATE as c  STORE.STORE_CITY as c  STORE.STORE_NAME as c  STORE.STORE_TYPE as c  STORE.STORE_MANAGER as c  STORE.STORE_SQFT as c  STORE.GROCERY_SQFT as c  STORE.FROZEN_SQFT as c  STORE.MEAT_SQFT as c  STORE.COFFEE_BAR as c  STORE.STORE_STREET_ADDRESS as c from STORE as STORE group by STORE.STORE_COUNTRY  STORE.STORE_STATE  STORE.STORE_CITY  STORE.STORE_NAME  STORE.STORE_TYPE  STORE.STORE_MANAGER  STORE.STORE_SQFT  STORE.GROCERY_SQFT  STORE.FROZEN_SQFT  STORE.MEAT_SQFT  STORE.COFFEE_BAR  STORE.STORE_STREET_ADDRESS order by c c c c   
0;Network Server Gives NPE if SQLException has null arguments   e.g. for ERROR XBMH)   ;Network server  Network Server throws an NPE because one of the arguments of the SQLException is null. It shouldnt do so.To reproduce try to create a database in the root directory on Linux. Do not run in security manager. The trace below came from an extra  in the url in NSinSameJVM.javaThe issues are Network Server throws an NPE because one of the arguments of the SQLException is null in this code. It shouldnt do so. arguments are variable part of a message Object[] args  ce.getArguments  for int i    args  null amp amp  i lt  args.length  i sqlerrmc  args i .toString  separator  This exception seems to have null arguments which doesnt seem right. ERROR XBMH Directory NSinSameJVMTestDB cannot be created.ERROR XBMH Directory NSinSameJVMTestDB cannot be created. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java at org.apache.derby.impl.services.monitor.PersistentServiceImpl.runPersistentServiceImpl.java at java.security.AccessController.doPrivilegedNative Method at org.apache.derby.impl.services.monitor.PersistentServiceImpl.createServiceRootPersistentServiceImpl.java at org.apache.derby.impl.services.monitor.BaseMonitor.bootServiceBaseMonitor.java at org.apache.derby.impl.services.monitor.BaseMonitor.createPersistentServiceBaseMonitor.java at org.apache.derby.iapi.services.monitor.Monitor.createPersistentServiceMonitor.java at org.apache.derby.impl.jdbc.EmbedConnection.createDatabaseEmbedConnection.java at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java at org.apache.derby.jdbc.Driver.getNewEmbedConnectionDriver.java at org.apache.derby.jdbc.Driver.connectDriver.java at org.apache.derby.impl.drda.Database.makeConnectionDatabase.java at org.apache.derby.impl.drda.DRDAConnThread.getConnFromDatabaseNameDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.verifyUserIdPasswordDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.parseSECCHKDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.parseDRDAConnectionDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.exchangeServerAttributesDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.sessionInitialStateDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.runDRDAConnThread.javaCleanup action completed . GMT Thread DRDAConnThread_  derby.daemons  DATABASE  NSinSameJVMTestDB  DRDAID  }  Failed to create database NSinSameJVMTestDB  see the next exception for details. . GMT Thread DRDAConnThread_  derby.daemons  DATABASE  NSinSameJVMTestDB  DRDAID  }  Directory NSinSameJVMTestDB cannot be created. . GMT Thread DRDAConnThread_  derby.daemons  DATABASE  NSinSameJVMTestDB  DRDAID  NF.AFB}  Failed to create database NSinSameJVMTestDB  see the next exception for details. . GMT Thread DRDAConnThread_  derby.daemons  DATABASE  NSinSameJVMTestDB  DRDAID  NF.AFB}  nullnulljava.lang.NullPointerException at org.apache.derby.impl.drda.DRDAConnThread.writeSQLCAGRPDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.writeSQLCARDDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.parseDRDAConnectionDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.exchangeServerAttributesDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.sessionInitialStateDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.runDRDAConnThread.javanulljava.lang.NullPointerException at org.apache.derby.impl.drda.DRDAConnThread.writeSQLCAGRPDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.writeSQLCARDDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.parseDRDAConnectionDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.exchangeServerAttributesDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.sessionInitialStateDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.runDRDAConnThread.java   
0;Derby should throw a truncation error or warning when CASTing a parameterconstant to char or char for bit datatypes and the data is too large for the datatype.   ;Derby doesnt throw a truncation exceptionwarning when data is too large during casting of constants or parameters to character string or bit string data types. Following is ij example for constants which is too big for the datatype it is getting cast toijgt  values cast hello as char))) hel row selectedijgt  values cast X as char) for bit data))  row selectedFollowing code snippet is when using parameters through a JDBC program s.executeUpdatecreate table ct c CLOBK)))  the following Formatters just loads cData with  c characters String cData  org.apache.derbyTesting.functionTests.util.Formatters.repeatCharc )  notice that ? in the preared statement below is bound to length  pSt  con.prepareStatementinsert into ct values cast ? as varchar))))  pSt.setString  cData)  Derby doesnt throw an exception at ps.execute time for  characters into  parameter. It silently truncates it to  pSt.execute)    
0;in place tableindex compress which returns space to OS   ;Each derby table or index is stored in a separate file. Space fromdeleted rows is eventually reclaimed within the file as is used forsubsequent inserts into the same file. That space is not returned tothe OS unless the user calls the SYSCS_UTIL.SYSCS_COMPRESS_TABLEsystem procedure. That procedure will return the unused space inthe tables and indexes to the OS. It gets an exclusive lock on thetable  copies all rows in the indexes and the base table into newcompressed files and delete the old files. Prior to jdk . this wasthe only way to return space from a file to the OS.In jdk . RandomAccessFile was enhanced to allow the truncation of afile  which would return the space at the end of the file back tothe OS. In order to take advantage of this new feature a newcompress feature is needed in derby.The assumption is that this work will be used in future work which willautomatically schedule this job and others in background  with nointeraction needed from the dba. The st phase of this work willsimply build a procedure that will do the work. The nd phase willbe to look into scheduling the procedure automatically as part ofthe current background post commit processing. Longer term it wouldbe best if this fit into a new background task monitor  which couldschedule larger background tasks balanced against the other prioritiesof the system. These tasks might include this new online compress automatic statistics gathering  more proactive deleted row reclamation  ....The proposed feature will reorganize base tables and indexes  movingempty pages to the end. It will release space back to the operatingsystem when it has created a chunk of empty pages at the end of thefile. It will be designed to run in background  and will lock resourcesof the table for as short a time as possible so that it can iterativelyprocess the table.To reclaim space in the heap  it will scan the heap in page reverse order.It will get a short term table lock  process all the rows on a page  andthen commit that transaction releasing the lock. The commit will beoptimized like other internal transactions  and will not need to waitfor a synchonized write. Each row moved  will require all the indexentries for that row to also be updated. While doing the processing itwill also take care of processing committed deleted rows. When spaceis free at the end of the table it will be freed back to the operatingsystem  using the RandomAccessFile.setLength) interface.To reclaim space in the btree  data on pages will be moved rather thanrows. Data from pages at the end of the file will be moved to freesmaller numbered pages. Again short term table locks will be required and the operation will look similar to the current btree merge operationsalready implemented. Again when a chunk of pages is free at the end ofthe file  they will be returned to the OS using the same mechanism asthe heap.   
0;Bad Eclipse plugin version specification   ;In the plugin.xml of the Derby Eclipse plugin  the version specification reads ... )  which Eclipse complains about as being illegal. In consequence  the plugin is not loaded.The Eclipse docs have the following to say about the version specification Plugin version format is major.minor.service.qualifier.Stripping the )  whatever that is anyway  solves the problem.   
0;Inserting values in an identity column   ;It is not possible to insert a specific value in a column defined as identity. This makes it very hard to migrate from other RDBMSs or to import data dumped from other databases. For example  an autoincrement column in MySQL should be an identity column. The problem is that when the data is dumped from MySQL to a file  it generates inserts with values. These values cant be inserted in the Derby table. Posible solutions . being able to generate by default as identity . being able to disable the identity feature for a column . being able to generate a column as non identity and after data is populated  alter table to add the identity to the column.   
0;For the concurrency of ResultSet  Network Server should not send the concurrency of Statement.   ;I am working on getting updatable resulset functionality to work under Network Server. One issue that I found is Network Server sends the concurrency of the Statement object when it really needs to send the concurrency of the Resultset. This was ok in the past because CONCUR_READ_ONLY was the only concurreny supported by Derby. But  now with the support of CONCUR_UPDATABLE  it is possible that the concurrency of ResultSet might not be same as the Statement object. Hence  Network Server should send the concurrency of the ResultSet object if that is what the protocol calls for.The fix for this is localized in javadrdaorgapachederbyimpldrdaDRDAConnThread.java.   
0;setNull does not work with java.sql.Types.TIMESTAMP   ;Calling setNullx java.sql.Types.TIMESTAMP) throws an exception with the following message. x is the column number)Message is  An attempt was made to get a data value of type TIMESTAMP from a data value of type null.   
0;Parameter names required in CREATE FUNCTION   ;A statement like create function s.f char)  integer) returns int language java parameter style java external name myclass.mymethodfails with the message ERROR X Syntax error Encountered char at line   column However create function s.f p char)  p integer) returns int language java parameter style java external name myclass.mymethodis accepted.The Derby documentation at httpincubator.apache.orgderbymanualsreferencesqlj.htmlCREATEPROCEDUREStatement)  the SQL standard  and DB all agree that the parameter name is optional.   
0;List of jar files in toolsjava incorrect in BUILDING.txt   ;Section  of BUILDING.txt describes how to obtain JDK .  JDK .  JDBC . extensions  JCE  OSGI. But then it says you should have the following jarsderby.source}toolsjavajavacc.jarderby.source}toolsjavajakartaoro...jarderby.source}toolsjavajce__.jarderby.source}toolsjavajdbc_stdext.jarderby.source}toolsjavajta__Bclasses.zipderby.source}toolsjavaservlet.jarderby.source}toolsjavaosgi.jarActually  what you have is the followingempty.jargeronimospecjta..Brc.jargeronimospecservlet.rc.jarjakartaoro...jarjavacc.jarjce__.jarjdbc_stdext.jarosgi.jarI am providing a patch with this correction.   
0;isFirst) returns true when relativex) goes beyond result set   ;Bizarre error. Not sure if this is a JDBC  Derby  or Java issue.An opened result set has  records. A call to relative while on row  should result in isAfterLasttrue  and isFirst  isBeforeFirst  and IsLast set to false. However  the result is isAfterLastTrue and isFirstTrue.ij connect IsAfter createtrue create table x a char  insert into x values     quit import java.sql.*  public class ErrIsFirst  public static void mainString argv[] throws SQLException  Connection conn  null  Statement s  null  ResultSet rs  null  String DerbyDriver  org.apache.derby.jdbc.EmbeddedDriver  String returnValue  try  Class.forNameDerbyDriver.newInstance  } catch Exception NoDriver  System.out.printlnDerby driver not found   DerbyDriver  NoDriver.printStackTrace  System.exit  } try  conn  DriverManager.getConnectionjdbcderbyIsAfter  s  conn.createStatementResultSet.TYPE_SCROLL_INSENSITIVE ResultSet.CONCUR_READ_ONLY  rs  s.executeQuery SELECT A FROM X  rs.next   First Record returnValue  rs.getStringA  System.out.printlnValuereturnValue  rs.relative  System.out.printlnisFirst  rs.isFirst   isLast  rs.isLast   isAfterLast  rs.isAfterLast  returnValue  rs.getStringA  System.out.printlnValuereturnValue  rs.relative  returnValue  rs.getStringA  System.out.printlnValuereturnValue  rs.relative  System.out.printlnisFirst  rs.isFirst   isLast  rs.isLast   isAfterLast  rs.isAfterLast  returnValue  rs.getStringA  System.out.printlnValuereturnValue  rs.close  s.close  } catch SQLException se  String SQLState  se.getSQLState  String SQLMessage  se.getMessage  System.out.printlnError  SQLState  System.out.printlnSQLMessage  } }}The results on my system areValueisFirstfalse isLastfalse isAfterLastfalseValueValueisFirsttrue isLastfalse isAfterLasttrueError  Invalid cursor state  no current row.If you eliminate the first println call to isFirst you get the following correct results.ValueValueValueisFirstfalse isLastfalse isAfterLasttrueError  Invalid cursor state  no current row.Okay  so where did we go wrong?   
1;Add Support for network Server USRIDONL security   ;Currently Network Server supports only two security mechanisms.User ID and password usridpwd)User ID and encrypted password eusridpwd)It would be good to add support for User ID Only security so that it could more closely match the embedded driver and not always require a password.See details of security mechanism implementations in section ... of DRDA V Vol.  Distributed Relational Database Architecture httpwww.opengroup.orgdbiop   
0;setNullx JDBCType.DATE) does not work when batching is turned on   ;Trying to execute batch on which setNullx DATE) was called gives the following exceptionSQL Exception An attempt was made to get a data value of type DATE from a data value of type null. at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.EmbedConnection.newSQLExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.newSQLExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.dataTypeConversionEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObjectEmbedPreparedStatement.java) at org.apache.derby.iapi.types.DataType.setIntoDataType.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeBatchElementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeBatchEmbedStatement.java) at net.sf.hibernate.impl.BatchingBatcher.doExecuteBatchBatchingBatcher.java)DATE column is nullable in db schema  so it should pass there ok. I believe the problem is in org.apache.derby.iapi.types.SQLDate  which does not implement setInto method  so DataType.setInto method is executed  calling setObjectx null). setObject thinks this is JDBC spec violation and fails on exception.Problem exists in both ... and ...   
0;Optimize some specific methods in Network Server to improve performance   ;In reviewing the Network Server Code and profiling there were several areas that showed potential for providing performance improvement.Functions that need optimizing to prevent unneeded object creation and excessive decodingparsePKGNAMCSN)parseSQLDTA_work)buildDBCursorName)In DDMWriter and DDMReader  use System Routines in java.util.Arrays and System.arrayCopy instead of writing code to do functions like copy arrays and pad strings.   
0;Javadoc build should include a timestamp andor the svn revision number in a visible location.   ;In order to easily identify when a specific set of javadoc was built  and from what source  it would be useful to include a timestamp andor the svn revision number at the time the javadoc is built. The footer is an excellent location to place this information  as it is visible on every generated page.   
0;Column names on ResultSet.updateXXX and getXXX methods are handled incorrectly   ;Sections .. and  ..  of JDBC . spec sayColumn names supplied to getter  updater  methods are case insensitive. If a select listcontains the same column more than once  the first instance of the column will bereturned  updated .Derby returns or updates the last column in the select list  not the first. With the attached Java class I seePREUPDATE POSTUPDATE POSTUPDATE getXXXname)AB ab   
0;Schema already exists when creating a table   ;When running a multithreaded program where several threads in parallell create tables in a schema that is not explicitly created  one often get the following exceptionERROR XY Schema TESTSCHEMA already exists. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.duplicateDescriptorExceptionDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addDescriptorNowDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addDescriptorDataDictionaryImpl.java) at org.apache.derby.impl.sql.execute.CreateSchemaConstantAction.executeConstantActionCreateSchemaConstantAction.java) at org.apache.derby.impl.sql.execute.DDLConstantAction.getSchemaDescriptorForCreateUnknown Source) at org.apache.derby.impl.sql.execute.CreateTableConstantAction.executeConstantActionCreateTableConstantAction.java) at org.apache.derby.impl.sql.execute.MiscResultSet.openMiscResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at derbytest.MainCreateTable.runMain.java) at java.lang.Thread.runThread.java)A program that reproduces this bug will be attached.   
0;FOR UPDATE required for updatable result set to work   ;To get an updatable result set  the JDBC . spec  section .. Modifying ResultSet Objects states  ResultSet objects with concurrency CONCUR_UPDATABLE can be updated using ResultSet objects.In addition  Derby requires the SQL SELECT statement to have a FORUPDATE clause for updates to be allowed. This may be a usability issue  asmany examples  e.g. in JDBC API tutorial and reference and referencebook and the JDBC . Specification ...) do not include a FORUPDATE clause in the SQL SELECT.Mamta Satoor saysDerby implements the JDBC updatable resultset by using the existing updatable cursor implementation. And in order to do that  it requires that the SELECT statement should include the FOR UPDATE clause. One can change the Derby implementation so that it does not require FOR UPDATE clause to piggyback on updatable cursor implementation.Dan DeBrunner saysTechnically I wonder if this is covered by the JDBC standard  I see nothing in the JDBC . that states any requirements for the SQL statement for an updateable result set. I know the JDBC tutorial book has some guidelines as to what will typically work  but isnt it up to the database engine to define what works here? Having said that I think that not requiring the FOR UPDATE would be a useful improvement.   
0;Fix copyright notices and other IBMCloudscape references in javademo*   ;Assigning this issue to Documentation component  as there is not a Demos component.   
1;Testharness testEncryptionAlgorithm property is not being picked up correctly for some encryption suites   ;It looks like the encryption.properties  testEncryptionAlgorithmDESedeCBCNoPadding is not being picked up for the encryption run of stress.multi test. But the test uses a database with the default encryption algorithm  DESCBCNoPadding   
0;Need a online backup feature  that does not block update operations   when online backup is in progress.   ;Currently Derby allows users to perfoms online backups using SYSCS_UTIL.SYSCS_BACKUP_DATABASE) procedure  but while the backup is in progress  update operations are temporarily blocked  but read operations can still proceed.Blocking update operations can be real issue specifically in client server environments  because user requests will be blocked for a long time if a backup is in the progress on the server.   
0;connection toString should uniquely identify the connection   ;The toString) on the Derby connection doesnt print unique information.for example System.out.printlnconn) printsEmbedConnection in the case of derby embeddedIt would be great if the toString) method for connections could be used to differentiate one connection from another.   
0;Network Server demo program should support Derby network client driver   ;Currently  the Network Server demo programs require the IBM Universal JDBC Driver JCC) for client functionality. The demo should be enhanced to also support using the Derby client driver.   
0;Builds fail during splitmessages step if path contains spaces   ;If the path to the Derby source files contains a space  for example optMy Local Drivederbysource  then the build will fail at the splitmessages step with the following error  java  Exception in thread main java.lang.StringIndexOutOfBoundsException String index out of range   java  at java.lang.String.substringString.java)  java  at org.apache.derbyBuild.splitmessages.mainsplitmessages.java)splitmessages should be improved to handle spaces in the path to the message files.   
0;test toolsdblook_test.java fails if run in a directory having *derby* in its path   ;SYMPTOM The test toolsdblook_test will fail. The diff looks similar to this     Start dblook_test jdk.._ derbyallderbytools   ***dlt  java.io.FileNotFoundException lt filePathgt Test Failed. End dblook_test jdk.._ derbyallderbytools   ***    cf mail threadhttpmailarchives.apache.orgmod_mboxdbderbydev.mboxc.GB@ac.fr.y.neteANALYSIS The problem lies with the sedfunctionality in the test harness  which delete certain lines beforecomparing with the master file.Sed.java in the harness removes lines containing derby in the path viz deleteLines.addElement^.derby.lt .gt .).*)   deleteLines.addElement^.derby..).)  so if your tests are running in a directory containing this pattern  aline too much is deleted from dblook_test.tmp  thereby giving acomparison failure like you describe.I dont know the reason for this deletion yet  so I cant say how tofix it  but the workaround is obvious Run test in a directory whosename does not contain this pattern   
0;Provide some way to update index cardinality statistics e.g. reimplement update statistics)   ;Performance problems are being reported that can be resolved by updating the cardinality statistics used by the optimizer. Currently the only time the statistics are guaranteed to be an uptodate is when the index is first created on a fully populated table. This is most easily accomplished on an existing table by using the command  alter table lt tablenamegt  compress  sequential  Compress table is an IO intensive task. A better way to achieve this would be to reenable parser support for the update statistics command or reimplement the update in some other fashion.   
0;testingREADME.htm property descriptions testSpecialProps wrongly named  useprocess omitted   ;In section . in ..testingREADME.htm  the property  TestSpecialFlags is described for specifying additional properties to RunTest. I could notfind any evidence of this in RunTest or elsewhere. However  the property testSpecialPropsis supported by RunTest.java. I found this to work. This propertyalso has a syntax for specifying more than one property using a ^delimiter between properties  i.e. testSpecialPropslt propgt lt valuegt ^ ... ^lt propngt lt valuengt Also I noticed the property useprocess defaulttrue) for controllingwhether RunTest runs the test in a separate vm or a thread in currentvm isnt documented in README.htm. I suggest it be included  sinceits potentially useful for debugging tests. I could include it in thepatch for derby I dont think anybody committed it yet) or file anew JIRA issue.Looking at RunTest reveals that unit tests are not yet) runnable withuseprocessfalse  though.   
0;SYS.SYSCOLUMN problem with GENERATED BY DEFAULT column w Network Server   ;When connected to the Derby Network Server  if one has a table with a column defined as GENERATED BY DEFAULT and then one tries to select the COLUMNDEFAULT field from SYS.SYSCOLUMNS  the result is an NPE in the server code that leads to connection deallocation.I dont know if this is a problem with the GENERATED BY DEFAULT feature or if its a problem with Network Servermore investigation is required.To reproduce  use ij to connect to a database using Network Server  and thenijgt  create table t i int generated by default as identity)  rows insertedupdateddeletedijgt  select columndefault from sys.syscolumns COLUMNDEFAULTnulljava.lang.NullPointerException at org.apache.derby.impl.drda.DRDAConnThread.writeFdocaValDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.writeFDODTADRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.writeQRYDTADRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.processCommandsDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.runDRDAConnThread.java)agentThread DRDAConnThread_  main ERROR  Execution failed due to a distribution protocol error that caused deallocation of the conversation. A DRDA Data Stream Syntax Error was detected. Reason x   
0;Remove resultSetHoldability property from ClientDataSource   ;ClientDataSource through ClientBaseDataSource) implements a Java Bean property resultSetHoldability which is not documented in the functional spec at.httpincubator.apache.orgderbypapersDerbyClientSpec.htmlJDBC provides standard ways to set the holdability of ResultSets  so a nonstandard separate mechanism is not required. The property and associated code needs to be removed.   
1;AES encryption test fails on Solaris    ;The storeaes.sql test on Solaris  produces the following diff report     Start aes jdk.._   *** dellt  ERROR XJ Java exception Wrong keysize must be equal to    or  java.security.InvalidParameterException.agt  ERROR XJ Java exception AES key length must be     or  bits java.security.InvalidParameterException.Test Failed. End aes jdk.._   ***    The cause of this problem is that on most OSs  the java.security.InvalidParameterException thrown by the JVM when an invalid encryption key length is requested contains a message with the following text Wrong keysize must be equal to    or while on Solaris  the message contained in the exception has been changed to AES key length must be     or  bitsThe reason for this is most likely that a different encryption library is included in Solaris  comparedto the other OSs  either as part of the JVM or as a native library.The problem occurs on Solaris  running on both x and Sparc processors. It occurs both with jdk . and jdk ..   
0;Many files do not have correct svnproperties   ;There are two problems with svn properties in Derby) A number of nonbinary files do not have the svneolstylenative property set. Some of these currently has CRLF Windowsstyle) line terminators  Exampledt@atum~localDERBYd_rby file .pluginseclipseorg.apache.derby.uisrcorgapachederbyuipopupactionsRemoveDerbyNature.java.pluginseclipseorg.apache.derby.uisrcorgapachederbyuipopupactionsRemoveDerbyNature.java ASCII C program text  with CRLF line terminatorsdt@atum~localDERBYd_rby svn proplist v .pluginseclipseorg.apache.derby.uisrcorgapachederbyuipopupactionsRemoveDerbyNature.javawhereas others have LFUnixstyle). Exampledt@atum~localDERBYd_rby file .pluginseclipseorg.apache.derby.uisrcorgapachederbyuiactionsSysInfoAction.java.pluginseclipseorg.apache.derby.uisrcorgapachederbyuiactionsSysInfoAction.java ASCII C program textdt@atum~localDERBYd_rby svn proplist v .pluginseclipseorg.apache.derby.uisrcorgapachederbyuiactionsSysInfoAction.javaSome of the files that dont have this property do instead have a property called snveolstyle. Im guessing this is a typo.Exampledt@atum~localDERBYd_rby svn proplist v javatestingorgapachederbyTestingunitTestscryptoT_CipherOFB.javaProperties on javatestingorgapachederbyTestingunitTestscryptoT_CipherOFB.java snveolstyle  native) A seemingly arbitrary collection of files have the svnexecutable property set. To my knowledge  the only files in the Derby respository that should have this property are the *.ksh and perhaps the *.bat scripts  I dont know if Windows cares about this property when the file has the .bat suffix). Currently none of the *.ksh scripts have this property  but a number of java source files not all) have it. If there is some reason to have this property on other files  it should at least be done consistently throughout the repository).Exampledt@atum~localDERBYd_rby svn proplist v javadrdaorgapachederbydrdaNetworkServerControl.javaProperties on javadrdaorgapachederbydrdaNetworkServerControl.java svnexecutable  svneolstyle  nativedt@atum~localDERBYd_rby svn proplist v javatestingorgapachederbyTestingunitTestscryptoT_CipherOFB.javaProperties on javatestingorgapachederbyTestingunitTestscryptoT_CipherOFB.java snveolstyle  nativeIf I understand correctly it is not possible to create a patchfile that contains property changes  so I guess a committer will have to do this. Im willing to create a script file containing all the svn commands that must be run  as a pseudo patch.   
0;Network client XA should only keep XA state for transaction branch association  to track whether to send commit in autocommit mode.  All other state and state related decisions should be deferred to the server.   ;Network client XA should only keep XA state for transaction branch association  to track whether to send commit in autocommit mode. All other state and state related decisions should be defered to the server.The client tries to track XA state to make decisions based on current XA state. Most of this state handling was removed with DERBY  but it still was not being handled properly. This is evidenced by multiple failures in xaSimplePostive that now that it gets past DERBY.This fix will have the client track only branch association as outlined in the XA specification. Table   State Table for Transaction Branch Association. The client will track onlyXA_TO_NOT_ASSOCIATEDXA_T_ASSOCIATEDAssociation Suspended T) will map to XA_TO_NOT_ASSOCIATED for the clients pupurposes.The client commit in autocommit mode only for XA_TO_NOT_ASSOCIATED.   
0;example.html file for the SimpleApp does not describe the arguments accepted by the program   ;The SimpleApp.java demo program supplied with Derby currently accepts two arguments and will soon see JIRA entry DERBY accept a third that allows the application to run as a client to Network Server. Only embedded is documented in the DERBY_INSTALL}demosimpleexample.html file. The others should be added. The current undocumented argument isjccjdbcclient  will use the JCC client driver to access Network ServerThe new argument might bederbyclient  will use the Net client driver to access Network ServerThis brief description of the program using the derby client might help in this updateTo use the SimpleApp in client mode only the directory containing the SimpleApp and the netclient.jar file are needed in the CLASSPATH. By passing in derbyclient as an argument the program will load the client driver rather than start the Derby engine. The parseArguments method line  changes two key strings. The variables driver and protocol are set to the client driver values. With these new definitions the go method loads the client driver at line  and creates the client URL at lines . With the variables expanded these lines will look like thisline  Class.forNameorg.apache.derby.jdbc.ClientDriverline  conn  DriverManager.getConnectionjdbcderbylocalhost  derbyDB createtrue  props  As in the embedded example the connection will create the database if it does not exist and boot derbyDB if it has not already been loaded by the Network Server. Note that the application is well behaved and does not shutdown the database when operating as a client.   
0;setByte) with executeBatch causes hang with client if mapping is invalid  e.g. setByte to DATE   ;setByte) followed by an addBatch) and then an executeBatch causes a hang.May apply to any setXXX call that will result in any invalid conversion  possibly only those conversions handled by the client.See the test jdbcapiparameterMapping  look for this bug number in the code  to see the cases disabled when running with the client.   
0;It is desirable to have IDENTITY_VAL_LOCAL) function return last recent user specified value or system generated value for BY DEFAULT identity columns.   ;Derby was recently enhanced to support BY DEFAULT identity column. While the behavior of this feature is not documented yet  I think  it is desirable for IDENTITY_VAL_LOCAL) function  that is used to retrieve last single statement insert value for identity column  to return user specified value for the default column.For GENERATED ALWAYS identity columns  this issue doesnt apply  since users cant provide a value. But for GENERATED BY DEFAULT identity columns  users can optionally specify a value. IDENTITY_VAL_LOCAL) function should return this value. Derby currently doesnt support this behavior.ijgt  create table tauto  i int generated by default as identity  j int  k int)  rows insertedupdateddeletedijgt  insert into tauto j k) values  )  row insertedupdateddeletedijgt  values identity_val_local)  row selectedijgt  insert into tauto j k) values  )  row insertedupdateddeletedijgt  values identity_val_local)  row selectedijgt  insert into tauto values   )  row insertedupdateddeletedijgt  values identity_val_local)  lt lt lt lt lt lt lt lt lt lt lt lt lt lt  This needs be  row selectedijgt  select * from tauto I |J |K | | | | | | rows selected   
0;Unknown page format  error  while doing recovery after a  a crash while doing  in place compress.   ;Crash was done manually when compress was almost in the end. Log trace before the crashDEBUG LogTrace OUTPUT Write log record tranId instant  ) length BeginXact null transactionStatus DEBUG LogTrace OUTPUT Write log record tranId instant  ) length Page Operation Page Container  )) pageVersion   CompressSpaceOperation newHighestPage   num_pages_truncated   to Page Container  ))DEBUG LogTrace OUTPUT Flush log to DEBUG LogTrace OUTPUT Write log record tranIdNull instant  ) length Checksum Operation algorithm   value   data length DEBUG LogTrace OUTPUT Begin log sync...DEBUG LogTrace OUTPUT end log sync.DEBUG LogTrace OUTPUT Flush log to DEBUG LogTrace OUTPUT Begin log sync...DEBUG LogTrace OUTPUT end log sync.DEBUG LogTrace OUTPUT Write log record tranId instant  ) length EndXact null Committed  transactionStatus  Committed Csureshtdatabasesgt java Dij.protocoljdbcderby org.apache.derby.tools.ijij version .ijgt  call SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLEAPP   T        )  IJ ERROR Unable to establish connectionijgt  connect jdbcderbywombat ERROR XJ Failed to start database wombat  see the next exception for details.ERROR XSDB Unknown page format at page Page Container  ))ijgt What was done on the DB  rm rf wombat ijCsureshtdatabasesgt rem set DERBY_INSTALLCsureshtdatabasesgt java Dij.protocoljdbcderby org.apache.derby.tools.ijij version .ijgt  Terminate batch job YN)? ^C ijCsureshtdatabasesgt rem set DERBY_INSTALLCsureshtdatabasesgt java Dij.protocoljdbcderby org.apache.derby.tools.ijij version .ijgt  connect jdbcderbywombat createtrue ijgt  create table ta int )   rows insertedupdateddeletedijgt  insert into t values)   row insertedupdateddeletedijgt  insert into t select a   from t   row insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  insert into t select a   from t   rows insertedupdateddeletedijgt  commit  ijgt  delete from t   rows insertedupdateddeletedijgt  select * from new org.apache.derby.diag.SpaceTableT)  ERROR X Syntax error Encountered lt EOFgt  at line   column .ijgt  select * from new org.apache.derby.diag.SpaceTableT) t  CONGLOMERATENAMEISINDamp NUMALLOCATEDPAGES NUMFREEPAGES NUMUNFILLEDPAGES PAGESIZE ESTIMSPACESAVINGT      row selectedijgt  select NUMALLOCATEDPAGES from new org.apache.derby.diag.SpaceTableT) t  NUMALLOCATEDPAGES row selectedijgt  select NUMAFREEPAGES from new org.apache.derby.diag.SpaceTableT) t  ERROR X Column NUMAFREEPAGES is either not in any table in the FROM listor appears within a join specification and is outside the scope of the join specification or appears in a HAVING clause and is not in the GROUP BY list. If this is a CREATE or ALTER TABLE statement then NUMAFREEPAGES is not a column in the target table.ijgt  select NUMFREEPAGES from new org.apache.derby.diag.SpaceTableT) t  NUMFREEPAGES row selectedijgt  call SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLEAPP   T        )   rows insertedupdateddeletedijgt  select NUMFREEPAGES from new org.apache.derby.diag.SpaceTableT) t  NUMFREEPAGES row selectedijgt  select * from new org.apache.derby.diag.SpaceTableT) t  CONGLOMERATENAMEISINDamp NUMALLOCATEDPAGES NUMFREEPAGES NUMUNFILLEDPAGES PAGESIZE ESTIMSPACESAVINGT     row selectedijgt  ^CTerminate batch job YN)? ^C ijgt  ijCsureshtdatabasesgt rem set DERBY_INSTALLCsureshtdatabasesgt java Dij.protocoljdbcderby org.apache.derby.tools.ijij version .ijgt  connect jdbcderbywombat ijgt  select * from t  A rows selectedijgt  insert into t values)   row insertedupdateddeletedijgt  insert into t select * from t   row insertedupdateddeletedijgt  insert into t select * from t   rows insertedupdateddeletedijgt  insert into t select * from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  insert into t select a from t   rows insertedupdateddeletedijgt  delete from t   rows insertedupdateddeletedijgt  select * from new org.apache.derby.diag.SpaceTableT) t  CONGLOMERATENAMEISINDamp NUMALLOCATEDPAGES NUMFREEPAGES NUMUNFILLEDPAGES PAGESIZE ESTIMSPACESAVINGT     row selectedijgt  call SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLEAPP   T        )   rows insertedupdateddeletedijgt  Terminate batch job YN)? ^C ijCsureshtdatabasesgt rem set DERBY_INSTALLCsureshtdatabasesgt java Dij.protocoljdbcderby org.apache.derby.tools.ijij version .ijgt  call SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLEAPP   T        )  IJ ERROR Unable to establish connectionijgt  connect jdbcderbywombat ERROR XJ Failed to start database wombat  see the next exception for details.ERROR XSDB Unknown page format at page Page Container  ))ijgt Stacks pageVersion   Change page allocation status of  to undo ) instant   ) logEnd   ) logIn at  available DEBUG LogTrace OUTPUT scanned   Page Operation Page Container  )) pageVersion   Invalidate Page  it has been deallocated instant   ) logEnd   ) logIn at  available  BEGIN SHUTDOWN ERROR STACK ERROR XSLA Cannot redo operation Page Operation Page Container  )) pageVersion   Invalidate Page  it has been deallocated in the log. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.store.raw.log.FileLogger.redoFileLogger.java) at org.apache.derby.impl.store.raw.log.LogToFile.recoverLogToFile.java) at org.apache.derby.impl.store.raw.RawStore.bootRawStore.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleMonitor.java) at org.apache.derby.impl.store.access.RAMAccessManager.bootRAMAccessManager.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleMonitor.java) at org.apache.derby.impl.db.BasicDatabase.bootStoreBasicDatabase.java) at org.apache.derby.impl.db.BasicDatabase.bootBasicDatabase.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.startPersistentServiceMonitor.java) at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabaseEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionDriver.java) at org.apache.derby.jdbc.InternalDriver.connectInternalDriver.java) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java) at org.apache.derby.impl.tools.ij.ij.dynamicConnectionij.java) at org.apache.derby.impl.tools.ij.ij.ConnectStatementij.java) at org.apache.derby.impl.tools.ij.ij.ijStatementij.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java) begin nested exception  level ) ERROR XSDB Unknown page format at page Page Container  )) at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.store.raw.data.CachedPage.changeInstanceToCachedPage.java) at org.apache.derby.impl.store.raw.data.CachedPage.setIdentityCachedPage.java) at org.apache.derby.impl.services.cache.CachedItem.takeOnIdentityCachedItem.java) at org.apache.derby.impl.services.cache.Clock.addEntryClock.java) at org.apache.derby.impl.services.cache.Clock.findClock.java) at org.apache.derby.impl.store.raw.data.FileContainer.getAnyPageFileContainer.java) at org.apache.derby.impl.store.raw.data.BaseContainer.getAnyPageBaseContainer.java) at org.apache.derby.impl.store.raw.data.BaseContainerHandle.getAnyPageBaseContainerHandle.java) at org.apache.derby.impl.store.raw.data.PageBasicOperation.findpagePageBasicOperation.java) at org.apache.derby.impl.store.raw.data.PageBasicOperation.needsRedoPageBasicOperation.java) at org.apache.derby.impl.store.raw.log.FileLogger.redoFileLogger.java) at org.apache.derby.impl.store.raw.log.LogToFile.recoverLogToFile.java) at org.apache.derby.impl.store.raw.RawStore.bootRawStore.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleMonitor.java) at org.apache.derby.impl.store.access.RAMAccessManager.bootRAMAccessManager.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleMonitor.java) at org.apache.derby.impl.db.BasicDatabase.bootStoreBasicDatabase.java) at org.apache.derby.impl.db.BasicDatabase.bootBasicDatabase.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.startPersistentServiceMonitor.java) at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabaseEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionDriver.java) at org.apache.derby.jdbc.InternalDriver.connectInternalDriver.java) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java) at org.apache.derby.impl.tools.ij.ij.dynamicConnectionij.java) at org.apache.derby.impl.tools.ij.ij.ConnectStatementij.java) at org.apache.derby.impl.tools.ij.ij.ijStatementij.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java) end nested exception  level )  begin nested exception  level ) ERROR XBMU No class was registered for identifier . at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.services.monitor.BaseMonitor.classFromIdentifierBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.newInstanceFromIdentifierBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.newInstanceFromIdentifierMonitor.java) at org.apache.derby.impl.store.raw.data.CachedPage.changeInstanceToCachedPage.java) at org.apache.derby.impl.store.raw.data.CachedPage.setIdentityCachedPage.java) at org.apache.derby.impl.services.cache.CachedItem.takeOnIdentityCachedItem.java) at org.apache.derby.impl.services.cache.Clock.addEntryClock.java) at org.apache.derby.impl.services.cache.Clock.findClock.java)More at org.apache.derby.impl.store.raw.data.FileContainer.getAnyPageFileContainer.java) at org.apache.derby.impl.store.raw.data.BaseContainer.getAnyPageBaseContainer.java) at org.apache.derby.impl.store.raw.data.BaseContainerHandle.getAnyPageBaseContainerHandle.java) at org.apache.derby.impl.store.raw.data.PageBasicOperation.findpagePageBasicOperation.java) at org.apache.derby.impl.store.raw.data.PageBasicOperation.needsRedoPageBasicOperation.java) at org.apache.derby.impl.store.raw.log.FileLogger.redoFileLogger.java) at org.apache.derby.impl.store.raw.log.LogToFile.recoverLogToFile.java) at org.apache.derby.impl.store.raw.RawStore.bootRawStore.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleMonitor.java) at org.apache.derby.impl.store.access.RAMAccessManager.bootRAMAccessManager.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleMonitor.java) at org.apache.derby.impl.db.BasicDatabase.bootStoreBasicDatabase.java) at org.apache.derby.impl.db.BasicDatabase.bootBasicDatabase.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.startPersistentServiceMonitor.java) at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabaseEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionDriver.java) at org.apache.derby.jdbc.InternalDriver.connectInternalDriver.java) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java) at org.apache.derby.impl.tools.ij.ij.dynamicConnectionij.java) at org.apache.derby.impl.tools.ij.ij.ConnectStatementij.java) at org.apache.derby.impl.tools.ij.ij.ijStatementij.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java) end nested exception  level ) More   
0;Specification of incomplete server properties on command line causes NPE with NetworkServerControl when starting the server.   ;When using the command line to start the Network Server  there a couple of cases where if a property is specified on the command line but no value is given ex. Dderby.drda.maxThreads instead of Dderby.drda.maxThreads)  a Null Pointer Exception will result  when the correct behavior should be to use some kind of default.For examplegt  java Dderby.drda.maxThreads org.apache.derby.drda.NetworkServerControl start p java.lang.NullPointerException at org.apache.derby.impl.drda.NetworkServerControlImpl.localizeMessageNetworkServerControlImpl.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageWorkNetworkServerControlImpl.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageNetworkServerControlImpl.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.getIntPropValNetworkServerControlImpl.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.getPropertyInfoNetworkServerControlImpl.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.lt initgt NetworkServerControlImpl.java) at org.apache.derby.drda.NetworkServerControl.mainNetworkServerControl.java)Note that even though we see this NPE  it appears that the server still starts up  although the startup may not be complete subsequent attempts to connect might lead to errors like Invalid reply from network server Insufficient data.).For other properties  this will just result in the default value being used  which is the correct behavior. For examplegt  java Dderby.drda.host org.apache.derby.drda.NetworkServerControl start p Server is ready to accept connections on port .   
0;servlet Back to Main Page link points to csnet instead of derbynet   ;The link at the top of the servlet javadrdaorgapachederbydrdaNetServlet.java links to csnet because of the static String SERVLET_ADDRESS). However  the servlet address is now derbynet.   
0;SimpleNetworkClientSample.java network server example has an error which causes it to fail   ;The file SimpleNetworkClientSample.java under the demonserverdemo has an error which preventsit from completing successfully.The one line that is a problem is this private static final String DERBY_CLIENT_URL jdbcderbylocalhost NETWORKSERVER_PORTNSSampledb createtrue The one line fix is this private static final String DERBY_CLIENT_URL jdbcderbylocalhost NETWORKSERVER_PORT DBNAME createtrue    
0;With Network Server Database hangs after some time with many connections executing prepareStatement)   ;Rajesh found this issue in running Network Server system tests for the . release candidateWhile running the Network Server system test with  clients  the Network Server and all the clients hangs after some time. A Ctrl on the Network Server shows that upto  threads waiting on the PreparedStatements to compile and comes from the embedded engine. The following is the stack trace from the java dump.XMTHREADINFO DRDAConnThread_ TIDC  sys_thread_tC  stateCW  native IDABB) prioXESTACKTRACE at java.lang.Object.waitNative Method)XESTACKTRACE at java.lang.Object.waitObject.javaCompiled Code))XESTACKTRACE at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.javaCompiled Code))XESTACKTRACE at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java)XESTACKTRACE at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java)XESTACKTRACE at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java)XESTACKTRACE at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java)XESTACKTRACE at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java)XESTACKTRACE at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementDriver.java)XESTACKTRACE at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java)XESTACKTRACE at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java)XESTACKTRACE at sun.reflect.GeneratedMethodAccessor.invokeUnknown Source)XESTACKTRACE at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.javaCompiled Code))XESTACKTRACE at java.lang.reflect.Method.invokeMethod.javaCompiled Code))XESTACKTRACE at org.apache.derby.impl.drda.DRDAStatement.prepareStatementJDBCDRDAStatement.java)XESTACKTRACE at org.apache.derby.impl.drda.DRDAStatement.prepareDRDAStatement.java)XESTACKTRACE at org.apache.derby.impl.drda.DRDAStatement.explicitPrepareDRDAStatement.javaCompiled Code))XESTACKTRACE at org.apache.derby.impl.drda.DRDAConnThread.parsePRPSQLSTTDRDAConnThread.javaCompiled Code))XESTACKTRACE at org.apache.derby.impl.drda.DRDAConnThread.processCommandsDRDAConnThread.javaCompiled Code))XESTACKTRACE at org.apache.derby.impl.drda.DRDAConnThread.runDRDAConnThread.java)   
0;Disable creating indexes on long varchar for bit data. Long varchar column doesnt allow creating indexes already.   ;I guess I did not articulate my reasons for suggesting removal of index support for long varchar for bit data completely. ) Long varchar types are not comparable... If they are not comparable  it should not be possible to use them in GROUP BY  ORDER BY or allow regular BTree indexes. ) Also  long varchar types tend to be long in size and hence the regular BTree mechanism is not a suitable way to index them. Dan also mentioned they become ineffective for keys longer than half a page size.It should not be possible to create an index on long varchar for bit data datatypes. Derby currently doesnt allow creating indexes on long varchar datatypes and the same should apply for its bit data equivalent too.ijgt  create table longchar  i int  c long varchar)  rows insertedupdateddeletedijgt  create index longIdx on longcharc) ERROR XX Columns of type LONG VARCHAR may not be used in CREATE INDEX  ORDER BY  GROUP BY  UNION  INTERSECT  EXCEPT or DISTINCT statements because comparisons are not supported for that type.ijgt  create table longcharBitData  i int  c long varchar for bit data)  rows insertedupdateddeletedijgt  create index longIdx on longcharBitDatac)  rows insertedupdateddeletedDerby also seems to allow GROUP BY andor ORDER BY on LONG VARCHAR FOR BIT DATA types. I believe this is incorrect too.select c from longcharBitData group by c C rows selectedijgt  select c from longcharBitData group by c order by c C rows selected   
0;Network client message strings not internationalized   ;In investigating DERBY  I discovered that all SQLExceptions are thrown with hardcoded English error messages. This needs to be modified to use message string resource bundles similar to the embedded code.   
0;Client DataSource should not require user property to be set   ;ClientDataSource should not require user to be set. It should default to user APP as described inhttpincubator.apache.orgderbydocsadminguidecadminappsclient.htmlThis all seems to work ok for for DriverManager connections but fails for ClientDataSource run the attached repro  java DataSourceNoUserembedded no useridpasswordclient useridpassword setclient no passwordclient no useridno passwordorg.apache.derby.client.am.SqlException null userid not supported at org.apache.derby.client.net.NetConnection.checkUserNetConnection.java) at org.apache.derby.client.net.NetConnection.flowConnectNetConnection.java) at org.apache.derby.client.net.NetConnection.initializeNetConnection.java) at org.apache.derby.client.net.NetConnection.lt initgt NetConnection.java) at org.apache.derby.jdbc.ClientDataSource.getConnectionClientDataSource.java) at org.apache.derby.jdbc.ClientDataSource.getConnectionClientDataSource.java) at DataSourceNoUser.mainDataSourceNoUser.java)   
0;sysinfo with cp client option should not print error saying DB jar file and driver class are missing   ;If you run java org.apache.derby.tools.sysinfo cp client SimpleApp.classyou getFOUND IN CLASS PATH Derby Client libraries derbyclient.jar) userspecified class SimpleApp)NOT FOUND IN CLASS PATH Derby Client libraries dbjcc.jar) com.ibm.db.jcc.DBDriver not found.)The NOT FOUND IN CLASSPATH output is confusing and invalid because were testing the network client  not the DB JCC client.   
0;Create a new sample database for use in examples in the manuals   ;The Derby manuals still refer to Cloudscape example databases that were unable to be contributed to Derby. A new sample database should be created which is complex enough to serve as the basis for examples in the various manuals.   
0;Queryplan for a query using SESSION schema view is incorrectly put in statement cache. This could cause incorrect plan getting executed later if a temp. table is created with that name.   ;See DERBY for some discussion related this issue. I suspect this is because of statement caching. Derby doesnt seem to recognise we have a temporary table that just overloaded an existing physical table. It would have been good to avoid permanent tablesviewssynonyms in SESSION schema. Not sure what we should do now about this  though. ijgt  create view session.st as select * from t   rows insertedupdateddeleted ijgt  select * from session.st  I |J |K   | |NULL  | |NULL  | |NULL  | |NULL  rows selected ijgt  select * from t  I |J |K   | |NULL  | |NULL  | |NULL  | |NULL  rows selected ijgt  declare global temporary table stc int  c int) on commit preserve rows  not logged   rows insertedupdateddeleted ijgt  select * from session.st  I |J |K   | |NULL  | |NULL  | |NULL  | |NULL  rows selected ijgt  select * from session.st  lt  This statement has an extra space between FROM and session.st C |C   rows selected   
0;Passing the return of  a RETURN NULL ON NULL INPUT function to another function call throws linkage error.   ;Error in ij RN_RADIANS is a function declared as returns null on null input)ijgt  VALUES CAST CALL_COSRN_RADIANS.)) AS DECIMAL )) ERROR XBCM Java linkage error thrown during load of generated class org.apache.derby.exe.acexxexaxffffe.ERROR XJ Java exception class orgapachederbyexeacexxexaxffffe  method e signature )LjavalangObject Expecting to find double on stack java.lang.VerifyError.extract from derby.log . GMT Thread main  main  Wrote class org.apache.derby.exe.acexxexaxffffe to file C worksvn_pbtrunksystestoutfunctionsacexxexaxffffe.class. Please provide support with the file and the following exception information java.lang.VerifyError class orgapachederbyexeacexxexaxffffe  method e signature )LjavalangObject Expecting to find double on stackI will add a test case to langfunctions.sql commented with this bug number. Test casesthat fail will be commented out.   
0;Error message  XX  has incorrect property name  dbj.database.classpath instead of derby.database.classpath   ;Example output is in the test langdcl.sql  extracted here.ERROR XX Cannot drop jar file EMC.MAIL_APP because its on your dbj.database.classpath EMC.MAIL_APP.Also the its should be its it is).Might also make sense to change drop to remove  as the procedure is called remove_jar.   
1;SecurityException or LinkageException thrown during loading a class from a database jar incorrectly shuts the engine down.   ;In addiing test cases to langdcl.test for signed jar files stored in the database I found that if a jar is installed with a tampered class the resulting SecurityException shuts Derby down. Most likely the same would be true for an invalid class hacked into the jar.   
0;DatabaseMetaData.getColumns) fails on iSeries JDK . with verfier error on generated class.   ;Analysis shows that The problem is occurring starting at offset  in method e. There is an invokeinterface to method setWidthint  int  boolean) of class VariableSizeDataValue. This invoke returns a value of class DataValueDescriptor. That value is in turn stored in field e at offset  in method e. The problem is that field e is a NumberDataValue  and DataValueDescriptor is not a valid subclass of NumberDataValue. Thus the store is not allowed.Looking at the generated setWidth) calls I see one in BinaryOperatorNode where the return DataValueDescriptor) is not cast to the type of the field it is stored in.   
0;Result set holdability defined inside stored procedures is ignored by serverclient   ;Assume I have a Java stored procedure that returns one or more result sets  and the holdability of those result sets is specified as part of the createStatement method within the procedure definition see below for an example.If I execute this procedure against Derby embedded  the holdability of each result set matches that of the statementspecific holdability that is defined within the stored procedure. However  if I run the procedure against the Network Server using the Derby client  the holdability of all result sets is the same  and it is based on the holdability of the statement that executed the procedurei.e. the statementspecific holdability that is defined within the procedure is ignored.Ex If I create a stored procedure that corresponds to the following methodpublic static void pResultSet[] rs  ResultSet[] rs  ResultSet[] rs throws Exception Connection conn  DriverManager.getConnection jdbcdefaultconnection  Statement st  conn.createStatement ResultSet.TYPE_FORWARD_ONLY  ResultSet.CONCUR_READ_ONLY  ResultSet.HOLD_CURSORS_OVER_COMMIT  rs[]  st.executeQueryselect * from testtable  Statement st  conn.createStatement ResultSet.TYPE_FORWARD_ONLY  ResultSet.CONCUR_READ_ONLY  ResultSet.CLOSE_CURSORS_AT_COMMIT  rs[]  st.executeQueryselect * from testtable  Statement st  conn.createStatement ResultSet.TYPE_FORWARD_ONLY  ResultSet.CONCUR_READ_ONLY  ResultSet.HOLD_CURSORS_OVER_COMMIT  rs[]  st.executeQueryselect * from testtable  return  }}Then with Derby embedded  if I have a JDBC Statement that executes a call to this procedure  rs and rs will behave with HOLD_CURSORS holdability and rs will behave with CLOSE_CURSORS holdabilityand that will be the case regardless of the holdability on the Statement that executed the call. That seems correct to me.But if I do the same thing with Network Server  all of the result sets rs  rs  and rs will have the same holdability as the JDBC Statement that executed the call. It doesnt matter what the holdabilities used within the procedure definition are they will all be overridden by the holdability of the Statement that made the call.   
0;Expose BOOLEAN datatype to end users   ;Veaceslav Chicu started an email thread on  August  titled boolean type. He was disappointed that Derby doesnt support the ansi BOOLEAN datatype. On closer inspection  Derby does internally support this type but does not expose this support to end users.Derby should let users declare table columns of type BOOLEAN. This should be an indexable datatype.   
0;SELECT DISTINCT returns duplicates when selecting from subselects   ;When one performs a select distinct on a table generated by a subselect  there sometimes are duplicates in the result. The following example shows the problemijgt  CREATE TABLE names id INT PRIMARY KEY  name VARCHAR))  rows insertedupdateddeletedijgt  INSERT INTO names id  name) VALUES   Anna)    Ben)    Carl)    Carl)    Ben)    Anna)  rows insertedupdateddeletedijgt  SELECT DISTINCTname) FROM SELECT name  id FROM names) AS n NAME Anna Ben Carl Carl Ben Anna Six names are returned  although only three names should have been returned.When the result is explicitly sorted using ORDER BY) or the id column is removed from the subselect  the query returns three names as expectedijgt  SELECT DISTINCTname) FROM SELECT name  id FROM names) AS n ORDER BY name NAME Anna Ben Carl  rows selectedijgt  SELECT DISTINCTname) FROM SELECT name FROM names) AS n NAME Anna Ben Carl  rows selected   
0;Integrate upgrade tests into test suite   ;Currently there are no upgrade tests in the derbyAll suite.The upgrade tests javatestingorgapachederbyTesting are run by script and require that the version to be tested by specified on the command line so that the classpath can be changed. runphases old_major old_minor old_engine new_engine e.g. runphases   cderby...lib cderbytrunkjarssanePerhaps this script can be rewritten in Java using class loaders and previous Derby verssions such as . and . be checked in so that this testing can be incorporated into the derbyAll test suite.   
0;getAsciiStreamshould replace nonASCII characters with xf  ?  to match embedded   ;When calling Clob.getAsciiStream or ResultSet.getAsciiStream if the column type is a character type or a CLOB  then any out of range character to the ASCII set) needs to be replaced by xf ?  question mark). ASCII is defined as  bit characters  thus Unicode Characters in the range x to xff are mapped to ASCII characters x to xff  and Unicode characters in the range x to xffff are mapped to xfBy code inspectionclient code in org.apache.derby.client.am.ResultSetembedded in org.apache.derby.impl.jdbc.ReaderToAscii   
0;Incorrect insane build on windows platform   ;Ive found that Derby will not build sane properly for me. I have isolated it to here lt target nameevaluate.sanegt  lt condition propertygenerate.sanegt  lt equals argsane} argtruegt  lt conditiongt  lt targetgt The scope of the generate.sane property is limited to this target only tested in a Windows XP environment  ergo it will always be an insane build. Patch to follow shortly.   
0;ClientDriver ignores Properties object in connectString url  Properties connectionProperties) method   ;In contrast to EmbeddedDriver  a connection attribute createtrue is not recognized when presented as a property in a Properties object. As a workaround I append the attributes from the Properties object to the url string before invoking the connect method then a new database is created and a connection is established.Next code fragment illustrates the bug and the workaround private static final ClientDriver clientDriver  new ClientDriver  private Connection getClientConnectionString database  Properties connectionProperties throws SQLException  try  System.out.printlnTry to connect with properties  String connectionURL  jdbcderby...  database  System.out.printlnconnectionURL   connectionURL  Connection rv  clientDriver.connectconnectionURL  connectionProperties  System.out.printlnConnection   rv  return rv  } catch SQLException e  System.out.printlnTry to connect with URL attributes  StringBuffer sb  new StringBuffer  for Enumeration enu  connectionProperties.propertyNames  enu .hasMoreElements  String key  String enu.nextElement  sb.append   sb.appendkey  sb.append  sb.appendconnectionProperties.getPropertykey    } String connectionURL  jdbcderby...  database  sb.toString  System.out.printlnconnectionURL   connectionURL  Connection rv  clientDriver.connectconnectionURL  connectionProperties  System.out.printlnConnection   rv  System.out .println seems a bug Properties argument in ClientDriver.connectString  Properties has not been used  return rv  } }   
0;The current build.properties for the Derby Help Plugin for Eclipse does not work for creating a deployable plugin   ;While updating the information for the web site about the Derby plugins I revised the instructions on how to create zip files for the plugins. The current build.properties file for the help plugin did not work to create a deployable plugin  without manual intervention. The attached patch for the build.properties file for the help plugin should replace the existing one  which allows users to select Export gt gt  Deployable plugins and fragments and then create a zip file which is suitable for deployment.svn stat outputM pluginseclipseorg.apache.derby.plugin.docbuild.propertiesTestsI built a new doc zip file using the new build.properties file  unzipped it to another eclipse install in the ECLIPSE_HOME directory and made sure all of the files for the help were in the correct location and accessible.Id appreciate it if someone could commit this.Thanks Susan   
0;Loading databases from jars in the classpath is broken  databases cannot be found.   ;In converting an old Cloudscape test to ensure changes made for DERBY would not break loading from classes stored in the database when the database itself is in a jar  I discovered that a database cannot be found that is in a jar on the classpath.Discovered the reason is the StoreFactory implementation for classpath always prepends a leading foward slash to the database name  but this is incorrect e.g. db to db). This causes the database not to be found when the classloader is URLClassLoader as the correct path for the service.properties file is dbservices.properties  not dbservices.properties.Will add converted test langdbjar.sql)   
0;Readonly databases fail to boot after soft upgrade. Raises error message  XD Container was opened in readonly mode.   ;Attempting to boot a database that is created using Derby . fail in soft upgrade mode in Derby . or in trunk. .) Boot fails with Error XD Container was opened in readonly mode.After debugging the problem a little  it seems soft upgrade code attempts do change a database property value and since the database is readonly  the error is raised. Here is what I triedijgt  connect jdbcderbyjart.jar)tdb ERROR XJ Failed to start database jart.jar)tdb  see the next exception for details.ERROR XD Container was opened in readonly mode.Here is the stack traceERROR XD Container was opened in readonly mode. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.store.raw.data.BaseContainer.useBaseContainer.java) at org.apache.derby.impl.store.raw.data.BaseContainerHandle.useContainerBaseContainerHandle.java) at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.openContainerBaseDataFileFactory.java) at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.openContainerBaseDataFileFactory.java) at org.apache.derby.impl.store.raw.xact.Xact.openContainerXact.java) at org.apache.derby.impl.store.access.conglomerate.OpenConglomerate.initOpenConglomerate.java) at org.apache.derby.impl.store.access.heap.Heap.openScanHeap.java) at org.apache.derby.impl.store.access.RAMTransaction.openScanRAMTransaction.java) at org.apache.derby.impl.store.access.RAMTransaction.openScanRAMTransaction.java) at org.apache.derby.impl.store.access.PropertyConglomerate.openScanPropertyConglomerate.java) at org.apache.derby.impl.store.access.PropertyConglomerate.savePropertyPropertyConglomerate.java) at org.apache.derby.impl.store.access.PropertyConglomerate.setPropertyPropertyConglomerate.java) at org.apache.derby.impl.store.access.RAMTransaction.setPropertyRAMTransaction.java) at org.apache.derby.impl.sql.catalog.DD_Version.applySafeChangesDD_Version.java) at org.apache.derby.impl.sql.catalog.DD_Version.upgradeIfNeededDD_Version.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.loadDictionaryTablesDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.bootDataDictionaryImpl.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleMonitor.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory.bootDataDictionaryGenericLanguageConnectionFactory.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory.bootGenericLanguageConnectionFactory.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleMonitor.java) at org.apache.derby.impl.db.BasicDatabase.bootBasicDatabase.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.startPersistentServiceMonitor.java) at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabaseEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionDriver.java) at org.apache.derby.jdbc.InternalDriver.connectInternalDriver.java) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java) at org.apache.derby.impl.tools.ij.ij.dynamicConnectionij.java) at org.apache.derby.impl.tools.ij.ij.ConnectStatementij.java) at org.apache.derby.impl.tools.ij.ij.ijStatementij.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)ijgt    
0;Dynamic parameter should be allowed to be the operand of unary operator . Derby throws exception X The  operator is not allowed to take a ? parameter as an operand.   ;A simple test program which uses dynamic parameter for unary operator  fails with an exception. Following is the snippet of the code ps  con.prepareStatementselect * from t where c  ?)  ps.setInt )  rs  ps.executeQuery) The prepareStatement call fails with following exceptionSQLSTATEX)ERROR X The  operator is not allowed to take a ? parameter as an operand.   
0;Using derby.language.logStatementTexttrue can mask certain exceptions and lead to incorrect behavior in some cases   ;Using derby.language.logStatementTexttrue can mask certain exceptions and lead to incorrect behavior.I observed this with tests using streams  where if valid expected exceptions are raised when DVD.getString is called  the exception gets eaten up when this property is set. See in GenericParameter.toStringtryreturn value.getString }catch StandardException sereturn unexpected exception from getString    se }}in GenericPreparedStatement.execute  where pvs.toString is called for the parameters.________Reproduction Run the test jdbcapiresultsetStream.java   with derby.language.logStatementTexttrue and expected error exceptions wont be thrown for the error cases. I looked at the tests that use streams   only the storestreamingColumn.java uses derby.language.logStatementTexttrue. Ill file another bug to resolve this test.   
0;SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE fails on very) large tables   ;SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE fails with one of the following error messages when applied to a very large table gt GB)Log operation null encounters error writing itself out to the log stream  this could be caused by an errant log operation or internal log buffer full due to excessively large log operation. SQLSTATE XJ Java exception  java.io.IOException.orThe exception java.lang.ArrayIndexOutOfBoundsException was thrown while evaluating an expression. SQLSTATE XJ Java exception  java.lang.ArrayIndexOutOfBoundsException.In either case  no entry is written to the console log or to derby.log.   
0;Make the client driver connection URL work when spaces are in the URL.   ;At present  if I want to connect to a database on a Derby server which has a space in the path  there is no way to do it.This can be done with the embedded driver  and for consistency it would be good if it worked for the client driver in the same fashion.   
1;sysinfo incorrectly requires permission on Derby jar files   ;Running the test derbynetsysinfo.java requires this permission in derby_tests.policy  in order to read the jar files.permission java.io.FilePermission csinfo.codedir}}*  readBut according to the Java security specsNote code can always read a file from the same directory its in or a subdirectory of that directory  it does not need explicit permission to do so.Probably means a privileged block is required when accessing the contents of the jar files in sysinfo   
1;Derby monitor accesses two system properties without using a privileged block when built sanetrue   ;When built with sanetrue and testing with the jars these permissions are required to be granted all the way up the stack  currently this means for the tests granting them to the network server jar. permission java.util.PropertyPermission derby.monitor.verbose  read  permission java.util.PropertyPermission derby.debug.*  read The engine contains code to read system properties using privileged blocks  this should be used by the monitor.   
0;create trigger fails with null pointer exception   ;When i create a brand new database  and execute the following statements all in one transaction or each of them in their own transaction  then it fails at trigger creation with null pointer exception. if i exclude the schema names from statement  then it runs fine. If S is ommited from every statement then it runs fine). Once the version without the schema names run fine  i can run the version that has schema names  fine also. create schema S create table S.PRODUCT PRODUCT_ID VARCHAR) unique not null  VERSION BIGINT ) create table S.CATEGORY CAT_ID VARCHAR)  NAME varchar) not null  VERSION BIGINT ) create table S.PROD_IN_CAT CAT_ID VARCHAR) not null  PRODUCT_ID VARCHAR) not null  VERSION BIGINT ) create trigger S.product_v after update of version on S.productreferencing new as nfor each rowmode dbsql update S.prod_in_cat set version  n.version where S.prod_in_cat.product_idn.product_id java.lang.NullPointerException at org.apache.derby.impl.sql.catalog.SYSSTATEMENTSRowFactory.makeSYSSTATEMENTSrowUnknown Source) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addSPSDescriptorUnknown Source) at org.apache.derby.impl.sql.execute.CreateTriggerConstantAction.createSPSUnknown Source) at org.apache.derby.impl.sql.execute.CreateTriggerConstantAction.executeConstantActionUnknown Source)Stopping progress indicator for Executing SQL at org.apache.derby.impl.sql.execute.MiscResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source)   
0;Subquery materialization can cause stack overflow   ;A performance optimization in subquery processing can cause a stack overflow.The optimization materializes a subquery ResultSet in memory where it thinks the rows will fit in memory. The materialization is done as a set of nested unions of constant rows UnionResultSets and RowResultSets). If there are a lot of rows this can cause a stack overflow when fetching a row.The obvious fix is to make it use an iterative technique rather than a recursive one for storing and returning the rows. See the method BaseActivation.materializeResultSetIfPossible) in the language execution code.There are some other issues with this performance optimization that should be looked at) The optimization can backfire  making the query run much slower. For example  in the query select * from one_row_table where column not in select column from million_row_table)reading million_row_table into memory is an expensive operation. If there is an index on million_row_table.column  the query should return a result very quickly despite the large size of million_row_table by doing a single probe into million_row_table via the index.Since inmemory materialization can be an expensive operation  the decision about whether to do it should be made based on query optimizer cost estimates. See SubqueryNode.generateExpression).) It may not be wise to cache partial query results in memory at all. Although this can help performance in some cases  it also chews up memory. This is different from a limitedsize cache with a backing store like what the store uses for page caching). The language has no way to limit the total amount of memory used in this type of processing. Note that hash joins originally used inmemory hash tables with no backing store  and that a backing store was added later.) The implementation of this optimization has some problems. The decision to materialize the subquery results in memory is made during code generation  all such decisions should be made during the compilation phase. Its not clear to me why materializeResultSetIfPossible) is in BaseActivation  I would expect the of materialization to be done by a type of ResultSet  not by a method in BaseActivation. Also  this method calls getMaxMemoryPerTable) in the OptimizerFactory  nothing in the execution code should refer to anything in the compilation code perhaps getMaxMemoryPerTable) should be moved somewhere else).   
0;Network driver setTransactionIsolation) causes a commit  but does not complete it locally   ;When autocommit is set to false  a call to setTransactionIsolation using client driver does not end the transaction when the method exits. When a close is called on the conection  it throws an exception.Running the code below conn.setAutoCommitfalse  conn.setTransactionIsolationConnection.TRANSACTION_READ_COMMITTED  try conn.close  }catchSQLException se System.out.printlnGot exception when closing the connection  se.printStackTrace  }with client driver givesGot exception when closing the connectionorg.apache.derby.client.am.SqlException java.sql.Connection.close requested while a transaction is in progress on the connection.The transaction remains active  and the connection cannot be closed.with embedded driver  it works okay and does not throw any exception.   
0;SELECT MAX doesnt use indices optimally   ;I tried running SELECT MAX on an indexed column in a big  GB)table. It took  minutes  which is about  minutes more than Iexpected.After a bit of investigation  I found out that a full index scan wasperformed because all the rows referenced from the rightmost Btreenode were actually deleted.Possible improvements . Implement backwards scan in the Btrees this is also suggested in the comments in BTreeMaxScan). . Go up to the parent node and down to the next leaf node on the left side  and continue until a valid max value is found. In Derby  traversing up in a Btree is not allowed  but would it be ok to go up if the latches were kept on the higherlevel nodes in the tree? Of course  this would have negative impact on concurrency. . Righttoleft traversal on the leaf level is possible using ControlRow.getLeftSibling))  but will throw an exception if the page cannot be latched without waiting. It is therefore possible to try a righttoleft search for the max value  and only fall back to the lefttoright approach if a conflict arises.   
0;getImportedKeys returns duplicate rows in some cases   ;I have a database with a large number of tables. I get duplicate rows when I call DatabaseMetaData.getImportedKeys for a particular table. However  if I create the same table with same number of foreign keys in another database which has fewer number of tables)  then getImportedKeys returns me the correct number of rows. This error seems to happen only when the database has a large number of tables. I will attach a repro for this shortly.   
1;SecurityException with accessDeclaredMembers on DatabaseMetaData.getTables.   ;The code to determine the size of a class is using getDeclaredMembers which requires the permission accessDeclaredMembers. Ideally should not require to grant this permission to derby.jar. Need to see whichclasss size was being calculated. The code is not in a priv block which would require granting the permission all the way up the stack.Maybe if the classs declared memebrs can not be accessed and the value can not be precalculkated then some estimate could be made. using public fields?).java.security.AccessControlException Access denied java.lang.RuntimePermission accessDeclaredMembers) at java.security.AccessController.checkPermissionAccessController.java) at java.lang.SecurityManager.checkPermissionSecurityManager.java) at com.ibm.ws.security.core.SecurityManager.checkPermissionSecurityManager.java) at java.lang.SecurityManager.checkMemberAccessSecurityManager.java) at java.lang.Class.checkMemberAccessClass.java) at java.lang.Class.getDeclaredFieldsClass.java) at org.apache.derby.iapi.services.cache.ClassSize.getSizeCoefficientsUnknown Source) at org.apache.derby.iapi.services.cache.ClassSize.estimateBaseUnknown Source) at org.apache.derby.iapi.store.access.BackingStoreHashtable.lt clinitgt Unknown Source) at java.lang.JVMInternals.initializeImplNative Method) at java.lang.JVMInternals.initializeJVMInternals.java) at org.apache.derby.impl.sql.execute.HashTableResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openRightUnknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.SortResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQueryUnknown Source) at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getTablesUnknown Source)   
0;during crash recovery of a drop table  on case insensitive files systems derby may delete wrong file   ;Sometimes during redo the system will incorrectly remove the file associatedwith a table. The bug requires the following conditions to reproduce) The OSfilesystem must be case insensitive such that a request to delete a file named C.dat would also remove c.dat. This is true in windows default file systems  not true in unixlinux filesystems that I am aware of.) The system must be shutdown not in a clean manner  such that a subsequent access of the database causes a REDO recovery action of a drop table statement. This means that a drop table statement must have happened since the last checkpoint in the log file. Examples of things that cause checkpoints are o clean shutdown from ij using the exit command o clean shutdown of database using the shutdowntrue url o calling the checkpoint system procedure o generating enough log activity to cause a regularly scheduled checkpoint.) If the conglomerate number of the above described drop table is TABLE_  then for a problem to occur there must also exist in the database a table such that its HEXTABLE_)  TABLE_) Either TABLE_ must not be accessed during REDO prior to the REDO operation of the drop of TABLE_ or there must be enough other table references during the REDO phase to push the caching of of the open of TABLE_ out of cache.If all of the above conditions are met then during REDO the system willincorrectly delete TABLE_ while trying to redo the drop of TABLE_.lt pgt I will be adding the following test to reproduce the problem) create  tables  need enough tables to insure that conglomerate number  c.dat) and  c.dat) exist.) checkpoint the database so that create does not happen during REDO) drop table with conglomerate number   mapping to c.dat. It looks it up in the catalog in case conglomerate number assignment changes for some reason.) exit the database without a clean shudown  this is the default for test suites which run multiple tests in a single db  no clean shutdown is done. Since we only do a single drop since the last checkpoint  test will cause the drop during the subsequent REDO.) run next test program dropcrash  which will cause redo of the drop. At this point the bug will cause file c.dat to be incorrectly deleted and thus accesses to conglomerate  will throw container does not exist errors.) check the consistency of the database which will find the container does not exist error.   
0;Remove backupFile ...) methods   ;The code contains backup methods both for specifying the backup directory both as a String and as a File parameter. Only the String versions are currently used. The File versions should be removed to avoid duplication of code etc.Examples of such methods areBasicDatabase.backupBasicDatabase.backupAndEnableLogArchiveModeRAMAccessManager.backupRAMAccessManager.backupAndEnableLogArchiveModeRawStore.backupAndEnableLogArchiveModeplus corresponding interfaces.   
0;Buildtime processing of metadata.properties file handles slashes incorrectly.   ;As found and described by Mamta herehttpwww.nabble.comDerbyOptimizeroverridesandmetadata.propertiesfilest.htmlDuring the ant build process  Derbys metadata.properties file is modified by the ODBCMetadataGenerator class and that class treats backslashes that occur in the metadata.properties file incorrectly. More specifically  it treats every backslash as the end of a line and thus will translate things likeFROM DERBYPROPERTIES joinOrderFIXED n intoFROM DERBYPROPERTIES joinOrderFIXED n in other words  escaped characters like n are handled incorrectly)..   
0;In ij  executing a prepared statement with numericdecimal parameter fails with NullPointerException in JMECDCFP   ;NPE is thrown in ij when executing prepared statement which  has numericdecimal parameters does not return any result setRepro for this problem is the test langcast.sql. This test currently fails in CDCFP.The following lines in the test throw NPEexecute q using values . execute q using values . where q is prepare q as insert into t num values cast? as numeric and q is prepare q as insert into t dc values cast? as decimal The stack trace for failure isjava.lang.NullPointerException at org.apache.derby.impl.tools.ij.util.DisplayMultiutil.java at org.apache.derby.impl.tools.ij.utilMain.displayResultutilMain.java at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java at org.apache.derby.impl.tools.ij.Main.goMain.java at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java at org.apache.derby.impl.tools.ij.Main.mainMain.java at org.apache.derby.tools.ij.mainij.javaThis happens in the following code. Since the above prepared statements do not return result sets  call to getMetaData will return null. But in the code  no check is done to see if getMetaData returns null before calling getColumnType.  In JME there is no object that represents  a DECIMAL value. By default use String to  pass values around  but for integral types  first convert to a integral type from the DECIMAL  because strings like . are not convertible to  an integral type. switch ps.getMetaData.getColumnTypec  case Types.BIGINT ps.setLongc  rs.getLongc  break  case Types.INTEGER case Types.SMALLINT case Types.TINYINT ps.setIntc  rs.getIntc  break  default ps.setStringc rs.getStringc  break  }    
0;Add tests for error codes for severe exceptions   ;Add tests to test error codes for disconnect exceptions and other severe errors for client and embedded drivers.   
0;NullPointerException or ClassCastException if UPDATE or DELETE is performed on a diagnostic VTI   ;UPDATE and DELETE statements on readonly vtis will hit NullPointerException in insane mode  and ClassCastException in sane mode.ijgt  delete from new org.apache.derby.diag.TransactionTable) ERROR XJ Java exception  java.lang.NullPointerException.While these statements make no sense  a more graceful error should be returned  especially as in insane mode this causes the engine to shutdown. Code already exists to detect this situation but is not being called.Found through adding negative tests for DERBY   
0;Network client deleteRow) makes getter methods return nulls for the following rows.   ;On the network driver  the ResultSet.deleteRow) method causes the getXXX) methods in the following rows to return null values. It should be possible to use the getXXX methods after positioning the cursor in the next row. It also has this side effect on other result sets if these are created with the same prepared statement.The repro case is uploaded as an attachment testDeleteRow.javaOutput of the report caseList all rowsRow  Testing Row  Testing Row  Testing Row  Testing Row  Testing Row  Testing Row  Testing Row  Testing Row  Testing Row  Testing List all rows and delete first rowRow  Testing Row deletedRow  nullRow  nullRow  nullRow  nullRow  nullRow  nullRow  nullRow  nullRow  nullList all rowsRow  Testing Row  Testing Row  Testing Row  Testing Row  Testing Row  Testing Row  Testing Row  Testing Row  Testing    
0;Unable to create databases whose name containg Chinese characters through the client driver   ;Trying to create a database with the following URL note the Chinese character in the database namejdbcderbylocalhostue createtruethrows the following exceptionlt Exception in thread main org.apache.derby.client.am.SqlException Unicode string cant convert to Ebcdic string at org.apache.derby.client.net.EbcdicCcsidManager.convertFromUCSUnknown Source at org.apache.derby.client.net.Request.writeScalarPaddedStringUnknown Source at org.apache.derby.client.net.NetConnectionRequest.buildRDBNAMUnknown Source at org.apache.derby.client.net.NetConnectionRequest.buildACCSECUnknown Source at org.apache.derby.client.net.NetConnectionRequest.writeAccessSecurityUnknown Source at org.apache.derby.client.net.NetConnection.writeServerAttributesAndKeyExchangeUnknown Source at org.apache.derby.client.net.NetConnection.flowServerAttributesAndKeyExchangeUnknown Source at org.apache.derby.client.net.NetConnection.flowUSRIDONLconnectUnknown Source at org.apache.derby.client.net.NetConnection.flowConnectUnknown Source at org.apache.derby.client.net.NetConnection.lt initgt Unknown Source at org.apache.derby.jdbc.ClientDriver.connectUnknown Source at java.sql.DriverManager.getConnectionDriverManager.java at java.sql.DriverManager.getConnectionDriverManager.java at jdbctest.Main.mainMain.javalt Its possible  however  to create databases using the embedded driver  using an URL likejdbcderbyue createtrueTested with both ... and ... with the same result.Complete code to reproduce the buglt public static void mainString[] args throws Exception  Class.forNameorg.apache.derby.jdbc.ClientDriver  Connection conn  DriverManager.getConnectionjdbcderbylocalhostue createtrue }lt    
0;Starvation in RAFContainer.readPage)   ;When Derby is completely disk bound  threads might be starved inRAFContainer.readPage. This is a real problem when multiple clientsare repeatedly accessing one or a small number of large tables. Incases like this  I have observed very high maximum response timesseveral minutes in the worst cases on simple transactions. Theaverage response time is not affected by this.The starvation is caused by a synchronized block inRAFContainer.readPage synchronized this  fileData.seekpageOffset  fileData.readFullypageData    pageSize  }If many threads want to read pages from the same file  there will be along queue of threads waiting for this monitor. Since the Javaspecification does not guarantee that threads waiting for monitors aretreated fairly  some threads might have to wait for a long time beforethey get the monitor. Usually  a couple of threads get full throughputwhile the others have to wait.   
0;SYSCS_UTIL.SYSCS_COMPRESS_TABLE should create statistics if they do not exist   ;There must be an entry in the SYSSTATISTICS table in order for the cardinality statistics in SYSSTATISTICS to be created with SYSCS_UTIL.SYSCS_COMPRESS_TABLE SYSCS_UTIL.SYSCS_COMPRESS_TABLE should create statistics if they dont exist. The only way to create them if the index was created on an empty table  seems to be to drop and recreate the index after the table has been loaded.The documentation will also need updating if this change is made.httpdb.apache.orgderbydocs.tuningctunstats.html   
0;Problem setting sanity state to false by using ant Dsanefalse   ;Problem report from Kathey MarsdenThere seems to be some sort of problem with the sanity state.After ant clobber  rm rf jars  rm rf snapshot no apparent problematicfiles  ant Dsanefalse snapshot seemed to sometimes build the jars tothe sane jar directory and yield the following error.....  delete  Deleting directory Dsvnopensource.javadocsourcedir  mkdir  Created dir Dsvnopensource.snapshotBUILD FAILEDDsvnopensource.build.xmlDsvnopensource.jarsinsane not found.A reliable workaround was to runant insanebefore ant Dsanefalse snapshot.   
0;Materialize subqueries in select list where possible to avoid creating invariant resultsets many times.   ;Derbys handling of union subqueries in from list can be improved by materializing invariant resultsets once  rather than creating them many times.For examplecreate view V as select i  j from T union select i j from T create view V as select a b from T union select a b from T insert into T values               For a query like select * from V  V where V.j  V.b and V.i in       it is possible the resultset for V is created  times. assuming V is choosen as the the inner table This can be very costly if the underlying selects can take long time and also may perform union many times.Enhance materialization logic in setOperatorNode.java. It currently returns FALSE always.public boolean performMaterializationJBitSet outerTables throws StandardException  RESOLVE  just say no to materialization right now  should be a cost based decision return false  * Actual materialization  if appropriate  will be placed by our parent PRN. This is because PRN might have a join condition to apply. Materialization can only occur before that. * return true }   
0;Enhance ALTER TABLE syntax to allow users to change the next value to be generated for an identity column   ;Derby allows a user to change the interval between consecutive values of the identity column using ALTER TABLE. But there is no way to change the next value to be generated for an identity column. Such a support in Derby will be very handy for tables with identity column defined as GENERATED BY DEFAULT and with a unique key defined on them. Column defined with GENERATED BY DEFAULT allows system to generate values for them or allows the user to manually supply the value for them. A column defined this way is very useful when the user might want to import some data into the generated column manually. But this can create problems when the system generated values conflict with manually inserted values.egautocommit on create table tautoi int generated by default as identity  k int)  create unique index tautoInd on tauto  insert into tautok) values      let system generate values for the identity column  now do few manual inserts into identity columninsert into tauto values  )  insert into tauto values  )  insert into tauto values  )  insert into tauto values  )  insert into tauto values  )  insert into tauto values  )    notice that identity column at this point has used  through   now if the user wants to let the system generate a value  system will generate  but that is already used and hence  insert will throw unique key failure exception. System has consumed  at this point.insert into tautok) values    the insert above will continue to fail with the unique key failure exceptions until system has consumed all the values till   If we add ALTER TABLE syntax to allow changing the next value to be generated  then user can simply use that to change  next value to be generated to  after the manual inserts above and then insert into tautok) values  will not failSQL standard syntax for changing the next generated valueALTER TABLE lt tablenamegt  ALTER lt columnNamegt  RESTART WITH integerconstant   
0;cursor closed as a sideeffect of closing another cursor with the same name on another connection   ;I was writing some tests for the Scrollable updatable ResultSet feature  and found some tests failing with ERROR XCL Cursor SQLCUR is closed. Verify that autocommit is OFF.in ResultSet.updateRow). The test does the following. set up a connection  and run a query which selects one tuple. update the tuple using updateXXX and updateRow. rollback the transaction and close the connectionThen  repeat the process  however this time use a different string in the query. This time updateRow) may fail with the error above. The problem has been reproduced on forward only  updatable resultsets.WorkaroundIt does not seem to fail if Ia  set another cursorname on the statement object b  use the same query string.I will attach the program to reproduce the problem. Below is the output~lt gt dbderby...binlibgt  java cp homeakdevelderbytestingderbytestbuildclassesderby.jar derbytest.CursorIsClosedIssue   Tuple    Tuple ERROR XCL Cursor SQLCUR is closed. Verify that autocommit is OFF. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.sql.execute.CurrentOfResultSet.getCursorUnknown Source) at org.apache.derby.impl.sql.execute.CurrentOfResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.NormalizeResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.UpdateResultSet.setupUnknown Source) at org.apache.derby.impl.sql.execute.UpdateResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedResultSet.updateRowUnknown Source) at derbytest.CursorIsClosedIssue.runTestCursorIsClosedIssue.java) at derbytest.CursorIsClosedIssue.mainCursorIsClosedIssue.java)   
0;Allow parallel access to data files.   ;Derby currently serializes accesses to a data file. For example  theimplementation of RAFContainer.readPage is as follows synchronized this   this is a FileContainer  i.e. a file object fileData.seekpageOffset   fileData is a RandomAccessFile fileData.readFullypageData    pageSize  }I have experiemented with a patch where I have introduced several filedescriptors RandomAccessFile objects per RAFContainer. These areused for reading. The principle is that when all readers are busy  areadPage request will create a new reader. There is a maximum numberof readers. With this patch  throughput was improved by  onlinux. For more discussion on this  seehttpwww.nabble.comDerbyIOissuesduringcheckpointingt.htmlThe challenge with the suggested approach is to make a mechanism tolimit the number of open file descpriptors. Mike Matrigali hassuggested to use the existing CacheManager infrastructure for thispurpose. For a discussion on that  seehttpwww.nabble.comnewusesforbasicservicescachelookingforadvicet.html   
0;One each deleted or updated from a heap row a new RowPosition object is created.   ;See the new RowPosition in GenericConglomerateController.delete and replace. The fetch methods also have new RowPosition calls but in general these calls are not made for scans.Can a single RowPosition object be reused across the life of the query?In general Derby should try to avoid creating objects per row in any statement as the gc overhead when operating on a large number of rows can be high.   
0;Incorrect documentation for NetworkServerControl.logConnectionsboolean)   ;The documentation for NetworkServerControl.logConnectionsboolean) states that Derby logs both connections and disconnections. As of ... and all) earlier releases  this is not true. The documentation should be corrected to avoid confusing users.The thought of adding logging of disconnections has also been posted on derbydev.Byran Pendleton identified the following documentation with the incorrect descriptionhttpdb.apache.orgderbyjavadocpublishedapiorgapachederbydrdaNetworkServerControl.htmlhttpdb.apache.orgderbydocs.adminguideradminconfigdbjdrdalogconnections.htmlhttpdb.apache.orgderbydocs.manualsadminhubprnt.htmlhttpdb.apache.orgderbydocs.adminguidetadminlogfile.htmlShould we fix this in .? If yes  please update fix versions for this issue.   
0;Client driver Prefetch data on executeQuery)   ;Currently  the client driver does not prefetch data whenexecuteQuery) is called  but it does on the first call toResultSet.next). Prefetching data on executeQuery) would reducenetwork traffic and improve performance.The DRDA protocol supports this. From the description of OPNQRY openquery) The qryrowset parameter specifies whether a rowset of rows is to be returned with the command. This is only honored for nondynamic scrollable cursors QRYATTSNS not equal to QRYSNSDYN) and for nonscrollable cursors conforming to the limited block query protocol. The target server fetches no more than the requested number of rows. It may fetch fewer rows if it is restricted by extra query block limits  or if a fetch operation results in a negative SQLSTATE or an SQLSTATE of .   
0;modify setCharacterStreamInternal to take a long for the length  and perform the > max int check in the method   ;A similar change to setBinaryStreamInternal is being handled as part of DERBY.   
1;LDAP user authentication fails under a security manager   ;Running the test jdbcapisecureUsers.sql with a security manager results ingt  ERROR  Connection refused  javax.naming.CommunicationException noSuchMachine  Root exception is java.security.AccessControlException access denied java.net.SocketPermission noSuchMachine resolve) Adding this permission to the policy file has no effect. which means a priv block is required around the LDAP call.permission java.net.SocketPermission noSuchMachine  resolve    
0;Intermittent failure of storereadlocks.sql   ;The storereadlocks.sql test in derbyall fails intermittently with the following diff     Start readlocks jdk.._ storeallstoremore   ***agt  APP |UserTran|ROW | |S |A | ) |GRANT|ACTIVE Test Failed. End readlocks jdk.._ storeallstoremore   ***    i.e. it looks like there is an extra lock in the printed lock table.   
0;add mechanism for specifying policy file for individual function tests   ;It would be nice to be able to specify a testspecific policy file.This should get handled similar to existing properties  i.e. get specified in a test_app.properties file or  for a suite  in the suite.properties file). The file should then be copied into the correct place.Note  that the old functionTests harness as opposed to junit tests) includes a check for a property called serverPolicyFile in harnessjvm.java). The name is a left over from when the policy file was only used forby network server  and should be renamed  derbyTestPolicyFile  for instance. It is not used anywhere at present  and not specific to network server. It would be nice if this could be expanded  or  if not used  removed.The default policy file used is the derby_tests.policy file under functionTestsutil.Also  currently  the property can only be used with RunTest  for further traction  it should probably get passed on through RunSuiteRunList.Once confirmed to be working  the property should get documented in lt trunkgt javatestingREADME.htm.   
0;Remove use of Stringbyte[]) and Stringbyte[]  int  int) constructors in testing leading to nonportable behaviour   ;These constructors use the Java default platform encoding to convert the bytes to a String  this typically leads to bugs on platforms with different encodings.Replace with code using fixed conversion  or alternative mechanisms. If the call is required its use should be commented as to why it is required.org.apache.derbyTesting.functionTests.tests.jdbcapi.blobclobBLOBorg.apache.derbyTesting.functionTests.tests.jdbcapi.resultsetorg.apache.derbyTesting.functionTests.tests.lang.coalesceTestsorg.apache.derbyTesting.functionTests.tests.store.streamingColumnI generated this list using the Java search in eclipse for references to the constructorsStringbyte[])Stringbyte[] int int) no occurrences in javatesting)   
0;big decimal error diff in derbyall langprocedure test run in the DerbyNetClient  jdk. specific   ;derby all regression test failure in the following test. Most recently it failed in the  derby build. It also failed on . It ran fine on . Havenot had time to narrow down further. Did note that there is a separate master for this test   but no jdk specific masters that I could see.     Start procedure jdk.._ DerbyNetClient derbynetmatsderbynetmats   *** dellt  EXPECTED SQL Exception BigDecimal conversion exception  converters  Overflow occurred during numeric data type conversion of .. See attached Throwable.agt  EXPECTED SQL Exception BigDecimal conversion exception  converters  Overflow occurred during numeric data type conversion of .. See attached Throwable. Caused by exception class org.apache.derby.client.am.ConversionException  converters  Overflow occurred during numeric data type conversion of . dellt  EXPECTED SQL Exception Invalid argument parameter index  is not an OUT or INOUT parameter.agt  EXPECTED SQL Exception XN.S      dellt  EXPECTED SQL Exception BigDecimal conversion exception  converters  Overflow occurred during numeric data type conversion of ... See attached Throwable.agt  EXPECTED SQL Exception BigDecimal conversion exception  converters  Overflow occurred during numeric data type conversion of ... See attached Throwable. Caused by exception class org.apache.derby.client.am.ConversionException  converters  Overflow occurred during numeric data type conversion of ..Test Failed. End procedure jdk.._ DerbyNetClient derbynetmatsderbynetmats   ***   
1;introduce a new test type to run junit tests from the current harness   ;It seems to me that for including a new JUnit test into i.e derbyall we need to make a new java class with a main) method  which parses a command line and set up the testsuite and run it  just like any java program. Basically we are running the junit tests as test type java.Instead of having to do this for every junit test going into a derby test suite  I would propose a different strategy.I propose to introduce a new test type called junit current test types are sql sql unit java multi demo  unit is not junit)Then you can usejava org.apache.derbyTesting.functionTests.harness.RunTest lt TestCaseClassNamegt .junitto run a Junit test  instead ofjava org.apache.derbyTesting.functionTests.harness.RunTest lt AnotherClassWithMainMethodgt .javaWhen starting a test of type junit  the RunTest class may simply use thejunit.textui.TestRunner class  which has a main method which takes a TestCase class name as parameter. The junit.textui.TestRunner runs the tests defined by the suite) method of the TestCase class.I think this strategy will make it easier to integrate new JUnit tests into the current test suites  since it save you the trouble of creating a java class with a main method for every test.   
0;new JDBC metadata API getFunctions) needs to be implemented   ;For now I am implementing this to return empty result set so at least were compliant  but we should be able to implement this one   
0;NullPointerException at ResultSet.close) time for simple query using UNION and INTERSECT   ;If I set derby.language.logQueryPlan to true and then attempt to execute the following simple query using UNION and INTERSECT  Derby will return the correct results and then  after returning the results  will throw a NullPointerException. This error also occurs for ..To reproducegt  java Dderby.language.logQueryPlantrue org.apache.derby.tools.ijand then docreate table t i int) create table t j int) create table t a int) ijgt  select i from t union select j from t intersect select a from t)  rows selectedERROR XJ Java exception  java.lang.NullPointerException.If I add data  the query will return the correct results  but then throw the NPE.insert into t values          insert into t values          insert into t values      ijgt  select i from t union select j from t intersect select a from t)  rows selectedERROR XJ Java exception  java.lang.NullPointerException.The embedded and client stack traces are shown below. Both suggest that the problem occurs during the close of the result set.  Embedded  java.lang.NullPointerException at org.apache.derby.impl.sql.execute.rts.RealUnionResultSetStatistics.getStatementExecutionPlanTextRealUnionResultSetStatistics.java) at org.apache.derby.impl.sql.execute.rts.RealSortStatistics.getStatementExecutionPlanTextRealSortStatistics.java) at org.apache.derby.impl.sql.execute.rts.RunTimeStatisticsImpl.getStatementExecutionPlanTextRunTimeStatisticsImpl.java) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.finishAndRTSBasicNoPutResultSetImpl.java) at org.apache.derby.impl.sql.execute.SortResultSet.finishSortResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.closeEmbedResultSet.java) at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.tools.JDBCDisplayUtil.DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.impl.tools.ij.utilMain.displayResultutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)  Client  ERROR no SQLState) actual code point   does not match expected code point  java.sql.SQLException actual code point   does not match expected code point   at org.apache.derby.client.am.SqlException.getSQLExceptionSqlException.java) at org.apache.derby.client.am.ResultSet.closeResultSet.java) at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.tools.JDBCDisplayUtil.DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.impl.tools.ij.utilMain.displayResultutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)Caused by org.apache.derby.client.am.DisconnectException actual code point   does not match expected code point   at org.apache.derby.client.net.Reply.zThrowSyntaxErrorReply.java) at org.apache.derby.client.net.Reply.parseLengthAndMatchCodePointReply.java) at org.apache.derby.client.net.NetConnectionReply.parseSQLCARDNetConnectionReply.java) at org.apache.derby.client.net.NetConnectionReply.parseRDBCMMreplyNetConnectionReply.java) at org.apache.derby.client.net.NetConnectionReply.readLocalCommitNetConnectionReply.java) at org.apache.derby.client.net.ConnectionReply.readLocalCommitConnectionReply.java) at org.apache.derby.client.net.NetConnection.readLocalCommit_NetConnection.java) at org.apache.derby.client.am.Connection.readCommitConnection.java) at org.apache.derby.client.am.Connection.readAutoCommitConnection.java) at org.apache.derby.client.am.ResultSet.readAutoCommitIfNotAutoCommittedResultSet.java) at org.apache.derby.client.am.ResultSet.readCloseAndAutoCommitResultSet.java) at org.apache.derby.client.am.ResultSet.flowCloseAndAutoCommitIfNotAutoCommittedResultSet.java) at org.apache.derby.client.am.ResultSet.closeXResultSet.java) at org.apache.derby.client.am.ResultSet.closeResultSet.java)ERROR XJ DERBY SQL error SQLCODE   SQLSTATE XJ  SQLERRMC java.lang.NullPointerException XX  XJ.Ujava.sql.SQLException DERBY SQL error SQLCODE   SQLSTATE XJ  SQLERRMC java.lang.NullPointerException XX XJ.U at org.apache.derby.client.am.SqlException.getSQLExceptionSqlException.java) at org.apache.derby.client.am.SqlException.getSQLExceptionSqlException.java) at org.apache.derby.client.am.ResultSet.closeResultSet.java) at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.tools.JDBCDisplayUtil.DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.impl.tools.ij.utilMain.displayResultutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)   
0;Error  can include XXRESOLVEXX which should be removed   ;In some cases  error  can come up as follows A truncation error was encountered trying to shrink CHAR ) FOR BIT DATA XXRESOLVEXX to length .This message makes it appear as if there is a column called XXRESOLVEXX  however  this string is coming out of SQLBinary.java.It should be removed from the message.Other references for this string are in the masters for updatableResultSet.out  and in the test langconcateTests.java referring to DERBY).So  running updatableResultSet will generate the message.The stack trace I saw at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.iapi.types.SQLBinary.checkHostVariableSQLBinary.java) at org.apache.derby.exe.acxxdxbdfcxffffcfb.e Unknown Source) at org.apache.derby.impl.services.reflect.DirectCall.invokeReflectGeneratedClass.java) at org.apache.derby.impl.sql.execute.RowResultSet.getNextRowCoreRowResultSet.java) at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore NormalizeResultSet.java) at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCoreDMLWriteResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateEmbedPreparedStatement.java)   
0;DatabaseMetadata method supportsResultSetConcurrency returns wrong result on network client   ;The DatabaseMetaData method supportsResultSetConcurrency erroneouslyreturns false on the network client for all arguments combination  cfthe attached repro program. The embedded client returns correctresults  viz the outputorg.apache.derby.jdbc.ClientDriverSupportsResultSetConcurrency TYPE_FORWARD_ONLY CONCUR_READ_ONLY falseSupportsResultSetConcurrency TYPE_FORWARD_ONLY CONCUR_UPDATABLE falseSupportsResultSetConcurrency TYPE_SCROLL_INSENSITIVE CONCUR_READ_ONLY falseSupportsResultSetConcurrency TYPE_SCROLL_INSENSITIVE CONCUR_UPDATABLE falseSupportsResultSetConcurrency TYPE_SCROLL_SENSITIVE CONCUR_READ_ONLY falseSupportsResultSetConcurrency TYPE_SCROLL_SENSITIVE CONCUR_UPDATABLE falseorg.apache.derby.jdbc.EmbeddedDriverSupportsResultSetConcurrency TYPE_FORWARD_ONLY CONCUR_READ_ONLY trueSupportsResultSetConcurrency TYPE_FORWARD_ONLY CONCUR_UPDATABLE trueSupportsResultSetConcurrency TYPE_SCROLL_INSENSITIVE CONCUR_READ_ONLY trueSupportsResultSetConcurrency TYPE_SCROLL_INSENSITIVE CONCUR_UPDATABLE falseSupportsResultSetConcurrency TYPE_SCROLL_SENSITIVE CONCUR_READ_ONLY falseSupportsResultSetConcurrency TYPE_SCROLL_SENSITIVE CONCUR_UPDATABLE falsePresumably  this is wrong in released versions as well.   
0;creating a preparedStatement outside of a Global tran using a ClientXADatasource  will result in an SqlException Cannot set holdability  if the statement  is used in a Global transaction   ;creating a preparedStatement outside of a Global tran using an xa datasource will result in an exception if the statement is used in a Global i.e. xa transaction.  DERBY and DERBY may be relevant to this issue.User noted  setting the holdability on the connection to CLOSE_CURSORS_AT_COMMIT doesnt seem to be taken affect  since the problem is observed to happen even if I set the the holdability to CLOSE_CURSORS_AT_COMMIT before creating the statement. maybe another bug setting the holdability to close_cursor_at_commit on the PS when creating it  doesnt seem to be affecting the outcome  this  not sure its even honored maybe another bugTest case is belowimport java.sql.Connection import java.sql.PreparedStatement import java.sql.ResultSet import java.sql.SQLException import java.sql.Statement import javax.sql.XAConnection import javax.transaction.xa.XAException import javax.transaction.xa.XAResource import javax.transaction.xa.Xid import com.ibm.db.jcc.DBXid class CursorHoldProblem public static PreparedStatement pstmt  null  public static void main String args []throws Exception  org.apache.derby.jdbc.ClientXADataSource ds  new  org.apache.derby.jdbc.ClientXADataSource  System.out.printlngetting connection  ds.setDatabaseNamesample  ds.setTraceFiletrace.out  ds.setConnectionAttributescreatetrue  conn  ds.getConnection System.out.printlnconn.getMetaData.getDatabaseProductVersion  PreparedStatement ps  null  try  System.out.printlncreating table  ps  conn.prepareStatementCREATE TABLE TABCOL INT NOT NULL  ps.executeUpdate  System.out.printlndone creating table  conn.commit   } catch SQLException x  System.out.println table already exists  conn.commit  } XAConnection pc  ds.getXAConnection  XAResource xar  pc.getXAResource  Xid xid  createXid  Connection conn  pc.getConnection  System.out.printlnget Holidability returning   conn.getHoldability  conn.setHoldabilityResultSet.CLOSE_CURSORS_AT_COMMIT   gt  setting this has no affect  doSelectconn    xar.startxid  XAResource.TMNOFLAGS  doSomeWorkconn    doSelectconn    xar.endxid  XAResource.TMSUCCESS  int prp  xar.preparexid  System.out.printlnprp is   prp  if prp  XAResource.XA_OK xar.commitxid  false  } private static void doSomeWorkConnection conn  int deptno throws SQLException   Statement stmt  conn.createStatement  int cnt  stmt.executeUpdateINSERT INTO tab VALUES   deptno    System.out.printlnNo of rows Affected   cnt  stmt.close  stmt  null  } private static void doSelectConnection conn  int deptno throws SQLException   if pstmt  null pstmt  conn.prepareStatementselect * from tab  ResultSet rset  pstmt.executeQuery  while rset.next  System.out.printlngt    rset.getString  break  }  } static Xid createXidint bids throws XAException  byte[] gid  new byte[]  gid[]  byte   byte[] bid  new byte[]  bid[]  byte bids  byte[] gtrid  new byte[]  byte[] bqual  new byte[]  System.arraycopygid    gtrid      System.arraycopybid    bqual      Xid xid  new DBXidx  gtrid  bqual  return xid  } }   
0;tests derbynetcsPrepStmt and prepStmt use mechanisms that are not portable over encodings   ;With zOS  with the classic  bit jvm  the tests derbynetcsPrepStmt and prepStmt.java fail because the insert with setAsciiStream of a byte array obtained from a new String.getBytes) andor the retrieval of that inserted value) is not ok. No error is returned  but the select shows no value.This is the section in the test csPrepStmt ps.setString  columnstring)  byte[] cba  new Stringcolumnvcstring).getBytes)  int len  cba.length  ps.setAsciiStream  new ByteArrayInputStreamcba)  len) and the value is retrieved using an ResultSet.getString) dellt  got row     . . . . . columnstring  columnvcstring columnlvcstring abcdef abcdef abcdef xxxxxxFILTEREDTIMESTAMPxxxxx .agt  got row     . . . . . columnstring  columnlvcstring abcdef abcdef abcdef xxxxxxFILTEREDTIMESTAMPxxxxx .i.e. the string columnvcstring is not in the database)This needs to be replaced by a encodingneutral eg. fixed encoding) mechanism and the tests derbynetprepStmt.java and csPrepStmt.java need to be checked for other nonportable code.   
0;unitdaemonService.unit fails intermittently ran out of time   ;Signature                 Diff file unitunitdaemonService.diff             Start daemonService jdk.._ unitunit   *** dellt    Unit Test T_DaemonService finished addgt  ran out of timegt  Shutting down due to unit test failure.gt  Exit due to time bombTest Failed. End daemonService jdk.._ unitunit   ***    httpwww.multinet.no~solbergpublicApacheDerbyLimitedtestSummary.html  SunOS. ipci    
0;storeaccess.sql fails  incorrect index?   ;ijgt    should only be  distinct row in this table since space used by the   index should be the same before and after select countdistinct a) from spaceused Signature                 Diff file derbyallencryptionAllstorematsstorematsaccess.diff             Start access jdk.._ storematsstoremats   *** dellt   agt   Test Failed. End access jdk.._ storematsstoremats   ***    httpwww.multinet.no~solbergpublicApacheDerbyLimitedtestSummary.html  SunOS. sunusparc    
0;tests jdbcapiSURTest.junit and jdbcapiSURQueryMixTest.junit run twice in derbynetclientmats   ;The tests SURTest.junit and SURQueryMixTest.junit both appear in derbynetclientmats.runall as well as in jdbcapi.runall. So it unnecessarily runs twice  because jdbcapi is already included in the suites in derbynetclientmats.properties. It should be removed from derbynetclientmats.runall.   
0;Optimizer can return incorrect best cost estimates with nested subqueries  which leads to generation of suboptimal plans.   ;When optimizing a query that has nested subqueries in it  its possible that the optimizer for the subqueries will return cost estimates that are lower than what they were actually calculated to be. The result is that the outer query can pick an access plan that is suboptimal.Filing this jira issue based on the thread  OPTIMIZER  OptimizerImpl best plans for subqueries? from derbydev. Description that follows is pasted from that emailhttparticle.gmane.orggmane.comp.apache.db.derby.develFollowing example of what I saw when tracing through the code demonstrates the problem.select x.j  x.b from select distinct i j from t x  select distinct a b from t xwhere x.i  x.a During optimization of this query we will create three instancesof OptimizerImpl OI_ For select x.j  x.b from x  x where x.i  x.a OI_ For select distinct i j from t OI_ For select distinct a b from tQuery ran against a clean codeline when T had  row and T had  .   Toplevel call is made to the optimize method of the outermost SelectNode  which creates OI_.   OI_ picks join order X  X} and calls X.optimizeIt   X creates OI_ and makes calls to optimize it.   OI_ picks join order T} and calls T.optimizeIt   T returns a cost of .   OI_ saves  as new best cost and tells T to save it.   X calls OI_.getOptimizedCost  which returns . X then returns  to OI_.   OI_ calls X.optimizeIt   X creates OI_ and makes calls to optimize it.   OI_ picks join order T} and calls T.optimizeIt   T returns a cost of .   OI_ saves  as new best cost and tells T to save it.   X calls OI_.getOptimizedCost  which returns . X then returns  to OI_.   OI_ saves      as new best cost and tells X to save  and X to save .   OI_ picks join order X  X} and calls X.optimizeIt   X fetches OI_ and makes calls to optimize it.   OI_ picks join order T} and calls T.optimizeIt   T returns a cost of .   OI_ saves  as new best cost and tells T to save it.   X calls OI_.getOptimizedCost  which returns . X then returns  to OI_.   OI_ calls X.optimizeIt   X fetches OI_ and makes calls to optimize it.   OI_ picks join order T} and calls T.optimizeIt   T returns a cost of  MILLION.   OI_ rejects new cost  mil gt   and does nothing.   X calls OI_.getOptimizedCost  which returns . X then returns  to OI_...this seems WRONG   OI_ saves      as new best cost and tells X to save  and X to save .So in the end  the outermost OptimizerImpl chooses join order X  X} because it thought the cost of this join order was only   which is better than . However  the actual cost of the join order was really estimated at  millionso the outer OptimizerImpl chose and will generate a plan that  according to the estimates  was hugely suboptimal.   
0;Embedded ResultSet.getStatement) does not return the Statement object that created it  for a connection returned from EmbeddedXADataSource   ;May also be the case for connections obtained from EmbeddedConnectionPoolDataSource.ResultSet.getStatement) is returning the undetlying physical java.sql.Statement object  not the brokered object.Bug as applications can then get at the underlying physical connection and thus continue to use a connection that may have been assigned to someone else. Causes FAIL messages in thenew jdbcapiXATest  real checks should be added in checkDataSource to ensure all the possibleconnection objects are checked.   
0;new test langShutdownDatabase.java fails with jME   ;The new test langShutdownDatabase.java fails with java.lang.NoClassDefFoundError java.sql.DriverThe test needs to be rewritten to take advantage of the TestUtil methods for getting a connection from a datasource or using a driver  similar to e.g. langclosed.java.The stack trace is like sojava.lang.NoClassDefFoundError java.sql.Driver at java.lang.ClassLoader.defineClassImplNative Method) at java.lang.ClassLoader.defineClassClassLoader.java) at java.security.SecureClassLoader.defineClassSecureClassLoader.java) at java.net.URLClassLoader.findClassImplURLClassLoader.java) at java.net.URLClassLoader.runURLClassLoader.java) at java.security.AccessController.doPrivilegedAccessController.java) at java.net.URLClassLoader.findClassURLClassLoader.java) at com.ibm.oti.vm.URLSystemClassLoader.findClassURLSystemClassLoader.java) at java.lang.ClassLoader.loadClassClassLoader.java) at com.ibm.oti.vm.URLSystemClassLoader.loadClassURLSystemClassLoader.java) at java.lang.ClassLoader.loadClassClassLoader.java) at java.lang.Class.forNameImplNative Method) at java.lang.Class.forNameClass.java) at org.apache.derby.impl.tools.ij.util.loadDriverutil.java) at org.apache.derby.impl.tools.ij.util.startJBMSutil.java) at org.apache.derby.impl.tools.ij.util.startJBMSutil.java) at org.apache.derby.impl.tools.ij.util.startJBMSutil.java) at org.apache.derbyTesting.functionTests.tests.lang.ShutdownDatabase.openConnectionToNewDatabaseShutdownDatabase.java) at org.apache.derbyTesting.functionTests.tests.lang.ShutdownDatabase.testOnlyTransactionWasCommitedShutdownDatabase.java) at org.apache.derbyTesting.functionTests.tests.lang.ShutdownDatabase.testShutDownWithCommitedTransactionShutdownDatabase.java) at org.apache.derbyTesting.functionTests.tests.lang.ShutdownDatabase.mainShutdownDatabase.java)   
0;forupdate.sql   holdCursorIJ.sql ..etc are failing when run with . client againest trunk   ;derbynetclientmatsderbynetmatsderbynetmats.faillangforupdate.sql derbynetclientmatsderbynetmatsderbynetmats.faillangholdCursorIJ.sql derbynetclientmatsderbynetmatsderbynetmats.failstoreholdCursorJDBC.sql derbynetclientmatsderbynetmatsderbynetmats.failjdbcapiLOBTest.java derbynetclientmatsderbynetmatsderbynetmats.failjdbcapiblobclobBLOB.java derbynetclientmatsderbynetmatsderbynetmats.failjdbcapiparameterMapping.java derbynetclientmatsderbynetmatsderbynetmats.failjdbcapisetTransactionIsolation.java derbynetclientmatsderbynetmatsderbynetmats.failjdbcapimetadataJdbc.java derbynetclientmatsderbynetmatsderbynetmats.failjdbcapiconnectionJdbc.javaSample diff      Start forupdate jdk.._ DerbyNetClient derbynetmatsderbynetmats   *** dellt  ERROR X Syntax error Encountered lt EOFgt  at line   column .agt  ERROR X Syntax error Encountered lt EOFgt  at line   column . dellt  ERROR no SQLState) Invalid cursor name C in the UpdateDelete statement.agt  ERROR X Cursor SQL_CURLHC not found. Verify that autocommit is OFF. dellt  ERROR no SQLState) Invalid cursor name C in the UpdateDelete statement.agt  ERROR X Cursor SQL_CURLHC not found. Verify that autocommit is OFF. dellt  ERROR no SQLState) Invalid cursor name C in the UpdateDelete statement.agt  ERROR X Cursor SQL_CURLHC not found. Verify that autocommit is OFF. dellt  ERROR X Syntax error Encountered . at line   column .agt  ERROR X Syntax error Encountered . at line   column .Test Failed. End forupdate jdk.._ DerbyNetClient derbynetmatsderbynetmats    
0;JVMInfo is duplicated in derbyclient.jar   ;The JVMInfo class is included twice in derbyclient.jar  asorg.apache.derby.iapi.services.info.JVMInfo andorg.apache.derby.shared.common.info.JVMInfo. The only one of themactually used by the client code is the one found inorg.apache.derby.shared.common.info.org.apache.derby.iapi.services.info.JVMInfo is also included inderby.jar  so one could run into problems if the classpath containsderbyclient.jar and derby.jar with different versions.   
0;test jdbcapicheckDataSource and savepointJdbc_XA fail with remote server with security exceptions   ;The .tmp from the jdbcapicheckDataSource.java isSTART XA HOLDABILITY TESTERROR no SQLState) java.security.PrivilegedActionException  Error opening socket to server localhost on port  with message  Connection refusedCompleted checkDataSourceThe .tmp from the jdbcapisavepointJdbc_XA.java isFAIL   unexpected exceptionSQLSTATEnull)java.sql.SQLException java.security.PrivilegedActionException  Error opening socket to server localhost on port  with message  Connection refused at org.apache.derby.client.am.SqlException.getSQLExceptionSqlException.java) at org.apache.derby.client.ClientPooledConnection.lt initgt ClientPooledConnection.java) at org.apache.derby.client.ClientXAConnection.lt initgt ClientXAConnection.java) at org.apache.derby.jdbc.ClientXADataSource.getXAConnectionClientXADataSource.java) at org.apache.derby.jdbc.ClientXADataSource.getXAConnectionClientXADataSource.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.savepointJdbc_XA.mainsavepointJdbc_XA.java)Caused by org.apache.derby.client.am.DisconnectException java.security.PrivilegedActionException  Error opening socket to server localhost on port  with message  Connection refused at org.apache.derby.client.net.NetAgent.lt initgt NetAgent.java) at org.apache.derby.client.net.NetConnection.newAgent_NetConnection.java) at org.apache.derby.client.am.Connection.initConnectionConnection.java) at org.apache.derby.client.am.Connection.lt initgt Connection.java) at org.apache.derby.client.net.NetConnection.lt initgt NetConnection.java) at org.apache.derby.client.net.NetXAConnection.lt initgt NetXAConnection.java) at org.apache.derby.client.ClientPooledConnection.lt initgt ClientPooledConnection.java) ...  more   
1;Security.AccessControlException in client under SecurityManager when trying to connect using EUSRIDPWD security mechanism   ;When using EUSRIDPWD security mechanism  the JCE provider is added and since this is not in a privileged block  an accesscontrol exception is raised when trying to connect using EUSRIDPWD security mechanism  when client is run under security manager.Enabled test T) in testSecMec.java gt  T jdbcderbyxxxFILTERED_HOSTNAMExxxxxxFILTEREDPORTxxxwombat userneelima passwordlee securityMechanism  EXCEPTION Unexpected throwable caught java.security.AccessControlException access denied java.security.SecurityPermission insertProvider.SunJCE)   
0;Change the internal implemetation of SYSCS_INPLACE_COMPRESS_TABLE to share existing alter table   ;Change the internal implemetation of SYSCS_INPLACE_COMPRESS_TABLE to share existing alter tablecode. One suggested approach is to use the same mechanism as SYSCS_COMPRESS_TABLE. Suchan implementation would involveo change the parser for alter table to accecpt some internal only syntax for SYSCS_INPLACE_COMPRESS_TABLEo change the alter table constant action to get the required information for inplace compresso move most of the inplace compress driving code to a routine in alter table execution  following the same coding pattern as existing alter table compress.I believe doing this will have multiple benefits) shares existing alter table code  so things like error checking  security management  ... is all done by one piece of code) by sharing the code I believe the following outstanding JIRA issues will be addressed DERBY  DERBY ) future changes addressing ddl like grantrevoke will automatically work.   
0;Delete cascade causes NULL values inserted into table when after delete Trigger fires   ;When an after delete trigger which inserts into a table is created on a table that has a foreign key that references a primary key and uses the on delete cascade constraint  nulls are inserted into the table by the trigger.The SQL below shows that the cascade delete works correctlyijgt  CREATE TABLE TABLE  X INT PRIMARY KEY )  rows insertedupdateddeletedijgt  CREATE TABLE TABLE_DELETIONS  X INT )  rows insertedupdateddeletedijgt  CREATE TABLE TABLE  Y INT  CONSTRAINT Y_AND_X FOREIGN KEYY) REFERENCES TABLEX) ON DELETE CASCADE)  rows insertedupdateddeletedijgt  CREATE TABLE TABLE_DELETIONS  Y INT )  rows insertedupdateddeletedijgt  INSERT INTO TABLE VALUES )  row insertedupdateddeletedijgt  INSERT INTO TABLE VALUES )  row insertedupdateddeletedijgt  INSERT INTO TABLE VALUES )  row insertedupdateddeletedijgt  INSERT INTO TABLE VALUES )  row insertedupdateddeletedijgt  select * from table X rows selectedijgt  select * from table Y rows selectedijgt  DELETE FROM TABLE  rows insertedupdateddeletedijgt  select * from table X rows selectedijgt  select * from table Y rows selectedNow insert the rows again  create the triggers  delete the rows from the primary key table  verify the cascade delete worked and observe the values in the tables used by the triggersijgt  INSERT INTO TABLE VALUES)  row insertedupdateddeletedijgt  INSERT INTO TABLE VALUES)  row insertedupdateddeletedijgt  INSERT INTO TABLE VALUES)  row insertedupdateddeletedijgt  INSERT INTO TABLE VALUES)  row insertedupdateddeletedijgt  CREATE TRIGGER TRIGGER AFTER DELETE ON TABLE REFERENCING OLD AS OLD_ROW FOR EACH ROW MODE DBSQL INSERT INTO TABLE_DELETIONS VALUES OLD_ROW.X)  rows insertedupdateddeletedijgt  CREATE TRIGGER TRIGGER AFTER DELETE ON TABLE REFERENCING OLD AS OLD_ROW FOR EACH ROW MODE DBSQL INSERT INTO TABLE_DELETIONS VALUES OLD_ROW.Y)  rows insertedupdateddeletedijgt  DELETE FROM TABLE  rows insertedupdateddeletedijgt  select * from TABLE X rows selectedijgt  select * from TABLE Y rows selectedijgt  SELECT * FROM TABLE_DELETIONS X rows selectedijgt  SELECT * FROM TABLE_DELETIONS YNULLNULLThe TABLE_DELETIONS table contains NULLs instead of the correct values which should be  and .   
0;Misleadingwrong error message while dropping a view   ;while dropping a view which does not really exist on a database   the error message thrown by ij says ERROR XX Table VIEW does not exist. It looks like we should make the error message to say that TableView does not exist  instead of table.Look at other messages that are shared for both Table and View.   
0;Derby fails inserting a join into a table with a generated column   ;Ive been having a problem inserting the result of a join into a table with a generated column. If I rephrase the join clause into a where clause  the problem goes away. And it only seems to happen if the target table has a generated column. Unfortunately  the join that I want to do in my application is pretty complex so I dont think I can rephrase it. But heres a very simplified example of what Im talking aboutij version .ijgt  connect jdbcderbytest createtrue ijgt  create table source source_id int not null primary key)  rows insertedupdateddeletedijgt  insert into source values ) insert into source values ) insert into source values ) insert into source values ) insert into source values ) insert into source values ) insert into source values ) insert into source values ) insert into source values ) insert into source values )  row insertedupdateddeletedijgt   row insertedupdateddeletedijgt   row insertedupdateddeletedijgt   row insertedupdateddeletedijgt   row insertedupdateddeletedijgt   row insertedupdateddeletedijgt   row insertedupdateddeletedijgt   row insertedupdateddeletedijgt   row insertedupdateddeletedijgt   row insertedupdateddeletedijgt  create table dest dest_id int not null primary key generated always as identity source_id_ int not null source_id_ int not null)  rows insertedupdateddeletedijgt  select s.source_id  s.source_idfrom source as sjoin source as son    SOURCE_ID |SOURCE_ID | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | rows selectedijgt  insert into dest source_id_  source_id_)select s.source_id  s.source_idfrom source as sjoin source as son    ERROR XJ Java exception  java.lang.NullPointerException.ijgt derby.log . GMTBooting Derby version The Apache Software Foundation  Apache Derby  ...  ) instance cddcon database directory DDocuments and Settings **My DocumentstestDatabase Class Loader started  derby.database.classpath . GMT Thread main  main  XID  )  SESSIONID  )  DATABASE  test)  DRDAID  null)  Cleanup action starting . GMT Thread main  main  XID  )  SESSIONID  )  DATABASE  test)  DRDAID  null)  Failed Statement is insert into dest source_id_  source_id_)select s.source_id  s.source_idfrom source as sjoin source as son   java.lang.NullPointerExceptionat org.apache.derby.impl.sql.compile.ResultColumnList.remapColumnReferencesToExpressionsUnknown Source)at org.apache.derby.impl.sql.compile.JoinNode.flattenUnknown Source)at org.apache.derby.impl.sql.compile.FromList.flattenFromTablesUnknown Source)at org.apache.derby.impl.sql.compile.SelectNode.preprocessUnknown Source)at org.apache.derby.impl.sql.compile.SingleChildResultSetNode.preprocessUnknown Source)at org.apache.derby.impl.sql.compile.DMLStatementNode.optimizeUnknown Source)at org.apache.derby.impl.sql.compile.DMLModStatementNode.optimizeUnknown Source)at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source)at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source)at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementUnknown Source)at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source)at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source)at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source)at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source)at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source)at org.apache.derby.impl.tools.ij.Main.goUnknown Source)at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source)at org.apache.derby.impl.tools.ij.Main.mainUnknown Source)at org.apache.derby.tools.ij.mainUnknown Source)Cleanup action completed . GMTShutting down instance cddc   
0;Test harness does not pass jvm flags properly if there are more than  property in jvm flags   ;To run Derby tests with EMMA for Code coverage  there is a need to set up emma flag DjvmflagsDemma.verbosity.levelsilent. This is basically to enable EMMA not to print out any messages to avoid having any diffs. This all works fine when running Derby tests with EMMA for jdk  jdk  jdk etc because there is no other jvm flag that is passed while calling RunSuite Command. Now  while running tests with jmecdcfoundation  another value needs to be passed as jvmflag which isDjvmflagsDij.dataSourceorg.apache.derby.jdbc.EmbeddedSimpleDataSource.I tried to combine values for both jvm flags as following  but it did not work properly. DjvmflagsDemma.verbosity.levelsilent Dij.dataSourceorg.apache.derby.jdbc.EmbeddedSimpleDataSourceDuring this run  the value that was further passed while running one test was DjvmflagsDemma.verbosity.levelsilent.As you can notice it took jvm flag as Demma.verbosity.levelsilent . DjvmflagsDemma.verbosity.levelsilent Dij.dataSourceorg.apache.derby.jdbc.EmbeddedSimpleDataSourceDuring this run  the value that was further passed while running one test was DjvmflagsDemma.verbosity.levelsilent.As you can notice it took jvm flag as Demma.verbosity.levelsilent From the above it looks like test harness needs to be changed so that it can parse multiple values for jvm flags properly.   
0;ResultSet.getHoldabilty will return incorrect value when the ResultSet is obtained from a procedure call   ;EmbedResultSet.getHoldability returns the holdability of the statement returned by ResultSet.getStatement).When a ResultSet is created by a procedure call  its holdability may not match the holdability of the Statement that called the procedure  which is probably what ResultSet.getStatement) should return.This may not be exposed as a bug yet  but I think this method should be directly obtaining the holdability of the ResultSet using the Activation.getResultSetHoldability) method  rather than through a Statement. Seems a safer approach.   
0;For existing databases JDBC metadata queries do not get updated properly  between maintenance versions.   ;The JDBC DatabaseMetaData queries are stored as stored prepared statements in the database. If a bug is fixed for any of the metadata calls it can require that these queries be changed. Currently existing databases will not get updated properly if a bug is fixed. Ideally the metadata queries should match the derby version that is running. That way we avoid situations where the query is not compatible with the Derby version running.To confirm I ) created a database with ...) Made a metadata change in my ... client.) Connected to the ... database with ... and saw that there was no change to the stored prepared statements in SYS.SYSSTATEMENTSI also confirmed that a database created with ... does not get changed when reverting to ....Below this line is some history and reference that might be helful to someone fixing this issueIn discussing DERBY  the subject of the metadata stored prepared statements came up.The general questions are ) Why do we use stored prepared statements for metadata queries?  ) What issues might there be related to upgradedowngrade with the metadata stored prepared statements? ) How do we address potential upgradedowngrade issues?GENERAL HISTORY Cloudscape .x had stored prepared statements  a way to store precompiledstatements in the database. This is no longer exposed externally. Metadata stored prepared statements were a performance optimization thatpredated the statement cache. In the past  this performance optimization has been of particular importanceto gui database browsers that execute all the metadata methods on connection to the database. This would still probably be an issue with embedded even with the statement cache. All stored prepared statements get recompiled on the first connection to thedatabase if the version changes.UPGRADE HISTORY In Cloudscape .  the metadata stored prepared statements have traditionallybeen a source of trouble for even minor version changes as queries change or they refer to methodsstored procedures that may or may not exist in the target version and cannot recompile or execute.  The solution to the problem in Cloudscape v.. was to automaticallyalways call DD_Version.dropJDBCMetadataSPSes) whenever the version changed up or down in upgradeIfNeeded). The workaround before this change to do this automatically was to call thismethod manually CALL Factory.getDatabaseOfConnection). dropAllJDBCMetaDataSPSes)HOW DERBY WORKS TODAY In Derby we now only call dropJDBCMetadataSPSes) on fullUpgrade and it hasbeen this way since contribution. I think the problems of upgradedowngrade for metadata stored preparedstatements may exist in Derby. I dont know a workaround to drop the metadata stored prepared statements ifwe need to deliver a bug fix or how the ugpradedowngrade is handled currently. I seem to recall some special handling in Derby for soft upgrade for optimizer directives  but dont know the details.RECENT DISCUSSIONSIn discussing DERBY  the subject of the metadata stored prepared statements came up.The general questions are ) Why do we use stored prepared statements for metadata queries?  ) What issues might there be related to upgradedowngrade with the metadata stored prepared statements? ) How do we address potential upgradedowngrade issues?MY QUESTIONSAnyone know whenwhy the dropJDBCMetadataSPSes) on all version changes was removed between Cloudcape .. and contribution? How do we deliver bug fixes for metadata queries or handle changes in the metadata queries in Derby?   
0;transaction logs files requried for recovery are getting deleted when backup and checkpointas are running in parallel.   ; . GMT Booting Derby version The Apache Software Foundation  Apache Derby  ... alpha  ) instance cdfaabfaon database directory E
0;client gives SqlException for test callable.java and parameterMapping.java on zOS   ;On zOS  the tests callable.java and parameterMapping.java failed with networkserver and the derby client. The failure did not occur with the dbjcc.jar. The stack trace was as followsorg.apache.derby.client.am.SqlException ^V^V^^^D^F^^F^^^  at org.apache.derby.client.am.Statement.completeExecuteStatement.java at org.apache.derby.client.net.NetStatementReply.parseEXCSQLSTTreplyNetStatementReply.java at org.apache.derby.client.net.NetStatementReply.readExecuteCallNetStatementReply.java at org.apache.derby.client.net.StatementReply.readExecuteCallStatementReply.java at org.apache.derby.client.net.NetStatement.readExecuteCall_NetStatement.java at org.apache.derby.client.am.Statement.readExecuteCallStatement.java at org.apache.derby.client.am.PreparedStatement.flowExecutePreparedStatement.java at org.apache.derby.client.am.CallableStatement.executeXCallableStatement.java at org.apache.derby.client.am.CallableStatement.executeCallableStatement.java at org.apache.derbyTesting.functionTests.tests.derbynet.callable.mainUnknown SourceIn callable.java  its this part of the test that caused the failure System.out.printlnreturn value is   cs.getInt  cs.close   stmt.executeDROP FUNCTION method   different parameter types  also method overload stmt.executeCREATE PROCEDURE methodP  IN P SMALLINT  IN P INT  IN P BIGINT  IN P REAL    IN P DOUBLE  IN P DECIMAL   IN P DATE  IN P TIME  IN P TIMESTAMP  IN P VARCHAR FOR BIT DATA    OUT O SMALLINT  OUT O INT  OUT O BIGINT  OUT O REAL    OUT O DOUBLE  OUT O DECIMAL   OUT O DATE  OUT O TIME  OUT O TIMESTAMP  OUT O VARCHAR FOR BIT DATA     EXTERNAL NAME org.apache.derbyTesting.functionTests.tests.derbynet.callable.method   NO SQL LANGUAGE JAVA PARAMETER STYLE JAVA  cs  conn.prepareCallcall methodP?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  cs.setShort  short   cs.setInt    cs.setLong    cs.setFloat  float .  cs.setDouble  .  cs.setBigDecimal  new BigDecimal.  cs.setDate  Date.valueOf  cs.setTime  Time.valueOf  cs.setTimestamp  Timestamp.valueOf .  byte[] ba  new byte    ba      ba      cs.setBytes  ba  int n    cs.registerOutParameter n  java.sql.Types.SMALLINT  cs.registerOutParameter n  java.sql.Types.INTEGER  cs.registerOutParameter n  java.sql.Types.BIGINT  cs.registerOutParameter n  java.sql.Types.REAL  cs.registerOutParameter n  java.sql.Types.DOUBLE  cs.registerOutParameter n  java.sql.Types.DECIMAL  cs.registerOutParameter n  java.sql.Types.DATE  cs.registerOutParameter n  java.sql.Types.TIME  cs.registerOutParameter n  java.sql.Types.TIMESTAMP  cs.registerOutParameter n  java.sql.Types.VARBINARY  cs.execute I found in derby.log a reference to error   .S.  i.e. syntax error on parameter  of SYSIBM.SQLCAMESSAGE yes  this is from last year . GMT Thread DRDAConnThread_  main  XID    SESSIONID    DATABASE  wombat  DRDAID  NF.GC} End compiling prepared statement call methodP?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ? End prepared statement . GMT Thread DRDAConnThread_  main  XID    SESSIONID    DATABASE  wombat  DRDAID  NF.GC} Begin compiling prepared statement call SYSIBM.SQLCAMESSAGE? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? End prepared statement . GMT Thread DRDAConnThread_  main  XID    SESSIONID    DATABASE  wombat  DRDAID  NF.GC} End compiling prepared statement call SYSIBM.SQLCAMESSAGE? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? End prepared statement . GMT Thread DRDAConnThread_  main  XID    SESSIONID    DATABASE  wombat  DRDAID  NF.GC} Executing prepared statement call SYSIBM.SQLCAMESSAGE? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? End prepared statement with  parameters begin parameter   end parameter begin parameter   end parameter begin parameter  ^V^V^^^D^F^^F^^^ end parameter begin parameter  ^^^^^^^^ end parameter begin parameter   end parameter begin parameter   end parameter begin parameter   end parameter begin parameter   end parameter begin parameter   end parameter begin parameter   end parameter beginparameter  ^^^^^^^^^^^ end parameter begin parameter ^V^V^^^D end parameter begin parameter  null end parameter beginparameter  en end parameter begin parameter  null end parameter begin   
0;jdbcTestDbMetaData.java fails because of changes in SQLException text   ;jdbcTestDbMetaData.java fails with the following diff                 Diff file jdbcDerbyNetClientjdbcTestDbMetaData.diff             Start TestDbMetaData jdk..beta DerbyNetClient jdbcjdbc   *** dellt  SQLSTATEA)java.sql.SQLException A.S     getClientInfoProperties ) dellt  Caused by org.apache.derby.client.am.SqlException A.S     getClientInfoProperties )a gt  SQLSTATEA)java.sql.SQLException Feature not implemented getClientInfoProperties ).gt  Caused by org.apache.derby.client.am.SqlException Feature not implemented getClientInfoProperties ). dellt  SQLSTATEA)java.sql.SQLException A.S     getSchemas String  String) dellt  Caused by org.apache.derby.client.am.SqlException A.S     getSchemas String  String)a gt  SQLSTATEA)java.sql.SQLException Feature not implemented getSchemas String  String).gt  Caused by org.apache.derby.client.am.SqlException Feature not implemented getSchemas String  String).Test Failed. End TestDbMetaData jdk..beta DerbyNetClient jdbcjdbc   ***    httpwww.multinet.no~solbergpublicApacheDerbyJDKtestlogJDKJvm.SunOS._ipcijdbc_diff.txt)The failure is caused by changes in MessageUtil which have modified the exception message.   
1;compatibility tests fail with security related errors.   ;A * few* cases                 Begin serverVM._serverTrunk_clientVM._clientTrunkException in thread main java.lang.NoClassDefFoundError javaxcryptoIllegalBlockSizeException             End serverVM._serverTrunk_clientVM._clientTrunk                     Begin serverVM._server..._clientVM._clientDBJCCcom.ibm.db.jcc.c.SqlException java.net.ConnectException  Error opening socket to server localhost on port  with message  Connection refused at org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.CompatibilitySuite.mainCompatibilitySuite.java)Exception in thread main java.lang.Exception Error lookup up server info java.net.ConnectException  Error opening socket to server localhost on port  with message  Connection refused             End serverVM._server..._clientVM._clientDBJCC                     Begin serverVM._server..._clientVM._clientDerby...org.apache.derby.client.am.DisconnectException java.security.PrivilegedActionException  Error opening socket to server localhost on port  with message  nullException in thread main java.lang.Exception Error lookup up server info java.security.PrivilegedActionException  Error opening socket to server localhost on port  with message  null             End serverVM._server..._clientVM._clientDerby...                     Begin serverVM._server..._clientVM._clientDerby...org.apache.derby.client.am.DisconnectException java.security.PrivilegedActionException  Error opening socket to server localhost on port  with message  nullException in thread main java.lang.Exception Error lookup up server info java.security.PrivilegedActionException  Error opening socket to server localhost on port  with message  null             End serverVM._server..._clientVM._clientDerby...                     Begin serverVM._server..._clientVM._clientTrunkException in thread main java.lang.NoClassDefFoundError javaxcryptoIllegalBlockSizeException             End serverVM._server..._clientVM._clientTrunk                     Begin serverVM._server..._clientVM._clientDBJCCcom.ibm.db.jcc.c.SqlException java.net.ConnectException  Error opening socket to server localhost on port  with message  Connection refused at org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.CompatibilitySuite.mainCompatibilitySuite.java)Exception in thread main java.lang.Exception Error lookup up server info java.net.ConnectException  Error opening socket to server localhost on port  with message  Connection refused             End serverVM._server..._clientVM._clientDBJCC    See e.g.httpwww.multinet.no~solbergpublicApacheDerbytestlogSunOS._ipcicompatibility_diff.txt inhttpwww.multinet.no~solbergpublicApacheDerbyLimitedtestSummary.htmlhttpwww.multinet.no~solbergpublicApacheDerbyJDKtestlogJDKJvm.SunOS._ipcicompatibility_diff.txt inhttpwww.multinet.no~solbergpublicApacheDerbyJDKLimitedtestSummarycurrent.htmlFirst occurence in svn     CET Changes in httpwww.multinet.no~solbergpublicApacheDerbyUpdateInfo.txt   
0;Truncation Error with Concat   ;Consider the tableCREATE TABLE CUSTOMER_TABLE  ID VARCHAR) PRIMARY KEY NOT NULL  NAMEZ VARCHAR)   COUNTRY VARCHAR) )SqlPreparedStatement ps  conn.prepateStatement SELECT * FROM CUSTOMER_TABLE WHERE NAMEZ  VARCHAR  CAST ? AS VARCHAR) ) || CAST ? AS VARCHAR) ) ) ) ps.setString  Alan E. ) ps.setString  Frechette) ps.executeQuery)ErrorA truncation error was encountered trying to shrink VARCHAR Alan E. Frechette to length .getErrorCode)getSQLState) Please note thatThe query executes ok against DB databaseThe query executes ok if the total length of both the parameters bound is less than . That is as follows Total length of parameters bound  lenAlan E. Fre)   ps.setString  Alan E. )  ps.setString  Fre) The error occurs both with embedded and network mode of derbyOmitting the casts as follows also gives the same error query SELECT * FROM CUSTOMER_TABLE WHERE NAMEZ  VARCHAR Frechette || ? ) error SQLState  A truncation error was encountered trying to shrink VARCHAR FrechetteAlan E.  to length Using parameter markers for both the variables without cast like as follows results in error query SELECT * FROM CUSTOMER_TABLE WHERE NAMEZ  ? || ? error SQLState X It is not allowed for both operands of || to be ? parameters.Using parameter markers for only one variables without cast like as follows results in error query SELECT * FROM CUSTOMER_TABLE WHERE NAMEZ  Frechette || ? errorSQLState  Comparisons between VARCHAR and LONG VARCHAR are not supported. It works to cast to VARCHAR)  but not VARCHAR) or larger. Regardless of length  if it fails  the magic number is always .   
0;With client PooledConnection.getConnection) does not reset holdability and isolation state properly   ;I found this issue when working on DERBY which was filed for the isolation not getting reset for XAConnections.I found that this was a generic issue for PooledConnections and also that holdability was also wrong.The fix proposed for DERBY should also fix this issue. That bug has the repro for the isolation state issueFor holdability  this code passes for embedded but fails for client  Test holdability  ConnectionPoolDataSource ds  TestUtil.getConnectionPoolDataSourcep  pc  ds.getPooledConnection  testPooledConnHoldabilityPooledConnection  pc  pc.close  ** @param string @param pc * private static void testPooledConnHoldabilityString string  PooledConnection pc  throws SQLException Unknown macro  System.out.printlnquot n**Test holdability state**quot   Connection conn  pc.getConnection  conn.setHoldabilityResultSet.CLOSE_CURSORS_AT_COMMIT   reset the connection and see if the holdability gets reset conn  pc.getConnection  int holdability  conn.getHoldability  if holdability  ResultSet.HOLD_CURSORS_OVER_COMMIT  System.out.printlnFAIL Holdability not reset on get Connection  } else  System.out.printlnPASS Holdability reset on getConnection  } conn.close  }   
0;Failures in sysinfo and sysinfo_withproperties induced by classpath wiring   ;If you wire your classpath together out of the compiled classtree and the checkedin jars  you get the following error in the sysinfo and sysinfo_withproperties tests. You dont see this error if you run against the built Derby jar filesdlt  Unable to analyze class path access denied java.util.PropertyPermission java.class.path read)dlt  Unable to analyze class path access denied java.util.PropertyPermission java.class.path read)dlt  Unable to analyze class path access denied java.util.PropertyPermission java.class.path read)Test Failed.   
0;derbynettestSecMec.java fails with Sun JDK .   ;derbynettestSecMec.java fails with Sun JDK .lt  SECMEC_EUSRIDPWDEXCEPTION testSecurityMechanism) Security exception encountered  see next exception for details.gt  SECMEC_EUSRIDPWDEXCEPTION testSecurityMechanism) Security exception encountered  see next exception for details. Caused by exception class java.security.NoSuchProviderException null... and so forth)Does not fail with .  so probably just a master update.   
0;Separate XAResource from EmbedXAConnection   ;jdbc. introduces two new methods in javax.sql.PooledConnection. Due to this a new implementation of PooledConnection and XAConnection for jdbc. is required. According to current hierarchy XAConnection extends from PooledConnection. Going by similar hierarchy for new classes PooledConnection will extend from PooledConnection and XAConnection will be extending from PooledConnection. This structure forces to replicate all the methods of XAConnection to be present in XAConnection too. In the current implementation EmbedXAConnection itself is XAResource. This will cause to replicate all the XAResource methods to be present in XAConnection. Separating these two implementation will save replication of lots of methods.See the comments on jira issue  for some more discussion about this issue.   
1;allow the encrypting of an existing unencrypted db and allow the reencrypting of an existing encrypted db   ;encrypted database to be reencrypted with a new password.Here are some ideas for an initial implementation.The easiest way to do this is to make sure we have exclusive access to thedata and that no log is required in the new copy of the db. I want to avoidthe log as it also is encrypted. Here is my VERY high level plan) Force exclusive access by putting all the work in the low level store  offline boot method. We will do redo recovery as usual  but at the end there will be an entry point to do the copyencrypt operation.copyencrypt process) The request to encryptreencrypt the db will be handled with a new set of url flags passed into store at boot time. The new flags will provide the same inputs as the current encrypt flags. So at high level the request will be connect db old_encrypt_url_flags  new_encrypt_url_flags. TODO  provide exact new flag syntax.) Open a transaction do all logged work to do the encryption. All logging will be done with existing encryption.) Copy and encrypt every db file in the database. The target files will be in the data directory. There will be a new suffix to track the new files  similar to the current process used for handling drop table in a transaction consistent manner without logging the entire table to the log. Entire encrypted destination file is guaranteed synced to disk before transaction commits. I dont think this part needs to be logged. Files will be read from the cache using existing mechanism and written directly into new encrypted files new encrypted data does not end up in the cache).) Switch encrypted files for old files. Do this under a new log operation so the process can be correctly rolled back if the encrypt db operation transaction fails. Rollback will do file at a time switches  no reading of encrypted data is necessary.) log a change encryption of db log record  but do not update system.properties with the change.) commit transaction.) update system.properties and sync changes.) TODO  need someway to handle crash between steps  and .) checkpoint all data  at this point guaranteed that there is no outstanding transaction  so after checkpoint is done there is no need for the log.ISSUESo there probably should be something that catches a request to encrypt to whatever db was already encrypted with.   
0;Helper methods in BaseJDBCTestCase for creating data sources   ;BaseJDBCTestCase should be extended with methods that create DataSource  ConnectionPoolDataSource and XADataSource objects.   
0;PreparedStatement.executeUpdate throws a XJC exception in a global transaction if the statement is HOLD_CURSORS_OVER_COMMIT   ;SQLSTATEXJC) Cannot set holdability ResultSet.HOLD_CURSORS_OVER_COMMIT for a global transaction.Exception is thrown in client  in embedded the statement executes successfully.Since HOLD_CURSORS_OVER_COMMIT only applies to ResultSets and executeUpdate states it only succeeds if the statementdoes not generate ResultSets  then this combination should succeed.Probably related to the fact that in embedded an execute) call on the same PreparedStatement will thrown a XJC exceptionWorkaround is to prepare the statement explicitly with CLOSE_CURSORS_AT_COMMIT.   
1;NullPointerException in network server with LDAP authentication   ;While trying to fix DERBY I tried to set up Derbys network server to use LDAP authentication  but I ran into something that looks like a bug  but could just as well be my own configuration mistake. I would appreciate any help in figuring this out. )The problem is a NullPointerException in the Network Server when it tries to initialize the LDAP authentication service. The attached derby.log shows the exception and its stacktrace. The attached derby.properties is what I put in the derby home directory.Im seeing this problem in the trunk as well as my own build of the . branch and the ... release build available from the Derby web site.  httpdb.apache.orgderbyreleasesrelease....cgi )The problem is cause by the setInitDirContextEnv method in JNDIAuthenticationSchemeBase receiving a null dbProps argument  which it obviously doesnt expect. Adding a check for a null dbProps argument and returning immediately after creating the initDirContextEnv object fixes the NullPointerException and makes LDAP authentication work for me. This is a reasonable enough robustness fix and shouldnt have any negative impact  but if the source of the problem is that JNDIAuthenticationSchemeBase should never receive that null pointer in the first place  more patching is needed. Im not sure about this  so Im leaving it up to the experts to decide this. )   
0;defragment of inplace compress pass for described dataset is not freeing up empty pages.   ;For the following script defragment pass is not freeing up the free pagesdrop table t create table t i integer primary key  j integer  c char)) insert into t values     a) insert into t select t.i    t.j    t.c from t) insert into t select t.i    t.j    t.c from t) insert into t select t.i    t.j    t.c from t) insert into t select t.i    t.j    t.c from t) insert into t select t.i    t.j    t.c from t) insert into t select t.i    t.j    t.c from t) insert into t select t.i    t.j    t.c from t) insert into t select t.i    t.j    t.c from t) insert into t select t.i    t.j    t.c from t) insert into t select t.i    t.j    t.c from t) delete from t where i lt   select castconglomeratename as char)) as tabname  isindex  castnumallocatedpages as int) as alloc  numfreepages  castnumunfilledpages as int) as unfilled  pagesize  estimspacesavingfrom new org.apache.derby.diag.SpaceTableT) t order by conglomeratename CALL SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLEAPP  T      ) select castconglomeratename as char)) as tabname  isindex  castnumallocatedpages as int) as alloc  numfreepages  castnumunfilledpages as int) as unfilled  pagesize  estimspacesavingfrom new org.apache.derby.diag.SpaceTableT) t order by conglomeratename select castconglomeratename as char)) as tabname  isindex  castnumallocatedpages as int) as alloc  numfreepages  castnumunfilledpages as int) as unfilled  pagesize  estimspacesavingfrom new org.apache.derby.diag.SpaceTableT) t order by conglomeratename Here is example output from a run on the trunkijgt  drop table t  rows insertedupdateddeletedijgt  create table t i integer primary key  j integer  c char))  rows insertedupdateddeletedijgt  insert into t values     a)  row insertedupdateddeletedijgt  insert into t select t.i    t.j    t.c from t)  row insertedupdateddeletedijgt  insert into t select t.i    t.j    t.c from t)  rows insertedupdateddeletedijgt  insert into t select t.i    t.j    t.c from t)  rows insertedupdateddeletedijgt  insert into t select t.i    t.j    t.c from t)  rows insertedupdateddeletedijgt  insert into t select t.i    t.j    t.c from t)  rows insertedupdateddeletedijgt  insert into t select t.i    t.j    t.c from t)  rows insertedupdateddeletedijgt  insert into t select t.i    t.j    t.c from t)  rows insertedupdateddeletedijgt  insert into t select t.i    t.j    t.c from t)  rows insertedupdateddeletedijgt  insert into t select t.i    t.j    t.c from t)  rows insertedupdateddeletedijgt  insert into t select t.i    t.j    t.c from t)  rows insertedupdateddeletedijgt  delete from t where i lt    rows insertedupdateddeletedijgt  select castconglomeratename as char)) as tabname  isindex  castnumallocatedpages as int) as alloc  numfreepages  castnumunfilledpages as int) as unfilled  pagesize  estimspacesavingfrom new org.apache.derby.diag.SpaceTableT) t order by conglomeratename TABNAME |ISINDamp |ALLOC |NUMFREEPAGES |UNFILLED |PAGESIZE |ESTIMSPACESAVINGSQL| | | | | |T | | | | | | rows selectedijgt  CALL SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLEAPP  T      )  rows insertedupdateddeletedijgt  select castconglomeratename as char)) as tabname  isindex  castnumallocatedpages as int) as alloc  numfreepages  castnumunfilledpages as int) as unfilled  pagesize  estimspacesavingfrom new org.apache.derby.diag.SpaceTableT) t order by conglomeratename TABNAME |ISINDamp |ALLOC |NUMFREEPAGES |UNFILLED |PAGESIZE |ESTIMSPACESAVINGSQL| | | | | |T | | | | | | rows selectedijgt    
0;Network Server reports wrong product name when logging connections to derby.log   ;The Derby Network Server is symptomatic of dissociative identity disorder when derby.drda.logConnectionstrue. At startup and shutdown the network server correctly recognizes itself as Apache Derby. When logging connections  however  it thinks it is Cloudscape. See the following derby.log for an example derby.log START Apache Derby Network Server  ... alpha started and ready to accept connections on port  at  . GMTConnection number . . GMT Booting Derby version The Apache Software Foundation  Apache Derby  ... alpha   instance cdacebfcon database directory exporthometmptesttestDBDatabase Class Loader started  derby.database.classpath . GMT Thread DRDAConnThread_  main  DATABASE  testDB  DRDAID  }  Cloudscape Network Server connected to database testDB createtrue derby.log END To reproduce  do the following. Start the network server with the property derby.drda.logConnections set to true. An example followsbash.  java Dderby.drda.logConnectionstrue jar DERBY_CURRENT}derbyrun.jar NetworkServerControl startApache Derby Network Server  ... alpha started and ready to accept connections on port  at  . GMTConnection number .. Use the client driver to connect to the server. An example follows using IJbash.  java jar DERBY_CURRENT}derbyrun.jar ijij version .ijgt  connect jdbcderbylocalhosttestDB createtrue ijgt  exit    
0;Derby Server and Administration Guide  Servlet interface  Running page   ;In this page is written) You can use the running page to stop the server and turn logging and tracing on or off  boot or shut down databases.I installed the servlet in Tomcat  and I cant see any option to boot or shut down databases in this page.) Test the connection. If you choose this option  the Test connection page is displayed.)I also cant see any option to test connection in this page.) Stop the application server.The option is Press the button to stop the Network server  and not the application server.Im using Derby Information JRE  JDBC JSE ..  JDBC . orgapachederbyinfoDBMS.properties  ...  ) orgapachederbyinfonet.properties  ...  )I dont know if my servlets version is old  but those things are written in the manual for the version Im using.Im sending a diff file to adjust this page to what appears in the servlet Im using.   
0;ij should have a help option to print command line syntax   ;ij should accept a help option to print command line syntax for reference and friendliness.   
0;jdbcapicheckDataSource.java and jdbcapicheckDataSource.java hang intermittently with client   ;The tests checkDataSource.java and checkDataSource.java hang intermittently especially with jdk ..Attached is the test run output and traces when the server is started separately.) Enable checkDataSource.java by taking it out of functionTestssuitesDerbyNetClient.exclude.) Run the test with client.java Dij.exceptionTracetrue Dkeepfilestrue DframeworkDerbyNetClient org.apache.derbyTesting.functionTests.harness.RunTest jdbcapicheckDataSource.javaAttachements testfiles_after_hang.zip  Test directory. traces_on_hang.txt  Server side traces obtained by starting the server separately before running the test.I wish I had time to work on this right now as I would really like to see this valuable test in the suite  but hopefully someone else will pick it up.   
0;Remove the huge log files TesterN.out) left from running stressstress.multi   ;See httpwww.nabble.comderbyalltestusesEGbdiskspacewhenrunt.htmla I discovered that when I now run the derbyall test it uses ~Gb disk spaceI find  x  ....multiTester*.out files which each is ~Mb gt .Gb.)I will upload a patch which makes ijmtTester.java able to tell if the mtTester detected errors  which then is used by harnessMultiTest.java to decide if the .out file can be deleted.mtTester is currently only used by harnessMultiTest.java.   
0;LIKE does not match empty strings when used with a prepared statement   ;LIKE should give true for two length strings. See SQL  Ch. .General Rules )c)i)The query SELECT * FROM t WHERE v like appears to give me all rows where v is an emptystring  as expected.But a prepared statementSELECT * FROM t WHERE v like ?  with setString  )always returns an empty result set. See attached repro for the full example.   
0;Move isPoolable) and setPoolable) from PreparedStatement to Statement   ;An upcoming release of jdk. will move isPoolable) and setPoolable) from PreparedStatement to Statement. We should conform.   
0;Verify that applications cant manipulate the transaction state while inside a distributed transaction.   ;The next rev of the JDBC spec will clarify that applications may not call the following methods while inside distributed transactions setAutoCommit true )  commit)  rollback)  and setSavepoint). We should verify that we conform.   
0;Assert failure in BasePage.shiftUp) when running storeonlineBackupTest.sql   ;I saw this error when I ran derbyall.                 Diff file derbyallstoreallstoremoreonlineBackupTest.diff             Start onlineBackupTest jdk.._ storeallstoremore   *** dellt  ijCONNECTION)gt  select * from ctest  dellt  ID |NAME  dellt   dellt   |derby backupcompress test amp  dellt   |derby backupcompress test amp  dellt   |derby backupcompress test amp  dellt   |derby backupcompress test amp  dellt   |derby backupcompress test amp  dellt   |derby backupcompress test amp  dellt   |derby backupcompress test amp  dellt  ijCONNECTION)gt  insert into ctest values  restore was successfil)   dellt   row insertedupdateddeleted dellt  ijCONNECTION)gt   addgt  org.apache.derby.shared.common.sanity.AssertFailure ASSERT FAILED shiftUp failed  low must be between  and recordCount. low    recordCount  gt  ERROR XJ Failed to start database wombat  see the next exception for details.gt  ERROR XJ Java exception ASSERT FAILED shiftUp failed  low must be between  and recordCount. low    recordCount   org.apache.derby.shared.common.sanity.AssertFailure.gt  ijgt  select * from ctest gt  IJ ERROR Unable to establish connectiongt  ijgt  insert into ctest values  restore was successfil)  gt  IJ ERROR Unable to establish connectiongt  ijgt  Test Failed. End onlineBackupTest jdk.._ storeallstoremore   ***    The test usually succeeds  but I managed to reproduce the failure by running this loop in the shelltouch onlineBackupTest.passwhile [ f onlineBackupTest.pass ]  do rm onlineBackupTest.pass java org.apache.derbyTesting.functionTests.harness.RunTest storeonlineBackupTest.sqldone   
0;Old clients with new server return wrong database metadata values for some methods   ;With an old client ..  .. accessing a new . server some metadata calls will return the wrong value for both the JCC andthe Derby clients deletesAreDetectedTYPE_SCROLL_INSENSITIVE gt  true updatedAreDetectedTYPE_SCROLL_INSENSITIVE gt  true ownDeletesAreVisibleTYPE_SCROLL_INSENSITIVE gt  true ownUpdatesAreVisibleTYPE_SCROLL_INSENSITIVE gt  trueThis happens because these values were changed for the . withthe addition of updatable scrollable insensitive result sets DERBY combined with a weakness in the way the client and the server cooperates to answer these metadata calls.Presently  when the client application invokes these methods  theresults will be returned by the server without regard to the identityof the client  i.e. the tuple JCC or Derby client  client version}.The values to be returned for the methods in question are based solelyon the values found in the file metadata_net.properties  which is partof the server.In general  some database metadata is dependent on the combination ofthe capabilities in the client and the server and the returned valuesshould reflect this  which in general implies negotiating down tovalues which are correct for the actual combination of client andserver.   
0;XAConnection uses NetConnection as underlying physical connection for JDBCJava .   ;When running under DerbyNetClient using Derby network server) using Java .  XAConnection.getConnection) returns a NetConnection instance instead of NetConnection instance for the underlying physical connection. This causes AbstractMethod errors for calls in LogicalConnection not yet committed). PooledConnection does the correct thing according to the test that revealed this problem.The XAConnection was obtained by using TestUtil.getXADataSource).getXAConnection). The underlying connection object was then obtained with XAConnection.getConnection).A new ConnectionTest is on the way as part of DERBY. It will be submittedcommitted  but not enabled until this bug is fixed.   
0;Implement new JDBC methods for creating empty LOBs in the embedded client   ;Implement Connection.createClob) and Connection.createBlob). Right now these methods are implemented in the network client but not the embedded client.   
0;Client Attempted deleteRow or updateRow while on insert row gives wrong error message   ;This fragment from deleteRowX shows the problemgt  if isOnInsertRow_ gt  throw new SqlExceptionagent_.logWriter_  gt  new MessageIdSQLState.CURSOR_NOT_POSITIONED_ON_INSERT_ROW gt  }It should be the opposite the problem is that the cursor is on theinsert row  not that it isnt.These is a similar error in updateRowX.The client master files for updatableResultSet show the problem  sothe masters are wrong  too.gt  Negative Test .a  run updateRow on insertRowgt  SQL State XJgt  Got expected exception This method cannot be invoked while the cursor is not on the insert row or if the concurrency of this  ResultSet object is CONCUR_READ_ONLY.   
0;Network Server does not shutdown the databases it has booted when started and shutdown from the command line   ;If network server is started and shutdown from the comand line t does not shutdown the database. This can is evidenced by the fact that the db.lck file remains after the following steps.java org.apache.derby.drda.NetworkServerControl start amp lt some database accessgt java org.apache.derby.drda.NetworkServerControl shutdown There is much discussion about the correct behavior of NetworkServer in this regard related to embedded server scenarios in DERBY  but it seems clear in this case the databases should be shutdown.   
0;Calling ResultSet.isLast) on a scrollable insensitive resultset  causes the entire ResultSet to be populated   ;The following is not a bug  however some applications do not always need to scroll to the last row  however they do want to check isLast). Therefore it is unfortunate that isLast) is expensive. The general logic in ScrollInsensitiveResultSet is to populate rows by demand.The current logic in ScrollInsensitiveResultSet to return true or false on isLast)  is to move to the last row. If the last row is not the same row number as the current  then isLast) returns false. When moving to the last row  all rows will be populated into the BackingStoreHashtable of the ScrollInsensitiveResultSet.This logic may be rewritten to only move to the next row. If the next row exists  isLast) may return false.note the logic is also optimized to use beforeFirst and afterLast flags)   
0;Resolve test failures with JCC.   ;The following tests fail when run with JCC . driverderbynetmatsderbynetmats.failjdbcapiresultset.javaderbynetmatsderbynetmats.failjdbcapiLOBTest.javaderbynetmatsderbynetmats.failjdbcapiparameterMapping.javaderbynetmatsderbynetmats.failderbynettestSecMec.java fails with Sun JDKs only)   
0;Tests jdbcapiHoldabilityTest.junit  jdbcapiUpdateXXXTest.junit jdbcapiSURTest.junit fail on wctme._foundation   ; regression test run of derbyall shows the following test failure with wctme._foundation  derbyallderbyall.failjdbcapiHoldabilityTest.junitderbyallderbyall.failjdbcapiUpdateXXXTest.junitderbyallderbyall.failjdbcapiSURTest.junitDiff is a CNFE with ConnectionPoolDataSource.                 Diff file derbyalljdbcapiHoldabilityTest.diff             Start HoldabilityTest jdkJME Foundation Specification v. derbyalljdbcapi   *** addgt  Exception in thread main java.lang.NoClassDefFoundError javax.sql.ConnectionPoolDataSourceTest Failed. End HoldabilityTest jdkJME Foundation Specification v. derbyalljdbcapi   ***    My guess is these tests need to excluded from running in this environment. Can someone please confirm. Thanks.   
0;SUR Use DRDAs extended diagnostic to send ROW_UPDATED and ROW_DELETED warnings.   ;Detectability of own changes is implemented in the client using warnings cf the writeup for DERBY. When a row has been deleted andor updated  a warning will be sent to the client to indicate that fact. Presently  only one warning can be sent each time a data row is sent from to the client  that means that some warnings may be lost. Using extended diagnostic allows us to send several warnings for each data row.I propose to use extended diagnostics to send ROW_UPDATED and ROW_DELETED warnings when necessary. This may later be extended for other warnings  but I do not plan to do it as a part of the work in this issue.   
0;Differences between client and embedded when invoking stored procedures using Statement.executeUpdate)   ;When invoking a stored procedure using Statement.executeUpdate)  theclient driver and the embedded driver behave differently.If the stored procedure does not return any result set  the embeddeddriver returns   whereas the client returns .If the stored procedure returns one or more result sets  the embeddeddriver returns   whereas the client fails with an exception.   
0;Test langprocedure.java fails with ibm. jvm   ;langprocedure.java fails on IBM. jvm on linux machine. I spoke to Manjula who filed DERBY that this is related to that issue and is a JVM bug. The JVM team has been notified. Please note I have marked this as a Regression Test Failure although this test has not passed with IBM . JVM atleast in our nightly regression test runs  so it is not a regression of the product. diff                 Diff file derbyallderbylangprocedure.diff             Start procedure jdk.. derbyallderbylang   *** dellt  testImplicitClose) PASSED addgt  testImplicitClose) FAILED no exception thrown)Test Failed. End procedure jdk.. derbyallderbylang   ***    here is machine info. Java Information Java Version ..Java Vendor IBM CorporationJava home localcloudtstdevsrcibmjreJava classpath localcloudtstdevsrcjarsinsanederby.jarlocalcloudtstdevsrcjarsinsanederbytools.jarlocalcloudtstdevsrcjarsinsanederbynet.jarlocalcloudtstdevsrcjarsinsanederbyclient.jarlocalcloudtstdevsrcjarsinsanederbyTesting.jarlocalcloudtstdevsrcjccdbjcc.jarlocalcloudtstdevsrcjccdbjcc_license_c.jarlocalcloudtstdevsrcjarsinsanederbyTesting.jarlocalcloudtstdevsrctoolsjavajakartaoro...jarlocalcloudtstdevsrctoolsjavajunit.jarlocalcloudtstdevsrcjarsinsanederbyLocale_de_DE.jarlocalcloudtstdevsrcjarsinsanederbyLocale_es.jarlocalcloudtstdevsrcjarsinsanederbyLocale_fr.jarlocalcloudtstdevsrcjarsinsanederbyLocale_it.jarlocalcloudtstdevsrcjarsinsanederbyLocale_ja_JP.jarlocalcloudtstdevsrcjarsinsanederbyLocale_ko_KR.jarlocalcloudtstdevsrcjarsinsanederbyLocale_pt_BR.jarlocalcloudtstdevsrcjarsinsanederbyLocale_zh_CN.jarlocalcloudtstdevsrcjarsinsanederbyLocale_zh_TW.jarlocalcloudtstdevsrcjarsinsanederbyrun.jarOS name LinuxOS architecture xOS version ...bigsmpJava user name cloudtstJava user home ucloudtstJava user dir localcloudtstdevsrcNightlyBuildResults.ibm_derbyalljava.specification.name Java Platform API Specificationjava.specification.version . Derby Information JRE  JDBC JSE .  JDBC . localcloudtstdevsrcjarsinsanederby.jar  ... alpha  ) localcloudtstdevsrcjarsinsanederbytools.jar  ... alpha  ) localcloudtstdevsrcjarsinsanederbynet.jar  ... alpha  ) localcloudtstdevsrcjarsinsanederbyclient.jar  ... alpha  ) localcloudtstdevsrcjccdbjcc.jar  .  ) localcloudtstdevsrcjccdbjcc_license_c.jar  .  )   
0;Missing resets of isOnInsertRow state in net client when navigating away via other than ResultSetnext   ;Please see the enclosed repro program.When attempting the deleteRow  it will fail with SQL state  nocurrent row  since the first) call doesnt properly reset theIsOnInsertRow_ state. By inspection of ..amResultSet.java I foundthe other positioning calls beside next and moveToCurrentRow to sufferthe same problem.   
0;Need to remove old copyright notice   ;An IBM copyright is in these filesderbycodetrunktoolsjarcopyright.txtderbycodebranches.toolsjarcopyright.txtderbycodebranches.toolsjarcopyright.txtsvn log shows it was part of the original code contribution   I think this was just missed in the copyright cleanup.There also exists reference to CPL injavadrdaorgapachederbyimpldrdaEbcdicCcsidManager.java) httpwww.ibm.comdeveloperworksossCPLv..htmMore referencesjavaengineorgapachederbydatabaseDatabase.java) * lt Igt IBM Corp. reserves the right to change  rename  orjavaengineorgapachederbydatabaseUserUtility.java) IBM Corp. reserves the right javaengineorgapachederbyiapidbConnectionInfo.java) * lt igt IBM Corp. reserves the right to change  rename or remove this class orjavaengineorgapachederbyiapidbConsistencyChecker.java) * lt Igt IBM Corp. reserves the right to change  rename  orjavaengineorgapachederbyiapidbFactory.java) * lt Igt IBM Corp. reserves the right to change  rename  orjavaengineorgapachederbyiapidbPropertyInfo.java) * lt Igt IBM Corp. reserves the right to change  rename  orjavaengineorgapachederbyiapidbTriggerExecutionContext.java) * lt Igt IBM Corp. reserves the right to change  rename  orjavaengineorgapachederbyimplsqlcompileAggregateDefinition.java) * lt Igt  IBM Corp. reserves the right to change  rename  orjavaengineorgapachederbyvtiVTICosting.java) * lt Igt IBM Corp reserves the right to change  rename  orjavaengineorgapachederbyvtiVTIEnvironment.java) * lt Igt IBM Corp. reserves the right to change  rename  or   
0;Isolation level of local connection does not get reset after exiting a global transaction if the isolation level was changed using SQL   ;If we update the isolation level using SQL instead of JDBC and then joinresume a global transaction  on ending the transaction  the isolation level of the local connection is not restored. The problem seems to be in EmbedXAResource. So it happens with both embedded and client driver. Client driver internally uses SQL to set the transaction isolation. So the problem is more likely to be hit with the client. I will attach a repro and a draft patch with more details.   
0;Identity column can be  created with wrong and very large start with value with  JRE .. IBM Windows  build pwidev SR) with JIT on   ;Using the following JRE with JIT on an identity column may be created with a wrong and very large START WITH value. When the problem occurs it affects not only the table being created  but also other tables that were created in previous transactions.For example attempting to create  tables with identity columns the th table creation changes the start with value in sys.syscolumns to  for ALL  tables. Attempts to insert into any of the tables causeSQL Exception A truncation error was encountered trying to shrink ... to length . This program will create up to  tables until the problem occursNote The problem does not occur with Xnojit JIT OFF The problem  when it occurs  changes not only the table beingcreated but all previous tables created. See output below. Every thing was fine up until mytable and then all the tables got changed to start with   Problem occurs with autocommit onoff. The problem occurs after the create table but before thecommit. If the nonidentity columns are removed the problem does notreproduce.import java.sql.DatabaseMetaData import java.sql.ResultSet import java.sql.SQLException import java.sql.Statement import java.sql.DriverManager public class BadStartWith public static void main String args []throws Exception   testBadStartWith  } ** After some number of table creations with JIT turned on  the START WITH value for the table being created and all the ones already created gets mysteriously changed with pwidev SR  @throws Exception * public static void testBadStartWith throws Exception  Class.forNameorg.apache.derby.jdbc.EmbeddedDriver.newInstance  Connection conn  DriverManager.getConnectionjdbcderbywombat createtrue  conn.setAutoCommitfalse  Statement stmt  null  DatabaseMetaData md  conn.getMetaData   System.out.printlnmd.getDatabaseProductVersion  System.out.printlnmd.getDatabaseProductName  System.out.printlnmd.getDriverName  dropAllAppTablesconn  System.out.printlnCreate tables until we get a wrong Start with value  stmt  conn.createStatement   numBadStartWith will be changed if any columns get a bad start with value. int numBadStartWith     try   create  tables. Break out if we get a table that has a bad  start with value. for int i    i lt   amp amp  numBadStartWith    i  String tableName  APP.MYTABLE  i  String createTableSQL  CREATE TABLE   tableName   ROLEID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY START WITH   INCREMENT BY   INSTANCEID INTEGER  STATUS INTEGER  LOGICAL_STATE INTEGER  LSTATE_TSTAMP TIMESTAMP  UPDT_TSTAMP TIMESTAMP  TSTAMP TIMESTAMP  CLALEVEL_CLALEVEL_CLALEVELID VARCHAR  CLALEVEL_CLALEVEL_CLALEVEL_CLALEVELID VARCHAR  stmt.executeUpdatecreateTableSQL  System.out.printlncreateTableSQL  System.out.printlnCheck before commit  numBadStartWith  checkBadStartWithColsconn   conn.commit  System.out.printlnCheck after commit  numBadStartWith  checkBadStartWithColsconn   if numBadStartWith gt   break  } } catch SQLException se  se.printStackTrace  } if numBadStartWith   System.out.printlnPASS All  tables created without problems  stmt.close  conn.rollback  conn.close  }** Check that all tables in App do not have a an autoincrementstart value greater tan maxautoincrementstart @param conn @param maxautoincrementstart Maximum expected autoincrementstart value @return number of columns with bad autoincrementstart value * private static int checkBadStartWithColsConnection conn  int maxautoincrementstart throws Exception  Statement stmt  conn.createStatement  ResultSet rs stmt.executeQueryselect countautoincrementstart from sys.syscolumns c  sys.systables t  sys.sysschemas s WHERE t.schemaid  s.schemaid and s.schemaname  APP and autoincrementstart gt    maxautoincrementstart  rs.next  int numBadStartWith  rs.getInt  System.out.printlnnumBadStartWith   columns have bad START WITH VALUE  rs.close  if numBadStartWith gt    rs stmt.executeQueryselect tablename  columnname  autoincrementstart from sys.syscolumns c  sys.systables t  sys.sysschemas s WHERE t.schemaid  s.schemaid and s.schemaname  APP and autoincrementstart gt   ORDER BY tablename  while rs.next  System.out.printlnUnexpected start value   rs.getLong   on column   rs.getString    rs.getString    } } return numBadStartWith  } ** Drop all tables in schema APP @param conn @throws SQLException * private static void dropAllAppTablesConnection conn throws SQLException  Statement stmt  conn.createStatement  Statement stmt  conn.createStatement  System.out.printlnDrop all tables in APP schema  ResultSet rs  stmt.executeQuerySELECT tablename from sys.systables t  sys.sysschemas s where t.schemaid  s.schemaid and s.schemaname  APP  while rs.next  String tableName  rs.getString  try  stmt.executeUpdateDROP TABLE   tableName  } catch SQLException se  System.out.printlnError dropping table  tableName  se.printStackTrace  continue  } } }}Relevant outputjava BadStartWith... alphaApache DerbyApache Derby Embedded JDBC DriverDrop all tables in APP schemaCreate tables until we get a wrong Start with valueCREATE TABLE APP.MYTABLE ROLEID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY START WITH   INCREMENT BY   INSTANCEID INTEGER  STATUS INTEGER  LOGICAL_STATE INTEGER  LSTATE_TSTAMP TIMESTAMP  UPDT_TSTAMP TIMESTAMP  TSTAMP TIMESTAMP  CLALEVEL_CLALEVEL_CLALEVELID VARCHAR  CLALEVEL_CLALEVEL_CLALEVEL_CLALEVELID VARCHARCheck before commit columns have bad START WITH VALUECheck after commit columns have bad START WITH VALUE snip MYTABLE ... MYTABLE CREATE TABLE APP.MYTABLE ROLEID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY START WITH   INCREMENT BY   INSTANCEID INTEGER  STATUS INTEGER  LOGICAL_STATE INTEGER  LSTATE_TSTAMP TIMESTAMP UPDT_TSTAMP TIMESTAMP  TSTAMP TIMESTAMP  CLALEVEL_CLALEVEL_CLALEVELID VARCHAR  CLALEVEL_CLALEVEL_CLALEVEL_CLALEVELID VARCHARCheck before commit columns have bad START WITH VALUECheck after commit columns have bad START WITH VALUECREATE TABLE APP.MYTABLE ROLEID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY START WITH   INCREMENT BY   INSTANCEID INTEGER  STATUS INTEGER  LOGICAL_STATE INTEGER  LSTATE_TSTAMP TIMESTAMP UPDT_TSTAMP TIMESTAMP  TSTAMP TIMESTAMP  CLALEVEL_CLALEVEL_CLALEVELID VARCHAR  CLALEVEL_CLALEVEL_CLALEVEL_CLALEVELID VARCHARCheck before commit columns have bad START WITH VALUEUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEIDUnexpected start value  on column MYTABLEROLEID snip the rest of the tables have unexpected START WITH value too    
0;messages_pt_BR.properties file  should not translate Network Server start and shutdown commands   ;In the current file messages_pt_BR.properties the commands start and shutdown are translated  but once they are commands they should not be translated. Also the word host wasnt translated  and it appears in many lines. Others modifications were done for compatibility with the translated manuals.   
0;langforupdate.sql fails with derbyclient in the . branch   ;Derby . branch  ...  )     Start forupdate jdk.._ DerbyNetClient derbynetmatsderbynetmats   *** dellt  SQL_CURLHCagt  SQL_CURLHC dellt  SQL_CURLHCagt  SQL_CURLHCTest Failed. End forupdate jdk.._ DerbyNetClient derbynetmatsderbynetmats   ***   
0;ClientDriver ResultSetMetaData.isAutoIncrementcolumn) always returns false   ;With ClientDriver  resultSet.getMetaData.isAutoIncrementcolumn always returns false. EmbeddedDriver correctly returns the true value true or falseThe following code demonstrates the problemimport java.sql.Connection import java.sql.DriverManager import java.sql.ResultSet import java.sql.ResultSetMetaData import java.sql.SQLException import java.sql.Statement import org.apache.derby.jdbc.ClientDriver import org.apache.derby.jdbc.EmbeddedDriver public class TestAutoIncrement  private static final String URL_EMBEDDED  jdbcderbyEmbeddedTestBase   private static final String URL_CLIENT  jdbcderbylocalhostClientTestBase   public TestAutoIncrement  super  } public static void mainString[] args throws SQLException  System.out.printlnnew ClientDriver.getClass.getName   registered  System.out.printlnnew EmbeddedDriver.getClass.getName   registered  new TestAutoIncrement.test  } private void test throws SQLException  if testURL_EMBEDDED  testURL_CLIENT  System.out.printlnEmbedded and client driver behave differently for isAutoIncrement.  } else  System.out.printlnEmbedded and client driver behave the same for isAutoIncrement.  } } private boolean testString url throws SQLException  boolean ai  false  Connection connection  DriverManager.getConnectionurl  createtrue   Statement statement  connection.createStatement  statement .executeCREATE TABLE TEST_TABEL   ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY START WITH   INCREMENT BY    VALUE INTEGER NOT NULL  PRIMARY KEY ID  statement.executeINSERT INTO TEST_TABEL VALUE VALUES  ResultSet resultSet  statement .executeQuerySELECT * FROM TEST_TABEL  ResultSetMetaData meta  resultSet.getMetaData  ai  meta.isAutoIncrement  System.out.printlnFor   url     meta.getColumnName   isAutoIncrement   ai  connection.close  try  DriverManager.getConnectionurl  shutdowntrue   } catch SQLException e  System.out.printlne.getMessage  } return ai  }}The output I receive from the above program isorg.apache.derby.jdbc.ClientDriver registeredorg.apache.derby.jdbc.EmbeddedDriver registeredFor jdbcderbyEmbeddedTestBase  ID isAutoIncrement trueDatabase EmbeddedTestBase shutdown.For jdbcderbylocalhostClientTestBase  ID isAutoIncrement falseDERBY SQL error SQLCODE   SQLSTATE   SQLERRMC Database ClientTestBase shutdown.Embedded and client driver behave differently for isAutoIncrement.Ouput from sysinfo Java Information Java Version .._Java Vendor Sun Microsystems Inc.Java home CProgram FilesJavajre.._Java classpath . CPROGRA~JMF~.Elibsound.jar CPROGRA~JMF~.Elibjmf.jar CPROGRA~JMF~.Elib CWINDOWSjavaclasses CWorkSpacePB .bin CWorkSpaceFilipebin CDocuments and SettingsPietMy DocumentsResourcesJarsImgrRdr.jar CDocuments and SettingsPietMy DocumentsResourcesJarslucene...jar CDocuments and SettingsPietMy DocumentsResourcesJarsMultivalent.jar CWorkspaceStickbin OS name Windows XPOS architecture xOS version .Java user name PietJava user home CDocuments and SettingsPietJava user dir CStickFolderjava.specification.name Java Platform API Specificationjava.specification.version . Derby Information JRE  JDBC JSE .  JDBC . orgapachederbyinfoDBMS.properties  ...   orgapachederbyinfotools.properties  ...   orgapachederbyinfonet.properties  ...   orgapachederbyinfodnc.properties  ...   Locale Information Current Locale  [NederlandsNederland  nl_NL ]Found support for locale  de_DE  version ...  Found support for locale  es  version ...  Found support for locale  fr  version ...  Found support for locale  it  version ...  Found support for locale  ja_JP  version ...  Found support for locale  ko_KR  version ...  Found support for locale  pt_BR  version ...  Found support for locale  zh_CN  version ...  Found support for locale  zh_TW  version ...     
0;ClassPath manifest entry for derby.jar is missing from the ... snapshot   ;The class path manifest entry should include all the supported locales. It is missing from the snapshot.I see this entry when I build the jar files myself.ClassPath derbyLocale_de_DE.jar derbyLocale_es.jar derbyLocale_fr.ja r derbyLocale_it.jar derbyLocale_ja_JP.jar derbyLocale_ko_KR.jar derb yLocale_pt_BR.jar derbyLocale_zh_CN.jar derbyLocale_zh_TW.jar   
0;add  langgrantrevoke.java to derbynetclientmats   ;I noticed running lang.grantrevoke.java with client fails with gt  Unexpected exceptiongt   Connection authentication failure occurred. Reason userid or password invalid.gt  java.sql.SQLException Connection authentication failure occurred. Reason userid or password invalid.gt  Caused by org.apache.derby.client.am.SqlException Connection authentication failure occurred. Reason userid or password invalid.gt  ...  moregt  FAILED.  errorTest Failed.     End grantRevoke jdk.._ DerbyNetClient   ***    Perhaps just a test configuration problem of some sort  but It would be good to have client testing for grant revoke.   
0;File javaengineorgapachederbylocmessages_en.properties  Message XSLAT.D   ;The message XSLAT.D String LOG_SEGMENT_EXIST  XSLAT.D statesXSLAT.DLog directory } exists. Please make sure specified logDevice location is correct.But it seems by the source code that the problem is not that this directory exists  but the fact that it is not empty  make sure log directory is empty  in LogToFile.java. So it seems to me that the following message would be betterXSLAT.DLog directory } is not empty. Please make sure specified logDevice location is correct.   
0;Interface changes introduced in Mustang build    ;Build  of Mustang introduced changes to the Connection interface that were not compatible with the existing Derby implementions. createArray) was renamed createArrayOf) and setClientInfoProperties) now throws SQLClientInfoException rather than ClientInfoException). The result of this is that it is not possible to build Derby with build .   
0;Wrong results with query using LIKE and ESCAPE clause that includes     and _   ;After the fix for DERBY was checked in  Im noticing that the following query now returns different results. Prior to the fix for DERBY the query returned  rows  now it doesnt return any rows.create table escTable c char)) insert into escTable values _a) insert into escTable values _b) insert into escTable values c) insert into escTable values d) insert into escTable values _e) select c from escTable where c like    ESCAPE  Before DERBY  the SELECT returnedC_a_e rows selectedNow it returnsC rows selectedBrief inspection of the query and data suggest to me that these new results i.e. no rows) are wrong  and that Derby should in fact return  rows.Based on comments in DERBY  Im creating a new Jira issue for the regression since it has been checked into the . maintenance branch. Ive set the priority to Critical since this could potentially delay a .. releaseI.e. I dont think wed want to release .. knowing that we have a wrong results regression. But if anyone thinks thats not the correct priority  feel free to speak up.Other option  of course  is to back out the change for DERBY in . and then lower the priority accordingly. Inputfeedbackcomments would be appreciated.   
0;Message id J CONN_RESTORE_FROM) does not have a matching message text   ;This is used by engine.org.apache.derby.jdbc.Driver. Uncovered by the test inMessageBundleTest.jav   
0;Typo in link to Simple Example from frameworksreadme.html   ;There is a small typo in frameworksreadme.html.The link see the simple example links to  ..demoprogramssimpleexample.htmlbut it should link to  ..demosimpleexample.htmlbecause there is no programs folder in the demo subtree.Im attaching a patch for review.   
0;setEmbeddedCP.ksh and setNetworkCleitn.ksh does not work or gives wrong error message   ;setEmbeddedCP.ksh and setNetworkClient.ksh) gives the following message if neither DERBY_HOME nor DERBY_INSTALL is set echo DERBY_HOME or DERBY_INSTALL not set. Please set one of these variables echo to the location of your Derby installation.but the scripts do not work if only DERBY_HOME is set   
0;Using Djvmflags option causes NoClassDefFoundError   ;When starting tests with the Djvmflags option  the harness RunList class) places  around the argument to Djvmflags when executing the java launcher to start a new jvm. This is at least by suns java launcher) interpreted as a Class and not as a command line option  because of the . Because of this I get a NoClassDefFoundError.I believe this is a problem that happens only when using Suns java launcher.   
0;Add MessageBundleTest to build script to verify that there are no orphaned message ids   ;MessageBundleTest cant be run with the regular tests because it relies on SQLState.java and MessageId.java  which are not in the jar files. But it actually makes more sense to run it as part of the build  as we are verifying the consistency of code references.   
0;Network Server should flush the PrintWriter after console output   ;If Network Server is started with a PrintWriter specified for console output it will not automatically flush output such as starting the server. This can be confusing as the console output shows no activity.Users currently need to specify the PrintWriter to autoflush e.g. starterWriter  new PrintWriternew FileOutputStreamnew FileSERVER_START_LOG)) true)  derbyServer  new NetworkServerControl)  derbyServer.startstarterWriter)  For repro seehttpwww.nabble.comQuestionsaboutNetworkServerAPIBehaviorp.htmlAnd change the following line in the program to not autoflush as followsstarterWriter  new PrintWriternew FileOutputStreamnew FileSERVER_START_LOG)) false)    
0;Correct instructions in demo html file demosimpleexample.html   ;In file demosimpleexample.html  under section Next run the SimpleApp demo in Derby client mode  step java org.apache.derby.tools.sysinfo cp client SimpleApp.class gives the following errorException in thread main java.lang.NoClassDefFoundError orgapachederbytoolssysinfoThe above error is given because step  instructs to set path as followingexport CLASSPATH.DERBY_INSTALL}libderbyclient.jarNow as neither derby.jar or derbytool.jar is been added to the above classpath  sysinfo file not found.Step  should instruct to set up path as followingexport CLASSPATH.DERBY_INSTALL}libderbyclient.jarDERBY_INSTALL}libderby.jar   
0;Provide ALTER TABLE DROP COLUMN functionality   ;Provide a way to drop a column from an existing table. Possible syntax would be ALTER TABLE tablename DROP COLUMN columnname CASCADE  RESTRICT Feature should properly handle columns which are used in constraints  views  triggers  indexes  etc.   
0;EmbeddedDriver does not implement PreparedStatement.setNullint  int  String)   ;The embedded driver throws Util.notImplemented) when PreparedStatement.setNullint  int  String) is called. The javadoc says that  if  the parameter does not have a userdefined or REF type  the given typeName is ignored. The client driver correctly ignores typeName and forwards the call to setNullint  int). Embedded should be changed to match the client.   
1;testSecMec needs many masters  should convert to junit   ;derbynettestSecMec.java fails with jcc. with  vms. I have checked the diff and it is a master update with difference in the exception  message string.diff snippet dellt  T jdbcderbynetxxxFILTERED_HOSTNAMExxxxxxFILTEREDPORTxxxwombatuserneelima passwordlee securityMechanism   EXCEPTION java.security.InvalidAlgorithmParameterException is caught when initializing EncryptionManager Prime size must be multiple of   and can only range from  to  inclusive)agt  T jdbcderbynetxxxFILTERED_HOSTNAMExxxxxxFILTEREDPORTxxxwombatuserneelima passwordlee securityMechanism   EXCEPTION java.security.NoSuchAlgorithmException is caught when initializing EncryptionManager DH KeyPairGenerator not available delThere is difference in the exception message and will require lot of jvm specific master files which can become difficult to maintain. Myrna suggested that this might be a good test to convert to junit.   
0;test run exits for _foundation run because unloadEmbeddedDriver uses driverManager  which isnt available.   ;The wctme._foundation runs have been exiting out for a while. We only run this environment weekly and were under the impression there was a time out. But I ran the suite  capturing the output in a file  and the last part of the run shows the problem is with unloadEmbeddedDriverNow do RunListException in thread main java.lang.NoClassDefFoundError java.sql.DriverManager at org.apache.derbyTesting.functionTests.harness.RunList.unloadEmbeddedDriverRunList.java) at org.apache.derbyTesting.functionTests.harness.RunList.runSuitesRunList.java) at org.apache.derbyTesting.functionTests.harness.RunList.lt initgt RunList.java) at org.apache.derbyTesting.functionTests.harness.RunSuite.getSuitesListRunSuite.java) at org.apache.derbyTesting.functionTests.harness.RunSuite.mainRunSuite.java)UnloadEmbeddedDriver was put in to allow running with useprocessfalse and autoload of the driver  so its needed. But maybe we can add an appropriate if condition so it doesnt try to do this with foundation.   
0;SQLBinary.readFromStream can enter endless loop   ;Under certain circumstances  the method SQLBinary.readFromStream can enter an endless loop while reading the stream. The following must be true for the bug to occur  There must be more data in the stream than what can fit into the initial buffer  K). The method available of the stream returns .Since the default return value for InputStream.available is   and the method reading the stream can be used for data types CHAR FOR BIT DATA  VARCHAR FOR BIT DATA and LONG VARCHAR FOR BIT DATA  the bug should be fixed. The maximum length is  bytes.The method will also be used by SQLBlob  but it may be better to introduce a new streaming method for it  since the current implementation has memoryproblems for large data materializes the whole stream). A separate issue shouldwill be created for this.The symptom for this bug is a hang when calling one of the execute methods of Prepared or CallableStatement and maybe also certain set methods in ResultSet.The visibility of this bug is very low  but the impact is severecritical. When the JDBC  length less streaming overloads are added DERBY)  visibility might increase.   
1;Upgrade test needs to be enhanced to test grant revoke   ;Grant Revoke is one of the features targeted for . Release. The upgrade test should be modified to test this feature with various upgrade scenarios to make sure everything works fine.   
0;Factor out type checks in EmbedResultSet and EmbedPreparedStatement   ;EmbedPreparedStatement and EmbedResultSet have many occurrences of switch ...  case Types.CHAR case Types.VARCHAR case Types.LONGVARCHAR case Types.CLOB break  default throw dataTypeConversion...  }and switch ...  case Types.BINARY case Types.VARBINARY case Types.LONGVARBINARY case Types.BLOB break  default throw dataTypeConversion...  }Instead of having many copies of this code  it would be good to factorit out into methods that can be shared. For instance  one could addthese methods to DataTypeDescriptor public static boolean isAsciiStreamCompatibleint jdbcType public static boolean isBinaryStreamCompatibleint jdbcType public static boolean isCharacterStreamCompatibleint jdbcType   
0;The Eclipse plugin distributions UI and Core zip files) do not contain the Apache license  copyright or notice files   ;The Apache Derby Core and Apache Derby UI plugins do not contain the appropriate Apache Software Foundation license files in their zip distributions  derby_core_plugin_...zip  derby_ui_plugin_...zip.Im not sure exactly which files are required  LICENSE  COPYRIGHT and NOTICE  but the zip filesshould contain some or all of these files.   
1;Unexpected behavior on self privilege revocation   ;When revoking the owners own privilege against the table he have created  Derby executes the revocation successfullybut the owner is able to select from the table later as if though the REVOKE statement has no effect. More importantly  I was expecting a SQLException with the appropriate SQLSTATE to be thrown when the owner attempts to revoke privilege from himself. i.e.ijgt  connect jdbcderbyauthtest user yip as conn ijgt  create table t c int)  rows insertedupdateddeletedijgt  insert into t values     rows insertedupdateddeletedijgt  revoke select on t from yip  rows insertedupdateddeletedijgt  select * from t C rows selectedHere is the sysinfo Java Information Java Version .._Java Vendor Sun Microsystems Inc.Java home CjdkjreJava classpath derby.jar derbytools.jar .OS name Windows XPOS architecture xOS version .Java user name yipJava user home CDocuments and SettingsAdministratorJava user dir Cderbytrunkjarssanejava.specification.name Java Platform API Specificationjava.specification.version . Derby Information JRE  JDBC JSE ..  JDBC . Cderbytrunkjarssanederby.jar  ... alpha  ) Cderbytrunkjarssanederbytools.jar  ... alpha  ) Locale Information Current Locale  [EnglishUnited States  en_US ]Found support for locale  de_DE  version ... alpha  )Found support for locale  es  version ... alpha  )Found support for locale  fr  version ... alpha  )Found support for locale  it  version ... alpha  )Found support for locale  ja_JP  version ... alpha  )Found support for locale  ko_KR  version ... alpha  )Found support for locale  pt_BR  version ... alpha  )Found support for locale  zh_CN  version ... alpha  )Found support for locale  zh_TW  version ... alpha  )   
1;A  trigger should be dropped when a privilege required by the trigger is revoked.   ;A trigger tracks its privileges requirements using Derbys Dependency Manager. If any one of those required privileges are revoked  the trigger should be dropped automatically. I am just creating a new jira entry here so it is easier to track sub items of DERBY. Will link this Jira entry to DERBY.See the functional spec attached to DERBY   
1;Make test jdbcTestPreparedStatement run under the security manager   ;See trunkjavatestingorgapachederbyTestingfunctionTeststestsjdbcTestPreparedStatement_app.properties which says test fails trying to read blob content filesOther tests succesfully read files so it must be possible to enable this test under the security manager.Maybe the files need to be marked as support files and copied into the extinextoutextinout foldersto use the existing permissions in the test policy files.   
1;derbynettestProtocol.java fails with security manager enabled   ;The tinderbox test started failing after revision  which enabled security manager for derbynettestProtocol.java. See httpwww.multinet.no~solbergpublicApacheTinderBox_DerbytestlogSunOS._ipciderbyall_diff.txtException in thread main java.security.AccessControlException access denied java.net.SocketPermission ... connect resolve) at java.security.AccessControlContext.checkPermissionAccessControlContext.java) at java.security.AccessController.checkPermissionAccessController.java) at java.lang.SecurityManager.checkPermissionSecurityManager.java) at java.lang.SecurityManager.checkConnectSecurityManager.java) at java.net.Socket.connectSocket.java) at java.net.Socket.connectSocket.java) at java.net.Socket.lt initgt Socket.java) at java.net.Socket.lt initgt Socket.java) at org.apache.derby.impl.drda.TestProto.getConnectionUnknown Source) at org.apache.derby.impl.drda.TestProto.lt initgt Unknown Source) at org.apache.derbyTesting.functionTests.tests.derbynet.testProtocol.executeFileUnknown Source) at org.apache.derbyTesting.functionTests.tests.derbynet.testProtocol.mainUnknown Source)   
0;Derby JDBC . driver returns  for JDBC driver major version   ;For . the DatabaseMetaData.getJDBCMajorVersion is returning  for the Derby JDBC . driver. It should return . This is easily reproduced by running a simple test to obtain a connection and output the value Database product Apache DerbyDatabase version ... alphaDriver name Apache Derby Embedded JDBC DriverDriver version ... alphaJDBC driver major version JDBC driver minor version Test codeorg.apache.derby.jdbc.EmbeddedConnectionPoolDataSource ds  new org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource ds.setDatabaseNameCdriversderbydatabasesJDBCDB  ds.setUserdbuser  ds.setPassworddbpwd  PooledConnection pooledConn  ds.getPooledConnection  Connection conn  pooledConn.getConnection  System.out.printlnDatabase product   conn.getMetaData.getDatabaseProductName  System.out.printlnDatabase version   conn.getMetaData.getDatabaseProductVersion  System.out.printlnDriver name   conn.getMetaData.getDriverName  System.out.printlnDriver version   conn.getMetaData.getDriverVersion  System.out.printlnJDBC driver major version   conn.getMetaData.getJDBCMajorVersion  System.out.printlnJDBC driver minor version   conn.getMetaData.getJDBCMinorVersion Relevant Derby Embedded code in EmbedDatabaseMetaData is JDBC . * Retrieves the major JDBC version number for this driver. * @return JDBC version major number * public int getJDBCMajorVersion  return   }and client code in org.apache.derby.client.am.DatabaseMetaDatapublic int getJDBCMajorVersion throws SQLException  checkForClosedConnection  return   }I am not sure if this should be JVM dependent or if it should always return  regardless of the JVM version.   
0;enable more testcases in ConcurrencyTest   ;A number of testcases  which depend on SUR  are not enabled in the ConcurrencyTest.These testcases can be enabled. The test should also set some properties to reduce lock timeout  so that it runs faster.   
0;NullPointerException in UPDATE with COALESCE and subquery   ;The following statements generate a NullPointerExceptionCREATE TABLE t i INTEGER) CREATE TABLE t i INTEGER) UPDATE t SET i  COALESCE SELECT i FROM t WHERE t.it.i)  ) Any further SQL statements generate an internal error in RawStore  e.g.SELECT * FROM t    
0;Link Getting Started.... and Apache Derby Server .... in demo.html needs to be linked to actual documents instead of manuals page   ;The links Getting Started with Apache Derby and Apache Derby Server and Administration Guide in file httpssvn.apache.orgreposasfdbderbycodetrunkjavademodemo.html needs to be linked to actual documents as followingGetting Started with Apache Derby to httpdb.apache.orgderbydocsdevgetstartgetstartderby.pdfApache Derby Server and Administration Guide to httpdb.apache.orgderbydocsdevadminguidederbyadmin.pdf Right now the links are linked to httpdb.apache.orgderbymanualsindex.htmlAlso  once the dev release is committed for example committed to .)  the links needs to be changed so that dev is replaced with actual release number.   
0;Network server fails with DRDAProtocolException if a BLOB with size  is streamed from client   ;When executing a program which inserts a BLOB of size GB  the Network server fails with DRDAProtocolException. This happens before it starts handling the actual LOB datajava org.apache.derby.drda.NetworkServerControl startApache Derby Network Server  ... alpha started and ready to accept connections on port  at  . GMTExecution failed because of a Distributed Protocol Error DRDA_Proto_SYNTAXRM  CODPNT arg    Error Code Value  corg.apache.derby.impl.drda.DRDAProtocolException at org.apache.derby.impl.drda.DRDAConnThread.throwSyntaxrmDRDAConnThread.java) at org.apache.derby.impl.drda.DDMReader.readLengthAndCodePointDDMReader.java) at org.apache.derby.impl.drda.DDMReader.getCodePointDDMReader.java) at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA_workDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTADRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjectsDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.processCommandsDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.runDRDAConnThread.java)nullorg.apache.derby.impl.drda.DRDAProtocolException at org.apache.derby.impl.drda.DRDAConnThread.throwSyntaxrmDRDAConnThread.java) at org.apache.derby.impl.drda.DDMReader.readLengthAndCodePointDDMReader.java) at org.apache.derby.impl.drda.DDMReader.getCodePointDDMReader.java) at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA_workDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTADRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjectsDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.processCommandsDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.runDRDAConnThread.java)   
0;Scripts in frameworks direcotry needs to be revisted to set up CLASSPATH properly   ;Need to revisit scripts in directory frameworksembeddedbin and frameworksNetworkServerbin for setting up CLASSPATH properly. The current problem is as followingIf user already has a CLASSPATH set on their system  the CLASSPATH is not set again within the script. Therefore  there are no derby classes in the CLASSPATH which results in java command failing as it can not find the derby class it is calling. Basically  to make the scripts work  user has to either issue command set CLASSPATH or have derby jar files be appended to their system CLASSPATH before running any frameworks batch script.In ksh scripts  there is same problem except that the user has to issue command export CLASSPATH or have derby jar files be appended to their system CLASSPATH only once as whatever CLASSPATH is set up by scripts is not visible once the script is done.So I am proposing the following solution so that frameworks scripts work properly without interfering with system classpath or without any setup from user.In batch scripts. Before line call DERBY_INSTALLframeworksembeddedbinsetEmbeddedCP.bat  save the current classpath as followsset SAVED_CLASSPATHCLASSPATH. Replace the following lines@if Unable to render embedded object File quot CLASSPATHquot  not found. call DERBY_INSTALLframeworksembeddedbinsetEmbeddedCP.bat@if CLASSPATH   call DERBY_INSTALLframeworksembeddedbinsetEmbeddedCP.batwithcall DERBY_INSTALLframeworksembeddedbinsetEmbeddedCP.batNote I have given the above as example only. The name of script that is getting called may be different.. At the end of script  reset the CLASSPATH to system CLASSPATH as followsset CLASSPATHSAVED_CLASSPATHIn korn scriptsIn ksh script  even though system classpath is only modified within the script and is not effective once script exits  to be consistent with batch scripts  do the following. Before line . DERBY_HOMEframeworksembeddedbinsetEmbeddedCP.ksh save the current classpath as followsexport SAVED_CLASSPATHCLASSPATH. Replace the following lines[ z CLASSPATH ] amp amp   . DERBY_HOMEframeworksembeddedbinsetEmbeddedCP.ksh}with. DERBY_HOMEframeworksembeddedbinsetEmbeddedCP.kshNote I have given the above as example only. The name of script that is getting called may be different.. At the end of script  reset the CLASSPATH to system CLASSPATH as followsexport CLASSPATHSAVED_CLASSPATH   
0;test harness evaluates j . jvm a.k.a wctme.) as isJDBC  does enthousiastic seding   ;The wctme. run shows failures like so     Start iepnegativetests jdk.. subset  . derbyallderbytools   *** dellt  ERROR  The exception java.sql.SQLException TableView IEP.NOTABLE does not exist. was thrown while evaluating an expression.agt  ERROR  The exception SQL Exception TableView IEP.NOTABLE does not exist. was thrown while evaluating an expression....    It seems to me this is because it evaluates the majorminor version .) as isJDBC in functionTestsharnessRunTest.java  JavaVersionHolder jvh  getPropertiessp)  boolean isJDBC  jvh.atLeast    ) and is gets passed on to Sed.java.The following tests fail with this jvm because of thislangcompressTable.sqllangnestedCommit.sqllangreleaseCompileLocks.sqltoolsiepnegativetests.sqltoolsimportExportThruIJ.sqltoolsieptests.sqljdbcapistatementJdbc.javainiepnegativetests_ES.sqlstorestreamingColumn.javastoreTransactionTable.sqllangprocedureInTrigger.sqlIt seems to me we need an if jvmName.startsWithj)) or some such around the isJDBC assignment.   
0;derbyrunjartest hangs with wctme.  always uses j_  hangs with _foundation   ;derbyrunjartest hangs with wctme..I am not sure what the hook up is but if I do thisj jclmax Xbootclasspathpcwctme.ivelibjclMaxclasses.zip cwctme.ivelibcharconv.zip cwctme.ivelibdatabase_enabler.jar jar cderbytsvntrunkjarssanederbyrun.jar ij helpI get successfullyUsage java org.apache.derby.tools.ij  p propertyfile  [ca connectionAttributePropertyFile]  inputfile Also  when looking at the code of this test  it forces the jvm class to be used to be j_ whenever the jvm as set in RunTest starts with J. However  wctme. is j_ and this also prevents running with foundation assuming thats supported).   
0;new j canons requiredcanons need to be removed to catch up to changes to .   ;There are some newer failures with wctme. amp  wsdd. that are just due to canon maintenance. langaggregate.sql  needs a new j_ and j_ canon langejbql.sql  j_ canon can be removed there is no j_ canon) langdistinct.sql  needs new j_ canon nistdml.sql  j_ canon can be removed langprocedureInTrigger.sql  needs a j_ canon note  this last test also suffers from DERBY.   
0;Test harness overrides heap size settings when starting Network Server   ;Test specific heap size settings can be passed to the test harness using the jvmflags system property  for example in a lt testnamegt _app.properties file or at the command line when starting a test  e.g DjvmflagsXmsm^Xmxm.The test harness almost always overrides such settings when starting a new Network Server using the org.apache.derbyTesting.functionTests.harness.NetServer class of the test harness. Currently  if either ms or Xms is missing from the jvmflags  NetServer.start) adds ms. Also  if either mx or Xmx is missing from the jvmflags  NetServer.start) adds ms. This has been the case since SVN revision  July   ).Earlier revisions did not override the heap settings unless the newer Xms or Xmx flags were used instead of the ms and mx flags. A patch for DERBY attempted among other things) to make the harness recognize the newer flags as well as the older flags  but the resulting behavior is most likely) not as intended. If a test is run in either the DerbyNet framework or the DerbyNetClient framework  the testspecific JVM flags should probably) be used for the Network Server JVM as well as the test JVM. Currently  even if nondefault heap size flags are passed to the harness  the server JVM will ignore these settings since the harness adds ms andor mx flags after all other heap flags. The exception is if both new and old versions of heap flags are passed to the harness  e.gjvmflagsmsm^Xmsm^mxm^XmxmHere is the code causing this behaviourif setJvmFlags amp amp  jvmflags.indexOfms)  ) || jvmflags.indexOfXms)  )))  only setMs if no starting memory was given jvm.setMs**)   msmif setJvmFlags amp amp  jvmflags.indexOfmx)  ) || jvmflags.indexOfXmx)  )))  only setMx if no max memory was given jvm.setMx**)   mxm   
0;Lots of jdk. regression test failures with diffs because of  SQL Exception instead of java.sql.SQLException   ;jdk derbyall derbyall  failures derbyallderbyall.faillangcompressTable.sql derbyallderbyall.faillangnestedCommit.sql derbyallderbyall.faillangoutparams.java derbyallderbyall.faillangprocedure.java derbyallderbyall.faillangprocedureInTrigger.sql derbyallderbyall.failtoolsimportExportThruIJ.sql derbyallderbyall.failtoolsieptests.sql derbyallderbyall.failtoolsiepnegativetests.sql derbyallderbyall.failjdbcapistatementJdbc.java derbyallderbyall.failjdbcapistatementJdbc.java derbyallderbyall.failjdbcapiparameterMapping.java derbyallderbyall.failiniepnegativetests_ES.sql derbyallderbynetclientmatsderbynetclientmats.failjdbcClosedObjectTest.junit derbyallderbynetclientmatsderbynetclientmats.failjdbcUnsupportedVetter.junit derbyallderbynetclientmatsderbynetclientmats.failjdbcVerifySignatures.junit derbyallencryptionAllencryption.failstressstress.multi derbyallencryptionAllstoremats.failstorestreamingColumn.java derbyallstoreallstoreall.failstoreTransactionTable.sql derbyallstoreallstoremats.failstorestreamingColumn.java   
0;Sysinfo in .  shows multiple entries if the derby jars reside in a directory with spaces in its name   ;For the Derby jars residing in CDocuments and SettingsAdministratorTEMP DIRlib  the sysinfo shows Derby Information JRE  JDBC JSE .  JDBC . CDocumentsandSettingsAdministratorTEMPDIRlibderby.jar  ... alpha  ) CDocumentsandSettingsAdministratorTEMPDIRlibderbytools.jar  ... alpha  ) CDocumentsandSettingsAdministratorTEMPDIRlibderbynet.jar  ... alpha  ) CDocumentsandSettingsAdministratorTEMPDIRlibderbyclient.jar  ... alpha  ) CDocuments and SettingsAdministratorTEMP DIRlibderby.jar  ... alpha  ) CDocuments and SettingsAdministratorTEMP DIRlibderbynet.jar  ... alpha  ) CDocuments and SettingsAdministratorTEMP DIRlibderbyclient.jar  ... alpha  ) CDocuments and SettingsAdministratorTEMP DIRlibderbytools.jar  ... alpha  ) CDocumentsandSettingsAdministratorTEMPDIRlibdbjcc.jar  .  ) CDocuments and SettingsAdministratorTEMP DIRlibdbjcc_license_c.jar  .  )This is a regression from . where the same sysinfo shows Derby Information JRE  JDBC JSE .  JDBC . CDocuments and SettingsAdministratorTEMP DIRlibderby.jar  ...  ) CDocuments and SettingsAdministratorTEMP DIRlibderbynet.jar  ...  ) CDocuments and SettingsAdministratorTEMP DIRlibderbyclient.jar  ...  ) CDocuments and SettingsAdministratorTEMP DIRlibderbytools.jar  ...  ) CDocuments and SettingsAdministratorTEMP DIRlibdbjcc.jar  .  ) CDocuments and SettingsAdministratorTEMP DIRlibdbjcc_license_c.jar  .  )   
0;Trigger action statement is not recompile when there is a change that would affect it.   ;A trigger action statement  such as an INSERT statement is not recompiled when there is some DDL change on the underlying table  such as a CREATE INDEX.In the example below a unique index is added to the table t) inserted into by the triggers action statement. When the tirgger fires it does not raise any error should raise a unique constraint violated error) and does not insert the value into the index. A select from t does not show the additional rows in t as it is performing an index scan  once the index is dropped the rows appear to the select.ij version .ijgt  connect jdbcderbycs createtrue ijgt  create table t i int)  rows insertedupdateddeletedijgt  create table t i int)  rows insertedupdateddeletedijgt  create trigger tt after insert on t for each statement mode dbsqlinsert into t values   rows insertedupdateddeletedijgt  insert into t values   row insertedupdateddeletedijgt  select * from t I row selectedijgt  create unique index tu on t  rows insertedupdateddeletedijgt  insert into t values   row insertedupdateddeletedijgt  select * from t I row selectedijgt  insert into t values   row insertedupdateddeletedijgt  select * from t I row selectedijgt  drop index tu  rows insertedupdateddeletedijgt  select * from t I rows selected   
0;NetConnection references an engine class  org.apache.derby.impl.jdbc.Util   ;NetConnection.java contains this...import org.apache.derby.impl.jdbc.Util ... public boolean isValidint timeout throws SQLException   Validate that the timeout has a legal value if timeout lt    throw Util.generateCsSQLExceptionSQLState.INVALID_API_PARAMETER  new Integertimeout  timeout  java.sql.Connection.isValid  }...This was added as part of DERBY. This should be changed to use the clients method of throwing exceptions.   
1;A  revoke execute ... restrict should fail if there are dependent objects on the execute privilege   ;As per the functional spec attached to DERBY  a revoke execute ... restrict should fail if there are dependent objects on the execute privilegeIn order to implement this  when revoke execute is executed  a special invalidation action should be sent and dependent objects will need to catch that invalidation and throw an exception. If there are no dependents  then no exception will be thrown and revoke execute will succeed.I am just creating a new jira entry here so it is easier to track sub items of DERBY. Will link this Jira entry to DERBY. See the functional spec attached to DERBY   
0;NPE when inserting values to a table that has a column declared as generated by default as identity   ;The following scenario triggers a NullPointerException in statement compilationijgt  create table t c int  c int generated by default as identity)  rows insertedupdateddeletedijgt  insert into t c) values default   ERROR XJ Java exception  java.lang.NullPointerException.Stacktrace from derby.logDatabase Class Loader started  derby.database.classpath . GMT Thread main  main  XID  )  SESSIONID  )  DATABASE  wombat)  DRDAID  null)  Cleanup action starting . GMT Thread main  main  XID  )  SESSIONID  )  DATABASE  wombat)  DRDAID  null)  Failed Statement is insert into t c) values default  java.lang.NullPointerException at org.apache.derby.impl.sql.compile.ResultColumnList.generateCoreResultColumnList.java) at org.apache.derby.impl.sql.compile.ResultColumnList.generateResultColumnList.java) at org.apache.derby.impl.sql.compile.RowResultSetNode.generateRowResultSetNode.java) at org.apache.derby.impl.sql.compile.UnionNode.generateUnionNode.java) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinionProjectRestrictNode.java) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateProjectRestrictNode.java) at org.apache.derby.impl.sql.compile.NormalizeResultSetNode.generateNormalizeResultSetNode.java) at org.apache.derby.impl.sql.compile.InsertNode.generateInsertNode.java) at org.apache.derby.impl.sql.compile.StatementNode.generateStatementNode.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.tools.ij.ij.executeImmediateij.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)sysinfo Java Information Java Version .._Java Vendor Sun Microsystems Inc.Java home CjdkjreJava classpath classes .OS name Windows XPOS architecture xOS version .Java user name yipJava user home CDocuments and SettingsAdministratorJava user dir Cderbytrunkjava.specification.name Java Platform API Specificationjava.specification.version . Derby Information JRE  JDBC JSE ..  JDBC . Cderbytrunkclasses  ... alpha  ) Locale Information Current Locale  [EnglishUnited States  en_US ]Found support for locale  de_DE  version ... alpha  )Found support for locale  es  version ... alpha  )Found support for locale  fr  version ... alpha  )Found support for locale  it  version ... alpha  )Found support for locale  ja_JP  version ... alpha  )Found support for locale  ko_KR  version ... alpha  )Found support for locale  pt_BR  version ... alpha  )Found support for locale  zh_CN  version ... alpha  )Found support for locale  zh_TW  version ... alpha  )   
0;Create index on large tables fails with too many open files   FileNotFoundException.   ;Create index fails on a table with million rows during sort with too many open files errorThis error was first seen when running against a tpcclike test. The test creates the tables  inserts data and then creates the indexes amp  adds constraints.Customer table has  million rows in this case. The below error is thrown on create index. ijgt  create index customer_last on customerc_w_id  c_d_id  c_last) ERROR XSDF Exception during creation of file homecloudtstSinglePerftestrunsscriptsdbtpcctmpT.tmp for containerERROR XJ Java exception homecloudtstSinglePerftestrunsscriptsdbtpcctmpT.tmp Too many open files) java.io.FileNotFoundException.ij   
0;Network Server should not send to client that it supports EUSRIDPWD when running against Sun JVM   ;As part of ACCSECRD  if the server does not accept the security mechanism sent by the client  the server will send a list of security mechanism that it supports. Currently even when the server is running with sun jvm  it will still send EUSRIDPWD as a sec mec that it supports  which is incorrect. The server should test if it can support EUSRIDPWD dynamically and if it does  only then send EURRIDPWD as an option that it supports.see DRDAConnThread.writeACCSECRDint)   
0;Regression wrong results) Join predicate can be ignored for leftmost child in a chain of nested unions.   ;If Derby chooses to do a join between two FromTables and the right table is a chain of UNIONs  then the optimizer may choose to push the join predicate if provided) down into the UNION and to both children of every UNION in the chain. But if the predicate cannot be pushed to the children of any of the UNIONs except the toplevel one) the predicate can end up being ignored altogether with respect to that UNIONs children. The result is that query execution can return rows that do not satisfy the predicate.This is a regression introduced in ... and thus it affects .. and .. I came across this while tracing through code for DERBY.   
0;ConsistencyToken.hashCode) is not thread safe   ;If ConsistencyToken.hashCode) is run concurrently by different threads  some of the threads may see a partial result instead of the correct hash code. This is not a problem in the current code since all calls to that method are synchronized on a higher level  but it would be good to fix in case the method will be used differently in the future.   
0;jdbcapiblobclobBLOB.java fails under DerbyNet framework with JCC .   ;With JCC .  the jdbcapiblobclobBLOB.java fails. The diff did not show anything alarming  so I am guessing itmay be a master update. The test passed fine with DerbyClient     Start blobclobBLOB jdk.._ DerbyNet derbynetmatsjdbcapi   ***a gt  EXPECTED SQLSTATE) Invalid character string format for type INTEGER.gt  end clobTestgt  START clobTestgt  EXPECTED SQLSTATEnull) Invalid position  or length gt  EXPECTED SQLSTATEnull) Invalid position  or length gt  EXPECTED SQLSTATEnull) Invalid position  or length gt  EXPECTED SQLSTATEnull) Invalid position  or length gt  FAIL   unexpected exceptionjava.lang.StringIndexOutOfBoundsException String index out of range  dlt  EXPECTED SQLSTATE) Invalid character string format for type INTEGER.lt  end clobTestlt  START clobTestlt  EXPECTED SQLSTATEnull) Invalid position  or length lt  EXPECTED SQLSTATEnull) Invalid position  or length lt  EXPECTED SQLSTATEnull) Invalid position  or length lt  EXPECTED SQLSTATEnull) Invalid position  or length lt  FAIL   unexpected exceptionjava.lang.StringIndexOutOfBoundsException String index out of range a gt  blobTest finishedgt  START blobTestgt  EXPECTED SQLSTATEnull) Invalid position  or length gt  EXPECTED SQLSTATEnull) Invalid position  or length gt  EXPECTED SQLSTATEnull) Invalid position  or length gt  EXPECTED SQLSTATEnull) Invalid position  or length gt  FAIL   unexpected exceptionjava.lang.NegativeArraySizeException dlt  blobTest finishedlt  START blobTestlt  EXPECTED SQLSTATEnull) Invalid position  or length lt  EXPECTED SQLSTATEnull) Invalid position  or length lt  EXPECTED SQLSTATEnull) Invalid position  or length lt  EXPECTED SQLSTATEnull) Invalid position  or length lt  FAIL   unexpected exceptionjava.lang.NegativeArraySizeException dellt  com.ibm.db.jcc.c.SqlException Operation CREATE TRIGGER cannot be performed on object TESTBLOB because there is an open ResultSet dependent on that object.agt  com.ibm.db.jcc.a.SqlException Operation CREATE TRIGGER cannot be performed on object TESTBLOB because there is an open ResultSet dependent on that object.Test Failed. End blobclobBLOB jdk.._ DerbyNet derbynetmatsjdbcapi   ***   
0;Client driver does not use the query timeout value set using Statement.setQueryTimeout) for subsequent executions using the same statement object   ;I will attach a repro with more details.   
0;derbynettestProperties.java hangs   ;The testProperties.execCmd) is used to fork a JVM and not handle itsstreams. This will cause problems  as indicated by the javadoc for Process.The parent process uses these streams to feed input to and get outputfrom the subprocess. Because some native platforms only provide limitedbuffer size for standard input and output streams  failure to promptlywrite the input stream or read the output stream of the subprocess maycause the subprocess to block  and even deadlock   
0;testSecMec.java fails with JCC . and JCC .   ;After the checkin for DERBY testSecMec fails with JCC . and .. My hope was to just wait until the masters were normalized with the conversion of this test to Junit  but I think that work has been deferred for a bit so I will look at the current test.I have had a problem with this test on my machine for sometime with DERBY like symptoms with all jvms and even with derbyclient. I need to investigate that or run on another machine to resolve this issue.   
0;Add more tests for Statement.setQueryTimeout method   ;Currently  the following checks work as expected but it would be good to add them to regression tests Add tests to check query timeout value is used by executeUpdate method. Existing test tests calls to execute and executeQuery. The following mail mentions query timeout limit should be applied for all executeXXX methods. httpwww.nabble.comStatement.setQueryTimeouttf.htmla Add tests for Statement and CallableStatement class. Existing test tests this method with PreparedStatement only. I found a difference in behaviour with client driver when using Statement class DERBY). So it may be good to add some tests for each statement class.   
0;Deprecate scripts in frameworks directory   ;With revision   new scripts to be added to the bin distribution as a part of DERBY were added to the distributions and snapshots. The old frameworks scripts should be marked as deprecated where appropriate in the documentation  readme files  and release pages.   
0;huge single insert statements fail with JVM error due to size of generated method   ;ERROR XBCM Java linkage error thrown during load of generated class org.apache.derby.exe.acexdxcxexbe.ERROR XJ Java exception Invalid method Code length  in class file orgapachederbyexeacexdxcxexbe java.lang.ClassFormatError.The above occurred when doing an insert statement using the mutiple row syntax INSERT INTO foo ...) VALUES ...)  ...) ... for huge amounts of input data. I was able to insert  rows at once  but it balked at .Workaround chunk one huge insert into several merely big inserts before sending them to Derby.   
1;Invoking Java stored procedure that contains GRANT or REVOKE statement with CONTAINS SQL should fail.   ;In Derby SQL authorization mode  invoking Java stored procedure that contains GRANT or REVOKE statement with CONTAINS SQL from a trigger should fail but in the following test  it successfully executed the trigger action. Attaching repro patch for trunk.i.e.ijgt  connect triggerProcSQLAuth createtrue user APP as app WARNING J SQL authorization is being used without first enabling authentication.ijgt    setup the environment  table used in the procedurescreate table t i int primary key  b char))  rows insertedupdateddeletedijgt  insert into t values   XYZ)  row insertedupdateddeletedijgt  insert into t values   XYZ)  row insertedupdateddeletedijgt    table used in this testcreate table t x integer  y integer)  rows insertedupdateddeletedijgt  create procedure grant_select_proc)  parameter style java dynamic result sets  language java  contains sql external name org.apache.derbyTesting.functionTests.util.ProcedureTest.grantSelect  rows insertedupdateddeletedijgt  create procedure revoke_select_proc)  parameter style java dynamic result sets  language java  contains sql external name org.apache.derbyTesting.functionTests.util.ProcedureTest.revokeSelect  rows insertedupdateddeletedijgt    testscreate trigger grant_select_trig AFTER delete on t  for each STATEMENT mode dbsql call grant_select_proc)  rows insertedupdateddeletedijgt    should faildelete from t where i    row insertedupdateddeletedijgt    check delete failedselect * from t I |B  |XYZ  row selectedijgt    check if there are rows in sys.systableperms  should be select count from SYS.SYSTABLEPERMS    row selectedijgt  drop trigger grant_select_trig  rows insertedupdateddeletedijgt  create trigger revoke_select_trig AFTER delete on t  for each STATEMENT mode dbsql call revoke_select_proc)  rows insertedupdateddeletedijgt    should faildelete from t where i    row insertedupdateddeletedijgt    check delete failedselect * from t I |B  rows selectedijgt    check if there are rows in sys.systableperms  should be select count from SYS.SYSTABLEPERMS    row selectedijgt  drop trigger revoke_select_trig  rows insertedupdateddeletedijgt   Java Information Java Version .._Java Vendor Sun Microsystems Inc.Java home CProgram FilesJavajre.._Java classpath derby.jar derbytools.jarOS name Windows XPOS architecture xOS version .Java user name YipJava user home CDocuments and SettingsYipJava user dir Cworkderbytrunkjarssanejava.specification.name Java Platform API Specificationjava.specification.version . Derby Information JRE  JDBC JSE ..  JDBC . Cworkderbytrunkjarssanederby.jar  ... alpha  M) Cworkderbytrunkjarssanederbytools.jar  ... alpha  M) Locale Information Current Locale  [EnglishUnited States  en_US ]Found support for locale  de_DE  version ... alpha  M)Found support for locale  es  version ... alpha  M)Found support for locale  fr  version ... alpha  M)Found support for locale  it  version ... alpha  M)Found support for locale  ja_JP  version ... alpha  M)Found support for locale  ko_KR  version ... alpha  M)Found support for locale  pt_BR  version ... alpha  M)Found support for locale  zh_CN  version ... alpha  M)Found support for locale  zh_TW  version ... alpha  M)   
0;Manifest file doesnt contain OSGi attributes   ;With osgi.jar in toolsjava  ant buildjars does not add the OSGi attributes to derby.jars manifest. Instead  a file named manifest.file} is created in the root of the source tree. This file contains what should have been in the manifest  for instanceManifestVersion .AntVersion Apache Ant ..CreatedBy diablo.._b Sun Microsystems Inc.BundleActivator org.apache.derby.osgi.EmbeddedActivatorDynamicImportPackage *ExportPackage org.apache.derby.authentication org.apache.derby.datab ase org.apache.derby.io org.apache.derby.jdbc org.apache.derby.vtiThis seems to be caused by build.xml containing a reference to manifest.file} at a location where manifest.file is not bound to a value. The attached patch manifest.diff fixes the issue by replacing manifest.file} with derby.jar.dir}listssmf.mf.   
0;The language and store systems treat a JVM error such as OutOfMemoryError differently leading to the raw store protocol violation errors   ;Dont have the exact details  but remember noticing it a while ago. I think the store transaction context closes the transaction on such an error  while the language conneciton context just rollsback the transaction or the statement. I think the best and consistent approach would be to close the connection.   
0;derbynettestSecMec.java fails with NullPointerException intermittent failure)   ;httpwww.multinet.no~solbergpublicApacheTinderBox_DerbytestlogSunOS._ipciderbyall_diff.txt                 Diff file derbyallderbynetclientmatsDerbyNetClientderbynetmatsderbynetmatstestSecMec.diff             Start testSecMec jdk.._ DerbyNetClient derbynetmatsderbynetmats   ***a gt  java.sql.SQLException No current connection.gt  Exception in thread DRDAConnThread_ java.lang.NullPointerExceptionTest Failed. End testSecMec jdk.._ DerbyNetClient derbynetmatsderbynetmats   ***    Detailed logTest USRSSBPWD_with_BUILTIN  derby.drda.securityMechanismnullTurning ON Derby BUILTIN authenticationUSRSSBPWD T) jdbcderbylocalhostwombat userneelima passwordlee shutdowntrue securityMechanism  EXCEPTION DERBY SQL error SQLCODE   SQLSTATE   SQLERRMC Database wombat shutdown.java.sql.SQLException No current connection. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.noCurrentConnectionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosedUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.setupContextStackUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.rollbackUnknown Source) at org.apache.derby.impl.drda.Database.closeUnknown Source) at org.apache.derby.impl.drda.Session.closeUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.closeSessionUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.runUnknown Source)Exception in thread DRDAConnThread_ java.lang.NullPointerException at java.lang.Throwable.printStackTraceThrowable.java) at org.apache.derby.impl.drda.DRDAProtocolException.lt initgt Unknown Source) at org.apache.derby.impl.drda.DRDAProtocolException.newAgentErrorUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.sendUnexpectedExceptionUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.closeSessionUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.runUnknown Source)   
0;Implement Bracketed SQL comments *...* comments)   ;Hibernate use multiline sql statements to show the internal building of the hql statements. You can disable this feature  but it would be nice if you can implements bracketed SQL comments in Derby.Thanks.   
0;derbynettestSecMec.java fails with ShutdownException in DerbyNetClient framework   ;During ... beta testing this test failed with org.apache.derby.iapi.services.context.ShutdownException on  of  platforms running Solaris zonesPlatform sparc_zone derbynetclientmatsderbynetmatsDerbyNetClientderbynetmatstestSecMec.diffPlatform sparc_zone derbynetclientmatsderbynetmatsDerbyNetClientderbynetmatstestSecMec.diff derbyallderbynetclientmatsDerbyNetClientderbynetmatsderbynetmatstestSecMec.diffThe test did not fail on other platforms  which may indicate timing sensitivity tests are run concurrently in  zones  global   local) on one single machine). Here is one of the diffs from platform sparc_zone)                 Diff file derbynetclientmatsderbynetmatsDerbyNetClientderbynetmatstestSecMec.diff             Start testSecMec jdk..rc DerbyNetClient derbynetmatsderbynetmats   ***a gt  java.sql.SQLException Java exception  org.apache.derby.iapi.services.context.ShutdownException.gt  ...  moregt  Testing with derby.drda.securityMechanismINVALID_VALUEgt  EXPECTED EXCEPTION DRDA_InvalidValue.UInvalid value  INVALID_VALUE  for derby.drda.securityMechanism. dlt  Testing with derby.drda.securityMechanismINVALID_VALUElt  EXPECTED EXCEPTION DRDA_InvalidValue.UInvalid value  INVALID_VALUE  for derby.drda.securityMechanism.lt  Test Failed. End testSecMec jdk..rc DerbyNetClient derbynetmatsderbynetmats   ***    The failure occurred in the DerbyNetClient framework when shutting down the database for the second and last) time in the method testUSRSSBPWD_with_BUILTIN). This test method was added August    DERBY).Attatching derby.log from the failure in derbynetclientmatsderbynetmats on sparc_zone.   
0;XMLSERIALIZE operator doesnt follow SQLXML spec in some areas when serializing a sequence.   ;The SQLXML specification dictates that  when serializing a sequence of XML items  the XMLSERIALIZE operator must first normalize the sequence based on the rules defined here httpwww.w.orgTRxsltxqueryserializationserdmThe current Derby implementation doesnt perform such normalization  which leads to two ways in which the results of an XMLSERIALIZE operator may not agree with the required behavior . Sequences of atomic values will not have spaces between  but the space is required as part of step  of the normalization rules at the above link. . Derby will allow serialization of a sequence even if it has a toplevel Attribute node in it  but the rules of normalization dictate that an error should be thrown instead step ).Both of these behaviors can be seen with the following query.values xmlserialize xmlqueryageinfo@* passing by ref xmlparse document lt ageinfo age birthdategt  preserve whitespace ) empty on empty ) as char) )Derby will currently return the following result from this statementThis result does not abide by SQLXML specification because a) Derby allowed serialization of a sequence having a toplevel attribute node actually  the sequence had two)  and b) the atomic values produced from the attributes were displayed without a space between them.The correct behavior for the above example is to return a serialization error caused by the presence of an Attribute node in the sequence.If the example was rewritten as  say xmlqueryageinfo@* passing by ref xmlqueryfndataageinfo@*) passing by refthen the attribute nodes are no longer presentwe only have their atomic values  which is allowed. Thus the correct result should then be Note  though  that Xalan doesnt appear to support the fndata function  so this rewritten query wont actually work. I tried using Xalans builtin string function  as follows xmlqueryageinfo@* passing by ref xmlquerystringageinfo@*) passing by refbut Xalan only returns the first attribute in that case  it doesnt return the second one. So part of this Jira issue is probably going to involve figuring out how to allow a user to retrieve a sequence of attribute values as opposed to attribute nodes) using Xalan and still abide by the SQLXML rules.   
1;remote server testing with . snapshot showed  failures   ;I ran derbynetclientmats between two IPV machines with the . snapshot and finally got to look at the results...There were  failures   of those because of other tests leaving stuff behind. tests complained about junit classes not being found ? one of those was checkDataSource). tests seemed to have trouble connecting  those might be the more interesting ones.Will do further analysis  amp  create test cleanup patches.The failing tests and some commentssuite derbynetclientmats with ibm amp  IPV machines using DhostName i.e. remote server test) and build ... alpha  )derbynetclientmatsderbynetclientmats.failjdbcapicheckDataSource.java ?? fails because of an error accessing junit. Not sure why  junit is in client classpath...and its not even a junit test. Stack trace not helpful. points to client.am  which makes littleno sense).derbynetclientmatsderbynetmatsderbynetmats.failderbynettestconnection.java ?? no connectionderbynetclientmatsderbynetmatsderbynetmats.failderbynettestij.java ?? no connectionderbynetclientmatsderbynetmatsderbynetmats.failjdbcapimetadata.java extra tablesviews JIRA  Y.derbynetclientmatsderbynetmatsderbynetmats.failjdbcapiodbc_metadata.java dittoderbynetclientmatsderbynetmatsderbynetmats.faillangsyscat.sql dittoderbynetclientmatsderbynetmatsderbynetmats.failjdbcapiProcedureTest.junit junit not available??derbynetclientmatsderbynetmatsderbynetmats.failjdbcapicheckDataSource.java TableView Y already exists.   
0;ERROR Z XML syntax error  missing keywords) AS.  Misleading text   ;create table t i int  x xml) select xmlserialize from t ERROR Z XML syntax error  missing keywords) AS.This is not an XML Syntax error  its a syntax in the SQL language. No need to have a special error messgae here  wouldnt the error be caught by regular parsing?   
0;The database owner is incorrectly referred to as dba in the code comments that were checked in Derby . for grant revoke work. We should clean this up at some point.   ;Grant revoke functionality was added in Derby . The comments that went into the grant revoke code  in some places refer to database owner as dba. They are not the same thing. In the grant revoke world  dba is a role. We havent added roles into Derby yet but current use of dba in comments might make it confusing when we do start working on roles including dba.   
0;Embedded ResultSet.getTimestamp on a TIME column returns a java.sql.Timestamp with a date portion that can be incorrect.   ;The date portion of the java.sql.Timestamp from a TIME column is intended to be the current date but instead can be any date value  based upon the last getXXX call that required a Java Calendar object.   
0;Clients ResultSet.getTime) on a SQL TIMESTAMP column loses the subsecond resolution and always has a millisecond value of zero.   ;In embedded the java.sql.Time object returned from ResultSet.getTime for a SQL TIMESTAMP object has its millisecond value for the time portion equal to that for the java.sql.Timestamp value.In client the millisecond time value for such a value is always set to zero.Note a Derby SQL TIME value has by definition resolution of only a second so its millisecond value is always zero but java.sql.Time is not a direct mapping to the SQL Type  its a JDBC type  so when converting from a SQL TIMESTAMPit should retain the precision.The new test lang.TimeHandlingTest has this assert code that shows the problem  one of its calls will be commented outwith a comment with this bug number. private void assertTimeEqualTime tv  Timestamp tsv  cal.clear  cal.setTimetv  int hour  cal.getCalendar.HOUR_OF_DAY  int min  cal.getCalendar.MINUTE  int sec  cal.getCalendar.SECOND  int ms  cal.getCalendar.MILLISECOND   Check the time portion is set to the same as tv cal.clear  cal.setTimetsv  assertEqualshour  cal.getCalendar.HOUR_OF_DAY  assertEqualsmin  cal.getCalendar.MINUTE  assertEqualssec  cal.getCalendar.SECOND  assertEqualsms  cal.getCalendar.MILLISECOND  lt lt lt lt lt lt lt lt lt lt lt lt lt  FAILS HERE }   
0;Access rule violations should use a SQL state starting with  according to the SQL standard.   ;The SQL standard says that SQL State  is for syntax error or accessrule violation section .).There is a question of what JDBC . exception should be thrown for a access rule violation JDBC . maps  to SQLSyntaxErrorException which seems wrong for an access rule.Message threadhttpmailarchives.apache.orgmod_mboxdbderbydev.mboxcA.@apache.orge   
0;langprocedureInTrigger.sql fails with wctme. foundation with CNFE  java.sql.DriverManager and other exceptions.   ;Test failed with . jars ... alpha  ). I am attaching the report file from the test run wctme._derbyall_report.txt . Please see this file for the diff. This test was added as part of DERBY and checkin  r.   
1;sysinfo test fails with access denied java.util.PropertyPermission java.class.path read) when derbyclient.jar is first in classpath   ;Seen on Linux and Solaris  with Sun JVM .  .  . when derbyclient.jar is first in classpath                 Diff file derbyallderbynetmatsDerbyNetderbynetmatssysinfo.diff             Start sysinfo jdk.._ DerbyNet derbynetmatsderbynetmats   ***agt  Unable to analyze class path access denied java.util.PropertyPermission java.class.path read) dlt  Current Locale  [EnglishUnited States  en_US ]lt  Found support for locale  de_DE lt  Found support for locale  es lt  Found support for locale  fr lt  Found support for locale  it lt  Found support for locale  ja_JP lt  Found support for locale  ko_KR lt  Found support for locale  pt_BR lt  Found support for locale  zh_CN lt  Found support for locale  zh_TW agt  Unable to analyze class path access denied java.util.PropertyPermission java.class.path read) dlt  Current Locale  [EnglishUnited States  en_US ]lt  Found support for locale  de_DE lt  Found support for locale  es lt  Found support for locale  fr lt  Found support for locale  it lt  Found support for locale  ja_JP lt  Found support for locale  ko_KR lt  Found support for locale  pt_BR lt  Found support for locale  zh_CN lt  Found support for locale  zh_TW agt  Unable to analyze class path access denied java.util.PropertyPermission java.class.path read) dlt  Current Locale  [EnglishUnited States  en_US ]lt  Found support for locale  de_DE lt  Found support for locale  es lt  Found support for locale  fr lt  Found support for locale  it lt  Found support for locale  ja_JP lt  Found support for locale  ko_KR lt  Found support for locale  pt_BR lt  Found support for locale  zh_CN lt  Found support for locale  zh_TW Test Failed. End sysinfo jdk.._ DerbyNet derbynetmatsderbynetmats   ***   
0;Correct message SQL State  to reflect that is being revoked  user and update the Ref Manual   ;the SQL State  Privilege not revoked from }. should be changed to Privilege notrevoked from user }.Once changed in the code  the Ref Manual file rrefexcept. dita needs to be updated as well.   
0;jdbcapiblobclobBLOB.java fails with JCC drivers   ;Test fails with JCC versions .  . and .. Sample difflt  FAIL Caught exception java.lang.NegativeArraySizeExceptionagt  FAIL Caught exception java.lang.NegativeArraySizeException   
0;Create a script that allows users to easily update their Derby jars with the JDBC classes.   ;Since the resolution of the JDBC  licensing issue was to not ship a build that includes Derbys JDBC  code  but continue to ship the Derby source files for them  a script which automatically compiles and updates the Derby jars with the JDBC  classes would be useful.   
1;Tests langgrantRevokeDDL.sql and langgrantRevokeDDL.sql fails on IBM WCTME . Foundation jdkJME Foundation Specification v.)   ;The diff for grantRevokeDDL.sql is big  hence attaching. For langgrantRevokeDDL.sql the diff is as follows                 Diff file derbyallderbylanggrantRevokeDDL.diff             Start grantRevokeDDL jdkJME Foundation Specification v. derbyallderbylang   ***agt  java.lang.reflect.InvocationTargetException java.lang.NullPointerException dellt  ERROR Failed with SQLSTATE agt  ERROR Failed with SQLSTATE XJ dellt  ERROR Failed with SQLSTATE agt  ERROR Failed with SQLSTATE XJ dellt  ERROR Failed with SQLSTATE agt  ERROR Failed with SQLSTATE XJ dellt   row insertedupdateddeleteda gt  ERROR Failed with SQLSTATE gt  ERROR Failed with SQLSTATE XJ dellt   rows selecteda gt   |XYZ gt   row selecteda gt  ERROR Failed with SQLSTATE gt  ijUSER)gt  set connection user gt  ijUSER)gt  create trigger revoke_select_trig AFTER delete on t gt  for each STATEMENT mode dbsql call revoke_select_proc) gt   rows insertedupdateddeletedgt  ijUSER)gt    should failgt  delete from t where i   gt  ERROR Failed with SQLSTATE gt  ERROR Failed with SQLSTATE XJgt  ijUSER)gt    check delete failedgt  select * from t where i    dlt   |XYZ lt   row selectedlt  ijUSER)gt  set connection user lt  ijUSER)gt  create trigger revoke_select_trig AFTER delete on t lt  for each STATEMENT mode dbsql call revoke_select_proc) lt   rows insertedupdateddeletedlt  ijUSER)gt    should faillt  delete from t where i   lt  ERROR Failed with SQLSTATE lt  ERROR Failed with SQLSTATE lt  ijUSER)gt    check delete failedlt  select * from t where i   lt  I |B lt  a gt  ERROR Failed with SQLSTATE gt  ijUSER)gt  set connection user gt  ijUSER)gt  create trigger revoke_select_trig AFTER delete on t gt  for each STATEMENT mode dbsql call revoke_select_proc) gt   rows insertedupdateddeletedgt  ijUSER)gt    should failgt  delete from t where i   gt  ERROR Failed with SQLSTATE gt  ERROR Failed with SQLSTATE XJgt  ijUSER)gt    check delete failedgt  select * from t where i    dlt   |XYZ lt   row selectedlt  ijUSER)gt  set connection user lt  ijUSER)gt  create trigger revoke_select_trig AFTER delete on t lt  for each STATEMENT mode dbsql call revoke_select_proc) lt   rows insertedupdateddeletedlt  ijUSER)gt    should faillt  delete from t where i   lt  ERROR Failed with SQLSTATE lt  ERROR Failed with SQLSTATE lt  ijUSER)gt    check delete failedlt  select * from t where i   lt  I |B lt  a gt  ERROR Failed with SQLSTATE gt  ijUSER)gt  set connection user gt  ijUSER)gt  create trigger revoke_select_trig AFTER delete on t gt  for each STATEMENT mode dbsql call revoke_select_proc) gt   rows insertedupdateddeletedgt  ijUSER)gt    should failgt  delete from t where i   gt  ERROR Failed with SQLSTATE gt  ERROR Failed with SQLSTATE XJgt  ijUSER)gt    check delete failedgt  select * from t where i    dlt   |XYZ lt   row selectedlt  ijUSER)gt  set connection user lt  ijUSER)gt  create trigger revoke_select_trig AFTER delete on t lt  for each STATEMENT mode dbsql call revoke_select_proc) lt   rows insertedupdateddeletedlt  ijUSER)gt    should faillt  delete from t where i   lt  ERROR Failed with SQLSTATE lt  ERROR Failed with SQLSTATE lt  ijUSER)gt    check delete failedlt  select * from t where i   lt  I |B lt  a gt  ERROR Failed with SQLSTATE gt  ijUSER)gt  set connection user gt  ijUSER)gt  create trigger revoke_select_trig AFTER delete on t gt  for each STATEMENT mode dbsql call revoke_select_proc) gt   rows insertedupdateddeletedgt  ijUSER)gt    okgt  delete from t where i   gt  ERROR Failed with SQLSTATE gt  ERROR Failed with SQLSTATE XJgt  ijUSER)gt    check delete gt  select * from t where i    dellt   |XYZ agt   |XYZ a gt  ijUSER)gt  drop trigger revoke_select_trig gt   rows insertedupdateddeletedgt  ijUSER)gt  set connection user gt  ijUSER)gt    should failgt  select * from user.t where i   gt  ERROR Failed with SQLSTATE  dlt  ijUSER)gt  create trigger revoke_select_trig AFTER delete on t lt  for each STATEMENT mode dbsql call revoke_select_proc) lt   rows insertedupdateddeletedlt  ijUSER)gt    oklt  delete from t where i   lt   row insertedupdateddeletedlt  ijUSER)gt    check delete lt  select * from t where i   lt  I |B lt  lt   rows selectedlt  ijUSER)gt  drop trigger revoke_select_trig lt   rows insertedupdateddeletedlt  ijUSER)gt  set connection user lt  ijUSER)gt    should faillt  select * from user.t where i   lt  ERROR Failed with SQLSTATE lt  ijUSER)gt  set connection user Test Failed. End grantRevokeDDL jdkJME Foundation Specification v. derbyallderbylang   ***   
0;Assert failure in sane mode for queries that used to work in ...   ;Derby gives a database and a small program called ViewerInit that prepares a bunch of large queries involving nested subqueries  unions  and join predicates. The actual bug described in DERBY is an NPE  and thats what the patch for DERBY addresses.However  once the NPEs are fixed  some of the queries in that same program now fail with ASSERT failures when running in SANE mode  this Jira issue is for addressing those assert failures.While this does constitute a regression  I dont know yet what the root cause of the problem is  so I hesitate to make it a . blockerhence urgency is Normal. Im still investigating the queries to try to track down where the problem is  but all Ive been able to deduce so far is that a) the assertion occurs for a scoped predicate and thus the pushing of join predicates into UNIONs is somehow involved  and b) in INSANE mode the query compiles without problem and appears based on some early and very incomplete testing) to execute without problem. But more investigation is required to determine if the executionresults are actually correct  and to understand more about why the assertion is being thrown.Im marking the fixin as ... for now since I dont enough to make this a blocker for ... Hopefully more info will be forthcoming...   
0;largeDataTestsLobLimits master needs update for new exception names   ;lt  EXPECTED SQL Exception XJ) Java exception Input stream did not have exact amount of data as the requested length. java.io.IOException.agt  EXPECTED SQL Exception XJ) Java exception Input stream did not have exact amount of data as the requested length. org.apache.derby.iapi.services.io.DerbyIOException. moreSee httpwww.multinet.no~solbergpublicApacheLargeDatatestlogSunOS._ipcilargeData_diff.txt   
0;The source distribution for ... rc includes derby.log files   ;The dbderby...src release candidate built on  includes derby.log files. dbderby...srcderby.log dbderby...srcjavademotoursdbderby.logFile sizes  ls l derby.log rwrwr  jta jta  Sep   derby.log  ls l javademotoursdbderby.log rwrr  jta jta  Sep   javademotoursdbderby.logIf the release candidates need to be rebuilt  it would be good to remove those derby.log files  but it doesnt harm anything to have them in there just consumes a little space).The dbderby...lib and dbderby...bin distributions dont have these files.   
0;error .C.  refers to nonexistent codepoint secktn  needs correcting   ;error .C.Network protocol exception secktn was not returned. The connection has been terminated.This is NET_SECTKN_NOT_RETURNED in org.apache.derby.drda.client.net.NetConnection.javaI searched in the drda specs but I could not find SECKTN  but I did find SECTKN.So...I think the error message should get changed to SECTKN.The same nonexistent codepoint seems to be referred to in XN.Usecktn was not returned.This affects the following English messages .properties files) Brazilian messages .properties files) documentation for SQLStates.I didnt find any masters with this.It should probably go into ..  although its not important enough to hold up a release. Targeting for .. for now.Myrna   
0;SQLSTATE X occurs when qualifying a column with a synonym in ORDER BY clause   ;SQLSTATE X occurs when qualifying a column with a synonym in ORDER BY clause  where the synonym was declared in a different schemaij version .ijgt  connect jdbcderbywombat createtrue ijgt  create schema test  rows insertedupdateddeletedijgt  create schema test  rows insertedupdateddeletedijgt  create table test.testtableid bigint not null)  rows insertedupdateddeletedijgt  create synonym test.testtable for test.testtable  rows insertedupdateddeletedijgt  set schema test  rows insertedupdateddeletedijgt  select testtable.id from testtable ID  rows selectedijgt  set schema test  rows insertedupdateddeletedijgt  select testtable.id from testtable ID  rows selectedijgt  select testtable.id from testtable order by testtable.id ERROR X TESTTABLE is not an exposed table name in the scope in which it appears.ijgt    
0;... source distribution is missing many files and includes some files that it should not.   ;The source distribution is missing the toplevel bin and maven directories  as well as BUILDING.txt  README  index.html  and publishedapioverview.html. Also  the tools directory is missing releasebuild.xml.In addition  toolstestingderby contains a complete set of the Derby . jars  these should be removed from the src distribution.   
1;The scripts under the bin of the distribution does not have the executable permission   ;The scripts under the bin directory of the distribution does not have the execute permission. Here is the dir listingrwrr  rajeshk RD    dblookrwrr  rajeshk RD    dblook.batrwrr  rajeshk RD    derby_common.batrwrr  rajeshk RD    derby_common.shrwrr  rajeshk RD    ijrwrr  rajeshk RD    ij.bat....The issue was raised in the list earlierhttpwww.nabble.comQuestionsonthescriptsinbindirectoryofDerbyinstallp.htmlbut looks it is not fully resolved.   
1;ALTER TABLE DROP COLUMN needs to update GRANTed column privileges   ;When ALTER TABLE DROP COLUMN is used to drop a column from a table  it needs to update the GRANTed column privileges on that table.The following behaviors need to be provided DROP COLUMN needs to automatically revoke any privileges which have been granted on this column Privileges which have been granted on other columns in this table need to be adjusted due to changed column position numbersWhen this problem is fixed  the following additional cleanup steps should occur The check that disables DROP COLUMN in sqlAuthorization mode needs to be removed There is a comment in AlterTableConstantAction that needs to be revised The tests in langaltertableDropColumn.sql should be moved into altertable.sql altertableDropColumn.sql and altertableDropColumn.out should be deletedSearch for this JIRA issue number in the code to find the relevant places to change.   
0;Bring STATUS file up to date   ;The STATUS file is stale) Votes taken since February arent mentioned.) The development trunk is labelled as .) The committer list is stale.   
0;readme.html under frameworks does not mention about Derby client and some minor typos in example.html   ;The readme.html file under frameworks mentions about the JCC driver but nothing about the Derbyclient.Also under the demoprogramssimpleexample.html some minor issuestyposUnder the section Next run the SimpleApp demo in Derby client mode step  on classpath mentionsNOT FOUND IN CLASS PATH Derby Client libraries dbjcc.jar) com.ibm.db.jcc.DBDriver not found.)The above show JCC info instead of Derby Client   
0;Add reencrytion  of database test cases to the upgrade test..   ;Add a encryption of an unencrypted database and reencryption of encrypted database test case to the upgrade test. Please see DERBY for details about reencryption feature. reencrytpion test cases will be added to run only when test is executed using jar files. Upgrade test mixes the old version of derby classes in the jar files and the new classes when run under codeline using classes.  This cause boot time error when databases is encrypted  This kind of mixing different version of classes is not supported   see DERBY) .   
0;Make FOR EACH clause and MODE DBSQL in CREATE TRIGGER statement optional   ;According to SQL standard  section . lt trigger definitiongt   under Syntax Rules item If neither FOR EACH ROW nor FOR EACH STATEMENT is specified  then FOR EACH STATEMENT is implicit.[ FOR EACH  ROW | STATEMENT } ]   
0;Remove stale code from the statement classes in the client driver   ;Statement and ParameterMetaData contain flags called escapedProcedureCallWithResult_. These flags might have had a function before  but now they are always false. They are used in many ifstatements and make the code harder to read. Removing the flags and the code that is only executed when the flags are true  would simplify the code and make it more maintainable.   
0;improve XSDG error to print container  actual io operation  and file name.   ;The current error does not give enough information to know what container is the problemERROR XSDG Metadata for Containerorg.apache.derby.impl.store.raw.data.RAFContainer@cd could not beaccessed   
0;Routine parameter names displayed by dblook are not escaped.   ;After using this SQL to create a function with a delimited parameter nameCREATE FUNCTION FRED paramOne INTEGER) RETURNS INTEGERLANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME fred.foo dblook will output a CREATE FUNCTION statement with the parameter name without quotesCREATE FUNCTION APP.FRED paramOne INTEGER) RETURNS INTEGERLANGUAGE JAVA PARAMETER STYLE JAVAREADS SQL DATA CALLED ON NULL INPUTEXTERNAL NAME fred.foo Using the output from dblook to recreate the function will result in a function with a different parameter name.   
0;Junit tests that require SQL authorization mode should use a different database to the default one.   ;Since databases are reused in the JUnit world having a single database for the two modes does not work.Not sure if there are any tests that need this yet. SQLAuthorizationPropTest actually tests setting the property so it really needs its own database I think).   
0;Add Order Entry applicationsystemperformance testtoolkit   ;Order Entry OE) is an OLTP applicationtoolkit which is based upon the TPCC specification but is not claiming to be a valid implementation. The TPCC specification is used mainly forthe database schema amp  population rules and the logic of the business transactions.httpwww.tpc.orgtpccOE is set up so that the driving amp  display of the business transactions is separated from the actual implementation which then allows different implementations to compare performance of Derby features. In all cases the implementationswould perform the logical functionality required by the TPCC  but need not be strict implementations. As an examplethe new order number is obtained in a defined way in TPCC  but Derby could use generated keys to perform thesame logical function. Testing the two ways would lead to see if there were performance problems with generated keys.Examples of the possible implementations of the business transactions are direct  client executes SQL statements directly holding onto PreparedStatements for the lifetime of the client) procedure  client executes a procedure per business transaction EOD  implementation using JDBC ^H? EOD updateable ResultSets positioned updates etc.Other options include use of triggers use of generated keys etc.Possible values for the display results of the transaction) nothing text HTML for servletsJSPs etc.Also the loading of the data could support different options load withwithout contraints in place load using INSERT statements load using import load using import with a ResultSet class.OE allows the amount of data loaded initially to be varied very easily  just by setting the warehousescale factor  so a warehouse creates a database of size N  and warehouse a database of size N roughly).This allows databases in the range Gb to be easily created.The general setup would that OE could be used as a function test  performance test  or stress test so its seen as a toolkit.I hope also that the OE could be expanded beyond the TPCC spec  for example adding images BLOBs) and descriptions CLOBs) to the product ITEM table. adding triggers to sendemail on various actions.These additions would be intended to test Derby functionality in a realworld OLTP application.The toplevel package under javatesting would be org.apache.derbyTesting.systemTests.oe   
0;Convert jdbcTestJDBCException.java to JUnit   ;TestJDBCException is written in a JUnitlike style and could easily be converted into JUnit.   
0;Convert jdbcTestDbMetaData.java to JUnit   ;Rewrite the test in JUnit using the utility methods added in DERBY.   
0;Misleading stack traces for exceptions raised by the JDBC . embedded driver   ;When the embedded driver raises an SQLException  its stack trace alwayssays it is created in SQLExceptionFactory.wrapArgsForTransportAcrossDRDA).This is not correct.At some point  SQLExceptionFactory.getSQLException) set the stack traceof the SQLException to the stack trace of the nonSQLException that causedit  if there were one. This was probably done to mimic the behaviour ofEmbedSQLException  which overrides printStackTrace) to achieve thesame. Later  code was added to ferry arguments over DRDA. This code createda dummy exception which the old code interpreted as a nonSQLExceptionwhose stack trace should be used for the main exception. Therefore  allexceptions now have the same stack trace as the dummy exception created inwrapArgsForTransportAcrossDRDA).I think the best solution is not to set the stack trace explicitly  noteven when the SQLException is caused by a nonSQLException.EmbedSQLException overrides printStackTrace) because throwables in Java. didnt have initCause)getCause)  so it was the only way to preservethe original stack trace. Since the SQLExceptions in JDBC . haveinitCause)getCause)  there is no reason why the JDBC driver shouldmimic EmbedSQLExceptions workaround for not having these methods.   
0;Use a lower wait timeout in BlobClobBlobTest   ;These test cases wait  seconds for a timeout testLockingClob testLockingWithLongRowClob testLockingBlob testLockingWithLongRowBlobSince they run both in embedded and network client mode  BlobClobBlobTest spends about eight minutes waiting for a timeout. Therefore  it would be good if its setUp) method lowered the timeout and tearDown) reset it). TestJDBCException shows how this could be achieved.   
0;NullPointerException with LTRIM  RTRIM and argument SUBSTR) call in GROUP BY clause.   ;The following query  which fails with a syntax error in .. because functions are not allowed in a GROUP BY expression for .) fails with a NullPointerException in . and in the codeline .)create table dt vc varchar))  insert into dt values )  )  select substrvc  ) from dt group by substrvc  )  Result on trunk) isjava.lang.NullPointerException at org.apache.derby.impl.sql.compile.TernaryOperatorNode.isEquivalentTernaryOperatorNode.java) at org.apache.derby.impl.sql.compile.GroupByList.findGroupingColumnGroupByList.java) at org.apache.derby.impl.sql.compile.VerifyAggregateExpressionsVisitor.skipChildrenVerifyAggregateExpressionsVisitor.java) at org.apache.derby.impl.sql.compile.TernaryOperatorNode.acceptTernaryOperatorNode.java) at org.apache.derby.impl.sql.compile.ResultColumn.acceptResultColumn.java) at org.apache.derby.impl.sql.compile.QueryTreeNodeVector.acceptQueryTreeNodeVector.java) at org.apache.derby.impl.sql.compile.SelectNode.bindExpressionsSelectNode.java) at org.apache.derby.impl.sql.compile.FromSubquery.bindExpressionsFromSubquery.java) at org.apache.derby.impl.sql.compile.FromList.bindExpressionsFromList.java) at org.apache.derby.impl.sql.compile.SelectNode.bindExpressionsSelectNode.java) at org.apache.derby.impl.sql.compile.DMLStatementNode.bindExpressionsDMLStatementNode.java) at org.apache.derby.impl.sql.compile.DMLStatementNode.bindDMLStatementNode.java) at org.apache.derby.impl.sql.compile.CursorNode.bindCursorNode.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java)   
0;ArrayIndexOutOfBoundsException for COALESCE with aggregate functions   ;The following statements produce an ArrayIndexOutOfBoundsExceptionCREATE TABLE t  f INTEGER) SELECT COALESCEMAXf) ) FROM t Workaround VALUES COALESCE SELECT MAXf) FROM t)  ) Stack trace . GMT Booting Derby version The Apache Software Foundation  Apache Derby  ...  ) instance cdeffaafon database directory Ctemp_systemp_Derby_TestErr_dbDatabase Class Loader started  derby.database.classpath . GMT Thread main  main  XID  )  SESSIONID  )  DATABASE  ctemp_systemp_Derby_TestErr_db)  DRDAID  null)  Cleanup action starting . GMT Thread main  main  XID  )  SESSIONID  )  DATABASE  ctemp_systemp_Derby_TestErr_db)  DRDAID  null)  Failed Statement is SELECT COALESCEMAXf) ) FROM tjava.lang.ArrayIndexOutOfBoundsException  at org.apache.derby.impl.services.bytecode.BCMethod.popStackUnknown Source) at org.apache.derby.impl.services.bytecode.BCMethod.callMethodUnknown Source) at org.apache.derby.impl.sql.compile.ResultColumnList.generateCoreUnknown Source) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinionUnknown Source) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateUnknown Source) at org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode.generateUnknown Source) at org.apache.derby.impl.sql.compile.CursorNode.generateUnknown Source) at org.apache.derby.impl.sql.compile.StatementNode.generateUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source)   
0;NullPointerException in CREATE VIEW ... VALUES NULL    ;The following statement produces a NullPointerException CREATE VIEW v f) AS VALUES NULL Stack trace . GMT Booting Derby version The Apache Software Foundation  Apache Derby  ...  ) instance cdebffon database directory Ctemp_systemp_Derby_TestErr_dbDatabase Class Loader started  derby.database.classpath . GMT Thread main  main  XID  )  SESSIONID  )  DATABASE  ctemp_systemp_Derby_TestErr_db)  DRDAID  null)  Cleanup action starting . GMT Thread main  main  XID  )  SESSIONID  )  DATABASE  ctemp_systemp_Derby_TestErr_db)  DRDAID  null)  Failed Statement is CREATE VIEW v f) AS VALUES NULLjava.lang.NullPointerException at org.apache.derby.impl.sql.catalog.SYSCOLUMNSRowFactory.makeRowUnknown Source) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addDescriptorArrayUnknown Source) at org.apache.derby.impl.sql.execute.CreateViewConstantAction.executeConstantActionUnknown Source) at org.apache.derby.impl.sql.execute.MiscResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source)   
0;jdbcapi.LobStreamsTest runs only in client not embedded) but its suite) method gives no reason why.   ;Its essential to document why such decisions were made  makes life easier for subsequent deveopers as they try to understand the code and why it is not being used to test embedded.   
0;Setting a login timeout in client driver can lead to query timeout   ;Setting the login timeout by using DriverManager.setLoginTimeoutintseconds) also affects the amount of time the client driver is waitingfor a query to finish. For instance  setting the login timeout to seconds will result in any queries taking more than  seconds to failwith the following exceptionException thrown java.sql.SQLException A communications error has been detected Read timed out.java.sql.SQLException A communications error has been detected Read timed out. at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.client.am.SqlException.getSQLExceptionSqlException.java) at org.apache.derby.client.am.Statement.executeQueryStatement.java) at LoginTimeout.mainLoginTimeout.java)Caused by org.apache.derby.client.am.DisconnectException A communications error has been detected Read timed out. at org.apache.derby.client.net.NetAgent.throwCommunicationsFailureNetAgent.java) at org.apache.derby.client.net.Reply.fillReply.java) at org.apache.derby.client.net.Reply.ensureALayerDataInBufferReply.java) at org.apache.derby.client.net.Reply.readDssHeaderReply.java) at org.apache.derby.client.net.Reply.startSameIdChainParseReply.java) at org.apache.derby.client.net.NetStatementReply.readPrepareDescribeOutputNetStatementReply.java) at org.apache.derby.client.net.StatementReply.readPrepareDescribeOutputStatementReply.java) at org.apache.derby.client.net.NetStatement.readPrepareDescribeOutput_NetStatement.java) at org.apache.derby.client.am.Statement.readPrepareDescribeOutputStatement.java) at org.apache.derby.client.am.Statement.flowExecuteStatement.java) at org.apache.derby.client.am.Statement.executeQueryXStatement.java) at org.apache.derby.client.am.Statement.executeQueryStatement.java) ...  moreCaused by java.net.SocketTimeoutException Read timed out at java.net.SocketInputStream.socketReadNative Method) at java.net.SocketInputStream.readSocketInputStream.java) at org.apache.derby.client.net.Reply.fillReply.java) ...  more   
0;set schema sys followed by show tables does not show tables in sys schema   ;If you create a new database in IJ  followed by set schema sys and then show tables  ij shows no tables in the schema. This is because ijs show tables command only shows system tables if a schema is provided.   
0;provide checking tool to flag possible errors in message translations   ;It would be useful to have a tool available that flags possible translation file issues  such as missing translations for new) English messages mismatched parameters between English and nonEnglish messages translation of keywords quoting problems i.e. use of double quotes when single quotes should be used  use of single quotes when double quotes should be used. This is based on whats described in the MessageFormat api doc) mismatched characters such as lt  when meaning smaller than)  gt  when meaning larger than)   etc. identification of invalid characters  specifically characters in the range of xxf which are ASCII) and xfxffNote that such a tool cannot be definite except about the missing messages) because the English messages are not following very strict formatting  and because whats acceptable syntaxgrammar in one language may not work in another. A discussion about a first cut at such a tool can be found athttpcomments.gmane.orggmane.comp.apache.db.derby.devel   
1;Setting derby.database.classpath to contain installed jars causes the database to be unbootable when a Securitymanager is installed.   ;If the jars are sucessfully installed without a security manager see DERBY) and the class path set then subsequent boots with a security manager fail with a SecurityException due to trying to install a class loader.Related to DERBY but not the same.   
0;Make class org.apache.derby.iapi.store.raw.PageKey final   ;The methods of the PageKey class are called frequently both from the lock manager and the cache manager. Since no other classes extend it  it should be declared final to help the runtime compiler optimize the method calls.   
0;TestDataSourceFactory doesnt work correctly outside the old harness   ;TestDataSourceFactory uses TestUtil to create DataSource  ConnectionPoolDataSource and XADataSource objects. TestUtil needs to run in the old harness in order to detect which framework it is running under  so it will create embedded data sources for all JUnit tests that are run outside the old harness.   
0;LangScripts JUnit test fails in views.sql   ;LangScripts JUnit test fails in views.sqlThere was  failure) viewsorg.apache.derbyTesting.functionTests.tests.lang.LangScripts )junit.framework.ComparisonFailure Output at line  expectedlt ...T because VIEW SV   is dependent on th...gt  but waslt ...T because VIEW SV   is dependent on th...gt  at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanonCanonTestCase.java) at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTestScriptTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)FAILURESTests run   Failures   Errors Some observationsIf org.apache.derbyTesting.functionTests.tests.lang.LangScripts is used to run views.sql as a single test  then it ran smoothly without a problem..Time .OK  test)But if views.sql is run as part of a suite  then the ordering diff occurs.   
0;JDBC.assertRowInResultSet compares the wrong value if using trimmed strings and a SMALLINT column exists.   ;There is a bug in assertRowInResultSet where a path through the loop does not set the variable obj.This leads to it being compared with the previous value.Using locally scoped variables within the loop would have most likely caught this bug at development time.Then the compiler sees that obj has one uninitialzed path through the code and throws an error.   
0;Rewrite derbynetSuicideOfStreaming to a JUnit test   ;The test derbynetSuicideOfStreaming should be rewritten to a JUnit test more in line with our newly created test system.It is one of the last tests still being run from the deprecated testsjunitTests directory  through a wrapper class.   
0;NullPointerException when two threads load sort factory concurrently   ;  ERROR  poolthread  history.helpers.HistoryDataAccessHelper  failed to read measurements  filter  fromTimeMon Nov   MSK   toTimeMon Nov   MSK     propertiesvalue) org.springframework.jdbc.UncategorizedSQLException PreparedStatementCallback  uncategorized SQLException for SQL  SELECT COUNTDISTINCT sshis.measurement_time) FROM sshis_property_measurement sshis INNER JOIN sstmp_filter_ filtertbl ON sshis.property_id  filtertbl.property_id WHERE sshis.measurement_time gt  ? AND sshis.measurement_time lt  ?   SQL state  XJ   error code     Java exception java.lang.NullPointerException.  nested exception isorg.apache.derby.impl.jdbc.EmbedSQLException Java exception  java.lang.NullPointerException.java.lang.NullPointerException at java.util.Hashtable.putUnknown Source) at org.apache.derby.impl.store.access.RAMAccessManager.registerAccessMethodUnknown Source) at org.apache.derby.impl.store.access.RAMAccessManager.findMethodFactoryByImplUnknown Source) at org.apache.derby.impl.store.access.RAMTransaction.createSortUnknownSource) at org.apache.derby.impl.sql.execute.DistinctScalarAggregateResultSet.loadSorterUnknown Source) at org.apache.derby.impl.sql.execute.DistinctScalarAggregateResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQueryUnknown Source) at org.springframework.jdbc.core.JdbcTemplate.doInPreparedStatementJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.executeJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.queryJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.queryJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.queryJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.queryJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.queryForObjectJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.queryForObjectJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.queryForIntJdbcTemplate.java) at com.meshnetics.wsn.ctrl.dispatcher.services.history.helpers.MeasurementsSaveGetHelper.getMeasurementsMeasurementsSaveGetHelper.java) at com.meshnetics.wsn.ctrl.dispatcher.services.history.helpers.HistoryDataAccessHelper.doInTransactionHistoryDataAccessHelper.java) at com.meshnetics.wsn.ctrl.dispatcher.services.history.helpers.HistoryDataAccessHelper.doInTransactionHistoryDataAccessHelper.java) at org.springframework.transaction.support.TransactionTemplate.executeTransactionTemplate.java) at com.meshnetics.wsn.ctrl.dispatcher.services.history.helpers.HistoryDataAccessHelper.getMeasurementsHistoryDataAccessHelper.java) at com.meshnetics.wsn.ctrl.dispatcher.services.history.asyncread.MeasurementsReadTask.executeTaskMeasurementsReadTask.java) at com.meshnetics.wsn.ctrl.dispatcher.services.history.asyncread.MeasurementsReadTask.runMeasurementsReadTask.java) at java.util.concurrent.ExecutorsRunnableAdapter.callUnknown Source) at java.util.concurrent.FutureTaskSync.innerRunUnknown Source) at java.util.concurrent.FutureTask.runUnknown Source) at java.util.concurrent.ThreadPoolExecutorWorker.runTaskUnknown Source) at java.util.concurrent.ThreadPoolExecutorWorker.runUnknown Source) at java.lang.Thread.runUnknown Source)   
0;storeBootAllTest.junit fails on wctme. foundation  on .   ;Fails on .. wctme. foundation                 Diff file derbyallstoreallstoremoreBootAllTest.diff             Start BootAllTest jdkJME Foundation Specification v. storeallstoremore   *** addgt  .Egt  There was  errorgt  ) testSettingBootAllPropertyWithHomePropertySetorg.apache.derbyTesting.functionTests.tests.store.BootAllTest)java.lang.NoClassDefFoundError java.sql.DriverManagergt  FAILURESgt  Tests run   Failures   Errors Test Failed. End BootAllTest jdkJME Foundation Specification v. storeallstoremore   ***   
0;After a Lexical Error due to syntax error      even a simple create table does not work  on the same connection.   ;connect jdbcderbywombat createtrue create table ta int )  create table ta int )    this should fail. create table foo a int   YEAR int )    but this should not fail. But failingcreate table t  b int )  FYI java org.apache.derby.tools.ijij version .ijgt  run weird.sql ijgt  connect jdbcderbywombat createtrue ijgt  create table ta int )   rows insertedupdateddeletedijgt  create table ta int )   rows insertedupdateddeletedijgt    this should fail.create table foo a int   YEAR int )  ERROR X Lexical error at line   column . Encountered  )  after .ijgt    but this should not fail. But failingcreate table t  b int )  ERROR X Syntax error Encountered  at line   column .ijgt    
1;Implement SSLTLS communication between client and server   ;Implement SSLTLS communication between client and server   
0;Let Clock embed a HashMap rather than inherit from Hashtable   ;Clock currently inherits from Hashtable  but the use of Hashtable is really an implementation detail that would benefit from being hidden as private member. All access to the hashtable happens inside sychronized blocks so it is safe to substitute a HashMap. This change appears to trigger a small increase in throughput  as measured by the average TPS number obtained by running the select client from DERBY repeatedly.   
0;Test files missing svneolstyle   ;The following files dont have the svneolstyle propertyfunctionTestsharnessibm.javafunctionTeststestsinMessageBundleTest.javafunctionTeststestsstoreLogDeviceTest.javafunctionTeststestsstoretestsst_derby.sqlfunctionTeststeststoolsIJRunScriptTest.javajunitSystemPropertyTestSetup.java   
0;Intermittent failure in langcompressTable.sql   ;langcompressTable.sql has failed a number of times in the nightly regression tests. The diffs vary slightlyhttpdbtg.thresher.comderbytesttrunkjvm.testingtestlogLinux...ELsmp_x_x_derbylang_diff.txthttpdbtg.thresher.comderbytesttrunkjvm.testingtestlogCYGWIN_NT._iunknownderbyall_diff.txt                 Diff file derbylangderbylangcompressTable.diff             Start compressTable jdk.._ derbylangderbylang   *** dellt  T | | agt  T | | Test Failed. End compressTable jdk.._ derbylangderbylang   ***    httpdbtg.thresher.comderbytesttrunkjvm.testingtestlogCYGWIN_NT._iunknownderbyall_diff.txt                 Diff file derbyallderbylangcompressTable.diff             Start compressTable jdk.._ derbyallderbylang   *** dellt  T | | agt  T | | Test Failed. End compressTable jdk.._ derbyallderbylang   ***   
0;Change some boundary checks in ArrayInputStream to ASSERTs to improve performance   ;Profiling shows that a significant amount of CPU is spent doing boundary checking in ArrayInputStream.setPosition) and ArrayInputStream.setLimit). These checks appear to be there to detect error conditions  so it seems more appropriate to make them ASSERTs. Especially since they are so expensive.DTrace analysis seems to confirm that these methods get called very frequentlyKnut Anders Hatlen wrote the following in a message on derbydevFYI  I just ran the DERBY test clients and traced them with aDTrace script that printed how often each method was called. For thejoin client  ArrayInputStream.setPosition) was the most frequentlycalled method . callstx). For the singlerecord select client it was third . callstx)  only beaten by Object.lt initgt ) andDDMWriter.ensureLength). I think this means that setPosition) is theengine method that is most frequently called  at least in readmostlytransactions. ArrayInputStream.setLimit) also appeared near the topof the list. See httpwiki.apache.orgdbderbyDerbyMethodCallsfor the details.   
0;Add long running System test for Derby   ;I will use this place to add  long running system tests for Derby.   
0;Replace Vectors and Hashtables with ArrayLists and HashMaps in RAMTransaction   ;In org.apache.derby.impl.store.access.RAMTransaction  synchronized collection objects could be replaced with unsynchronized ones. See discussion here httpwww.nabble.comUseofsynchronizedcontainersinenginecodetf.html   
0;Reduce use of synchronized collections in GenericLanguageConnectionContext   ;In org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext  it is probably safe to replace some of the synchronized collections with unsynchronized ones. This should be investigated  and the unnecessary synchronization should be removed. See discussion here httpwww.nabble.comUseofsynchronizedcontainersinenginecodetf.html   
0;suites.All falls over with foundation after revision   java.lang.NoClassFoundError javax.xml.parsers.DocumentBuilderFactory   ;When attempting to runlt jbinpathgt j jclfoun Dderby.system.homelt testhomegt  DderbyTesting.serverhostlocalhost DderbyTesting.clienthostlocalhost DderbyTesting.codeclassesfilelt classesdirgt  DderbyTesting.junitfileunused DderbyTesting.antjunitfileunused Djava.security.policyfilelt classesdirgt orgapachederbyTestingfunctionTestsutilderby_tests.policy Xbootclasspathalt jlibpathgt jdbc.jar cp lt classesdirgt  junit.jar junit.textui.TestRunner org.apache.derbyTesting.functionTests.suites.All The textui.TestRunner keels over with the following errorFailed to invoke suite)java.lang.NoClassDefFoundError javax.xml.parsers.DocumentBuilderFactoryThis happens after  but not before revision .   
0;message XSDB and Y have references to dbj   ;trunkmessages.xml shows two messages that incorrectly refer to dbjYAggregator class } for aggregate } on type } does not implement com.ibm.dbj.aggregates.Aggregator. There is now no class Aggregator in Derby. This message is generated from the class org.apache.derby.impl.sql.compile.AggregateNode.java. private void checkAggregatorClassNameString className throws StandardException  className  verifyClassExistclassName  false  if classInspector.assignableToclassName  org.apache.derby.iapi.sql.execute.ExecAggregator  throw StandardException.newException SQLState.LANG_BAD_AGGREGATOR_CLASS  className  aggregateName  operand.getTypeId.getSQLTypeName  } }The original in Cloudscape had a reference to an Aggregator class  the if looked like this if classInspector.assignableToclassName  com.ibm.dbj.aggregates.Aggregator amp amp  classInspector.assignableTo  className  com.ibm.dbj.protocol.Database.Language.Execution.ExecAggregator  throw StandardException.newExceptionSQLState.LANG_BAD_AGGREGATOR_CLASS   ....Maybe the message now needs to mention org.apache.derby.iapi.sql.execute.ExecAggregator?But  I think maybe this message cannot be obtained unless someone introduces a bug within the Derby code. I think the reference to another internal class should be removed. Or maybe the text of Cloudscape message Y can be used YLANG_BAD_AGGREGATOR_CLASSAggregator class } for aggregate } on type } is inaccessable or does not exist.XSDB.DDATA_MULTIPLE_JBMS_FORCE_LOCK WARNING Derby instance } is attempting to boot the database } even though Derby instance } may still be active. Only one instance of Derby should boot a database at a time. Severe and nonrecoverable corruption can result if  instances of Derby boot on the same database at the same time. The dbj.database.forceDatabaseLocktrue property has been set  so the database will not boot until the db.lck is no longer present. Normally this file is removed when the first instance of Derby to boot on the database exits  but it may be left behind in some shutdowns. It will be necessary to remove the file by hand in that case. It is important to verify that no other VM is accessing the database before deleting the db.lck file by hand.John Embretsen commented on this in DERBYhttpsissues.apache.orgjirabrowseDERBYaction_Indicating that not only should the message refer to derby.database.forceDatabaseLock  but the replacement of parameters is not happening either. But I can not find a place where this message is generated  so maybe it can just be removed.   
0;Trigger recompilation problem when trigger action has its table not qualified with a schema   ;Trigger recompilation problem when trigger action has its table not qualified with a schema.SPSs in SYS.SYSSTATEMENTS get invalidated for recompilation when sqlj.install_jar  sqlj.remove_jar  sqlj.replace_jar are called  or when a database upgrade is performed. The problem arises when the trigger action statement does not qualify the table with an explicit schema name. During recompilation it uses the default schema instead of using the original schema that was persisted in SYS.SYSSTATEMENTS causing an exception to occur. e.g.Cderbytrunkgt java classpath classes . org.apache.derby.tools.ijij version .ijgt  connect jdbcderbywombat createtrue ijgt  create table app.t i int  j int)  rows insertedupdateddeletedijgt  insert into app.t values  )  row insertedupdateddeleted  notice trigger actions update statement did not qualify table t with a schema nameijgt  create trigger app.tr after update of i on app.t update t set j    rows insertedupdateddeletedijgt  update app.t set ii  row insertedupdateddeletedijgt  select * from app.t I |J | row selected  this action invalidates the SPS and mark for recompilationijgt  call sqlj.install_jarcderbyprocsProcs.jar  APP.Procs  )  rows insertedupdateddeletedijgt  disconnect ijgt  connect jdbcderbywombat user user   recompilation occurs but uses USER as the schema to compile instead of APP  resulting in errorijgt  update app.t set ii ERROR Y Schema USER does not existijgt    
0;Nested triggers not working properly after maximum trigger count exception is thrown   ;After the maximum allowed nested trigger exception is thrown  subsequent statement that result in nested trigger execution may result in the same error again even though it does not exceed the limit of nested triggers).e.g.Cderbytrunkgt java classpath classes . org.apache.derby.tools.ijij version .ijgt  connect jdbcderbywombat createtrue ijgt  create table t i int)  rows insertedupdateddeletedijgt  insert into t values     rows insertedupdateddeletedijgt  create trigger tr after update on t for each row update t set ii  rows insertedupdateddeleted  force the maximum depth of nested triggers error to occurijgt  update t set ii ERROR  Maximum depth of nested triggers was exceeded.ijgt  drop trigger tr  rows insertedupdateddeletedijgt  create trigger tr after update on t referencing old as oldt for each row update t set ii where oldt.i  rows insertedupdateddeleted  this should have executed successfully instead of throwing the same error againijgt  update t set ii ERROR  Maximum depth of nested triggers was exceeded.ijgt  disconnect ijgt  connect jdbcderbywombat ijgt  select * from t I rows selected  ok after reconnection  it looks like the trigger execution contextTEC) may not have been cleanup properly in the previous connectionijgt  update t set ii  rows insertedupdateddeletedijgt  select * from t I rows selectedijgt    
0;Add performance tests to Derby using the junit perf framework   ;There is a simple performance junit framework that has been added as part of derby. There are a number of improvements suggested for derby  please see DERBY.This jira is to add new performance tests to derby so that these tests are easily available for anyone to run   report issues  fix issues etc..   
0;DROP PROCEDURE depends on SET SCHEMA   ;This is possibly related to Bug httpsissues.apache.orgjirabrowseDERBY.Use ij to execute the following statementsCREATE SCHEMA datamgmt CREATE PROCEDURE datamgmt.exit  IN value INTEGER ) MODIFIES SQL DATA PARAMETER STYLE JAVA LANGUAGE JAVA EXTERNAL NAME java.lang.System.exit DROP PROCEDURE datamgmt.exit DROP SCHEMA datamgmt RESTRICT Then execute exactly the same lines once again. Then statement DROP PROCEDURE datamgmt.exit yieldsERROR X PROCEDURE EXIT does not exist.However  if the DROP works if a default schema SET SCHEMA) is used instead of the prefixed schemaName. That is  the following lines can be executed more than once in a rowCREATE SCHEMA datamgmt CREATE PROCEDURE datamgmt.exit  IN value INTEGER ) MODIFIES SQL DATA PARAMETER STYLE JAVA LANGUAGE JAVA EXTERNAL NAME java.lang.System.exit SET SCHEMA datamgmt DROP PROCEDURE exit DROP SCHEMA datamgmt RESTRICT Therefore  SET SCHEMA can be used as a workaround  hence minor importance.   
0;javatestingREADME.htm needs to be updated with information on JUnit tests   ;Currently  the testing readme at javatestingREADME.htm does not contain any information on running or developing Derby junit tests. This document should at least be updated with information on how to run Derbys junit tests. A description of the toplevel suites and running the Ant junitreport target would be a good start.   
0;Uncommitted transactions executed throught XAResource will held locks after the application terminates or crashes during the transaction).   ;Using this piece of code derby will not release a table lock of dummy table. String query  insert into dummy field) values   Integer.toStringvalue)  )  XAConnection xaConnection  createXAConnectionjdbcderbylocalhostTestDB    )  XAResource xaResource  xaConnection.getXAResource)  conn  xaConnection.getConnection)  Xid xid  createXidvalue)   xaResource.setTransactionTimeout)  xaResource.startxid  XAResource.TMNOFLAGS)  Statement statement  conn.createStatement)  statement.executequery)    terminate the client application  this will not release any locks System.exit)    
0;show indexes in SCHEMANAME does not work with the client driver   ;The ij command show indexes in SCHEMANAME does not work at all with the client driver.It does work with the embedded driver.Sample output from ijijgt  connect jdbcderbylocalhostmyDB createtrue ijgt  create table test id int primary key)  rows insertedupdateddeletedijgt  show indexes in app ERROR XJ Table name can not be nullijgt  show indexes from test TABLE_NAME |COLUMN_NAME |NON_Uamp |TYPE|ASCamp |CARDINAamp |PAGESTEST |ID | | |A |NULL |NULL row selectedijgt  show indexes from app.test TABLE_NAME |COLUMN_NAME |NON_Uamp |TYPE|ASCamp |CARDINAamp |PAGESTEST |ID | | |A |NULL |NULL row selectedijgt Using delimited table andor schema names does not work  but I think this is according to documentation.I.e.ijgt  show indexes from TEST ERROR X Syntax error Encountered show at line   column .ijgt  show indexes from APP.test ERROR X Syntax error Encountered show at line   column .ijgt  show indexes from APP.TEST ERROR X Syntax error Encountered show at line   column .ijgt    
0;Let BasePage.fetchFieldFromSlot use the special singlecol FetchDescriptor ctor   ;BasePage.fetchFieldFromSlot needs to construct a FetchDescriptor with single column. To do this it creates a FormatableBitSet that identifies the correct column and then passes this bitset to the FetchDescriptor constructor. But FetchDescriptor has a special constructor for the single column case  that doesnt need a bitset. Using this constructor instead makes the code simpler  and presumably more efficient as well.   
0;Test harness should support JME .   ;I would like to enable the old test harness to support the new version of IBMs jME implementation  which is based on jME jdk spec version .. This is available with a product named Websphere Everyplace Micro Edition .. from IBM.We already support j_foundation  which matches to jME jdk spec .. Id like to add j_foundation  which then matches to jME jdk spec ..Im proposing to switch my automated tests over to the newer version going forward  and to minimize complexity of the change  Id like to make the canons reflect behavior of the new version. The differences are minimal. However  I want to be able to still run with the old except where the results differ  failures would occur with the old version).One of the reasons for moving to the new version is that there is a bug with the older version in regards to security manager  preventing a smooth run of the junit tests  and Id like to run all shortrunning tests suites.All and derbyall) with at least one of the versions. Another reason is that the jME spec . is really old.   
0;compatibilitytest fails after DERBY change.   ;Clientserver compatibility testing with JVM . is not relevant on trunk. following DERBYSee e.g. httpdbtg.thresher.comderbytesttinderbox_trunkjvm.testingLimitedtestSummary.htmlhttpdbtg.thresher.comderbytesttrunkjvm.testingLimitedtestSummary.html   
1;Assert during log file switch log file position exceeded max log file size   ;When running simple tpcb like transactions against a embedded Derby based on a SANE build of trunk the following assertion occurs for the background thread and all user threads org.apache.derby.shared.common.sanity.AssertFailure ASSERT FAILED log file position exceeded max log file sizeThis seems to occur during a switch to a new log file.derby.log contains the following call stack for the background threadException trace org.apache.derby.shared.common.sanity.AssertFailure ASSERT FAILED log file position exceeded max log file size at org.apache.derby.shared.common.sanity.SanityManager.ASSERTSanityManager.java) at org.apache.derby.impl.store.raw.log.LogCounter.makeLogInstantAsLongLogCounter.java) at org.apache.derby.impl.store.raw.log.LogToFile.switchLogFileLogToFile.java) at org.apache.derby.impl.store.raw.log.LogToFile.appendLogRecordLogToFile.java) at org.apache.derby.impl.store.raw.log.FileLogger.logAndDoFileLogger.java) at org.apache.derby.impl.store.raw.xact.Xact.logAndDoXact.java) at org.apache.derby.impl.store.raw.log.LogToFile.checkpointWithTranLogToFile.java) at org.apache.derby.impl.store.raw.log.LogToFile.checkpointLogToFile.java) at org.apache.derby.impl.store.raw.RawStore.checkpointRawStore.java) at org.apache.derby.impl.store.raw.log.LogToFile.performWorkLogToFile.java) at org.apache.derby.impl.services.daemon.BasicDaemon.serviceClientBasicDaemon.java) at org.apache.derby.impl.services.daemon.BasicDaemon.workBasicDaemon.java) at org.apache.derby.impl.services.daemon.BasicDaemon.runBasicDaemon.java) at java.lang.Thread.runThread.java) . GMT Thread derby.rawStoreDaemon  derby.daemons  Cleanup action startingorg.apache.derby.shared.common.sanity.AssertFailure ASSERT FAILED log file position exceeded max log file size at org.apache.derby.shared.common.sanity.SanityManager.ASSERTSanityManager.java) at org.apache.derby.impl.store.raw.log.LogCounter.makeLogInstantAsLongLogCounter.java) at org.apache.derby.impl.store.raw.log.LogToFile.switchLogFileLogToFile.java) at org.apache.derby.impl.store.raw.log.LogToFile.appendLogRecordLogToFile.java) at org.apache.derby.impl.store.raw.log.FileLogger.logAndDoFileLogger.java) at org.apache.derby.impl.store.raw.xact.Xact.logAndDoXact.java) at org.apache.derby.impl.store.raw.log.LogToFile.checkpointWithTranLogToFile.java) at org.apache.derby.impl.store.raw.log.LogToFile.checkpointLogToFile.java) at org.apache.derby.impl.store.raw.RawStore.checkpointRawStore.java) at org.apache.derby.impl.store.raw.log.LogToFile.performWorkLogToFile.java) at org.apache.derby.impl.services.daemon.BasicDaemon.serviceClientBasicDaemon.java) at org.apache.derby.impl.services.daemon.BasicDaemon.workBasicDaemon.java) at org.apache.derby.impl.services.daemon.BasicDaemon.runBasicDaemon.java) at java.lang.Thread.runThread.java)Cleanup action completedFor my user threads the call stack is similarDatabase Class Loader started  derby.database.classpath . GMT Thread Thread  main  XID  )  SESSIONID  )  DATABASE  exporthometmpderbydb)  DRDAID  null)  Cleanup action starting . GMT Thread Thread  main  XID  )  SESSIONID  )  DATABASE  exporthometmpderbydb)  DRDAID  null)  Failed Statement is UPDATE accounts SET abal  abal  ? WHERE aid  ? AND bid  ?org.apache.derby.shared.common.sanity.AssertFailure ASSERT FAILED log file position exceeded max log file size at org.apache.derby.shared.common.sanity.SanityManager.ASSERTSanityManager.java) at org.apache.derby.impl.store.raw.log.LogCounter.makeLogInstantAsLongLogCounter.java) at org.apache.derby.impl.store.raw.log.LogToFile.switchLogFileLogToFile.java) at org.apache.derby.impl.store.raw.log.LogToFile.appendLogRecordLogToFile.java) at org.apache.derby.impl.store.raw.log.FileLogger.logAndDoFileLogger.java) at org.apache.derby.impl.store.raw.xact.Xact.logAndDoXact.java) at org.apache.derby.impl.store.raw.data.LoggableActions.doActionLoggableActions.java) at org.apache.derby.impl.store.raw.data.LoggableActions.actionUpdateLoggableActions.java) at org.apache.derby.impl.store.raw.data.StoredPage.doUpdateAtSlotStoredPage.java) at org.apache.derby.impl.store.raw.data.BasePage.updateAtSlotBasePage.java) at org.apache.derby.impl.store.access.conglomerate.GenericConglomerateController.replaceGenericConglomerateController.java) at org.apache.derby.impl.sql.execute.RowChangerImpl.updateRowRowChangerImpl.java) at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRowsUpdateResultSet.java) at org.apache.derby.impl.sql.execute.UpdateResultSet.openUpdateResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateEmbedPreparedStatement.java) at com.sun.derby.perf.clients.tpcb.DBConnection.performTransactionDBConnection.java) at com.sun.derby.perf.clients.tpcb.Client.runClient.java)After this it seems like no user threads are able to connect to the database not surpricing).This happend using a SANE build and I am unsure by just looking at the assertion in the code whether this situation would have been fatal also if I had been using an INSANE build.   
0;DatabaseMetaData.getTypeInfo) does not list supported Derby SQL types correctly.   ;These types are returned but not supported by Derby.LONG NVARCHARNATIONAL CHARNATIONAL CHAR VARYINGThe XML type is supported by Derby but not returned.   
0;DatabaseMetaData.getTypeInfo returns incorrect MAXIMUM_SCALE value for DECIMAL and NUMERIC types   ;Maximum scale is returned as  but maximum scale for numerics is .   
1;bad logic in jvmguessWSHome) in old test harness affects j runs   ;Running derbyall using either wcmte._foundation or weme. results in the following stack trace.Exception in thread main java.lang.StringIndexOutOfBoundsException at java.lang.String.substringString.java at org.apache.derbyTesting.functionTests.harness.jvm.guessWSHomejvm.java at org.apache.derbyTesting.functionTests.harness.jvm.getSecurityPropsjvm.java at org.apache.derbyTesting.functionTests.harness.jvm.setSecurityPropsjvm.java at org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommandRunTest.java at org.apache.derbyTesting.functionTests.harness.RunTest.testRunRunTest.java at org.apache.derbyTesting.functionTests.harness.RunTest.mainRunTest.javaI think this code was not reached until various security related changes recently  but the code is just bad.I think this code was used at one point to attempt to kick off another jvm to run a server with  but that is now defunct.Rather than try to make the code work  or try to clean it up  Id rather spend time converting tests to the junit framework  so I will just fix this up so we dont hit the error.The bad code is  wshome  jhome.substring jhome.indexOfsep  jre  wshome  wshome.substring wshome.lastIndexOfsep If the jhome  System.getPropertyjava.home does not contain jre  we will get  as the nd parameter in jhome.substring  and thus cause the ArrayIndexOutOfBounds.I propose to fix this piece of code as follows int havejrejhome.indexOfsep  jre  if havejre gt    wshome  jhome.substring jhome.indexOfsep  jre  wshome  wshome.substring wshome.lastIndexOfsep  } else wshome  jhome.substring jhome.lastIndexOfsep    
1;AccessControlException when exiting junit.swingui.TestRunner   ;When the JUnit tests are run with junit.swingui.TestRunner  one gets the following exception when the test runner window is closedException in thread AWTEventQueue java.security.AccessControlException access denied java.io.FilePermission homekh.junitsession write)   
0;Add a generic utility tool to drive the Order Entry load phase.   ;Add a generic utility program that can take in the driver name and the database connection url to populate the order entry database. Currently the load phase for OE is completed and hence this driver program should allow one to be able to populate the database.Maybe once OE run is completed  we can add the driving of the transactions also. This driver can be in org.apache.derbyTesting.system.oe.runsee DERBY and subtasks for details.   
0;Missing sql script orgapachederbyTestingfunctionTeststestslangaltertableDropColumn.sql   ;Seen since svn r   CET.First occurence in httpdbtg.thresher.comderbytesttinderbox_trunkjvm.testingLimitedtestSummary.html .Also in httpdbtg.thresher.comderbytestDailyjvm.testingLimitedtestSummary.html all platforms except windows?).derbyallderbyall_fail.txt showsderbyallderbyallderbylang.faillangaltertableDropColumn.sql derbyallderbyall_diff.txt does not show a diff.butderbyall.sum shows     Start altertable jdk.. derbyallderbylang   *** End altertable jdk.. derbyallderbylang   ***Could not locate langaltertableDropColumn.sqlException in thread main java.io.FileNotFoundException orgapachederbyTestingfunctionTeststestslangaltertableDropColumn.sql at org.apache.derbyTesting.functionTests.harness.RunTest.setDirectoriesRunTest.java) at org.apache.derbyTesting.functionTests.harness.RunTest.mainRunTest.java)    On windows I found that derbyall.sum contained     Start altertable jdk.._ derbyallderbylang   *** End altertable jdk.._ derbyallderbylang   ***Could not locate langaltertableDropColumn.sqlException in thread main java.io.IOException The filename  directory name  or volume label syntax is incorrect at java.io.WinNTFileSystem.canonicalizeNative Method) at java.io.WinFileSystem.canonicalizeWinFileSystem.java) at java.io.File.getCanonicalPathFile.java) at org.apache.derbyTesting.functionTests.harness.RunTest.addToListFileRunTest.java) at org.apache.derbyTesting.functionTests.harness.RunTest.addToFailuresRunTest.java) at org.apache.derbyTesting.functionTests.harness.RunTest.setDirectoriesRunTest.java) at org.apache.derbyTesting.functionTests.harness.RunTest.mainRunTest.java)   
0;compatibilitytestScript.xml should include .. in the serverclient combinations   ;Add SERVER_... and CLIENT_... in the combinations to be tested.   
0;Convert compatibilitytestScript.xml to JUnit   ;I have started converting compatibilitytestScript.xml to JUnit to) be able to more dynamically specify which combinations to test  ) get standard JUnit reports from the test  and) more easily include the compatibility test in the regression test runs.I plan to use a property file patterened after the current ant.property file for the compatibility test)  to specify jvm and derby library locations.With the growing number of jvm and derby versions I also think that it should be possible to specify a number of different kinds of compatibility test combinations for examplea) the current way  which is all combinations of derby and jvm on both  server and client.  derbys*jvms)*derbys*jvms) b) Current trunk client and jvms vs. all server derbys and jvms.  *jvms)*derbys*jvms) c) All clients and jvms vs. current trunk server and jvms.  derbys*jvms)**jvms) d) Exact specification of the combinations to be tested.  N*M)*X*Y) Which kind of test to run should be specified in the property file.   
0;org.apache.derbyTesting.functionTests.suites.All is extremely CPU intensive since ~svn    ;Run org.apache.derbyTesting.functionTests.suites.All.httpwww.nabble.comorg.apache.derbyTesting.functionTests.suites.AllisextremelyCPUintensivetf.htmlSee e.g. httpdbtg.thresher.comderbytesttinderbox_trunkjvm.testingLimitedtestSummary.htmlhttpdbtg.thresher.comderbytesttrunkjvm.testingLimitedtestSummary.htmlThese logs also include thread dumps.   
0;Accessing a BLOB column twice in an INSERT trigger leads to errors in the value ondisk   ;Either the BLOB is stored with the incorrect value or the value on disk does not match the stored length on disk and an exception is raised. The BLOB was supplied as a stream value.See this with the new TriggersTest. The text fixture will have a comment with this bug number showing how to reproduce the problem.   
0;Use of XML values in the action statement of a trigger throw exceptions.   ;A trigger like  where V  V and V are columns of type XML will thrown an exception when fired.CREATE TRIGGER AIS AFTER INSERT ON T_MAIN  REFERENCING NEW_TABLE AS N FOR EACH STATEMENT  INSERT INTO T_ACTION_STATEMENTA  V  ID  V)  SELECT I  V  ID  V FROM NERROR  The exception java.sql.SQLException An attempt was made to get a data value of type java.lang.Object from a data value of type XML. was thrown while evaluating an expression.Most likely because triggers are implementing using VTIs and hence JDBC ResultSets and XML is not supported through JDBC yet.TriggerTest shows this issue  see the comment with the bug number to reproduce.   
0;ORDER BY with expression with distinct in the select list returns incorrect result   ;When distinct is in the select list and the query has order by with expression  the resultset produced contains an additional column. ijgt  create table t c int  c varchar)) rows insertedupdateddeletedijgt  insert into t values  a)  b)  c)  rows insertedupdateddeletedselect distinct c  c from t order by c C |C |a |b |c rows selectedijgt  select distinct c  c from t order by c C |C | lt returns  columns  incorrect result returned |a | |b | |c | rows selected   
0;Unable to perform select query using DISTINCT on a readonly database   ;It is not possible to perform queries using DISTINCT on a readonly database packaged in a zip file. This generates the following errorERROR XD Container was opened in readonly mode.  at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.store.raw.data.BaseContainer.useUnknown Source) at org.apache.derby.impl.store.raw.data.BaseContainerHandle.useContainerUnknown Source) at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.openContainerUnknown Source) at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.openContainerUnknown Source) at org.apache.derby.impl.store.raw.xact.Xact.openContainerUnknown Source) at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.addContainerUnknown Source) at org.apache.derby.impl.store.raw.xact.Xact.addContainerUnknown Source) at org.apache.derby.impl.store.access.heap.Heap.createUnknown Source) at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.createConglomerateUnknown Source) at org.apache.derby.impl.store.access.RAMTransaction.createConglomerateUnknown Source) at org.apache.derby.iapi.store.access.DiskHashtable.lt initgt Unknown Source) at org.apache.derby.iapi.store.access.BackingStoreHashtable.spillToDiskUnknown Source) at org.apache.derby.iapi.store.access.BackingStoreHashtable.add_row_to_hash_tableUnknown Source) at org.apache.derby.iapi.store.access.BackingStoreHashtable.putUnknown Source) at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRowsUnknown Source) at org.apache.derby.impl.store.access.btree.BTreeScan.fetchSetUnknown Source) at org.apache.derby.impl.store.access.BackingStoreHashTableFromScan.lt initgt Unknown Source) at org.apache.derby.impl.store.access.RAMTransaction.createBackingStoreHashtableFromScanUnknown Source) at org.apache.derby.impl.sql.execute.HashScanResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeQueryUnknown Source) at DerbyTest.mainDerbyTest.java)The problem can be reproduced using the attached java program and the following database filehttpftp.bigcat.unimaas.nl~thomas.kelderderbytesttestdb.zip.Both the derby.storage.tempDirectory and derby.stream.error.file properties are set to writable locations  as advised in the help file.Also see derbyuser mailing list thread httparticle.gmane.orggmane.comp.apache.db.derby.userThis appears to be a bug  possibly a regression. When I converted yourDB to. everything worked fine even when I did NOT set the propertiesfor tempDirectory and error.file hmmm..). When I switched to using the. or . jars and accessed the very same database the XD ERRORhappened. Stanley Bradbury)   
0;Code cleanups for the org.apache.derby.impl.store.access.* packages   ;When trying to learn more about the access layer  it was discovered that some code improvements could easily be made to increase the readability of the code.Patches attached to this issue will be cleanup patches only  and no functionality should be changed. Changes the willmay be made remove unused imports remove unused methods fix JavaDoc errors tighter encapsulation and removal of unused variables where appropriate   
0;Modify compatibilitytestScript.xml to not run embeddedjvm. case any more  not valid after r   ;After svn rDERBY Remove some uses of javacompile.classpath that do not require code changes.) the compatibility test for embeddedjvm. should be removed.ERROR XBM Startup failed due to missing functionality for org.apache.derby.iapi.types.DataValueFactory. Please ensure your classpath includes the correct Derby software.compatibility diff                  Start embedded_VM.java.sql.SQLException Failed to start database compatDB  see the next exception for details. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.newSQLExceptionUnknown Source) at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source)Exception in thread main java.lang.Exception Error lookup up server info Failed to start database compatDB  see the next exception for details.             End embedded_VM.    compatibilityembedded_VM.VM Version  .Driver org.apache.derby.jdbc.AutoloadedDriver Version  .java.sql.SQLException Failed to start database compatDB  see the next exception for details. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.newSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabaseUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionUnknown Source) at org.apache.derby.jdbc.InternalDriver.connectUnknown Source) at org.apache.derby.jdbc.AutoloadedDriver.connectUnknown Source) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java) at org.apache.derbyTesting.functionTests.util.DerbyJUnitTest.getConnectionDerbyJUnitTest.java) at org.apache.derbyTesting.functionTests.util.DerbyJUnitTest.getConnectionDerbyJUnitTest.java) at org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.CompatibilitySuite.findServerCompatibilitySuite.java) at org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.CompatibilitySuite.mainCompatibilitySuite.java)ERROR XBM Startup failed due to missing functionality for org.apache.derby.iapi.types.DataValueFactory. Please ensure your classpath includes the correct Derby software. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.iapi.services.monitor.Monitor.missingImplementationUnknown Source) at org.apache.derby.impl.services.monitor.TopService.bootModuleUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleUnknown Source) at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleUnknown Source) at org.apache.derby.impl.db.BasicDatabase.bootUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.bootUnknown Source) at org.apache.derby.impl.services.monitor.TopService.bootModuleUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.bootServiceUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderServiceUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartServiceUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceUnknown Source) at org.apache.derby.iapi.services.monitor.Monitor.startPersistentServiceUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabaseUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionUnknown Source) at org.apache.derby.jdbc.InternalDriver.connectUnknown Source) at org.apache.derby.jdbc.AutoloadedDriver.connectUnknown Source) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java) at org.apache.derbyTesting.functionTests.util.DerbyJUnitTest.getConnectionDerbyJUnitTest.java) at org.apache.derbyTesting.functionTests.util.DerbyJUnitTest.getConnectionDerbyJUnitTest.java) at org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.CompatibilitySuite.findServerCompatibilitySuite.java) at org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.CompatibilitySuite.mainCompatibilitySuite.java)Exception in thread main java.lang.Exception Error lookup up server info Failed to start database compatDB  see the next exception for details. at org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.CompatibilitySuite.findServerCompatibilitySuite.java) at org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.CompatibilitySuite.mainCompatibilitySuite.java)   
0;EXISTS may return the wrong value for subqueries involving set operations   ;It seems like EXISTS on a SELECT returning zero rows returns false asexpected)  but EXISTS on INTERSECT of two disjunct sets returns true e.g EXISTS values  intersect values ).Yip Ng wrote on derbydevI believe its probably got to do with the EXISTS subquery transformingthe original RCL toa TRUE boolean value for the INTERSECT. So during row comparison atexecution timefor INTERSECT processing since true  truethus intersects)  so itwill always return BAD. Likewise select * from  values OK ) as T where exists values  except values ) This supposedly should return OK but because of the booleantransformation mentionedabove for EXISTS subquery  it will return no rows for EXCEPTprocessing.   
0;Setting a default value for a VARCHAR column fails when column contains data   ;Im seeing a problem updating the default value for a VARCHAR column when the column already contains data. Im  usingalter table TABLE_NAME alter column COL_NAME DEFAULT new valueand with some VARCHAR columns I get an error like thisInvalid character string format for type long.  nested exception is java.sql.SQLException Invalid character string format for type long.Caused by ERROR  Invalid character string format for type long. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.iapi.types.SQLChar.getLongUnknown Source) at org.apache.derby.impl.sql.execute.AlterTableConstantAction.getColumnMaxUnknown Source) at org.apache.derby.impl.sql.execute.AlterTableConstantAction.modifyColumnDefaultUnknown Source) at org.apache.derby.impl.sql.execute.AlterTableConstantAction.execGutsUnknown Source) at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantActionUnknown Source) at org.apache.derby.impl.sql.execute.MiscResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source)This only happens on VARCHAR columns containing data. Columns that are entirely NULL update fine. This was discussed on users mailing listhttpwww.nabble.comproblemwithALTERCOLUMNDEFAULTonVARCHARcolumntf.htmland the conclusion was that it is related to this statement being run internally as part of the updata processSELECT MAXCOL_NAME) FROM TABLE_NAME As reported in that discussionbash.b java org.apache.derby.tools.ijij version .ijgt  connect jdbcderbybrydb ijgt  create table t a varchar))  rows insertedupdateddeletedijgt  alter table t alter column a default my val  rows insertedupdateddeletedijgt  insert into t a) values hi)  row insertedupdateddeletedijgt  alter table t alter column a default another val ERROR  Invalid character string format for type long.   
0;ParameterMappingTest fails due to ArrayIndexOutOfBoundsException  executing a procedure   ;The test ParameterMappingTest fails due to a connection reset error during tearDown. Commenting out the teardown actions I see that the real cause of the connection reset is an ArrayIndexOutOfBoundsException executing a callable statement. I have not narrowed it down more than this. Currently the test runs only for embedded. It should be reenabled for client once this bug is fixed. Below is the stack tracejava.lang.ArrayIndexOutOfBoundsException at java.lang.System.arraycopyNative Method) at org.apache.derby.client.net.Reply.shiftBufferReply.java) at org.apache.derby.client.net.Reply.ensureSpaceInBufferForFillReply.java) at org.apache.derby.client.net.Reply.fillReply.java) at org.apache.derby.client.net.Reply.ensureALayerDataInBufferReply.javaCompiled Code)) at org.apache.derby.client.net.Reply.readDssHeaderReply.java) at org.apache.derby.client.net.Reply.peekCodePointReply.java) at org.apache.derby.client.net.NetStatementReply.parseEXCSQLSTTreplyNetStatementReply.java) at org.apache.derby.client.net.NetStatementReply.readExecuteCallNetStatementReply.java) at org.apache.derby.client.net.StatementReply.readExecuteCallStatementReply.java) at org.apache.derby.client.net.NetStatement.readExecuteCall_NetStatement.java) at org.apache.derby.client.am.Statement.readExecuteCallStatement.java) at org.apache.derby.client.am.PreparedStatement.flowExecutePreparedStatement.java) at org.apache.derby.client.am.PreparedStatement.executeXPreparedStatement.java) at org.apache.derby.client.am.PreparedStatement.executePreparedStatement.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.ParameterMappingTest.testParameterMappingParameterMappingTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at junit.framework.TestCase.runTestTestCase.java) at junit.framework.TestCase.runBareTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.framework.TestResult.protectTestResult.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.framework.TestResult.runTestResult.java) at junit.framework.TestCase.runTestCase.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.eclipse.jdt.internal.junit.runner.junit.JUnitTestReference.runJUnitTestReference.java) at org.eclipse.jdt.internal.junit.runner.TestExecution.runTestExecution.java) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTestsRemoteTestRunner.java) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTestsRemoteTestRunner.java) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runRemoteTestRunner.java) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.mainRemoteTestRunner.java)   
0;XAResource.end does not set the XA transaction state correctly when the XAException is thrown   ;As the comments in DERBY show when calling the XAResource.end the XAException may be thrown even when the transaction was successfully disassociated from the connection but the transaction was marked as rollback only. The code at the end of XAResource.end function does not handle this correctly. It either throws an XAException or sets the connection state to XA_T_NOT_ASSOCIATED. The corresponding code from NetXAResource.end method is if rc  XAResource.XA_OK  throwXAExceptionrc  false  }else  conn_.setXAStateConnection.XA_T_NOT_ASSOCIATED  }   
0;Provide collation sensitive subclasses for SQLChar  SQLVarchar  SQLLongvarchar and SQLClob which will use the passed Collator to do the collation rather than the default collation of UCS_BASIC   ;This jira entry is one of the tasks involved in implementing DERBY.The existing SQLChar datatype has the Derbys default collation which is UCS_BASIC defined on them. With Derby .  we want to support an additional collation for char datatypes which will be based on the territory. This jira issue is the placeholder for creating subclass of SQLChar which will use the passed Collator to do the collation. The current use of this class in Derby . will be for territory based collation but this class can be used in future for other kinds of collations like caseinsensitive etc.   
0;ejbql and floattypes in org.apache.derbyTesting.functionTests.tests.lang.LangScripts intermittently fails with expected but was<[.]     ;Seen intermittently on Linux since .Seen on Solaris .lt signaturegt ejbqlorg.apache.derbyTesting.functionTests.tests.lang.LangScripts)junit.framework.ComparisonFailure Output at line  expectedlt  .   gt  but waslt  .  gt  at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanonCanonTestCase.java) at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTestScriptTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)lt signaturegt lt signaturegt floattypesorg.apache.derbyTesting.functionTests.tests.lang.LangScripts)junit.framework.ComparisonFailure Output at line  expectedlt  .   gt  but waslt  .  gt  at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanonCanonTestCase.java) at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTestScriptTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)lt signaturegt    
0;Clob.Position returning wrong value when operating on Reader   ;   
0;File stream is left open when an exception occurs while setting up a character stream for data export.   ;The JUnit test toolsImportExportTest.java has been failing since it was first contributed with the following errorImportExportTestembeddedjunit.framework.AssertionFailedError extinoutT.datat org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirDropDatabaseSetup.java)at org.apache.derbyTesting.junit.DropDatabaseSetup.accessDropDatabaseSetup.java)at org.apache.derbyTesting.junit.DropDatabaseSetup.runDropDatabaseSetup.java)at java.security.AccessController.doPrivilegedNative Method)at java.security.AccessController.doPrivilegedAccessController.java)at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectoryDropDatabaseSetup.java)at org.apache.derbyTesting.junit.SupportFilesSetup.tearDownSupportFilesSetup.java)at junit.extensions.TestSetup.protectTestSetup.java)at junit.extensions.TestSetup.runTestSetup.java)at junit.extensions.TestDecorator.basicRunTestDecorator.java)at junit.extensions.TestSetup.protectTestSetup.java)at junit.extensions.TestSetup.runTestSetup.java)Also fails with the client  as well. Per the comment posted by Suresh to DERBY  it looks like the cause of this failure is that the openFile) method of javaengineorgapachederbyimplloadExportWriteData.java does not close the file stream in cases where an invalid encoding is specified.   
0;org.apache.derby.impl.store.access.BackingStoreHashTableFromScan does not honor ResultSet holdability   ;After an unrelated statement on the same connection commits  and after some number of successful calls to ResultSet.next)  a subsequent call to ResultSet.next) throws an SQLException with a message like The heap container with container id Container  ) is closed. This seems to be related to the hardcoded passing of false to the super in the constructor of org.apache.derby.impl.store.access.BackingStoreHashTableFromScan.Steps to reproduce. Execute a statement on a connection that returns a result set.. Execute a second statement on the same connection that modifies the database and commits.. Call next) on the first result set until the exception is thrown.Note that the number of rows that can be successfully retrieved from the result set seems to be related to the amount of data per row. Increasing the number of columns in the result set or the length of the columns causes the exception to be taken sooner.The attached test program demonstrates the issue.   
0;Invalid transaction state... in jdbcapi.SetTransactionIsolationTest   ;See e.g. httpdbtg.thresher.comderbytestDailyjvm.testingtestlogslessuitesAll_diff.txt) testIsolationorg.apache.derbyTesting.functionTests.tests.jdbcapi.SetTransactionIsolationTest)ERROR XX Invalid transaction state  held cursor requires same isolation level at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setIsolationLevelUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.setTransactionIsolationUnknown Source) at org.apache.derbyTesting.functionTests.tests.jdbcapi.SetTransactionIsolationTest.checkIsolationLevelNoTimeoutSetTransactionIsolationTest.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.SetTransactionIsolationTest.testIsolationSetTransactionIsolationTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)lt methodgt org.apache.derbyTesting.functionTests.tests.jdbcapi.SetTransactionIsolationTestlt methodgt lt signaturegt Invalid transaction state  held cursor requires same isolation levellt signaturegt    
0;DriverManager.getConnection leaks memory when connecting to a nonexistent database   ;Repeated calls to java.sql.DriverManager.getConnectionjdbcderbyCDOES_NOT_EXIST) leak memory and eventually lead to an OutOfMemoryError.This bug is similar to DERBY in that ContextManager objects are not getting removed from the HashSet. The attached test program demonstrates the issue. When run with VM options Xmsm Xmxm  it throws an OutOfMemoryError after  calls to DriverManager.getConnection.   
0;Convert syscat.sql to junit   ;   
0;Enhance Derby with EXPLAIN Functionality   ;This enhancement extends Derby with EXPLAIN functions. Users want to have more feedback than theyre getting with the current RuntimeStatistics facility. This extension is based on the RuntimeStatisticsResultSetStatistics functions  classes.   
0;Batch scripts in bin report extraneous errors when DERBY_HOME is invalid   ;If DERBY_HOME is set to an invalid location for example a directory that does not contain libderby.jar)  most .bat scripts in the bin directory the ones that call derby_common.bat) report three distinct error messages  of which only one is of value to the user. ReproductionCDerby_dbderby...bingt set DERBY_HOMEctempCDerby_dbderby...bingt echo DERBY_HOMEctempCDerby_dbderby...bingt binsysinfoDERBY_HOME is set incorrectly or derby.jar could not be located. Please set DERBY_HOME.The system cannot find the batch label specified  end is not recognized as an internal or external command operable program or batch file.The distinct error messages are) DERBY_HOME is set incorrectly or derby.jar could not be located. Please set DERBY_HOME.) The system cannot find the batch label specified  end)  is not recognized as an internal or external command  operable program or batch file.Only ) is relevant for the user  and should ideally be the only one displayed.   
0;Unclosed ResultSets choke JUnit lang _Suite on java    ;The lang suite fail for me from UnaryArithmeticParameterTest on. The tests cant drop table T because a ResultSet is open.   
0;Network Client allows execution of callable statement when one of the parameters is not set   ;If the second input parameter is set and the first is not. Client allows execution of the stored procedure. See the following code in LangProcedureTest.java with a reference to this bug. op.clearParameters  op.setString    try   a not set op.execute  failFAIL  a not set  } catch SQLException sqle  assertSQLState  sqle  }   
0;Convert langgrantRevokeDDL and grantRevokeDDL to JUnit   ;   
0;Client does not return SQLException on XAConnection.getXAResource) on a closed connection  Embedded does   ;In the following scenario from converted test DataSourceTestnontested code based on the test code ClientXADataSource dsx  new ClientXADataSource  dsx.setDatabaseNametstdb  XAConnection xac  dsx.getXAConnection  XAConnection xac  dsx.getXAConnection  XAResource xar  xac.getXAResource  xac.close   allow close on already closed XAConnection xac.close  try  xac.getXAResource   Network Server does not think this is worth an exception. } catch SQLException sqle  System.out.printlnexpect a  as with Embedded  }With DerbyNetClient  the xac.getXAResource does not return an SQLException.This ought to be documented if expected  or fixed.   
0;Make Locale available in DataValueFactoryDVF). This Locale object will be used to construct Collator object if the user has requested territory based collation.   ;Add a new api on DVF which will make Locale object available to DVF. This new api on DVF will get called by the boot method of BasicDatabase after BasicDatabase has finished booting DVF. This Locale will be either the Locale obtained from the territory attribute supplied by the user on the JDBC url at database create time or if user didnt provide the territory attribute at database create time  then it will be set to the default JVM locale. This Locale object will be used by DVF to construct the Collator object if user has requested territory based collation.The new api will look like following void setLocaleLocale localeOfTheDatabase)    
0;testVirtualMemoryHeap junit test fails with Virtual memory heap test failed Got unexpected value. expected but was   ;junit suite fails with the following error) testVirtualMemoryHeaporg.apache.derbyTesting.functionTests.tests.lang.UpdateCursorTest)junit.framework.AssertionFailedError Virtual memory heap test failed Got unexpected value. expectedlt gt  but waslt gt  at org.apache.derbyTesting.functionTests.tests.lang.UpdateCursorTest.testVirtualMemoryHeapUpdateCursorTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)   
1;Code paths for db restore do not use doPrivilegedcalls  causing SecurityException   ;When using createFrom or restoreFrom in the JDBC url to restore a database from a backup image  a SecurityException is thrown even though the policyfile for codebase derby.jar is correctly configured giving Derby access to the backup image).A few comments on this issue can be found here and in subsequent comments) httpsissues.apache.orgjirabrowseDERBYaction_A workaround is wrapping the connection call in doPrivileged at the applicationlevel code  or granting the required permissions to the application codebase as well.   
0;Missing asserts in ProcedureInTriggerTest   ;ProcedureInTriggerTest sometimes executes queries without checking the results. The comments indicate that the results should have been checked.line  and line   Check that insert successful and trigger fired.  rs  s.executeQueryselect * from t line   check delete failed rs  s.executeQueryselect * from t  expectedRows  new String[][]   two}  four}  eight}} line   check trigger is not dropped rs  s.executeQueryselect count from SYS.SYSTRIGGERS where triggernameTEST_TRIG line     check index is not created rs  s.executeQueryselect count from SYS.SYSCONGLOMERATES where CONGLOMERATENAMEIX and ISINDEX line     check delete failed rs  s.executeQueryselect * from t  expectedRows  new String[][]   two}  four}  eight}}    
1;ContextService.notifyAllActiveThreads)  and network server code need a privileged block around the calls to Thread.interrupt)   ;It looks to me as though the call to interrupt) can raise a SecurityException. I think this may give rise to another permission that we need to add to our template policy file and to our security documentation.   
0;Create a utility which generates Release Notes   ;This proposal summarizes an offlist conversation among Myrna van Lunteren  Bernt Johnsen  Andrew McIntyre  and myself.Currently  there is a template for release notes in the top level directory of the code tree. Actually filling in this template is a timeconsuming  errorprone process. We would like to automate this process as much as possible. We believe it ought to be possible to generate the Release Notes given the following inputs) A highlevel description of the release. The Release Manager would write this description  based on a template.) An xml report produced by a JIRA filter. The filter would list all of the JIRAs addressed by the release.In order for this to work  we would need for the community to agree on conventions for the release notes which are attached to JIRAs  viz.  the JIRAs whose Release Note Needed toggles are turned on. These JIRAspecific notes become items in the Issues section of the final Release Notes. Each of these items calls the readers attention to a significant topic involving Derbys behavior  that behaviors compatibility with previous releases  and adjustments which the user may need to make to her applications.The following approach makes sense to usA) The community will agree on an html template for these notes.B) The notewriter will fill in this template and attach it to the JIRA using a canonical file name  say releaseNote.html.C) Various iterations of the note may be needed.D) The utility for generating Release Notes will grab the latest rev of releaseNote.html attached to the JIRA.This effort involves at least two major stepsI) Getting the community to agree to these notewriting conventions.II) Writing the Release Note generator.   
0;AssertFailure class should use JDKs builtin chaining of exceptions   ;Currently  AssertFailure implements its own chaining of exceptions. It should use the chaining mechanism provided by the JDK.   
0;At code generation time  look at collation type to determine what kind of DVD should get generated for character types.   ;Currently  in Derby .  we generate SQLCharSQLVarcharSQLLongvarcharSQLClob for various SQL character types. All these DVDs have the default collation of UCS_BASIC. Starting .  we should look at the collation type of the DTD before deciding what kind of DVD gets generated for SQL character types. If the collation type of the character type is terriotry based collation  then we should generate CollatorSQLCharCollatorSQLVarcharCollatorSQLLongvarcharCollatorSQLClob rather than SQLCharSQLVarcharSQLLongvarcharSQLClob. The CollatorSQLxxx DVDs will have the territory based collator associated with them and hence the collation order of these DVDs will be different than the DVDs with default collation of UCS_BASIC.   
0;Wrong description of IndexName field in public JavaDoc for LockTable   ;The public JavaDoc for LockTable says the following in the description of the INDEXNAME retrieved from SYSCS_DIAG.LOCK_TABLE INDEXNAME varchar)  normally null. If nonnull  a lock is held on the index  this can only happen if this is not a user transaction.I think the last part is wrong. Normal user transactions might also have a value in the INDEXNAME. For example  here is part of the lock table for three user transactionsXID |TYPE |MODE|TABLENAME |LOCKNAME |STATE|TABLETYPE|INDEXNAME |ROW |X |T | ) |GRANT|T |NULL |ROW |S |T | ) |WAIT |T |NULL |ROW |X |T | ) |GRANT|T |NULL  |ROW |S |T | ) |WAIT |T |NULL |ROW |S |T | ) |GRANT|T |SQL  |ROW |S |T | ) |GRANT|T |SQL  |ROW |X |T | ) |GRANT|T |NULL  |ROW |S |T | ) |WAIT |T |NULL Two of the lock entries have an index. I expect this to be the Scan lock that have been set during traversal of the Btree.Proposed fix remove the last part of the sentence.   
0;TIMESTAMP value is truncated  when return to client   ;In ParameterMappingTest I see the following differences between embedded and client. Client is truncating the TIMESTAMP value. Look for this bug number in the test for reproduction. case java.sql.Types.TIMESTAMP if param  ) if usingEmbedded)) assertEquals .  val.toString))  else assertEquals .  val.toString))  else if param  ) if usingEmbedded)) assertEquals .  val.toString))  else assertEquals .  val.toString))  break    
1;Derby should print the parameters to failed statements to the derby.log when it logs the error   ;It would be good if when derby dumped an error to derby.log it printed the parameters for the failed statement. Currently the default behaviour is that only the statement text will print. Users have to set derby.language.logStatementTexttrue if they want to see the parameters. It would be useful if any errors included the parameters as well as the statement text.To reproduce put derby.stream.error.logSeverityLevel in your derby.properties and run this script connect jdbcderbywombat createtrue create table t i int) prepare p as insert into t values  execute p using values) execute p using values)    
0;DatabaseMetaData is not consistent about throwing SqlException when tablenamenull   ;According to java.sql.DatabaseMetaData  the following DatabaseMetaData methods should not allow tablenamenullgetBestRowIdentifier  getColumnPrivileges  getIndexInfo  getVersionColumns  getPrimaryKeys  getImportedKeys  getExportedKeys. In the five former methods  SqlExceptions are thrown if tablename  null  but this check is not performed in the latter two.The method calls eventually end up in EmbedDatabaseMetaData  which performs this check. Hence  an exception is thrown either way. If we want the exception to be thrown as early as possible  the two latter methods should do so as well. If not  the check should be removed from the former methods.   
0;Queries in metadata.properties allow tablepattern for JDBC methods that do not allow patterns   ;The DatabaseMetaData methods getBestRowIdentifier  getColumnPrivileges  getIndexInfo  getVersionColumns  getPrimaryKeys  getImportedKeys  getExportedKeys do not allow table name patterns. However  the SQL in metadata.properties implement these with table like ?  thus allowing patterns. The SQL for these methods should be modified to table?.   
0;upgrade test incorrectly tries to test in place compress in . release.   ;When trying to run upgrade test in trunk with all releases available for upgrade to test found athttpssvn.apache.orgreposasfdbderbyjars...I got  errors not including those that are part of DERBY).) testNegValueSupportedLogRecordorg.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_)java.sql.SQLException SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE is not recognized as a function or procedure. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.sql.compile.StaticMethodCallNode.bindExpressionStaticMethodCallNode.java) at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.bindExpressionJavaToSQLValueNode.java) at org.apache.derby.impl.sql.compile.CallStatementNode.bindStatementCallStatementNode.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.checkDataToCaseChanges_.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testNegValueSupportedLogRecordChanges_.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testGetTablesModifyorg.apache.derbyTesting.functionTests.tests.jdbcapi.DataaseMetaDataTest)java.sql.SQLException Use of XML requires database to be upgaded from version . to version . or later. at org.apache.derby.iapi.error.StandardException.newExceptionStandardExcepion.java) at org.apache.derby.impl.sql.catalog.DD_Version.checkVersionDD_Version.jav) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.checkVersionDataDitionaryImpl.java) at org.apache.derby.impl.sql.compile.SQLParser.checkVersionSQLParser.java) at org.apache.derby.impl.sql.compile.SQLParser.XMLTypeSQLParser.java) at org.apache.derby.impl.sql.compile.SQLParser.dataTypeCommonSQLParser.jav) at org.apache.derby.impl.sql.compile.SQLParser.dataTypeDDLSQLParser.java) at org.apache.derby.impl.sql.compile.SQLParser.columnDefinitionSQLParser.jva) at org.apache.derby.impl.sql.compile.SQLParser.tableElementSQLParser.java) at org.apache.derby.impl.sql.compile.SQLParser.tableElementListSQLParser.jva) at org.apache.derby.impl.sql.compile.SQLParser.tableDefinitionSQLParser.jaa) at org.apache.derby.impl.sql.compile.SQLParser.createStatementsSQLParser.jva) at org.apache.derby.impl.sql.compile.SQLParser.StatementPartSQLParser.java) at org.apache.derby.impl.sql.compile.SQLParser.StatementSQLParser.java) at org.apache.derby.impl.sql.compile.ParserImpl.parseStatementParserImpl.jva) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.jva) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareIternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTestcreateTablesForTestDatabaseMetaDataTest.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTesttestGetTablesModifyDatabaseMetaDataTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.jav) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessormpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testNegValueSupportedLogRecordorg.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_)ERROR Y SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE is not recognized as a function or procedure. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.sql.compile.StaticMethodCallNode.bindExpressionStaticMethodCallNode.java) at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.bindExpressionJavaToSQLValueNode.java) at org.apache.derby.impl.sql.compile.CallStatementNode.bindCallStatementNode.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.checkDataToCaseChanges_.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testNegValueSupportedLogRecordChanges_.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) Upgrade Phase UPGRADEjava.sql.SQLException Failed to start database singleUseoneuse  see the next exception for details. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.EmbedConnection.newSQLExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabaseEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.&lt init&gt EmbedConnection.java) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionDriver.java) at org.apache.derby.jdbc.InternalDriver.connectInternalDriver.java) at org.apache.derby.jdbc.EmbeddedDataSource.getConnectionEmbeddedDataSource.java) at org.apache.derby.jdbc.EmbeddedDataSource.getConnectionEmbeddedDataSource.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.PhaseChanger.setUpPhaseChanger.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)FAILURES!!!Tests run   Failures   Errors    
0;intermittent network startup related errors in running junit nightly test suite   ;I intermitently get network startup related errors in running the nightly full test suite on my laptop  running XP  with a firewall and a VPN  I am not sure what if any of those environmental factors is causing it. I have been mostly ignoring the errors as it seemed like it usually was only one test. I my latest run it was more like  or . Ill append exact tests as a comment on this issue.To debug the problem I picked one  org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest and ran it in a loop. When I did this it failed everytime after the first one and the first one intermittently failed). When I bumped the WAIT_TIME up to  and the SLEEP_TIME to  injavatestingorgapachederbyTestingjunitNetworkServerTestSetup.java then the test passed everytime . In  runs theentire test took varying times from  minutes to  minutes  mostly in the  minute range.   
0;Expose existing autogenerated key functionality through more JDBC APIs in embedded mode.   ;Derby currently supports the following JDBC methods for autogenerated keys  Indicate that we want to retrieve autogenerated key values. Connection.prepareStatementString sql  int autoGeneratedKeys)  Statement.executeString sql  int autoGeneratedKeys)  Statement.executeUpdateString sql  int autoGeneratedKeys)   Retrieve the autogenerated values only applies to INSERT statements). ResultSet rs  Statement.getGeneratedKeys) The current implementation of getGeneratedKeys) internally maps to the IDENTITY_VAL_LOCAL) method  which means that Derbys implementation only returns generated keys for autoincrement columns no other default columns are supported). Further . The generated key result set only ever has a single column. This is because Derby only allows one autoincrement column per table. . The type of the single column in the result set will be DECIMAL ). This is defined by IDENTITY_VAL_LOCAL). . The generated key result set will only ever have a single row. This is because IDENTITY_VAL_LOCAL) only returns values that were assigned as the result of a single row INSERT statement using a VALUES clause. For a single row INSERT statement  at most one autoincrement value will be generated.All of that said  JDBC . also defines the following methods  which allow the user to explicitly indicate  via column position or column name  the columns for which the autogenerated keys should be made available Connection.prepareStatementString sql  String[] columnNames)  Connection.prepareStatementString sql  int[] columnIndexes)  Statement.executeString sql  String[] columNames)  Statement.executeString sql  int[] columIndexes)  Statement.executeUpdateString sql  String[] columnNames)  Statement.executeUpdateString sql  int[] columnIndexes) Derby currently throws a Feature not supported error for all of these methods. However  it seems like the above methods could be mapped onto the existing Derby behavior with relatively little effort in embedded mode). Most of the required code is already in place.Doing so would make it easier for applications that rely on the columnNames andor columnIndexes APIs to work with Derby assuming the app just wants generated keys for identity autoincrement) columns).Note that this Jira does not entail removing any of the restrictions nor changing any of the behavior outlined above. All of that will remain exactly as it is. This Jira simply exposes the existing functionality restrictions and all) through additional standard) API methods. In particular this means that any column specified by index position) or name must be an autoincrement column for the INSERT table  otherwise Derby should throw an error. Or put differently  a user who specifies a column nameposition will getin the absence of errorsthe exact same results as she would get from invoking the String sql  int autoGeneratedKeys) method.Note also This Jira is specifically for embedded mode. I think it would be harder to support these methods for Derby Client and so do not plan to address that.   
0;upgrade tests fail through BlobStoredProcedureTest and ClobStoredProcedureTest with JSR   ;The . upgrade tests Changes_.) add the ClobStoredProcedureTest and BlobStoredProcedureTest.class.However these tests should not run with JSR  for the stored procedures use DriverManager to obtain the default connection.This should be unimportant with JSR  because the procedures are internal procedures that are only intended to be exercised by client code  and clientserver is not currently supported with JSR.For reference  the stack trace is for example) like so) testClobGetLengthSPorg.apache.derbyTesting.functionTests.tests.jdbcapi.ClobStoredProcedureTest)java.sql.SQLException The exception java.lang.NoClassDefFoundError java.sql.DriverManager was thrown while evaluating an expression. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.iapi.error.StandardException.unexpectedUserExceptionUnknown Source) at org.apache.derby.impl.services.reflect.DirectCall.invokeUnknown Source) at org.apache.derby.impl.sql.execute.RowResultSet.getNextRowCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRowUnknown Source) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionUnknown Source) at org.apache.derby.impl.jdbc.EmbedResultSet.nextUnknown Source) at org.apache.derby.impl.jdbc.EmbedCallableStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateUnknown Source) at org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobStoredProcedureTest.setUpClobStoredProcedureTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)   
0;Convert langdynamicLikeOptimization.sql to JUnit   ;   
0;upgrade test failures with weme ..   ;Since activating the upgrade tests for weme. and resolving some of the failures) I can now see  new error and  new failures. Some of these may warrant their own bug  some are probably caused by the initial problem.In the section below  Im skipping the junit.extensions.* part of the stack.)error) testProcedureSignatureorg.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_)java.sql.SQLException PROCEDURE GC already exists. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.sql.execute.CreateAliasConstantAction.executeConstantActionUnknown Source) at org.apache.derby.impl.sql.execute.MiscResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testProcedureSignatureChanges_.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) ....failures ) testProcedureSignatureorg.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_)junit.framework.AssertionFailedError Expected error XCL but no error was thrown. at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementErrorBaseJDBCTestCase.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testProcedureSignatureChanges_.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) ...) and  ) testOldVersionorg.apache.derbyTesting.functionTests.tests.upgradeTests.BasicSetup)junit.framework.AssertionFailedError Old minor driver) expectedlt gt  but waslt gt  at org.apache.derbyTesting.functionTests.tests.upgradeTests.BasicSetup.testOldVersionBasicSetup.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) ...)  ) and )  with a variation in originating line number in Changes_marked ) in the stack below).and expected error numbertestGrantRevokeStatementsorg.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_)  ) junit.framework.ComparisonFailure Unexpected SQL state. expectedlt ...Xgt  but waslt ...Zgt )junit.framework.ComparisonFailure Unexpected SQL state. expectedlt XCLgt  but waslt Zgt  at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLStateBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLStateBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementErrorBaseJDBCTestCase.java)  ) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testGrantRevokeStatementsChanges_.java)) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testGrantRevokeStatementsChanges_.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) ...Caused by java.sql.SQLException GRANT not allowed unless database property derby.database.sqlAuthorization has value TRUE. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.sql.compile.SQLParser.checkSqlStandardAccessUnknown Source) at org.apache.derby.impl.sql.compile.SQLParser.grantStatementUnknown Source) at org.apache.derby.impl.sql.compile.SQLParser.StatementPartUnknown Source) at org.apache.derby.impl.sql.compile.SQLParser.StatementUnknown Source) at org.apache.derby.impl.sql.compile.ParserImpl.parseStatementUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementErrorBaseJDBCTestCase.java)  ) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testGrantRevokeStatementsChanges_.java)) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testGrantRevokeStatementsChanges_.java) at at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) ...  more)  ) and ) testDatabaseOwnerChangeorg.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_)junit.framework.ComparisonFailure AUTHORIZATIONID not valid for SYSIBM expectedlt DBAgt  but waslt APPgt  at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.checkSystemSchemasOwnerChanges_.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testDatabaseOwnerChangeChanges_.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) ...)   ) and )testPolicyReloadingProcedureorg.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_)junit.framework.AssertionFailedError Reloading results. expectedlt falsegt  but waslt truegt  at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.tryReloadingChanges_.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.assertPolicyReloaderDoesNotExistChanges_.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testPolicyReloadingProcedureChanges_.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) ...) testImportExportLobsProceduresorg.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_)junit.framework.AssertionFailedError Expected error Y but no error was thrown. at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementErrorBaseJDBCTestCase.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testImportExportLobsProceduresChanges_.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) ...   
0;Convert jdbcapiparameterMetaDataJdbc.java to JUnit   ;Convert jdbcapiparameterMetaDataJdbc.java to JUnit.   
0;Errorsmessages early in starting the network server through NetworkServerControl.start) are not reported to the PrintWriter passed into start).   ;Cause seems to be not calling setLogWriter) in NetworkServerControlImpl.start) before calling startNetworkServer.   
0;performance of like in territory based collation databases may be improved by changing way collation elements are calculated.   ;WorkHorseForCollatorDatatypes.java has a method getCollationElementsForString) which currently getscalled when processing like clauses in databases that have been created with territory based collation  this isnot an issue in pre. databases or post . default databases.getCollationElementsForString gets the collation elements for the entire value of the String held bythe datatype using the class.If you take the case of pattern A and the value of datatype is BXXXXXXXXXXXXXXXXXXXXXXX  then it would have been better to better to get collation elements one character of the String value at a timeto avoid the process of getting collation elements for the entire string when we dont really need it One could imagine this might have a huge performance impact on running like against a long clob wherethe like pattern has leading fixedlength pattern to match.Comments on this from Dan and Dag can be found in DERBY.   
0;If large clob is updated after Reader. the reader continues to point to old data   ;If a Reader is fetched from a large clob obtained from ResultSet) a reader linked to the dvd stream is returned once a set method is called on it the clob data is materialized in control class but the Reader returned previously continues to point to old data.   
0;Ensure that a temporary file is not created for a lob obtained from resultset unless user updates it.   ;Currently LOBStreamControl has a buffer limit of k if the lob is larger than this a temporary file is created. Ensure that lob data is kept in memory unless user start to update it.   
0;Implement not implemented Embedded methods Blob.getBinaryStreamlong pos  long length) and Clob. getCharacterStreamlong pos  long length)   ;The following methods were introduced in the java.sql.Clob and java.sql.Blob interface as part of JDBC . and need to be implemented.ClobgetCharacterStreamlong pos  long length)BlobgetBinaryStreamlong pos  long length)The implementation on the Network Client is already done as part of Derby   
0;LIKE parameter marker combined with index multiprobing leads to ASSERT failure with sane jars  wrong results with insane jars.   ;In cases where the optimizer chooses to do index multiprobing for an IN list DERBY)  the presence of a LIKE condition whose argument is a parameter marker leads to an ASSERTion failure with sane jars. With insane jars  the same query returns incorrect results it only returns rows matching the first argument in the IN list).As an example  if we have the following DDL create table ct i int  c char)  c char))  insert into ct values                   insert into ct values                       insert into ct select  * i from ct  insert into ct select  * i from ct  update ct set c  casti as char))  update ct set c  c || c  create index idx on ct c  c) Then we see the following results  This one works.select i c c from ct where c in  ) and c like  order by i   These all work  too.prepare p as select i c c from ct where c in  ) and c like  execute p prepare p as select i c c from ct where c in ? ?) and c like  execute p using values   )   But these all fail. Something about having a parameter in the LIKE is triggering the assertion...prepare p as select i c c from ct where c in ? ?) and c like ? order by i execute p using values     ) prepare p as select i c c from ct where c in ? ?) and c like ? execute p using values     ) prepare p as select i c c from ct where c in  ) and c like ? execute p using values ) prepare p as select i c c from ct where c in  ?) and c like ? execute p using values   ) The actual assertion is thrown because multiprobing expects the start and stop keys to be same value. But something about the LIKE parameter violates that expectationERROR XJ Java exception ASSERT FAILED All multiprobing result sets are expected to have a single key that is both the start key AND the stop key  but that is not the case. org.apache.derby.shared.common.sanity.AssertFailure.This is a regression introduced by the DERBY changes  everything runs fine in . and earlier.   
0;jdbcapimetadata.java and jdbcapiodbc_metadata.java fail because of new procedure SYSCS_UTIL SYSCS_GET_USER_ACCESS   ;The following failure occurs with Rev   likely due to checkin of DERBYfailure Details                 Diff file derbyallderbylangmetadata.diff             Start metadata jdk.._ derbyallderbylang   ***agt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS org.apache.derby.catalog.SystemProcedures.SYSCS_GET_USER_ACCESS xxxxGENERATEDIDxxxxagt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS org.apache.derby.catalog.SystemProcedures.SYSCS_GET_USER_ACCESS xxxxGENERATEDIDxxxxagt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS org.apache.derby.catalog.SystemProcedures.SYSCS_GET_USER_ACCESS xxxxGENERATEDIDxxxxagt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS org.apache.derby.catalog.SystemProcedures.SYSCS_GET_USER_ACCESS xxxxGENERATEDIDxxxxa gt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS    VARCHAR   null null  null   YES xxxxGENERATEDIDxxxx  gt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS USERNAME   VARCHAR   null null  null   YES xxxxGENERATEDIDxxxx  Test Failed. End metadata jdk.._ derbyallderbylang   ***            Diff file derbyallderbylangodbc_metadata.diff             Start odbc_metadata jdk.._ derbyallderbylang   ***agt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS org.apache.derby.catalog.SystemProcedures.SYSCS_GET_USER_ACCESS xxxxGENERATEDIDxxxxagt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS org.apache.derby.catalog.SystemProcedures.SYSCS_GET_USER_ACCESS xxxxGENERATEDIDxxxxagt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS org.apache.derby.catalog.SystemProcedures.SYSCS_GET_USER_ACCESS xxxxGENERATEDIDxxxxagt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS org.apache.derby.catalog.SystemProcedures.SYSCS_GET_USER_ACCESS xxxxGENERATEDIDxxxxa gt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS    VARCHAR   null null  null   YES xxxxGENERATEDIDxxxx  gt  null SYSCS_UTIL SYSCS_GET_USER_ACCESS USERNAME   VARCHAR   null null  null   YES xxxxGENERATEDIDxxxx  Test Failed. End odbc_metadata jdk.._ derbyallderbylang   ***   
0;testLoadJavaClassIndirectly  als fails on JVM . with Unexpected SQL state. expected but was  Jar file MY_JAVA already exists in Schema EMC   ;) testLoadJavaClassDirectlyorg.apache.derbyTesting.functionTests.tests.lang.DatabaseClassLoadingTest)java.sql.SQLException Jar file MY_JAVA already exists in Schema EMC.) testLoadJavaClassDirectlyorg.apache.derbyTesting.functionTests.tests.lang.DatabaseClassLoadingTest)java.sql.SQLException Jar file MY_JAVA already exists in Schema EMC.) testLoadJavaClassDirectlyorg.apache.derbyTesting.functionTests.tests.lang.DatabaseClassLoadingTest)java.sql.SQLException Jar file MY_JAVA already exists in Schema EMC.) testLoadDerbyClassIndirectlyorg.apache.derbyTesting.functionTests.tests.lang.DatabaseClassLoadingTest)java.sql.SQLException Jar file MY_JAVA already exists in Schema EMC.) testLoadJavaClassIndirectlyorg.apache.derbyTesting.functionTests.tests.lang.DatabaseClassLoadingTest)junit.framework.ComparisonFailure Unexpected SQL state. expectedlt   gt  but waslt  XJ gt See e.g.httpdbtg.thresher.comderbytestDailyjvm.testingLimitedtestSummary.htmlhttpdbtg.thresher.comderbytesttrunkjvmAlltestingLimitedtestSummary.html   
0;org.apache.derby.impl.drda.DDMWriter might swallow unexpected exceptions   ;Some methods in org.apache.derby.impl.drda.DDMWriter catch Exception and print a message about unsupported encoding. They should instead catch the specific exception UnsupportedEncodingException and let all other exceptions propagate up the call stack.   
1;Client connections should not fail if permission is not granted to read derby.client.traceLevel  and derby.client.traceDirectory   ;Running the . network server tests with the . server  most tests fail withAccessControlException Access denied java.util.Property derby.client.traceLevel readdue to DERBY. This can break existing applications that dont have this permission and should be a nonfatal warning if permission is not granted.   
0;testBlobAfterCommit....jdbcapi.BlobClobBlobTest) fails with Unexpected SQL state. expected but was   ;testBlobAfterCommitorg.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClobBlobTest)junit.framework.ComparisonFailure Unexpected SQL state. expectedlt XJ  gt  but waslt XJ  gt after r  DERBYSee httpdbtg.thresher.comderbytesttinderbox_trunkjvm.testingtestlogSunOS._ipciorg.apache.derbyTesting.functionTests.suites.All_diff.txt   
0;ij describe built in command cannot describe a table named run   ;steps to duplicateattach ij to any database)ijgt  create table run i int)  rows insertedupdateddeletedijgt  desc run ERROR X Syntax error Encountered desc at line   column .ijgt  I think this is a parser problem within ij where the run is taken as a token and that token is not included in the definition of a tablename expression in the grammer should be an easy fix).   
0;make entry for clob in connection so that temporary file is removed when a connection is closed or transaction is commitedrolledback   ;   
0;DatabaseMetaData .locatorsUpdateCopy) should return true   ;Since updates made to a BLOB or CLOB value in Derby is made on a copy  DatabaseMetaData .locatorsUpdateCopy) call should return true. For the embedded driver the functionality to update a LOB value is new in .. For the client driver  updates have been possible in prior releases  and locatorsUpdateCopy) has returned false. That behavior was wrong since the client updated a mainmemory copy  not the values in the database. For .  the client will use a locator based implementation which will rely on the behavior of the embedded driver. Hence  locatorsUpdateCopy) should return true in both cases.   
1;Obscure error messages when using SSL in various combinations   ;I ran clients with various ssl configurations on their urls and startup options against servers with various ssl configurations. I will attach an html file recording my results. I feel that many of the error conditions raised diagnostics which were too obscure to be helpful. I think this will be burdensome to tech support.   
0;ASSERT failure with sane build if DISTINCT and ORDER BY are present in a query that selects from a diagnostic table function.   ;Attempts to execute the following query will lead to an ASSERT failure with sane jarsijgt  select distinct * from tablesyscs_diag.space_tableT)) X order by  ERROR XJ Java exception ASSERT FAILED markOrderingDependent) not expected to be called for org.apache.derby.impl.sql.compile.FromVTI org.apache.derby.shared.common.sanity.AssertFailure.Stack trace is at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERTSanityManager.java) at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERTSanityManager.java) at ResultSetNode.markOrderingDependentResultSetNode.java) at SingleChildResultSetNode.markOrderingDependentSingleChildResultSetNode.java) at SingleChildResultSetNode.markOrderingDependentSingleChildResultSetNode.java) at SingleChildResultSetNode.markOrderingDependentSingleChildResultSetNode.java) at SelectNode.genProjectRestrictSelectNode.java) at SelectNode.modifyAccessPathsSelectNode.java) at SingleChildResultSetNode.modifyAccessPathsSingleChildResultSetNode.java) at DMLStatementNode.optimizeStatementDMLStatementNode.java) at CursorNode.optimizeStatementCursorNode.java)I was able to avoid this by adding an empty implementation of markOrderingDependent to the FromVTI class  so thats probably the fix that I will post after looking a bit more closely at the code to see if this makes sense).   
0;calling getByteLength on org.apache.derby.impl.jdbc.StoreStreamClob makes BinaryStream  fetched before this call  unusable   ;StoreStreamClob.getByteLength first resets the internal stream and then reads the entire stream. Due to this any read on Stream obtained by StoreStreamClob.getRawByteStream returns .StoreStreamClob is a read only InternalClob  so probably keeping the length in a variable will be good idea.   
0;Assessing blob when its linked to DVD stream  ie large blob) corrupts stream fetched prior to this access.   ;   
0;ij doesnt start with JME  JSR  weme. because attempting to find java.sql.Driver if ij.protocol property is specified   ;When starting ij with the following commandij jclfoun Xbootclasspathalt path_to_jdbc.jargt  org.apache.derby.tools.ij p derby.propertiesand derby.properties contains the followingij.databasejdbcderbybladb createtrueij.protocoljdbcderbyij.showNoConnectionsAtStarttrueij.showNoCountForSelecttrue DataSource properties  only used if ij.dataSource is setij.dataSource.databaseNamebladbij.dataSource.createDatabasecreateij.dataSourceorg.apache.derby.jdbc.EmbeddedSimpleDataSourceij does not start and instead gives the following stack traceException in thread main java.lang.NoClassDefFoundError java.sql.Driver at java.lang.ClassLoader.defineClassImplNative Method) at java.lang.ClassLoader.defineClassClassLoader.java) at java.security.SecureClassLoader.defineClassSecureClassLoader.java) at java.net.URLClassLoader.findClassImplURLClassLoader.java) at java.net.URLClassLoader.runURLClassLoader.java) at java.security.AccessController.doPrivilegedAccessController.java) at java.net.URLClassLoader.findClassURLClassLoader.java) at com.ibm.oti.vm.URLSystemClassLoader.findClassURLSystemClassLoader.java) at java.lang.ClassLoader.loadClassClassLoader.java) at com.ibm.oti.vm.URLSystemClassLoader.loadClassURLSystemClassLoader.java) at java.lang.ClassLoader.loadClassClassLoader.java) at java.lang.Class.forNameImplNative Method) at java.lang.Class.forNameClass.java) at org.apache.derby.impl.tools.ij.util.loadDriverutil.java) at org.apache.derby.impl.tools.ij.util.loadDriverIfKnownutil.java) at org.apache.derby.impl.tools.ij.util.startJBMSutil.java) at org.apache.derby.impl.tools.ij.util.startJBMSutil.java) at org.apache.derby.impl.tools.ij.ConnectionEnv.initConnectionEnv.java) at org.apache.derby.impl.tools.ij.utilMain.initFromEnvironmentutilMain.java) at org.apache.derby.impl.tools.ij.Main.lt initgt Main.java) at org.apache.derby.impl.tools.ij.Main.getMainMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)The properties file is an example of the old test harness properties files. The test harness would get sql scripts tested with JME by stripping away the ij.protocol and ij.database specifications.In another bug  DERBY  it was suggested ij.protocol be blanked out in toolsijutil.java?) with JME.Another approach would be to check for ij.protocol or ij.database setting when we have a datasource and were using JME.   
0;Error messages for deadlocks contain less information than in .   ;In .  an error message for a deadlock would look like thisERROR  A lock could not be obtained due to a deadlock  cycle of locks and waiters isLock  ROW  T    Waiting XID    S}   APP  select * from t where id   Granted XID    X} Lock  ROW  T    Waiting XID    S}   APP  select * from t where id   Granted XID    X} . The selected victim is XID  .On trunk  the same deadlock would be reported asjava.sql.SQLException A lock could not be obtained due to a deadlock  cycle of locks and waiters isLock  ROW  T    Waiting XID  org.apache.derby.impl.services.locks.LockSpace@d  S}  Granted XID  org.apache.derby.impl.services.locks.LockSpace@dabf  X} Lock  ROW  T    Waiting XID  org.apache.derby.impl.services.locks.LockSpace@dabf  S}  Granted XID  org.apache.derby.impl.services.locks.LockSpace@d  X} . The selected victim is XID  org.apache.derby.impl.services.locks.LockSpace@d.That is  the transaction id and the failing statement are not shown.   
0;Rewrite ClobUpdatableReader constructors   ;When the fix for DERBY is in place  the current implementation of ClobUpdateableReader will fail.This patch is a preparation for the mentioned issue  and I have also removed some internal package private) methods from EmbedClob and replaced it with a single one. Instead of writing methods that forwards calls to the underlying InternalClob  the method getInternalClob will return the internal clob itself. This seems more in place  since the method getByteLength does not belong in EmbedClob. It also comes with a warning that using the reference to the internal clob object requires the caller to take more care. Second  isWritable) does not belong to EmbedClob either  as a Clob is always writable unless the databaseconnection itself is readonly). However  the internal clob representation may be readonly  in case EmbedClob must clone the content and create a writable representation.The fix leaves more of the handling of implementation details to the InternalClob itself.   
0;Improve error reporting  fix whitespaceformatting issues and replace tabs in UTFReader   ;I plan to do the following changes to UTFReader Improve the error reporting when hitting a UTF decoding error currently an UTFDataFormatException with no message). This might also lead to deleting one helper method for generating an exception the one with no message). Improve error reporting for trying to use the reader after it has been closed currently an IOException with no message). Remove trailing spaces  and add a few newlines here and there. Replace tabs in the file with spaces.Now  the last point can be discussed  but here are my arguments for doing it The file now has a mix of tabs and spaces but still more tabs). Spaces are the preferredrequired method of indentation. I want to get it fixed before the branch is cut  which makes it easier to port fixes from trunk.NEXT to .. If I dont make it for .  I wont do it. I dont see it as very likely that we will backport major fixes to this class on the . branch. If we have to  I will volunteer  Since so much else of the Clob infrastructure has changed recently  this seems like a good time to do the cleanup.Please raise your concern as soon as possible if you want to veto these changes. I do plan to commit them tomorrow.   
0;Rename ClobStreamControl to TemporaryClob   ;Since the original submission  the situation has changed quite a lot and the original name no longer fits as well as it did before.The class is changed to TemporaryClob  signalling that the Clob object is living temporarily outside the database. This is true for all scenarios  except for small Clobs that are stored as nonstream objects in the database. The general contract is that as soon as a change is made to the Clob  it becomes a temporary Clob. Unless the user reinserts the Clob i.e. updateRow  updateClob  execute)  the changes will be lost. This is also true for Clobs created with Connection.createClob. If it is not explicitly inserted into the database  it is lost.   
0;ParameterMetaDataJdbc fails for weme.  which prevents rest of suites.All from completing.   ;With the addtion of the ParameterMetaDataJdbc JUnit test DERBY)  suites.All has been failing with weme.. It turns out the that new ParameterMetaDataJdbcTest fails with the following error Failed to invoke suite)java.lang.NoClassDefFoundError java.sql.ParameterMetaData which prevents suites.All from continuing and thus no results can be gathered.It might be good to disable the test for weme. at least in the short term so that rest of suites.All can run cleanly again. Not sure if thats a complete solution or just a temporary one until the test can be fixed...   
0;BUILDING.txt doesnt mention junit.jar in list of jars installed in toolsjava   ;BUILDING.txt contains this paragraphNote After following the steps in sections .... of thisdocument  you should have the followingderby.source}toolsjavaempty.jarderby.source}toolsjavageronimospecservlet.rc.jarderby.source}toolsjavajakartaoro...jarderby.source}toolsjavajavacc.jarderby.source}toolsjavaosgi.jarSince section .. mentions how to install junit.jar into derby.source}toolsjava  the list should also include junit.jar.Also  since the paragraph refers to sections ....  it should be located below section .. currently  its between .. and ...   
0;iepnegativetests_ES.sql fails new canon needed?   ;See httpdbtg.thresher.comderbytestDailyjvm.testingLimitedtestSummary.html  wlt methodgt iniepnegativetests_ES.sqllt methodgt lt signaturegt lt  ERROR XJ Excepci EnCgt lt  n de Java extoutnodirt.dat No such file or directory) java.io.FileNotFoundException.agt  ERROR XJ Excepci EnCgt lt  n de Java extoutnodirt.dat The system cannot find the path specified) java.io.FileNotFoundException.lt signaturegt    
1;NetworkServer not accepting connections with default security manager on Ipv machines   ;While running tests on Ipv machines using the . jars with the default security manager  I had the following findingsquestionsI started the server like this java org.apache.derby.drda.NetworkServerControl start h afaand the server started with the following commandSecurity manager installed using the Basic server security policy.Apache Derby Network Server  ... beta  ) started and ready to accept connections on port  at   . GMTSo I think the server is using the default security manager. Then when I tried to get conenction though ijgot the following error messageAccess denied java.net.SocketPermission  afa  accept resolve)java.security.AccessControlException Access denied java.net.SocketPermission  afa  accept resolve)  at java.security.AccessController.checkPermissionAccessController.java) at java.lang.SecurityManager.checkPermissionSecurityManager.java) at java.lang.SecurityManager.checkAccept SecurityManager.java) at java.net.ServerSocket.implAcceptServerSocket.java) at java.net.ServerSocket.acceptServerSocket.java) at org.apache.derby.impl.drda.ClientThread.run Unknown Source) at java.security.AccessController.doPrivilegedAccessController.java) at org.apache.derby.impl.drda.ClientThread.runUnknown Source)I had the derby.properties file like thisderby.database.sqlAuthorizationtruederby.connection.requireAuthenticationtruederby.infolog.appendtruederby.authentication.providerBUILTINderby.stream.error.logSeverityLevelderby.language.logStatementTexttrue Users Definitionsderby.user.userpass   
0;CREATE TABLE AS  does not maintain the collation for character types.   ;create table t as select tablename from sys.systables with no data This creates a column TABLENAME with collation based upon the user schema  but the type of sys.systables.tablename has collation UCS_BASIC.The required behaviour should be verified with the SQL standard . SR)  but since collation is an attribute of a type it seems logical that the collation is maintained by the create.Fixing this to keep the collation of the system column will cause problems though as there would be no way to recreate this table through a regular create table  say if the schema is dumped and recreated using ddlutils.I think this is critical as fixing it after a release would lead to a change in behaviour for applications.   
0;Wrong connection object used in EmbedConnection.clearLOBMapping)   ;I think there are two bugs in EmbedConnection.clearLOBMapping) ) It checks if lobHashMap is nonnull  but it should have checked rootConnection.lobHashMap. ) It calls getlobHMObj).clear) regardless of whether there is a HashMap. This creates a HashMap object even though its not needed  and all the subsequent transactions on that connection have to perform cleanup on that object.   
0;Closing a resultset after retrieving a large >  bytes value with Network Server does not release locks   ;This is the same issue as DERBY httpsissues.apache.orgjirabrowseDERBY). The test attached to DERBY shows the locks being not released. Everything is fine when using Derby ... .I would think its a regression bug.Output from sysinfo JavaInformationen JavaVersion .._JavaAnbieter Sun Microsystems Inc.JavaHome Cworkapplicationsdevelopmentjavajdk.uSEjreJavaKlassenpfad Cworkapplicationsdevelopmentderby...libderby.jar Cworkapplicationsdevelopmentderby...libderbynet.jar Cworkapplicationsdevelopmentderby...libderbyclient.jar Cworkapplicationsdevelpmentderby...libderbytools.jarName des Betriebssystems Windows XPArchitektur des Betriebssystems xBetriebssystemversion .JavaBenutzername thomas.niessenJavaBenutzerausgangsverzeichnis CDokumente und Einstellungenthomas.niessenJavaBenutzerverzeichnis Cworkapplicationsdevelopmentderby...java.specification.name Java Platform API Specificationjava.specification.version . DerbyInformationen JRE  JDBC Java SE   JDBC . Cworkapplicationsdevelopmentderby...libderby.jar  ...  ) Cworkapplicationsdevelopmentderby...libderbytools.jar  ...  ) Cworkapplicationsdevelopmentderby...libderbynet.jar  ...  ) Cworkapplicationsdevelopmentderby...libderbyclient.jar  ...  ) Informationen zur Lﾃｵndereinstellung Aktuelle Lﾃｵndereinstellung [DeutschDeutschland  de_DE ]Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  cs  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  de_DE  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  es  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  fr  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  hu  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  it  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  ja_JP  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  ko_KR  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  pl  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  pt_BR  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  ru  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  zh_CN  Version ...  )Es wurde Unterstﾂｳtzung fﾂｳr die folgende Lﾃｵndereinstellung gefunden  zh_TW  Version ...  )   
1;INSERT and UPDATES succeed when permission has not been granted.   ;GrantRevokeTest had assert methods assertInsertPrivilege etc. of the formtry  s.executecommand} catch SQLException sqle if hasPrivilege  assertSQLState  e  else fail... }Note that no fail assert was in the try portion after the SQL execution. The statement should not work if hasPrivilege is false  but the test will incorrectly pass if the statement succeeds. I added fail asserts with revision  likeif hasPrivilege failexpected no INSERT permission on table but these two for INSERT and UPDATE caused the test to fail about  fixtures fail indicating that the statement succeeds even if the permission is not granted.It could be a test problem but needs some investigation.The asserts for assertInsertPrivilege and asserUpdatePrivilege are commented out to stop the test failing.   
0;AS IDENTITY START WITH ) fails   ;When creating a tableAS IDENTITY START WITH )fails butAS IDENTITY START WITH )succeeds.Guess this is a parsing SQL problem as the absolute value appears to be held in a long  which is not quite long enough at the positive end.   
0;SimpleStringOperatorNode in its bindExpression method generates a character string CAST if required but does not set the correct collation.   ;Following query should run into error if run in a territory based database SELECT TABLENAME FROM SYS.SYSTABLES WHERE UPPERCURRENT_DATE)  TABLENAME When a CAST node is generated on top of CURRENT_DATE to create a character string type  we do not set the collation of that character string type and hence it always ends up getting the default which is collation derivation IMPLICIT and collation type UCS_BASIC. That does not sound right. There might be other places where we generate CAST node to create a character string type. We should check if the collation is set correctly for them.   
0;Implement a buffer manager using java.util.concurrent classes   ;There are indications that the buffer manager is a bottleneck for some types of multiuser load. For instance  Anders Morken wrote this in a comment on DERBY With a separate table and index for each thread to remove latch contention and lock waits from the equation) we ...) found that org.apache.derby.impl.services.cache.Clock.find)release) caused about  times more contention than the synchronization in LockSet.lockObject) and LockSet.unlock). That might be an indicator of where to apply the next push.It would be interesting to see the scalability and performance of a buffer manager which exploits the concurrency utilities added in Java SE .   
0;DDMReader.readLengthAndCodePoint) decodes long integer incorrectly   ;DDMReader.readLengthAndCodePoint) contains code to decode a long integer from a byte array. This code is broken since it uses int operations and not long operations in the decoding. The long might be encoded using four  six or eight bytes  and since Derby currently always uses the four bytes encoding  the bug is not exposed in the current code.   
0;ERROR  The second or third argument of the SUBSTR function is out of range   with data concatenation in group by query.   ;CREATE TABLE A C CHAR) NOT NULL  D DATE NOT NULL  DC DECIMAL )) INSERT INTO A VALUES aaa  DATE)  .)  SELECT A.C  SUBSTR MAXCASTA.D AS CHAR)) || CASTA.DC AS CHAR)))    ) AS BUG FROM A GROUP BY A.C results in a  error on the select.ijgt  C |BUGERROR  The second or third argument of the SUBSTR function is out of rangeNote that the ResultSetMetaData seems to indicate to ij that the column width of BUG is four instead of .   
0;In soft upgrade mode  the metadata queries do not get compiled in SYS schema. This will cause problems in future releases of Derby.   ;EmbedDatabaseMetaData implements metadata queries. The implementation of metadata queries in EmbedDatabaseMetaData checks if we are in soft upgrade mode getPreparedQuery has following codeif notInSoftUpgradeMode s  getPreparedQueryUsingSystemTablesqueryName  net else  try  Cant use stored prepared statements because we are in soft upgrade mode and hence need to get metadata sql from metadata.properties file or metadata_net.properties String queryText  getQueryFromDescriptionqueryName  net  s  getEmbedConnection.prepareMetaDataStatementqueryText  } catch Throwable t  throw handleExceptiont  } }So  when running in soft upgrade mode  we do not go through SYSSTATEMENT but this will cause the metadata query to run in whatever the current schema may be rather than in SYS schema. This is not a problem in Derby . release because during soft upgarde  the collation will always be UCS_BASIC and hence collation mismatch cant happen.But in Derby .  a user can create a database with territory based collation. When such a database will be in soft upgrade mode for say Derby .  the metadata queries will run into problem if they are run in a user schema. This is because in soft upgrade mode  we do not go through SYSSTATEMENTS and instead compile the metadata queries in current schema. If the current schema is user schema  then character string literals in metadata queries will get the collation type of territory based and when compared with character string colunms from SYS tables with collation type of UCS_BASIC  we will end up getting compilation error for the metadata queries. So  before the next release  we will have to fix this problem. One solution may be to somehow make the current compilation schema as SYS when running the metadata queries in soft upgrade mode.   
0;BatchUpdateTest.testAssociatedParams test fails with collation with exception Java exception ASSERT FAILED type of inserted column[]  org.apache.derby.iapi.types.CollatorSQLChartype of template column[]  org.apache.derby.iapi.types.SQLChar   ;BatchUpdateTest.testAssociatedParams test fails with collation with exception java.sql.SQLException Java exception ASSERT FAILED type of inserted column    org.apache.derby.iapi.types.CollatorSQLChartype of template column    org.apache.derby.iapi.types.SQLChar org.apache.derby.shared.common.sanity.AssertFailure.Full trace belowJava exception ASSERT FAILED type of inserted column    org.apache.derby.iapi.types.CollatorSQLChartype of template column    org.apache.derby.iapi.types.SQLChar org.apache.derby.shared.common.sanity.AssertFailure.at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.javaExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateEmbedPreparedStatement.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.BatchUpdateTest.testAssociatedParamsBatchUpdateTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at junit.framework.TestCase.runTestTestCase.java) at junit.framework.TestCase.runBareTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.framework.TestResult.protectTestResult.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.framework.TestResult.runTestResult.java) at junit.framework.TestCase.runTestCase.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.eclipse.jdt.internal.junit.runner.junit.JUnitTestReference.runJUnitTestReference.java) at org.eclipse.jdt.internal.junit.runner.TestExecution.runTestExecution.java) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTestsRemoteTestRunner.java) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTestsRemoteTestRunner.java) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runRemoteTestRunner.java) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.mainRemoteTestRunner.java)Caused by org.apache.derby.shared.common.sanity.AssertFailure ASSERT FAILED type of inserted column    org.apache.derby.iapi.types.CollatorSQLChartype of template column    org.apache.derby.iapi.types.SQLChar at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERTSanityManager.java) at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERTSanityManager.java) at org.apache.derby.impl.store.access.btree.OpenBTree.isIndexableRowConsistentOpenBTree.java) at org.apache.derby.impl.store.access.btree.BTreeController.doInsBTreeController.java) at org.apache.derby.impl.store.access.btree.BTreeController.insertBTreeController.java) at org.apache.derby.impl.store.access.btree.index.BIController.insertBIController.java) at org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDupsIndexChanger.java) at org.apache.derby.impl.sql.execute.IndexChanger.doInsertIndexChanger.java) at org.apache.derby.impl.sql.execute.IndexChanger.insertIndexChanger.java) at org.apache.derby.impl.sql.execute.IndexSetChanger.insertIndexSetChanger.java) at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRowRowChangerImpl.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) ...  more   
0;ERROR ZA creating table with check constraint with literal comparison   ;I cannot create the following table with a collated database. EMPNAME should be TERRITORY_BASED collation I think  but perhaps is not initialized in time for the check constraint processing.ijgt  connect jdbcderbynordb createtrue territoryno_NO collationTERRITORY_BASED ijgt  CREATE TABLE STAFF EMPNUM CHAR) NOT NULL CONSTRAINT STAFF_PK PRIMARY KEY  EMPNAME CHAR)  GRADE DECIMAL)  CITY CHAR)  CONSTRAINT STAFF_EMPNAME CHECK EMPNAME NOT LIKE T)) ERROR ZA Operand of LIKE predicate with type CHAR) and collation UCS_BASIC is not compatable with LIKE pattern operand with type CHAR) and collation TERRITORY_BASED.   
0;TriggerTest.testTypesINActionStatement fails with ASSERT FAILED col.getClass) class org.apache.derby.iapi.types.SQLClob) expected to be the same as col.getClass) class org.apache.derby.iapi.types.CollatorSQLClob)   ;I have not yet been able to create a standalone repro but the test TriggerTest.testTypesINActionStatement fails with ASSERT FAILED col.getClass) class org.apache.derby.iapi.types.SQLClob) expected to be the same as col.getClass) class org.apache.derby.iapi.types.CollatorSQLClob)Failed statement is sqlMain  SELECT ID  XMLSERIALIZEV AS CLOB)    XMLSERIALIZEV AS CLOB) FROM T_MAIN ORDER BY  ) testTypesInActionStatementorg.apache.derbyTesting.functionTests.tests.lang.TriggerTest)java.sql.SQLException Java exception ASSERT FAILED col.getClass) class org.apache.derby.iapi.types.SQLClob) expected to be the same as col.getClass) class org.apache.derby.iapi.types.CollatorSQLClob) org.apache.derby.shared.common.sanity.AssertFailure. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.javaExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeQueryEmbedStatement.java) at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.actionTypesCompareMainToActionTriggerTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.actionTypesInsertTestTriggerTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.actionTypeTestTriggerTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.testTypesInActionStatementTriggerTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by org.apache.derby.shared.common.sanity.AssertFailure ASSERT FAILED col.getClass) class org.apache.derby.iapi.types.SQLClob) expected to be the same as col.getClass) class org.apache.derby.iapi.types.CollatorSQLClob) at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERTSanityManager.java) at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERTSanityManager.java) at org.apache.derby.impl.store.access.sort.MergeSort.checkColumnTypesMergeSort.java) at org.apache.derby.impl.store.access.sort.MergeInserter.insertMergeInserter.java) at org.apache.derby.impl.sql.execute.SortResultSet.loadSorterSortResultSet.java) at org.apache.derby.impl.sql.execute.SortResultSet.openCoreSortResultSet.java) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openBasicNoPutResultSetImpl.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) ...  more   
0;rs.moveToInsertRow) causes loss of connection with TERRITORY_BASED collation.   ;In the attached test case  rs.moveToInsertRow) causes loss of the connection with a TERRITORY_BASED collation database. With UCS_BASIC it is fine.   
0;Convert jdbcapiprepStamtNull.java to JUnit   ;   
0;The ResultSet returned by DatabaseMetaData.getFunctions) does not contain a required column named FUNCTION_TYPE.   ;The FUNCTION_TYPE column  sandwiched between REMARKS and SPECIFIC_NAME  is supposed to describe the return type of the function.   
0;Query involving CASE statement significantly slower in ... than in ...   ;A select of a CASE statement that performed acceptably in ... is very slow in ... the first time it is executed.The following example ij scriptELAPSEDTIME ON CREATE table testid integer) CREATE table testid varchar)) SELECT CASE WHEN t.id   THEN a WHEN t.id   THEN b WHEN t.id   THEN c WHEN t.id   THEN d WHEN t.id   THEN e WHEN t.id   THEN f WHEN t.id   THEN g WHEN t.id   THEN h WHEN t.id   THEN i WHEN t.id   THEN j  WHEN t.id   THEN k WHEN t.id   THEN l WHEN t.id   THEN m  WHEN t.id   THEN n WHEN t.id   THEN o WHEN t.id   THEN p WHEN t.id   THEN q WHEN t.id   THEN r WHEN t.id   THEN s ELSE SELECT t.id FROM test t ) ENDFROM test t When run on ... the select results in ELAPSED TIME   milliseconds.When run on ... the select results in ELAPSED TIME   milliseconds.   
0;Insert into table with constraints fails if the table name is indicator or any other SQL keyword)   ;Ive runned the testcase against both ... latest stable) and ... alpha trunk) and results are the same.Sysinfo output ﾐ侑ｽﾑ・ｾﾑﾐｼﾐｰﾑ・ｸﾑ・Java ﾐ漬ｵﾑﾑ・ｸﾑ・Java .._ﾐ渙ｾﾑ・ひｰﾐｲﾑ禍ｸﾐｺ Java Sun Microsystems Inc.ﾐ頒ｾﾐｼﾐｰﾑ威ｽﾐｸﾐｹ ﾐｺﾐｰﾑひｰﾐｻﾐｾﾐｳ Java Cjavajre..ﾐ湲τび・ﾐｺﾐｻﾐｰﾑ・・ｾﾐｲ Java DdevworkspacesDerbyQuerybin Ddevsrcdbderbytrunkjarssanederbytools.jar Ddevsrcdbderbytrunkjarssanederby.jar Ddevsrcdbderbytrunkjarssanederbyclient.jar DdevsrcdbderbytrunkjarssanederbyLocale_cs.jar DdevsrcdbderbytrunkjarssanederbyLocale_de_DE.jar DdevsrcdbderbytrunkjarssanederbyLocale_es.jar DdevsrcdbderbytrunkjarssanederbyLocale_fr.jar DdevsrcdbderbytrunkjarssanederbyLocale_hu.jar DdevsrcdbderbytrunkjarssanederbyLocale_it.jar DdevsrcdbderbytrunkjarssanederbyLocale_ja_JP.jar DdevsrcdbderbytrunkjarssanederbyLocale_ko_KR.jar DdevsrcdbderbytrunkjarssanederbyLocale_pl.jar DdevsrcdbderbytrunkjarssanederbyLocale_pt_BR.jar DdevsrcdbderbytrunkjarssanederbyLocale_zh_CN.jar DdevsrcdbderbytrunkjarssanederbyLocale_zh_TW.jar Ddevsrcdbderbytrunkjarssanederbynet.jar Ddevsrcdbderbytrunkjarssanederbyrun.jarﾐ侑ｼﾑ・ﾐ榧｡ Windows XPﾐ績ﾑ・ｸﾑひｵﾐｺﾑびτﾐｰ ﾐ榧｡ xﾐ漬ｵﾑﾑ・ｸﾑ・ﾐ榧｡ .ﾐ侑ｼﾑ・ﾐｿﾐｾﾐｻﾑ糊ｷﾐｾﾐｲﾐｰﾑひｵﾐｻﾑ・Java dmitrygusevﾐ頒ｾﾐｼﾐｰﾑ威ｽﾐｸﾐｹ ﾐｺﾐｰﾑひｰﾐｻﾐｾﾐｳ ﾐｿﾐｾﾐｻﾑ糊ｷﾐｾﾐｲﾐｰﾑひｵﾐｻﾑ・Java CDocuments and Settingsdmitrygusevﾐ墟ｰﾑひｰﾐｻﾐｾﾐｳ ﾐｿﾐｾﾐｻﾑ糊ｷﾐｾﾐｲﾐｰﾑひｵﾐｻﾑ・Java DdevworkspacesDerbyQueryjava.specification.name Java Platform API Specificationjava.specification.version . ﾐ侑ｽﾑ・ｾﾑﾐｼﾐｰﾑ・ｸﾑ・Derby JRE  JDBC JSE .  JDBC . Ddevsrcdbderbytrunkjarssanederby.jar  ... alpha  ???) Ddevsrcdbderbytrunkjarssanederbytools.jar  ... alpha  ???) Ddevsrcdbderbytrunkjarssanederbynet.jar  ... alpha  ???) Ddevsrcdbderbytrunkjarssanederbyclient.jar  ... alpha  ???) ﾐ侑ｽﾑ・ｾﾑﾐｼﾐｰﾑ・ｸﾑ・ﾐｾ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ ﾐ｢ﾐｵﾐｺﾑτ禍ｰﾑ・ﾐｻﾐｾﾐｺﾐｰﾐｻﾑ・ [ﾑﾑτ・・ｺﾐｸﾐｹﾐﾐｾﾑ・・ｸﾑ・ ru_RU ]ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  cs  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  de_DE  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  es  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  fr  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  hu  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  it  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  ja_JP  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  ko_KR  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  pl  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  pt_BR  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  ru  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  zh_CN  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)ﾐ榧ｱﾐｽﾐｰﾑﾑσｶﾐｵﾐｽﾐｰ ﾐｿﾐｾﾐｴﾐｴﾐｵﾑﾐｶﾐｺﾐｰ ﾐｻﾐｾﾐｺﾐｰﾐｻﾐｸ  zh_TW  ﾐｲﾐｵﾑﾑ・ｸﾑ・ ... alpha  ???)How to reproduce the bug. Create a table with name indicator or any other SQL keyword as the name  i.e. select) and one field of any type  for instance CHAR)  like thisCREATE TABLE indicatorc CHAR) DEFAULT N). Add constraint to the fieldALTER TABLE  indicator  ADD CONSTRAINT MY_CONSTRAINT CHECK c IN Y N))). Try to insert any row to that tableINSERT INTO indicator VALUES N)The INSERT statement will throw an exceptionjava.sql.SQLException Java exception  java.util.EmptyStackException.Also  see the program Main.java) attached to this issue and derby.log contained the exceptions stacktace output.Ive also created and attached the patch that may fix this issue. Hope this help to improve Derby.   
0;Index split deadlock   ;After doing dome research on the mailing list  it appears that the index split deadlock is a known behaviour  so I will start by describing the theoretical problem first and then follow with the details of my test case.If you have concurrent select and insert transactions on the same table  the observed locking behaviour is as follows the select transaction acquires an S lock on the root block of the index and then waits for an S lock on some uncommitted row of the insert transaction the insert transaction acquires X locks on the inserted records and if it needs to do an index split creates a subtransaction that tries to acquire an X lock on the root block of the indexIn summary INDEX LOCK followed by ROW LOCK  ROW LOCK followed by INDEX LOCK  deadlockIn the case of my project this is an important issue lack of concurrency after being forced to use table level locking) and I would like to contribute to the project and fix this issue if possible). I was wondering if someone that knows the code can give me a few pointers on the implications of this issue Is this a limitation of the topdown algorithm used? Would fixing it require to use a bottom up algorithm for better concurrency which is certainly non trivial)? Trying to break the circular locking above  I would first question why does the select transaction need to acquire and hold) a lock on the root block of the index. Would it be possible to ensure the consistency of the select without locking the index?The attached test InsertSelectDeadlock.java) tries to simulate a typical data collection application  it consists of  an insert thread that inserts records in batch a select thread that processes the records inserted by the other thread select * from table where id gt  ?The derby log provides detail about the deadlock trace and stacktraces_during_deadlock.txt shows that the inser thread is doing an index split.The test was run on ... and ... with identical behaviour.Thanks Bogdan Calmac.   
0;getBinaryStream returns incorrect result truncated value) if underlying blob is deleted   ;If getBinaryStream is reading a value READ_UNCOMMITTED) and the row is deleted by another connection  a truncated value will be returned without error. I believe instead either the whole value or an IOException should occur.With . and higher with the repro attahed we getgt  java TruncatedBlobEmbeddedRead  bytes rows in BLOBCLOBWith .EmbeddedRead  bytes OK) rows in BLOBCLOB Note network server returns the full value for both . and . but gives a lock timeout for .. I will file a separate issue for that.   
0;iepnegativetests_ES.diff fails with JME Foundation   ;Diff file derbyallinTestiepnegativetests_ES.diff             Start iepnegativetests_ES jdkJME Foundation Specification v. derbyallinTest   ***a gt  ijgt  export table is nullgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  null  extinoutt.dat  gt  null  null  null)  gt  ERROR XIE Nombre de entidad nulo.a gt  ijgt  export query is null gt  call SYSCS_UTIL.SYSCS_EXPORT_QUERYnull gt  extinoutt.dat   null  null  null)  gt  ERROR XIE Nombre de entidad nulo. dellt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE XXXX  T   extinoutt.dat   agt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE XXXX  T   extinoutt.dat    dellt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat   agt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat    dellt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat   agt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat    dellt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat   agt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat    dellt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat   agt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat    dellt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat   agt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat    dellt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat   agt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat    dellt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat   agt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat    dellt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat   agt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat    dellt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat   agt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat    dellt  ijgt  call SYSCS_UTIL.SYSCS_IMPORT_TABLEIEP  T   extinoutt.dat   agt  ijgt  call SYSCS_UTIL.SYSCS_IMPORT_TABLEIEP  T   extinoutt.dat    dellt  call SYSCS_UTIL.SYSCS_IMPORT_TABLEIEP  T   extinnodirt.dat   agt  call SYSCS_UTIL.SYSCS_IMPORT_TABLEIEP  T   extinnodirt.dat    dellt  ERROR XIE Archivo de datos no encontrado extinnodirt.datagt  ERROR XIE Archivo de datos no encontrado extinnodirt.dat dellt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE IEP  NOTABLE   extinoutt.dat   agt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE IEP  NOTABLE   extinoutt.dat    dellt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE XXXX  T   extinoutt.dat   agt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE XXXX  T   extinoutt.dat    dellt  ijgt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE IEP  T   extinoutt.dat   agt  ijgt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE IEP  T   extinoutt.dat    dellt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE IEP  T   extinoutt.dat   agt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE IEP  T   extinoutt.dat    dellt  ijgt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE IEP  T   extinoutt.dat   agt  ijgt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE IEP  T   extinoutt.dat    dellt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE IEP  T   extinoutt.dat   agt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE IEP  T   extinoutt.dat    dellt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt.dat   agt  ijgt  call SYSCS_UTIL.SYSCS_EXPORT_TABLE IEP  T   extinoutt_.dat    dellt  extinoutt.dat   agt  extinoutt_.dat    dellt  extinoutt.dat   agt  extinoutt_.dat    dellt  extinoutt.dat   agt  extinoutt_.dat    dellt  extinoutt.dat   agt  extinoutt_.dat    dellt  extinoutt.dat   agt  extinoutt_.dat    dellt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE SYS  SYSTABLES   extinoutt.dat   agt  call SYSCS_UTIL.SYSCS_IMPORT_TABLE SYS  SYSTABLES   extinoutt_.dat   Test Failed. End iepnegativetests_ES jdkJME Foundation Specification v. derbyallinTest   ***   
0;convert langlockTable.sql to Junit   ;   
0;CollationTest fails with Unexpected row count expected but was when Xalan . jars are in classpath   ;When I have the Xalan jars in the classpath  testEnglishCollation)  testNorwayCollation) and testPolishCollation) fail with this stack trace) testEnglishCollationorg.apache.derbyTesting.functionTests.tests.lang.CollationTest)junit.framework.AssertionFailedError Unexpected row count expectedlt gt  but waslt gt  at org.apache.derbyTesting.junit.JDBC.assertDrainResultsJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertEmptyJDBC.java) at org.apache.derbyTesting.functionTests.tests.lang.CollationTest.checkLangBasedQueryCollationTest.java) at org.apache.derbyTesting.functionTests.tests.lang.CollationTest.commonTestingForTerritoryBasedDBCollationTest.java) at org.apache.derbyTesting.functionTests.tests.lang.CollationTest.testEnglishCollationCollationTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)If I remove the Xalan jars from the classpath  the test runs cleanly.   
0;java.lang.ClassCastException returning null from a case statement  in subquery   ;The following query returning NULL date from a case statement in a subquery causees a ClassCastException in ..The query works fine in .ijgt  create table t d date  vc varchar))  rows insertedupdateddeletedijgt  insert into t valuesCURRENT_DATE  hello)  row insertedupdateddeletedijgt  SELECT d from t where d  SELECT CASE WHEN    THEN CURRENT_DATE ELSE NULL END from t) D row selectedijgt  SELECT d from t where d  SELECT CASE WHEN    THEN CURRENT_DATE ELSE NULL END from t) DERROR  The exception java.lang.ClassCastException org.apache.derby.iapi.types.SQLChar incompatible with org.apache.derby.iapi.types.DateTimeDataValue was thrown while evaluating an expression.java.sql.SQLException The exception java.lang.ClassCastException org.apache.derby.iapi.types.SQLChar incompatible with org.apache.derby.iapi.types.DateTimeDataValue was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionErrorEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.nextEmbedResultSet.java) at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.tools.JDBCDisplayUtil.DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.impl.tools.ij.utilMain.displayResultutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)Caused by java.sql.SQLException Java exception org.apache.derby.iapi.types.SQLChar incompatible with org.apache.derby.iapi.types.DateTimeDataValue java.lang.ClassCastException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.javaExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) ...  moreCaused by java.lang.ClassCastException org.apache.derby.iapi.types.SQLChar incompatible with org.apache.derby.iapi.types.DateTimeDataValue at org.apache.derby.exe.acxxaecxxd.gUnknown Source) at org.apache.derby.exe.acxxaecxxd.eUnknown Source) at org.apache.derby.impl.services.reflect.DirectCall.invokeReflectGeneratedClass.java) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreProjectRestrictResultSet.java) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRowBasicNoPutResultSetImpl.java) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java) ...  moreERROR XJ Java exception org.apache.derby.iapi.types.SQLChar incompatible with org.apache.derby.iapi.types.DateTimeDataValue java.lang.ClassCastException.java.sql.SQLException Java exception org.apache.derby.iapi.types.SQLChar incompatible with org.apache.derby.iapi.types.DateTimeDataValue java.lang.ClassCastException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.javaExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionErrorEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.nextEmbedResultSet.java) at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.tools.JDBCDisplayUtil.DisplayResultsJDBCDisplayUtil.java) at org.apache.derby.impl.tools.ij.utilMain.displayResultutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)Caused by java.lang.ClassCastException org.apache.derby.iapi.types.SQLChar incompatible with org.apache.derby.iapi.types.DateTimeDataValue at org.apache.derby.exe.acxxaecxxd.gUnknown Source) at org.apache.derby.exe.acxxaecxxd.eUnknown Source) at org.apache.derby.impl.services.reflect.DirectCall.invokeReflectGeneratedClass.java) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreProjectRestrictResultSet.java) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRowBasicNoPutResultSetImpl.java) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java) ...  more   
0;select query results in nullpointer exception in skipScan)   ;The following error was repeatedly thrown when we tried to run a select query via JDBC. Strangely  the exact same select query did not trigger any error when run from the command line console. After we added an index  the error went away completely. java.lang.NullPointerException at org.apache.derby.impl.sql.execute.NoPutResultSetImpl.skipScanUnknown Source) at org.apache.derby.impl.sql.execute.TableScanResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openRightUnknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.SortResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUnknown Source) at org.apache.derby.impl.drda.DRDAStatement.executeUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.processCommandsUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.runUnknown Source)   
0;Schema  does not exist when constraint used in table definition   ;httpsissues.apache.orgjirabrowseDERBYaction_In the response to my original comment post  which you can find via the permalink above  I was encouraged to file this as a new issue.verified this back to ... with the following ij script.connect jdbcderbywombat createtrue userblogs CREATE TABLE BLOGSCOM_BLOGSUSERSPK INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY username VARCHAR) NOT NULL CONSTRAINT BLOGSCOMBLOGSUSERS_UNIQUE_username UNIQUE CONSTRAINT BLOGSCOMBLOGS_USERS_PASSWORD_username CHECKLENGTHusername)gt ) password VARCHAR ) NOT NULL   PRIMARY KEYPK))    
0;langsynonym.sql fails with weme . with junit.framework.ComparisonFailure Output at line  expected but was   ;synonymorg.apache.derbyTesting.functionTests.tests.lang.LangScripts) failedjunit.framework.ComparisonFailure Output at line  expectedlt ......gt  but waslt ......gt  at junit.framework.Assert.assertEqualsAssert.java) at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanonCanonTestCase.java) at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTestScriptTestCase.java) at junit.framework.TestCase.runBareTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.framework.TestResult.protectTestResult.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.framework.TestResult.runTestResult.java) at junit.framework.TestCase.runTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at TimeRunner.mainTimeRunner.java)   
0;testImportExportProcedureNegativeorg.apache.derbyTesting.functionTests.tests.tools.ImportExportProcedureTest)junit.framework.ComparisonFailure Unexpected SQL state. expected but was   ;) testImportExportProcedureNegativeorg.apache.derbyTesting.functionTests.tests.tools.ImportExportProcedureTest)junit.framework.ComparisonFailure Unexpected SQL state. expectedlt gt  but waslt XIESgt  at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLStateBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLStateBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementErrorBaseJDBCTestCase.java) at org.apache.derbyTesting.functionTests.tests.tools.ImportExportProcedureTest.testImportExportProcedureNegativeImportExportProcedureTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by java.sql.SQLException The export operation was not performed  because the specified output file extinoutt.dat) already exists. Export processing will not overwrite an existing file  even if the process has permissions to write to that file  due to security concerns  and to avoid accidental file damage. Please either change the output file name in the export procedure arguments to specify a file which does not exist  or delete the existing file  then retry the export operation. at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Source) at org.apache.derby.client.am.PreparedStatement.executeUnknown Source) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementErrorBaseJDBCTestCase.java) ...  moreCaused by org.apache.derby.client.am.SqlException The export operation was not performed  because the specified output file extinoutt.dat) already exists. Export processing will not overwrite an existing file  even if the process has permissions to write to that file  due to security concerns  and to avoid accidental file damage. Please either change the output file name in the export procedure arguments to specify a file which does not exist  or delete the existing file  then retry the export operation. at org.apache.derby.client.am.Statement.completeExecuteUnknown Source) at org.apache.derby.client.net.NetStatementReply.parseEXCSQLSTTreplyUnknown Source) at org.apache.derby.client.net.NetStatementReply.readExecuteCallUnknown Source) at org.apache.derby.client.net.StatementReply.readExecuteCallUnknown Source) at org.apache.derby.client.net.NetStatement.readExecuteCall_Unknown Source) at org.apache.derby.client.am.Statement.readExecuteCallUnknown Source) at org.apache.derby.client.am.PreparedStatement.flowExecuteUnknown Source) at org.apache.derby.client.am.PreparedStatement.executeXUnknown Source) ...  more   
0;Derby does not resolve functions bound to methods with varargs.   ;Varargs were added in Java . It would be nice if Derby let you invoke a function bound to a method with a variable length argument list. The Reference Guide states a small number of restrictions for methods which can be invoked as Derby functions They must be public  static  and not have arguments which are long datatypes. I see no reason that Derby shouldnt be able to resolve and invoke functions which are bound to methods which dont suffer these limitations but which have variable argument lists.   
0;Trying to reconnect with derby client after bringing server down throws SQL Exception  rather than XXX exception   ;This issue was discussed in DERBY  because the case where the server is brought down and an application tries to reconnect does not throw a SQLNonTransientException. Discussion is still underway about whether XXX exceptions should be SQLNonTransientExceptions  but at least for this case changing the exception to  per Knuts suggestion should correct the problem for this case. See httpsissues.apache.orgjirabrowseDERBYaction_Below is current stack and test case.Apache Derbygot connection now sleepnow try to use the connection after you killed the nSException in thread main java.sql.SQLException A communications error has been detected Software caused connection abort recv failed.at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Sourceat org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Sourceat org.apache.derby.client.am.Connection.prepareStatementUnknown Sourceat org.apache.derby.client.am.LogicalConnection.prepareStatementUnknown Sourceat DerbyClientNonXA.mainDerbyClientNonXA.javaCaused by org.apache.derby.client.am.DisconnectException A communications error has been detected Software caused connection abort recv failed.at org.apache.derby.client.net.NetAgent.throwCommunicationsFailureUnknown Sourceat org.apache.derby.client.net.Reply.fillUnknown Sourceat org.apache.derby.client.net.Reply.ensureALayerDataInBufferUnknown Sourceat org.apache.derby.client.net.Reply.readDssHeaderUnknown Sourceat org.apache.derby.client.net.Reply.startSameIdChainParseUnknown Sourceat org.apache.derby.client.net.NetStatementReply.readPrepareDescribeOutputUnknown Sourceat org.apache.derby.client.net.StatementReply.readPrepareDescribeOutputUnknown Sourceat org.apache.derby.client.net.NetStatement.readPrepareDescribeOutput_Unknown Sourceat org.apache.derby.client.am.Statement.readPrepareDescribeOutputUnknown Sourceat org.apache.derby.client.am.PreparedStatement.readPrepareDescribeInputOutputUnknown Sourceat org.apache.derby.client.am.PreparedStatement.flowPrepareDescribeInputOutputUnknown Sourceat org.apache.derby.client.am.PreparedStatement.prepareUnknown Sourceat org.apache.derby.client.am.Connection.prepareStatementXUnknown Source...  moreCaused by java.net.SocketException Software caused connection abort recv failedat java.net.SocketInputStream.readSocketInputStream.java...  moreimport java.sql.Connection import java.sql.DatabaseMetaData import java.sql.PreparedStatement import java.sql.SQLException import java.sql.Statement import javax.sql.PooledConnection public class DerbyClientNonXApublic static void mainString args[] throws Exceptionorg.apache.derby.jdbc.ClientConnectionPoolDataSource ds  new org.apache.derby.jdbc.ClientConnectionPoolDataSource Connection conn  null ds.setDatabaseNameetempsampl createtrue PooledConnection pooledCon  ds.getPooledConnection conn  pooledCon.getConnection DatabaseMetaData md  conn.getMetaData System.out.printlnmd.getDatabaseProductVersion System.out.printlnmd.getDatabaseProductName System.out.printlngot connection now sleep. Bring down network server. Statement st  null PreparedStatement ps  null st  conn.createStatement tryst.executeUpdatedrop table TAB }catch SQLException xSystem.out.printlnno table exists }Thread.sleep System.out.printlnnow try to use the connection after you killed the nS ps  conn.prepareStatementCREATE TABLE TABCOL INT NOT NULL ps.executeUpdate conn.commit System.out.printlndone }}   
0;Use java.util.concurrent in TransactionTable to improve scalability   ;Running scalability tests with the client and buffer manager from DERBY shows that access to the TransactionTable.trans a Hashtable) and XactFactory.tranId a shared long) are the next major sources of contention.   
0;Intermittent transaction failure caused by internal duplicate savepoint name for triggers   ;While running our app overnight  performing some intensive database operations primarily deletes  we experienced a transaction failure  with error message A SAVEPOINT with the passed name already exists in the current transaction. This failure appears to be very intermittent  as Ive run the same operation successfully for hours and hours without failure. Some more information. I see that there are four JIRA issues which report the same message DERBY  DERBY  DERBY  DERBY. I am not sure to what extent if any  the problem I experienced is related to these issues.窶｢ At least three of the above JIRA issues are related to triggers. Our transaction failure occurred while performing a delete in a table which has delete triggers.窶｢ We arent using savepoints explicitly. Of course  it can be seen in the stack trace that the trigger operation is setting a savepoint.窶｢ One of the JIRA issues mentions exceeding maximum depth of nested triggers. Not sure what a nested trigger is  but the trigger we are performing should not in theory cause another trigger event.. Heres the stack traceCaused by java.sql.SQLException A SAVEPOINT with the passed name already exists in the current transaction. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateUnknown Source at com.referentia.sdf.monitor.samplebase.derby.DerbySampleBase.performDerbySampleBase.java at com.referentia.sdf.monitor.samplebase.derby.DerbySampleBase.performInTransactionDerbySampleBase.java ...  moreCaused by java.sql.SQLException A SAVEPOINT with the passed name already exists in the current transaction. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source ...  moreCaused by ERROR B A SAVEPOINT with the passed name already exists in the current transaction. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source at org.apache.derby.impl.store.raw.xact.Xact.setSavePointUnknown Source at org.apache.derby.impl.store.access.RAMTransaction.setSavePointUnknown Source at org.apache.derby.impl.sql.conn.GenericStatementContext.setSavePointUnknown Source at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSUnknown Source at org.apache.derby.impl.sql.execute.RowTriggerExecutor.fireTriggerUnknown Source at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventUnknown Source at org.apache.derby.impl.sql.execute.DeleteResultSet.fireAfterTriggersUnknown Source at org.apache.derby.impl.sql.execute.DeleteResultSet.openUnknown Source at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source ...  more. Here are the relevant tables and triggers. We have different tables for different sample data types in our application currently int  long  float  double  Boolean  string. I have shown the int_sample table  the other tables are identical but have a different data type for the value field. Sample records are first class  time records are second class  they only exist to support sample records. When there are no remaining sample records for a given time record  the time record can be removed. It is the job of the trigger to perform this cleanup when a record is deleted from any of the sample tables  the time record corresponding to *_sample.fk_time_id is deleted only if there are no remaining records in any of the sample tables which have the same fk_time_id. So although there are cascading deletes deleting a time record deletes all of its samples  the trigger should not recurse because the trigger only deletes when there are no associated records.create table time  id int not null generated always as identity  time timestamp not null  constraint time_pk primary key id  constraint time_unique unique time create table int_sample  fk_band_id int not null  fk_time_id int not null  value int not null  constraint int_sample_pk primary key fk_band_id  fk_time_id  constraint int_sample_fk_band foreign key fk_band_id references band id on delete cascade  constraint int_sample_fk_time foreign key fk_time_id references time id on delete cascade create trigger cascade_delete_unused_time_for_int_sample_trigger after delete on int_sample referencing old as oldrow for each row delete from time where  time.id  oldrow.fk_time_id and id not in select fk_time_id from int_sample  and id not in select fk_time_id from long_sample  and id not in select fk_time_id from float_sample  and id not in select fk_time_id from double_sample  and id not in select fk_time_id from boolean_sample  and id not in select fk_time_id from string_sample . Invocation. This is very rough pseudocode focusing on the core logic. In reality  theres a lot more code  but Im doing the usual stuff  such as using prepared statements  and closing all resources when done. The key thing is that Im using two statements in a nested fashion  in the outer statement  I iterate over records in the time table  and in the inner loop I use a second statement to delete records in one of the sample tables. I can provide the actual code if desired.deleteSamplesint bandId  String sampleTable  Object someQueryCriteria  within transaction  create stmt iterating over time ids in time table restricted by someQueryCriteria for time_id in stmt  PreparedStatement stmt  conn.prepareStatementString.format delete from s where fk_band_id  ? and fk_time_id  ?  sampleTable  set stmt parameters and executeUpdate } }}   
0;LOB locks are not released after free).   ;When getBlobgetClob is called on the ResultSet  the current row islocked if the JDBC driver does not cache the entire LOB value inmemory. This is done to prevent the BlobClob object from beingchanged. Until now  this lock has been held to the end of thetransaction.JDBC introduced free) methods for the BlobClob class. The lockingshould be changed so that the locks is releases when the BlobClobobject is freed.   
0;java.lang.NumberFormatException in test lang.TableFunctionTest on specific machines Win  Vista)   ;This failure is gleaned from the nightly tests posted to the list. The test started failing on September .The stack is) testTableFunctionsorg.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest)java.lang.NumberFormatException For input string   at sun.misc.FloatingDecimal.readJavaFormatStringFloatingDecimal.java) at java.lang.Double.parseDoubleDouble.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.readDoubleTagTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.vtiCostingTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.testTableFunctionsTableFunctionTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)   
0;On client  Clob.free) does not release locators.   ;On client  Clob.free) does not call the stored procedure to release the locator associated with the Clob. Hence  serverside Clob objects are not freed until the transaction terminates.   
0;totalSpace not properly initialized in AllocPage   ;There are some problems with the initialization of totalSpace in AllocPage. It is initialized in StoredPage.initSpace) which is again called from StoredPage.usePageBuffer)  and it is set to the value returned from AllocPage.getMaxFreeSpace). The problems are ) The calculation in getMaxFreeSpace) uses borrowedSpace  but when createIdentity) is called on an AllocPage  borrowedSpace has not been initialized when getMaxFreeSpace) is called and the calculated size is wrong. ) When a page object is reused  usePageBuffer) is only called if a new byte array must be allocated because the new page has a different size than the old page). This means that the totalSize field gets the same value as in the old page if their sizes are equal  which is not necessarily correct.   
0;Adjust master build script to require the Java  compiler to build Derby   ;Require the Java  compiler in order to build Derby as approved by the community recently httpwww.nabble.comVOTERequireJavaorlatercompilertobuildDerbytf.htmla   
0;Cut down on object creations in LIKE clause implementation of territory based characters.   ;The LIKE clause for territory based characters was implemented correctly based on SQL standards in DERBY but the object String and CollationElementIterator creations introduced in DERBY can be cut down by following Knuts simple solution. I am copying that solution from DERBY. We should implement that solution to improve the performance of LIKE for territory based characters.*********copied from DERBY*********************************************************Another simple way to cut down the string allocations... I think you could express iapi.types.LikecheckEquality like this  if val vLoc   pat pLoc    same character  so two strings consisting of this  single character must be equal regardless of territory return true  } else if collator  null   not same character  must be unequal in UCS_BASIC return false  }  String s  new Stringval  vLoc     String s  new Stringpat  pLoc     return collator.compares  s    This would only allocate new objects if the characters are not equal.   
0;ComparisonFailure in synonymorg.apache.derbyTesting.functionTests.tests.lang.LangScripts)   ;Since r synonymorg.apache.derbyTesting.functionTests.tests.lang.LangScripts) has failed with junit.framework.ComparisonFailure Output at line  expectedlt []gt  but waslt   When we decide to convert this test to junit test  the converted tests can  gt lt methodgt org.apache.derbyTesting.functionTests.tests.lang.LangScriptslt methodgt lt signaturegt Output at line  expectedlt []gt  but waslt   When we decide to convert this test to junit test  the converted tests can  gt lt signaturegt    
0;IllegalArgumentException Malformed uxxxx encoding while trying to find Xalan version running tests via ant   ;Following stack trace after executingant propertyfile ant.properties junitallcodelinejars  junit  Unexpected exception while trying to find Xalan version  junit  java.lang.IllegalArgumentException Malformed uxxxx encoding.  junit  at java.util.Properties.loadConvertProperties.java)  junit  at java.util.Properties.loadProperties.java)  junit  at org.apache.derbyTesting.junit.XML.checkXalanVersionXML.java)  junit  at org.apache.derbyTesting.junit.XML.lt clinitgt XML.java)   
0;Reduce dependency on NetworkServerControl in TestConfiguration   ;Code has been added in TestConfiguration to allow for starting and stopping a Derby network server.Even if you know will not need this functionality  or you simply dont want to have this functionality available  you must include derbynet.jar or point to classes).I think this dependency should be reduced  by not having any instance variables and by not importing the class with an explicit import statement. The existing instance variables are not used.With this planned change  you can run tests without including derbynet.jar on the classpath  as long as they dont call startNetworkServer or stopNetworkServer. Most often these methods will be called by a decorator.The downside of this change  is that you wont get any error messages before the mentioned methods are actually executed.A typical error messageFailed to invoke suite)java.lang.NoClassDefFoundError orgapachederbydrdaNetworkServerControlIm sure there are other solutions as well  but this one is really easy.Any opinions on this change?   
1;AccessControlException when running junit tests under the ant harness in ant ..   ;The following AccessControlException occurs on junit tests run under the ant harness if the ant version is ..  junit  Running org.apache.derbyTesting.functionTests.tests.jdbcapi.AutoloadTest  junit  Tests run   Failures   Errors   Time elapsed . sec  junit  Exception in thread main java.security.AccessControlException access denied java.io.FilePermission Usersrhderbymainlinetrunkjunitvmwatcher.properties write)  junit  at java.security.AccessControlContext.checkPermissionAccessControlContext.java)  junit  at java.security.AccessController.checkPermissionAccessController.java)  junit  at java.lang.SecurityManager.checkPermissionSecurityManager.java)  junit  at java.lang.SecurityManager.checkWriteSecurityManager.java)  junit  at java.io.FileOutputStream.lt initgt FileOutputStream.java)  junit  at java.io.FileOutputStream.lt initgt FileOutputStream.java)  junit  at java.io.FileWriter.lt initgt FileWriter.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.registerNonCrashJUnitTestRunner.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.mainJUnitTestRunner.java)  junit  Running org.apache.derbyTesting.functionTests.tests.jdbcapi.AutoloadTest  junit  Tests run   Failures   Errors   Time elapsed  secI havent looked at the ant source  but here is my theory about what is going on) Ant .. is trying to write a file to the directory where the ant script lives) The write is not wrapped in a privileged block) So all code domains above it on the stack need to be granted write permission on the directory where the ant script livesI will attach a modified version of derby_tests.policy which allows me to start up the tests without tripping across this security exception.   
1;SYSCS_GET_USER_ACCESS incorrectly treats the passed in user name as a SQL identifier and thus can reports the wrong user information   ;VALUES SYSCS_GET_USER_ACCESSCURRENT_USER) will report the wrong user information if the user name needs to be a delimited identifier when used in a SQL statement such as GRANT. E.g. user fred@derby.com   etc.Passing the user name as a VARCHAR also returns the wrong user for such user names.   
0;Updating Building.txt   ;We Svein Erik Lﾃｸvland and Henrik Holum) have updated the building.txt document for Derby Trunk. We built the code following every step of the document  and here are our suggested changes. A review of the changes would be appresiated.Removed the empty subsections  and updated the section and subsection numbers. We also updated the references according to the new subsection numbers.Removed .. and ..Renamed .. gt  ..  .. gt  .. and .. gt  ...Added  directories.. )Updated the text to indicate that any newer version than .. can be used. Old text indicated that you could only use ..x versions  not .... ) and ) Windows)Updated the URLs to point directly to download pages for the desired java versions.. Previous ..)Can we use Junit .. or does it have to be ..? if Junit .. can be used the link can be replaced with httpkent.dl.sourceforge.netsourceforgejunitjunit...zip. Also update the text to indicate these changes ..*).. Previous ..)Moved the Optional tag to be consistent with .. Previous ..) We updated references in the note to reflect the new subsection number.. )Updated the number of jar files with local support to  instead of .We have used Windows XP  so we have not checked the *nix or Mac settings.Hope this is helpfullHenrik and Svein Erik   
1;NetworkServerControlApiTest fails with java.security.AccessControlException if not run as first test   ;There appears to be a problem loading the test specific policy file for NetworkServerControlApiTest if it is not run as the first test in the suite.Failure in the derby.log isTrace directory changed to Ctestsystem.access denied java.io.FilePermission CtestsystemServer.trace write)java.security.AccessControlException access denied java.io.FilePermission CtestsystemServer.trace write) at java.security.AccessControlContext.checkPermissionAccessControlContext.java) at java.security.AccessController.checkPermissionAccessController.java) at java.lang.SecurityManager.checkPermissionSecurityManager.java) at java.lang.SecurityManager.checkWriteSecurityManager.java) at java.io.FileOutputStream.lt initgt FileOutputStream.java) at java.io.FileOutputStream.lt initgt FileOutputStream.java) at java.io.FileWriter.lt initgt FileWriter.java) at org.apache.derby.impl.drda.DssTrace.runDssTrace.java) at java.security.AccessController.doPrivilegedNative Method) at org.apache.derby.impl.drda.DssTrace.startComBufferTraceDssTrace.java) at org.apache.derby.impl.drda.Session.initTraceSession.java) at org.apache.derby.impl.drda.Session.setTraceOnSession.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.setTraceNetworkServerControlImpl.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.processCommandsNetworkServerControlImpl.java) at org.apache.derby.impl.drda.DRDAConnThread.sessionInitialStateDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.runDRDAConnThread.java)   
0;NullPointerException on INSERT after ALTER TABLE ... DROP COLUMN   ;ij version .ijgt  connect jdbcderbybugdb createtrue ijgt  create table t  x varchar)  y varchar)  id int primary key generated by default as identity)  rows insertedupdateddeletedijgt  alter table t drop column y  rows insertedupdateddeletedijgt  insert into t values a ERROR XJ Java exception  java.lang.NullPointerException.java.sql.SQLException Java exception  java.lang.NullPointerException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source) at org.apache.derby.iapi.tools.run.mainUnknown Source)Caused by java.sql.SQLException Java exception  java.lang.NullPointerException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source) ...  moreCaused by java.lang.NullPointerException at org.apache.derby.impl.sql.compile.ResultColumn.columnTypeAndLengthMatchUnknown Source) at org.apache.derby.impl.sql.compile.ResultColumnList.columnTypesAndLengthsMatchUnknown Source) at org.apache.derby.impl.sql.compile.InsertNode.bindStatementUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementUnknown Source) ...  more   
0;DataSourceTest uses ConnectionEventListener but never verifies that events are getting fired   ;Derby has a junit test called DataSourceTest in jdbcapi package. This test registers ConnectionEventListener for various Connection objects but never verifies that events from those Connection objects are getting delivered to the listeners. Prior to this tests conversion to junit  there were System.out.println in the test but since this test is not cannon based anymore  those printlns have been commented out. I will soon submit a patch where this test will have asserts to make sure that Connection events are getting fired.   
0;New simple demo suitable for supported Java ME platforms   ;DERBY added JME Java ME) support in the simple demo SimpleApp)  but broke the basic client functionality of the demo at least in some VMs). Since DERBY fixes this by removing Java ME support from SimpleApp  a separate simple demo for Java ME should be included along with the other demos available in Derby distributions.Currently supported Java ME platforms are Java ME Virtual Machines with Connected Device Configuration CDC) support and the Foundation Profile . or better  with the optional package for JDBC JSR).The new demo should be easy to use and understand  and should be well commented. The demo code should demonstrate how to create and connect to a Derby database in a valid Java ME environment  and perform some basic database operations insert  update  query). A readme file describing the demo and instructions for building and running it) should be included.   
0;LOCALIZEDDISPLAY of CURRENT_TIMESTAMP returns only the TIME   ;In IJ  LOCALIZEDDISPLAY ON causes VALUES CURRENT_TIMESTAMP to display on the TIMEijgt  values current_timestamp  . row selectedijgt  localizeddisplay on ijgt  values current_timestamp  AM PST row selected   
0;Using setQueryTimeout will leak sections   ;The implementation of setQueryTimeout relies on NetStatementReply.writeSetSpecialRegister) which will allocate a dynamic section when called. No reference to this Section object is kept  and so Section.free) never gets called on it. Executing the same statment repeatedly with a query timeout set results in the client driver throwing an exception because the number of Sections exceeding .   
1;AccessControlException access denied java.io.FilePermission C....file.log read) in ErrorStreamTest.   ;Seen on Windows only.See e.g. httpdbtg.thresher.comderbytestDailyjvm.testingLimitedtestSummary.html  vista  w.suitesAll fail *************************************************************) testFileorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException access denied java.io.FilePermission CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemfile.log read)) testWrongFileorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException access denied java.io.FilePermission CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemfoofile.log read)) testFileOverMethodorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException access denied java.io.FilePermission CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemfile.log read)) testFileOverFieldorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException access denied java.io.FilePermission CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemfile.log read)) testFileOverMethodAndFieldorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException access denied java.io.FilePermission CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemfile.log read)) testDefaultorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError File CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemderby.log could not be deleted) testMethodorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError assertNotEmpty failedCcludevjagtmpautoderbyN_regressionsuitesAll_logsystemmethod.logsuitesAll fail *************************************************************) testFileorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)java.security.AccessControlException access denied java.io.FilePermission CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemfile.log read) at java.security.AccessControlContext.checkPermissionAccessControlContext.java) at java.security.AccessController.checkPermissionAccessController.java) at java.lang.SecurityManager.checkPermissionSecurityManager.java) at java.lang.SecurityManager.checkReadSecurityManager.java) at java.io.File.existsFile.java) at java.io.WinFileSystem.canonicalizeWinFileSystem.java) at java.io.File.getCanonicalPathFile.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testFileErrorStreamTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)   
0;Optimizer can see negative cost estimates when pulling Optimizables from the join order.   ;When iterating through join order permutations for a query the optimizer places Optimizables FromTables into a join order  estimates the cost  then pulls Optimizables out of the join order and replaces them in different positions. For details see httpwiki.apache.orgdbderbyJoinOrderPermutationsAs optimizables are added to the join order the optimizer keeps track of the accumulated cost estimate for the join order. Then when an Optimizable is removed pulled from the join order  the optimizer substracts that Optimizables cost from the total accumulated cost.In certain cases esp. with very large queries its possible that the cost for some Optimizable OPT_A is so large that adding it to the accumulated cost of the join order leads to loss of the previous sum. This happens due to normal Java addition of double values  see doubleAdd.java attached.As an example  assume our current join order is  OPT_  OPT_   }and that the estimated costs for OPT_ and OPT_ are  and   respectively. The accumulated cost for OPT_ and OPT_ is then     . Then assume we place OPT_A into the final position in the join order  OPT_  OPT_  OPT_A }If the cost of OPT_A is something that is orders of magnitude larger than   then by adding it to  we will effectively lose the . Lets say the cost of OPT_A is estimated to be .E which is actually possible  esp. as a result of DERBY. The size of OPT_As cost makes the cost of OPT_  OPT_ insignificant when using Java doubles see attached doubleAdd.java   .E  .ESo the total accumulated cost for the join order is now .E. Later  when we go to pull OPT_A from the join order  well subtract its cost from the accumulated cost  yielding .E  .E  Notice how the accumulated cost  which is supposed to represent the cost of OPT_ plus the cost of OPT_  is now ZERO. And our join order goes back to  OPT_  OPT_   }Next we pull OPT_ from the join order  which means we have to subtract its cost from the accumulated cost     So we end up with a negative accumulated cost  which is WRONG. Actually  the ZERO accumulated cost in the previous step was wrong  this is just a side effect.As it turns out  there is code in OptimizerImpl that tries to account for negative costs when the negative value comes from normal imprecise arithmetic. In particular we see the following in the code that pulls Optimizables double newCost  currentCost.getEstimatedCost  if pullCostEstimate  null  pullCost  pullCostEstimate.getEstimatedCost  newCost  pullCost  * ** Its possible for newCost to go negative here due to ** loss of precision. * if newCost lt  . newCost  .  ... }This code hides the error mentioned above because when it sees  it assumes that the negative stems from normal loss of precision. So the cost for the plan is incorrectly set to   which makes it cheaper than any other plan thus far and probably cheaper than anything to come  and therefore the optimizer will probably choose the wrong plan.I think the check for negative newCost is only valid if the join position that were pulling is i.e. if we just pulled the first optimizable in the join order. In that case the accumulated cost should be zero  so checking for a negative value and setting it to zero is finewere just accounting for the loss of precision that is mentioned in the current code comments.Note that the same issue also exists for sort avoidance costs  but in that code there is currently no check for negative costs. So if a situation as described above occurs in the current code when the cost of OPT_A is for a sort avoidance plan  the code will throw an ASSERTION failure because the cost should be nonnegative.I noticed this behavior somewhat accidentally while testing out a fix for DERBY with my attempted fix applied  the query newstylesql.txt was failing with an ASSERTION failure due to the negative cost estimate. Hence this jira.   
0;ErrorStreamTest failing on ibm j jvm   ;Getting the following junit tests failures on just on the j jvm platform running on windowsThere were  failures) testDefaultorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError shutdown engine not implemened at org.apache.derbyTesting.junit.DataSourceConnector.shutEngineDataSourceConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testDefaultErrorStreamTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)) testFileorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError shutdown engine not implemened at org.apache.derbyTesting.junit.DataSourceConnector.shutEngineDataSourceConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testFileErrorStreamTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)) testWrongFileorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError shutdown engine not implemened at org.apache.derbyTesting.junit.DataSourceConnector.shutEngineDataSourceConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testWrongFileErrorStreamTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)) testMethodorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError shutdown engine not implemened at org.apache.derbyTesting.junit.DataSourceConnector.shutEngineDataSourceConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testMethodErrorStreamTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)) testWrongMethodorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError shutdown engine not implemened at org.apache.derbyTesting.junit.DataSourceConnector.shutEngineDataSourceConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testWrongMethodErrorStreamTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)) testFieldorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError shutdown engine not implemened at org.apache.derbyTesting.junit.DataSourceConnector.shutEngineDataSourceConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testFieldErrorStreamTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)) testWrongFieldorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError shutdown engine not implemened at org.apache.derbyTesting.junit.DataSourceConnector.shutEngineDataSourceConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testWrongFieldErrorStreamTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)) testFileOverMethodorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError shutdown engine not implemened at org.apache.derbyTesting.junit.DataSourceConnector.shutEngineDataSourceConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testFileOverMethodErrorStreamTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)) testFileOverFieldorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError shutdown engine not implemened at org.apache.derbyTesting.junit.DataSourceConnector.shutEngineDataSourceConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testFileOverFieldErrorStreamTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)) testFileOverMethodAndFieldorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError shutdown engine not implemened at org.apache.derbyTesting.junit.DataSourceConnector.shutEngineDataSourceConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testFileOverMethodAndFieldErrorStreamTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)) testMethodOverFieldorg.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest)junit.framework.AssertionFailedError shutdown engine not implemened at org.apache.derbyTesting.junit.DataSourceConnector.shutEngineDataSourceConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.engine.ErrorStreamTest.testMethodOverFieldErrorStreamTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at lt unknown classgt .lt unknown methodgt Unknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)   
0;Group by query with many aggregate columns and case statements fails with ERROR XSDA Restore of a serializable or SQLData object of class   attempted to read more data than was originally stored   ;using the attached database v.)   select * from pivotview  fails with the stack trace below. A view pivotview_ok) created on a subset of the columns in pivotview executes fine. Adding one column back into pivotview_ok causes failures most of the time. See attached for view definitions. . GMT Thread main  main  XID  )  SESSIONID  )  DATABASE  pivotview)  DRDAID  null)  Failed Statement is select * from pivotviewERROR XSDA Restore of a serializable or SQLData object of class   attempted to read more data than was originally stored at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.store.raw.data.StreamFileContainer.fetchNextUnknown Source) at org.apache.derby.impl.store.raw.data.StreamFileContainerHandle.fetchNextUnknown Source) at org.apache.derby.impl.store.access.sort.MergeScan.mergeARowUnknown Source) at org.apache.derby.impl.store.access.sort.MergeScan.initUnknown Source) at org.apache.derby.impl.store.access.sort.MergeSort.openSortScanUnknown Source) at org.apache.derby.impl.store.access.RAMTransaction.openSortScanUnknown Source) at org.apache.derby.impl.sql.execute.GroupedAggregateResultSet.loadSorterUnknown Source) at org.apache.derby.impl.sql.execute.GroupedAggregateResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source)Caused by java.io.EOFException at java.io.DataInputStream.readBooleanDataInputStream.java) at org.apache.derby.impl.sql.execute.MaxMinAggregator.readExternalUnknown Source) at org.apache.derby.iapi.services.io.FormatIdInputStream.readObjectUnknown Source) at org.apache.derby.iapi.types.UserType.readExternalUnknown Source) ...  more begin nested exception  level ) java.io.EOFException at java.io.DataInputStream.readBooleanDataInputStream.java) at org.apache.derby.impl.sql.execute.MaxMinAggregator.readExternalUnknown Source) at org.apache.derby.iapi.services.io.FormatIdInputStream.readObjectUnknown Source) at org.apache.derby.iapi.types.UserType.readExternalUnknown Source) at org.apache.derby.impl.store.raw.data.StreamFileContainer.fetchNextUnknown Source) at org.apache.derby.impl.store.raw.data.StreamFileContainerHandle.fetchNextUnknown Source) at org.apache.derby.impl.store.access.sort.MergeScan.mergeARowUnknown Source) at org.apache.derby.impl.store.access.sort.MergeScan.initUnknown Source) at org.apache.derby.impl.store.access.sort.MergeSort.openSortScanUnknown Source) at org.apache.derby.impl.store.access.RAMTransaction.openSortScanUnknown Source) at org.apache.derby.impl.sql.execute.GroupedAggregateResultSet.loadSorterUnknown Source) at org.apache.derby.impl.sql.execute.GroupedAggregateResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source) end nested exception  level ) Cleanup action completed   
0;java.sql.SQLException The conglomerate ) requested does not exist. from Derby ... embedded within Eclipse . and RAD .   ;We are getting an SQLException when several prepared statement deletes are done upon an existing database. As far as we can tell this exception should never occur unless evil) things like deleting the database or editing files occurs. This is using the embedded driver within a plugin inside RAD . and Eclipse .).Im not sure what else to submit that might be helpful.java.sql.SQLException The conglomerate ) requested does not exist. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUnknown Source) at sun.reflect.GeneratedMethodAccessor.invokeUnknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invokeUnknown Source) at java.lang.reflect.Method.invokeUnknown Source) at com.surelogic.sierra.jdbc.LazyPreparedStatementConnectionLazyPreparedStatement.invokeUnknown Source) at Proxy.executeUnknown Source) at com.surelogic.sierra.jdbc.finding.FindingManager.deleteUnknown Source) at com.surelogic.sierra.jdbc.finding.ClientFindingManager.updateLocalFindingsUnknown Source) at com.surelogic.sierra.jdbc.project.ClientProjectManager.synchronizeProjectUnknown Source) at com.surelogic.sierra.client.eclipse.jobs.SynchronizeJob.synchronizeUnknown Source) at com.surelogic.sierra.client.eclipse.jobs.SynchronizeJob.runUnknown Source) at org.eclipse.core.internal.jobs.Worker.runUnknown Source)Caused by ERROR XSAI The conglomerate ) requested does not exist. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.store.access.RAMTransaction.findExistingConglomerateUnknown Source) at org.apache.derby.impl.store.access.RAMTransaction.openScanUnknown Source) at org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet.getNextRowCoreUnknown Source) at org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet.getNextRowUnknown Source) at org.apache.derby.impl.sql.execute.IndexChanger.finishUnknown Source) at org.apache.derby.impl.sql.execute.IndexSetChanger.finishUnknown Source) at org.apache.derby.impl.sql.execute.RowChangerImpl.finishUnknown Source) at org.apache.derby.impl.sql.execute.UpdateResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) ...  more   
0;CollationTest fails with  expected but was in testPolishCollationCollationTest.java)   ;See httpdbtg.thresher.comderbytest.Branchjvm.testingLimitedtestSummary.html  sol.There was  failure) testPolishCollationorg.apache.derbyTesting.functionTests.tests.lang.CollationTest)junit.framework.AssertionFailedError expectedlt gt  but waslt gt  at org.apache.derbyTesting.functionTests.tests.lang.CollationTest.commonTestingForTerritoryBasedDBCollationTest.java) at org.apache.derbyTesting.functionTests.tests.lang.CollationTest.testPolishCollationCollationTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)   
0;testSysinfoLocale fails if derbyTools.jar is first in the classpath   ;) testSysinfoLocaleorg.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest)junit.framework.AssertionFailedError expectedlt falsegt  but waslt truegt  at org.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest.testSysinfoLocaleSysinfoLocaleTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testSysinfoLocaleorg.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest)junit.framework.AssertionFailedError expectedlt falsegt  but waslt truegt  at org.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest.testSysinfoLocaleSysinfoLocaleTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testSysinfoLocaleorg.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest)junit.framework.AssertionFailedError expectedlt truegt  but waslt falsegt  at org.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest.testSysinfoLocaleSysinfoLocaleTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testSysinfoLocaleorg.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest)junit.framework.AssertionFailedError expectedlt truegt  but waslt falsegt  at org.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest.testSysinfoLocaleSysinfoLocaleTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testSysinfoLocaleorg.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest)junit.framework.AssertionFailedError expectedlt falsegt  but waslt truegt  at org.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest.testSysinfoLocaleSysinfoLocaleTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testSysinfoLocaleorg.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest)junit.framework.AssertionFailedError expectedlt truegt  but waslt falsegt  at org.apache.derbyTesting.functionTests.tests.tools.SysinfoLocaleTest.testSysinfoLocaleSysinfoLocaleTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)   
0;Selecting data from a Table raises Error XN Query processing has been terminated due to an error on the server   ;I got a table PCLASS) in my database where I cannot select the data via a simple select statement If I execute select * from PCLASS XN Query processing has been terminated due to an error on the server If I execute select * from PCLASS order by CLASSNAME it works If I add or remove only one row tofrom the table it worksIf I use the embedded driver everything works fine. But as soon as I use the derby network client to access the database  this problem occurs.This is very odd. I spent a lot of time to do some research on this behavior because I could not believe that the network client produces errors depending on the data contained in a table. But after all it looks like I managed to fill the table with an exact amount of data that causes this error to arise.To reproduce the problem download the attached file and follow these instructions extract test.rar to derby.system.home start derby network server start ji utility and execute the following commands  connect to database test using client driver connect jdbcderbylocalhosttest userZOL passwordzol  select content of table PCLASS select * from PCLASS gt  Error XN Query processing has been terminated due to an error on the server      disconnect from database disconnect  shutdown database test connect jdbcderbylocalhosttest userZOL passwordzol shutdowntrue  connect to database test using embedded driver connect jdbcderbytest userZOL passwordzol  select content of table PCLASS select * from PCLASS gt  everything o.k.   
0;NullPointerException in ....BIRowLocking.searchLeftAndLockPreviousKey   ;The last week) we have seen a large number of this failure.It was categorized as DERBY but these instances all have the NPE.Exception while trying to insert row number ERROR XJ Java exception  java.lang.NullPointerException.java.sql.SQLException Java exception  java.lang.NullPointerException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.store.OnlineCompressTest.createAndLoadTableOnlineCompressTest.java) at org.apache.derbyTesting.functionTests.tests.store.OnlineCompressTest.deleteAllRowsOnlineCompressTest.java) at org.apache.derbyTesting.functionTests.tests.store.OnlineCompressTest.testOnlineCompressTest.java) at org.apache.derbyTesting.functionTests.tests.store.OnlineCompressTest.testListOnlineCompressTest.java) at org.apache.derbyTesting.functionTests.tests.store.OnlineCompressTest.mainOnlineCompressTest.java)Caused by java.lang.NullPointerException at org.apache.derby.impl.store.access.btree.index.BIRowLocking.searchLeftAndLockPreviousKeyUnknown Source) at org.apache.derby.impl.store.access.btree.index.BIRowLocking.lockNonScanPreviousRowUnknown Source) at org.apache.derby.impl.store.access.btree.BTreeController.doInsUnknown Source) at org.apache.derby.impl.store.access.btree.BTreeController.insertUnknown Source) at org.apache.derby.impl.store.access.btree.index.BIController.insertUnknown Source) at org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDupsUnknown Source) at org.apache.derby.impl.sql.execute.IndexChanger.doInsertUnknown Source) at org.apache.derby.impl.sql.execute.IndexChanger.insertUnknown Source) at org.apache.derby.impl.sql.execute.IndexSetChanger.insertUnknown Source) at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRowUnknown Source) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreUnknown Source) at org.apache.derby.impl.sql.execute.InsertResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) ...  moreThe error statistics shows the occurrenceshttpdbtg.thresher.comderbyteststats_today.html  httpdbtg.thresher.comderbyteststats_newest.html )httpdbtg.thresher.comderbyteststatistics_.html JIRA   Week   Daily jvm. vista Daily jvm. lin Daily jvm. solN Daily jvm. sparc .Branch jvm. lin trunk jvmAll JDKJvm.SunOS._ipci Daily jvm. sol trunk jvmAll JDKJvm.SunOS._ipci Daily jvm. lin trunk jvm. SunOS._ipci trunk jvm. SunOS._sunusparc trunk jvmAll JDKJvm.SunOS._ipci Daily jvm. linMon Dec   CET httpdbtg.thresher.comderbyteststatistics_.html seems to be the first occurenceJIRA   Week   Daily jvm. linMon Dec   CET All are seen on trunk except one on the . branch  .Branch jvm. lin).   
0;Minor cleanup in the Derby JUnit classes   ;Several of the JUnit classes have growndeveloped and need various types of cleanup  remove unused imports improveadd JavaDoc remove unused methods etc...This issue is basically a placeholder for the patches.   
0;NullPointer Exception NPE) from query with IN predicate containing two values and joining a view with a large table.  ERROR  The exception java.lang.NullPointerException was thrown while evaluating an expression.   ;With a single value in the IN clause the query does not fail. gt  Run the following query in the attached database v . db). SELECT A.TIMESTAMP  B.F_NAMEADDR  B.TOTAL_F B.TOTAL_FS  B.TOTAL_FT  B.TOTAL_FXFROM TIME A  THE_VIEW BWHERE B.T_ID  A.T_ID AND B.F_NAMEADDR IN one.two.three.oscar one.two.three.kathy)ORDER BY A.TIMESTAMP ASC gt  resultERROR  The exception java.lang.NullPointerException was thrown while evaluating an expression.ERROR XJ Java exception  java.lang.NullPointerException.Stack trace Failed Statement is SELECT A.TIMESTAMP  B.F_NAMEADDR  B.TOTAL_F B.TOTAL_FS  B.TOTAL_FT  B.TOTAL_FXFROM TIME A  THE_VIEW BWHERE B.T_ID  A.T_ID AND B.F_NAMEADDR IN one.two.three.oscar one.two.three.kathy)ORDER BY A.TIMESTAMP ASCERROR  The exception java.lang.NullPointerException was thrown while evaluating an expression. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.iapi.error.StandardException.unexpectedUserExceptionUnknown Source) at org.apache.derby.impl.services.reflect.DirectCall.invokeUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreUnknown Source) at org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet.getNextRowCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreUnknown Source) at org.apache.derby.impl.sql.execute.SortResultSet.getRowFromResultSetUnknown Source) at org.apache.derby.impl.sql.execute.SortResultSet.getNextRowFromRSUnknown Source) at org.apache.derby.impl.sql.execute.SortResultSet.loadSorterUnknown Source) at org.apache.derby.impl.sql.execute.SortResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source)Caused by java.lang.NullPointerException at org.apache.derby.exe.acafxxaxcfxa.eUnknown Source) ...  more begin nested exception  level ) java.lang.NullPointerException at org.apache.derby.exe.acafxxaxcfxa.eUnknown Source) at org.apache.derby.impl.services.reflect.DirectCall.invokeUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreUnknown Source) at org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet.getNextRowCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreUnknown Source) at org.apache.derby.impl.sql.execute.SortResultSet.getRowFromResultSetUnknown Source) at org.apache.derby.impl.sql.execute.SortResultSet.getNextRowFromRSUnknown Source) at org.apache.derby.impl.sql.execute.SortResultSet.loadSorterUnknown Source) at org.apache.derby.impl.sql.execute.SortResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source) end nested exception  level ) Schema infoCREATE TABLE TIME T_ID BIGINT NOT NULL  TIMESTAMP TIMESTAMP NOT NULL  DAY INTEGER NOT NULL  WEEK INTEGER NOT NULL  MONTH INTEGER NOT NULL  YEAR_COL INTEGER NOT NULL) CREATE TABLE F F_ID BIGINT NOT NULL  T_ID BIGINT NOT NULL  F_NAMEADDR VARCHAR) NOT NULL  TOTAL_F BIGINT NOT NULL  TOTAL_FS BIGINT NOT NULL  TOTAL_FT BIGINT NOT NULL  TOTAL_FX BIGINT NOT NULL) CREATE VIEW the_view AS SELECT T.T_ID AS T_ID   T.F_NAMEADDR AS F_NAMEADDR  T.TOTAL_F AS TOTAL_F  T.TOTAL_FS AS TOTAL_FS  T.TOTAL_FT AS TOTAL_FT   T.TOTAL_FX AS TOTAL_FX  FROM F AS T  WHERE T.T_ID  SELECT MAXT_ID) FROM F)    
0;NullPointerException caused by race condition in GenericActivationHolder   ;I have a stress test using Derby ... which is executing the same PreparedStatement using multiple threads concurrently and I consistently get the following NPE after several hours of running . GMT Thread poolthread  main  XID    SESSIONID    DATABASE  usrironhidevardboperaderby  DRDAID  null  Failed Statement is select rdbmsvaria_.GUID_AND_INDEX as GUID___  rdbmsvaria_.VALUE as VALUE___  rdbmsvaria_.HOLDER_GUID as HOLDER___  rdbmsvaria_.VALUE_TYPE as VALUE___  rdbmsvaria_.VALUE_GUID as VALUE___  rdbmsvaria_.DELETED as DELETED__ from VARIABLE rdbmsvaria_ where rdbmsvaria_.GUID_AND_INDEX? with  parameters begin parameter  CABEACCADF end parameterjava.lang.NullPointerException at org.apache.derby.impl.sql.GenericActivationHolder.executeGenericActivationHolder.java at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQueryEmbedPreparedStatement.java at org.hibernate.jdbc.AbstractBatcher.getResultSetAbstractBatcher.java at org.hibernate.loader.Loader.getResultSetLoader.java at org.hibernate.loader.Loader.doQueryLoader.java at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollectionsLoader.java at org.hibernate.loader.Loader.loadEntityLoader.java at org.hibernate.loader.entity.AbstractEntityLoader.loadAbstractEntityLoader.java at org.hibernate.loader.entity.AbstractEntityLoader.loadAbstractEntityLoader.java at org.hibernate.persister.entity.AbstractEntityPersister.loadAbstractEntityPersister.java at org.hibernate.event.def.DefaultLoadEventListener.loadFromDatasourceDefaultLoadEventListener.java at org.hibernate.event.def.DefaultLoadEventListener.doLoadDefaultLoadEventListener.java at org.hibernate.event.def.DefaultLoadEventListener.loadDefaultLoadEventListener.java at org.hibernate.event.def.DefaultLoadEventListener.proxyOrLoadDefaultLoadEventListener.java at org.hibernate.event.def.DefaultLoadEventListener.onLoadDefaultLoadEventListener.java at org.hibernate.impl.SessionImpl.fireLoadSessionImpl.java at org.hibernate.impl.SessionImpl.getSessionImpl.java at org.hibernate.impl.SessionImpl.getSessionImpl.java at sun.reflect.GeneratedMethodAccessor.invokeUnknown Source at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at java.lang.reflect.Method.invokeMethod.java at org.hibernate.context.ThreadLocalSessionContextTransactionProtectionWrapper.invokeThreadLocalSessionContext.java at Proxy.getUnknown Source at com.approuter.maestro.opera.rdbms.RdbmsContextHolder.getRdbmsVariableRdbmsContextHolder.java at com.approuter.maestro.opera.rdbms.RdbmsContextHolder.getVariableRdbmsContextHolder.java at com.approuter.maestro.vm.Frame.getParameterFrame.java at com.approuter.maestro.vm.Task.getParameterTask.java at com.approuter.maestro.vm.CallContextImpl.setOutputParameterCallContextImpl.java at com.approuter.maestro.vm.CallContextImpl.getOutputParameterWriterCallContextImpl.java at com.approuter.maestro.sdk.mpi.DynamicExecutableActivity.getWriterDynamicExecutableActivity.java at com.approuter.module.xml.XmlSerializeTextActivityXmlSerializeTextActivityInstance.serializeXmlSerializeTextActivity.java at sun.reflect.GeneratedMethodAccessor.invokeUnknown Source at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at java.lang.reflect.Method.invokeMethod.java at com.approuter.maestro.sdk.mpi.DynamicExecutableActivity.executeDynamicExecutableActivity.java at com.approuter.maestro.activities.Invoke.callInvoke.java at sun.reflect.GeneratedMethodAccessor.invokeUnknown Source at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at java.lang.reflect.Method.invokeMethod.java at com.approuter.maestro.activities.Instruction.callInstruction.java at com.approuter.maestro.vm.Program.callProgram.java at com.approuter.maestro.vm.Task.runTask.java at com.approuter.maestro.vm.Task.runTask.java at java.util.concurrent.ExecutorsRunnableAdapter.callExecutors.java at java.util.concurrent.FutureTaskSync.innerRunFutureTask.java at java.util.concurrent.FutureTask.runFutureTask.java at java.util.concurrent.ScheduledThreadPoolExecutorScheduledFutureTask.accessScheduledThreadPoolExecutor.java at java.util.concurrent.ScheduledThreadPoolExecutorScheduledFutureTask.runScheduledThreadPoolExecutor.java at java.util.concurrent.ThreadPoolExecutorWorker.runTaskThreadPoolExecutor.java at java.util.concurrent.ThreadPoolExecutorWorker.runThreadPoolExecutor.java at java.lang.Thread.runThread.javaCleanup action completedHere is the relevant code from GenericActivationHolder.java  synchronized ps { * Has the activation class changed? * if gc  ps.getActivationClass {  ensure the statement is valid by rePreparing it. ps.rePreparegetLanguageConnectionContext   lt  line  *   If we get here  it means the PreparedStatement has been recompiled. Get a new Activation and check whether the parameters are compatible. If so  transfer the parameters from the old Activation to the new one  and make that the current Activation. If not  throw an exception. * GeneratedClass newGC  ps.getActivationClass    BaseActivation newAC  BaseActivation newGC.newInstancelcc   lt  line  DataTypeDescriptor[] newParamTypes  ps.getParameterTypes As you can see  the activation class returned by the ExecPreparedStatement is null as of line   even after having called a rePrepare... on the prepared statement line . This is most likely due to a race condition. Also note that the containing block was formerly synchronized  but has since been commented out. From browsing the source in previous versions  the synchronized statement appears to have been commented out since before .... It appears the fix is to reintroduce the synchronized block  or at least make the block inside the if statement synchronized.   
1;Not possible for nondbowner to create a temporary table. Get ERROR  User USERB can not perform the operation in schema SESSION.   ;It seems that only the owner of a database may create tempoary tables in that db.This is not helpful as many other users may want to run a query on that db that relies upon the creation of temporary tables.I would expect nondbowners to be able create temporay tables.The problem is demonstrated withderby.properties like thisderby.connection.requireAuthenticationtruederby.authentication.providerBUILTINderby.database.sqlAuthorizationTRUEderby.user.userapwdderby.fullAccessUsersuseraderby.drda.host...Start the network server and run up ij.ijgt connect jdbcderby...TEST userusera passwordpwd createtrue  ijgt  declare global temporary table ta int) on commit preserve rowsnot logged  rows insertedupdateddeletedAll good so far.Now try this while still connected as usera)ijgt  call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTYderby.user.userb pwd) Statement executed.ijgt  call SYSCS_UTIL.SYSCS_SET_USER_ACCESSuserb FULLACCESS) Statement executed.ijgt  disconnect ijgt  connect jdbcderby...TEST useruserb passwordpwd  ijgt  declare global temporary table ta int) on commit preserve rows not logged ERROR  User USERB can not perform the operation in schema SESSION.SYSINFO Java Information Java Version .._eaJava Vendor Sun Microsystems Inc.Java home usrjavajdk.._jreJava classpath homeajvokderbydbderby...binlibderby.jarhomeajvokderbydbderby...binlibderbynet.jarhomeajvokderbydbderby...binlibderbytools.jarhomeajvokderbydbderby...binlibderbyclient.jarhomeajvokderbylocalsp.jarOS name LinuxOS architecture iOS version ..mdvJava user name ajvokJava user home homeajvokJava user dir homeajvokderbylocaljava.specification.name Java Platform API Specificationjava.specification.version . Derby Information JRE  JDBC Java SE   JDBC . homeajvokderbydbderby...binlibderby.jar  ...  ) homeajvokderbydbderby...binlibderbytools.jar  ...  ) homeajvokderbydbderby...binlibderbynet.jar  ...  ) homeajvokderbydbderby...binlibderbyclient.jar  ...  ) Locale Information Current Locale  [EnglishUnited Kingdom  en_GB ]Found support for locale  cs  version ...  )Found support for locale  de_DE  version ...  )Found support for locale  es  version ...  )Found support for locale  fr  version ...  )Found support for locale  hu  version ...  )Found support for locale  it  version ...  )Found support for locale  ja_JP  version ...  )Found support for locale  ko_KR  version ...  )Found support for locale  pl  version ...  )Found support for locale  pt_BR  version ...  )Found support for locale  ru  version ...  )Found support for locale  zh_CN  version ...  )Found support for locale  zh_TW  version ...  )   
0;Delayed ondemand) creation of current user schema makes select from view belonging to other schema fail.   ;The enclosed repro fails with error Y Schema BILL does not exist  even thoughthe query does not reference that schema  it selects from joe.myview.   
0;Derby ..X ignores ORDER BY DESC when target column has an index and is used in an OR clause or an IN list.   ;Running the following produces the error seen in Derby ..X but not in ..X nor in ..X.Dont know if this related to DERBY.First query is incorrectly sorted whereas the second one is okay when there is an index on the table. If the table is not indexed  the sort works correctly in DESC order.create table CHEESE  CHEESE_CODE VARCHAR)  CHEESE_NAME VARCHAR)  CHEESE_COST DECIMAL )) create index cheese_index on CHEESE CHEESE_CODE DESC  CHEESE_NAME DESC  CHEESE_COST DESC) INSERT INTO CHEESE  CHEESE_CODE  CHEESE_NAME  CHEESE_COST)VALUES   GOUDA  .)    EDAM  .)    EDAM  .)    GORGONZOLA  .)  AAAAA  EDAM  .)    MUENSTER  .) SELECT * FROM CHEESE WHERE CHEESE_CODE OR CHEESE_CODE) AND CHEESE_NAMEEDAMORDER BY CHEESE_CODE DESC  CHEESE_NAME DESC  CHEESE_COST DESC SELECT * FROM CHEESE WHERE CHEESE_CODEAAAAA OR CHEESE_CODE) AND CHEESE_NAMEEDAMORDER BY CHEESE_CODE DESC  CHEESE_NAME DESC  CHEESE_COST DESC    
0;Uniqueness violation error ) occurs after dropping a PK constraint if there exists a foreign key on the same columns.   ;When there are multiple constraints on a single table and the constraints have the same set of columns in the same order)  Derby tries to optimize things by reusing a single backing index for all of the relevant constraints. See the executeConstantAction) method of CreateIndexConstantAction.java search for duplicate).But there is a bug in Derby where  if one of the constraints is unique and is dropped  the uniqueness attribute of the backing index is not updated accordingly. This means that uniqueness may be incorrectly enforced where it is not required.Take the following example Case  from DERBY) ALTER TABLE NEWORDERS ADD CONSTRAINT NEWORDERS_PK PRIMARY KEYNO_W_ID  NO_D_ID  NO_O_ID)  ALTER TABLE NEWORDERS ADD CONSTRAINT NO_O_FK FOREIGN KEY NO_W_ID  NO_D_ID  NO_O_ID) REFERENCES ORDERS For these statements Derby will use a single backing index for both the primary constraint NEWORDERS_PK and the foreign key constraint NO_O_FK. That backing index will be unique because the primary key must itself be unique.If later we drop the primary key ALTER TABLE NEWORDERS DROP CONSTRAINT NEWORDERS_PK then the backing index needs to be converted from a unique index to a nonunique index because a foreign key is not inherently unique). But in Derby the uniqueness attribute remains unchanged  so attempts to insert a duplicate NO_W_ID  NO_D_ID  NO_O_ID) row into NEWORDERS will fail with error   when it should really succeed.I tried this out on ... and the same behavior occurs there  so marking Affects versions for everything back to that...   
0;Incorrect result from query with nested EXIST   ;Derby returns unexpected results from a query with embedded EXIST clauses. The query SQL is generated by the JPOX jdo implementation and is supposed to return all of the PERSONS and PROJECTS where there is an entry in the join table. This query works as expected when using MySQL.Heres the querySELECT UNBOUND_E.PERSONID  UNBOUND_P.PROJID FROM applicationidentity.DEPARTMENTS THIS   applicationidentity.PERSONS UNBOUND_E   applicationidentity.PROJECTS UNBOUND_P WHERE EXISTS   SELECT  FROM applicationidentity.PERSONS THIS_EMPLOYEES_E  WHERE EXISTS   SELECT  FROM applicationidentity.PROJECT_MEMBER THIS_EMPLOYEES_E_PROJECTS_P  WHERE THIS_EMPLOYEES_E_PROJECTS_P.MEMBER  THIS_EMPLOYEES_E.PERSONID  AND THIS_EMPLOYEES_E_PROJECTS_P.MEMBER  THIS_EMPLOYEES_E.PERSONID  AND THIS_EMPLOYEES_E.DEPARTMENT  THIS.ID  AND THIS_EMPLOYEES_E.DEPARTMENT  THIS.ID  AND UNBOUND_P.PROJID  THIS_EMPLOYEES_E_PROJECTS_P.PROJID  AND UNBOUND_E.PERSONID  THIS_EMPLOYEES_E.PERSONID)  ) PERSONID |PROJID  |  |  |  |  |  rows selectedIm expecting  rows to be returned here  one row for each row in the join table. Heres the schemaCREATE TABLE departments  ID INTEGER NOT NULL  NAME VARCHAR) NOT NULL  EMP_OF_THE_MONTH INTEGER  COMPANYID INTEGER  DISCRIMINATOR VARCHAR)  CONSTRAINT DEPTS_COMP_FK FOREIGN KEY COMPANYID) REFERENCES companies  CONSTRAINT DEPTS_PK PRIMARY KEY ID)) CREATE TABLE persons  PERSONID INTEGER NOT NULL  FIRSTNAME VARCHAR) NOT NULL  LASTNAME VARCHAR) NOT NULL  MIDDLENAME VARCHAR)  BIRTHDATE TIMESTAMP NOT NULL  ADDRID INTEGER  STREET VARCHAR)  CITY VARCHAR)  STATE CHAR)  ZIPCODE CHAR)  COUNTRY VARCHAR)  HIREDATE TIMESTAMP  WEEKLYHOURS REAL  DEPARTMENT INTEGER  FUNDINGDEPT INTEGER  MANAGER INTEGER  MENTOR INTEGER  HRADVISOR INTEGER  SALARY REAL  WAGE REAL  DISCRIMINATOR varchar) NOT NULL  CONSTRAINT PERS_DEPT_FK FOREIGN KEY DEPARTMENT) REFERENCES departments  CONSTRAINT PERS_FUNDDEPT_FK FOREIGN KEY FUNDINGDEPT) REFERENCES departments  CONSTRAINT PERS_MANAGER_FK FOREIGN KEY MANAGER) REFERENCES persons  CONSTRAINT PERS_MENTOR_FK FOREIGN KEY MENTOR) REFERENCES persons  CONSTRAINT PERS_HRADVISOR_FK FOREIGN KEY HRADVISOR) REFERENCES persons  CONSTRAINT EMPS_PK PRIMARY KEY PERSONID)) CREATE TABLE projects  PROJID INTEGER NOT NULL  NAME VARCHAR) NOT NULL  BUDGET DECIMAL ) NOT NULL  DISCRIMINATOR VARCHAR)  CONSTRAINT PROJS_PK PRIMARY KEY PROJID)) CREATE TABLE project_member  PROJID INTEGER REFERENCES projects NOT NULL  MEMBER INTEGER REFERENCES persons NOT NULL) ijgt  connect jdbcderbyUsersclrapachejdotrunktcktargetdatabasederbyjdotckdb ijgt  set schema applicationidentity  rows insertedupdateddeletedijgt  select * from persons PERSONID |FIRSTNAME |LASTNAME |MIDDLENAME |BIRTHDATE |ADDRID |STREET |CITY |STAamp |ZIPCamp |COUNTRY |HIREDATE |WEEKLYHOURS |DEPARTMENT |FUNDINGDEPT|MANAGER |MENTOR |HRADVISOR |SALARY |WAGE |DISCRIMINATOR  |empFirst |empLast |empMiddle | . |NULL |NULL |NULL |NULL|NULL |NULL | . |. |NULL |NULL |NULL |NULL |NULL |. |NULL |org.apache.jdo.tck.pc.company.FullTimeEmployee  |empFirst |empLast |empMiddle | . |NULL |NULL |NULL |NULL|NULL |NULL | . |. |NULL |NULL |NULL |NULL |NULL |. |NULL |org.apache.jdo.tck.pc.company.FullTimeEmployee  |empFirst |empLast |empMiddle | . |NULL |NULL |NULL |NULL|NULL |NULL | . |. |NULL |NULL |NULL |NULL |NULL |NULL |. |org.apache.jdo.tck.pc.company.PartTimeEmployee  |empFirst |empLast |empMiddle | . |NULL |NULL |NULL |NULL|NULL |NULL | . |. |NULL |NULL |NULL |NULL |NULL |NULL |. |org.apache.jdo.tck.pc.company.PartTimeEmployee  |empFirst |empLast |empMiddle | . |NULL |NULL |NULL |NULL|NULL |NULL | . |. |NULL |NULL |NULL |NULL |NULL |. |NULL |org.apache.jdo.tck.pc.company.FullTimeEmployee  rows selectedijgt  select * from projects PROJID |NAME |BUDGET |DISCRIMINATOR  |orange |. |org.apache.jdo.tck.pc.company.Project  |blue |. |org.apache.jdo.tck.pc.company.Project  |green |. |org.apache.jdo.tck.pc.company.Project  rows selectedijgt  select * from project_member PROJID |MEMBER  |  |  |  |  |  |  |  rows selected   
0;NullPointerException during recovery of database with territorybased collation   ;When logical undo is performed on a database with territorybased collation  you may get a NullPointerException in SQLChar.getCollationKey) because SQLChar.getLocaleFinder) returns null.This bug was reported on derbyuser httpthread.gmane.orggmane.comp.apache.db.derby.user   
0;ArrayIndexOutOfBoundsException at MergeSort.compare   ;Derby throws ArrayIndexOutOfBoundsException when I try to execute SQL query shown below.This is a regression  since Derby ... executes this query without problems.Attached are DDL statements to create DB tables  and database itself with data. . GMT Thread DRDAConnThread_  derby.daemons  XID    SESSIONID    DATABASE  InventorizacijaDB  DRDAID  NF.GA}  Failed Statement is select MAXpreke_.BARKODAS as col___  MAXpreke_.PAVADINIMAS as col___  MAXpreke_.KIEKIS as col___  SUMirasas_.FAKTINIS_KIEKIS as col___ from PREKE preke_  IRASAS irasas_  IRASU_BLOKAS irasubloka_ where irasas_.IRASU_BLOKASirasubloka_.ID and preke_.UNIKALUS_KODASirasas_.UNIKALUS_KODAS and irasubloka_.INVENTORIZACIJA? group by irasas_.UNIKALUS_KODAS order by absSUMirasas_.FAKTINIS_KIEKISMAXpreke_.KIEKIS DESC with  parameters begin parameter   end parameter java.lang.ArrayIndexOutOfBoundsException  at org.apache.derby.impl.store.access.sort.MergeSort.compareUnknown Source at org.apache.derby.impl.store.access.sort.SortBuffer.insertUnknown Source at org.apache.derby.impl.store.access.sort.MergeInserter.insertUnknown Source at org.apache.derby.impl.sql.execute.SortResultSet.loadSorterUnknown Source at org.apache.derby.impl.sql.execute.SortResultSet.openCoreUnknown Source at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCoreUnknown Source at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUnknown Source at org.apache.derby.impl.drda.DRDAStatement.executeUnknown Source at org.apache.derby.impl.drda.DRDAConnThread.processCommandsUnknown Source at org.apache.derby.impl.drda.DRDAConnThread.runUnknown Source   
0;Explicit commit inside a java procedure makes a dynamic result sets passed out unavailable   ;Repro Main.java) that shows changed behavior after svn the patch committed for this issue). It seems a regression originally from Dag H. Wanvik attached to DERBY)An explicit commit inside a stored procedure makes a dynamic result sets passed out unavailable  even if the commit is executed prior to the result set  as in the repro.   
0;Embedded ResultSet.getStatement) returns incorrect reference for dynamic result sets   ;ResultSets returned as dynamic results sets  ie. those created in a java procedure and returned via the java.sql.Statement that executed the call of the procedure  do not return the correct statement reference for getStatement. Need to return reference to statement that executed the CALL and returned the ResultSet instead of the statement that performed the executeQuery.   
0;Client ResultSet.getHoldabilty will return incorrect value when the ResultSet is obtained from a procedure call   ;Fixing DERBY aka DERBY) exposes that the holdability for a result set sent over DRDA is being obtained from the Statement that created the JDBC ResultSet  not its actual holdability. The two can be different when the result set is dynamic result set from a procedure.jdbc.ResultSetTest.getHoldability fails in client mode.   
0;Leak in client if ResultSet not closed   ;If I run the attached program RepeatStatement.java with M of heap I will get an OutOfMemory error in the client.java XmxM RepeatStatementException in thread main java.lang.OutOfMemoryError Java heap space at org.apache.derby.client.am.Cursor.allocateCharBufferCursor.java) at org.apache.derby.client.net.NetStatementReply.parseSQLDTARDarrayNetStatementReply.java) at org.apache.derby.client.net.NetStatementReply.parseQRYDSCNetStatementReply.java) at org.apache.derby.client.net.NetStatementReply.parseOpenQueryNetStatementReply.java) at org.apache.derby.client.net.NetStatementReply.parseOPNQRYreplyNetStatementReply.java) at org.apache.derby.client.net.NetStatementReply.readOpenQueryNetStatementReply.java) at org.apache.derby.client.net.StatementReply.readOpenQueryStatementReply.java) at org.apache.derby.client.net.NetStatement.readOpenQuery_NetStatement.java) at org.apache.derby.client.am.Statement.readOpenQueryStatement.java) at org.apache.derby.client.am.Statement.flowExecuteStatement.java) at org.apache.derby.client.am.Statement.executeQueryXStatement.java) at org.apache.derby.client.am.Statement.executeQueryStatement.java) at RepeatStatement.testInsertAndSelectRepeatStatement.java) at RepeatStatement.mainRepeatStatement.java)If I close the ResultSet or Statement it does not leak. This occurs on trunk and .... It does however not run out of memory on ...  so appears to be a regression.   
0;Logical connections do not check if a transaction is active on close   ;If you call close on a logical connection  for instance as obtained through a PooledConnection  it does not check if there is an active transaction.The close of the logical connection is allowed  and even the close of the parent PooledConnection is allowed in the client driver. This canwill cause resources to be left on the server  and later operations might fail typically with lock timeouts because the closed transaction is still holding locks).I do not know if gc will solve this eventually  but I would say the current behavior of the client driver is wrong in any case.There is difference in the behavior between the embedded and the client driver  and there also seems to be a bug in the embedded driver.The analysis above is a bit sketchy  so it might be required to look into the issue a bit more...I will attach a repro JDBC usage should be verified as well  is it legal  as intended?)   
0;Database creation and boot should fail if collationTERRITORY_BASED and the selected locale is not supported   ;A problem Ive discovered when testing with the phoneME advanced platform is that the collationtests expect other locales than Locale.US to be available on the platform that is used for the test  and for phoneME advanced when compiled as foundation profile) only Locale.US is available. From the jdk. javadoc of Collator.getAvailableLocales) I see that only Locale.US is strictly requiredpublic static Locale[] getAvailableLocales) Returns an array of all locales for which the getInstance methods of this class can return localized instances. The returned array represents the union of locales supported by the Java runtime and by installed CollatorProvider implementations. It must contain at least a Locale instance equal to Locale.US. Returns An array of locales for which localized Collator instances are available.This led me to thinking about how Derby should behave if createdbooted with collationTERRITORY_BASED and territorylt some unsupported localegt . Im not sure what the consequences could be if the database is first created on a platform that supports whatever locale is set and later booted with one that doesnt  or created on a platform missing support and later booted with one that has. In any case I think it may confuse a user needlessly to see the database boot successfully with his collation setting and later behave in a way he does not expect.Opinions voiced on the derbydev list are that both database creation and boot should fail if collationTERRITORY_BASED and the selected locale is not supported.If a change like this is implemented  the collationtests should be changed to verify correct behavior also if they are executed in an environment were some of the tested locales are not supported.   
0;provide support for unique constraint over keys that include one or more nullable columns.   ;Allow unique constraint over keys which include one or more nullable fields. Prior to this change Derby only supported unique constraints on keys that included no nullable columns. The new constraint will allow unlimited inserts of any key with one more null columns  but will limit insert of keys with no null columns to  unique value per table.There is no change to existing or newly created unique indexes on null columns as opposed to unique constraints on null columns). Also there is no change to existing or newly created constraints on keys with no nullable columns.   
0;jdbcapiderbyStress.java no longer runs with low memory heap so does not provide testing for leak scenarios   ;This was raised as an issue in DERBY  but it seems to make most sense to raise it as a separate issue. When derbyStress ran in derbyall it ran with MB heap so that it could test fixes for various memory leaks. When moved to JDBCHarnessJavaTest it started running with the full MB heap used for suites.All so no longer tests for those leaks. There are two options presented so far) Move it back to derbyall ) add it to the junitall target For the adding it to the junitall target option I think a few things have to happen for it to be run as part of the nightlies. ) Convert derbyStress.java to junit. ) create a junitlomem target and make it part of junitall. ) Fix junitall so that it can run with the nightlies. DERBY  distribute ant to the testing machines make nightly script changes etc.Myrna expressed some misgivings to relying on junitall because ant is not available on all the platforms where she tests. I think the best course of action is to at least temporarily move the test back to derbyall and then open separate tasks) for the junit conversion effort.   
0;Nested WHERE EXISTS queries need improved testing   ;DERBY reported an error in subquery flattening of nested WHERE EXISTS clauses  or WHERE EXISTS subqueries. The query returned the wrong number of rows. There is currently some tests for WHERE EXISTS  but none for nested WHERE EXISTS clauses.See DERBY for a full sql repro.   
0;Invalid method java.lang.Integer >> void short) because java.lang.NoSuchMethodException java.lang.Integer.short)   ;Invalid method java.lang.Integer gt gt  void lt initgt short) because java.lang.NoSuchMethodException java.lang.Integer.lt initgt short)True  but I believe  not a helpful observation FN_MATCHESA.f  C.d) returns shortSMALLINTrelated to DERBY ? But this is on the . branch  ...  M) DEBUG   Main  Template.java)  SQL SELECT A.a  D.b  B.c  C.d FROM C JOIN A ON C.e  I AND A.f IS NOT NULL AND A.g  C.g AND FN_MATCHESA.f  C.d) lt gt   JOIN B ON B.h  A.g JOIN D ON D.h  URID.hjava.lang.NoSuchMethodException java.lang.Integer.lt initgt short) at java.lang.Class.getConstructorClass.java) at java.lang.Class.getConstructorClass.java) at org.apache.derby.impl.services.bytecode.d_BCValidate.checkMethodd_BCValidate.java) at org.apache.derby.impl.services.bytecode.BCMethod.callMethodBCMethod.java) at org.apache.derby.impl.services.bytecode.BCMethod.pushNewCompleteBCMethod.java) at org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpressionStaticMethodCallNode.java) at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.generateExpressionJavaToSQLValueNode.java) at org.apache.derby.impl.sql.compile.BinaryOperatorNode.generateExpressionBinaryOperatorNode.java) at org.apache.derby.impl.sql.compile.BinaryLogicalOperatorNode.generateExpressionBinaryLogicalOperatorNode.java) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinionProjectRestrictNode.java) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateProjectRestrictNode.java) at org.apache.derby.impl.sql.compile.JoinNode.getJoinArgumentsJoinNode.java) at org.apache.derby.impl.sql.compile.JoinNode.generateCoreJoinNode.java) at org.apache.derby.impl.sql.compile.JoinNode.generateJoinNode.java) at org.apache.derby.impl.sql.compile.JoinNode.getJoinArgumentsJoinNode.java) at org.apache.derby.impl.sql.compile.JoinNode.generateCoreJoinNode.java) at org.apache.derby.impl.sql.compile.JoinNode.generateJoinNode.java) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinionProjectRestrictNode.java) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateProjectRestrictNode.java) at org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode.generateScrollInsensitiveResultSetNode.java) at org.apache.derby.impl.sql.compile.CursorNode.generateCursorNode.java) at org.apache.derby.impl.sql.compile.StatementNode.generateStatementNode.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementDriver.java) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java)  ..  at org.apache.derby.exe.acxxcxexffffbceb.gUnknown Source) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeReflectMethod.java) at org.apache.derby.impl.sql.execute.CallStatementResultSet.openCallStatementResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTriggerStatementTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTriggerStatementTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateEmbedPreparedStatement.java) at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdateDelegatingPreparedStatement.java) at org.springframework.jdbc.core.JdbcTemplate.doInPreparedStatementJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.executeJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.updateNamedParameterJdbcTemplate.java)Invalid method java.lang.Integer gt gt  void lt initgt short) because java.lang.NoSuchMethodException java.lang.Integer.lt initgt short)DEBUG   Main  Template.java)  java.sql.SQLException Java exception ASSERT FAILED Invalid method java.lang.Integer gt gt  void lt initgt short) because java.lang.NoSuchMethodException java.lang.Integer.lt initgt short) org.apache.derby.shared.common.sanity.AssertFailure.ERROR   Main  TransactionTemplate.java)  Application exception overridden by rollback exceptionorg.springframework.jdbc.UncategorizedSQLException PreparedStatementCallback  uncategorized SQLException for SQL [ lt Statement that fires trigger removedgt  ]  SQL state  XJ   error code     Java exception  java.lang.NullPointerException.  nested exception is java.sql.SQLException Java exception  java.lang.NullPointerException.Caused by java.sql.SQLException Java exception  java.lang.NullPointerException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.javaExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateEmbedPreparedStatement.java) at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdateDelegatingPreparedStatement.java) at org.springframework.jdbc.core.JdbcTemplate.doInPreparedStatementJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.executeJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.updateNamedParameterJdbcTemplate.java)Caused by java.sql.SQLException Java exception  java.lang.NullPointerException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  moreCaused by java.lang.NullPointerException at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTriggerStatementTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTriggerStatementTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) ...  moreFATAL   Main  Start.java)  Start FAILEDorg.springframework.transaction.TransactionSystemException Could not roll back JDBC transaction  nested exception is java.sql.SQLNonTransientConnectionException No current connection.Caused by java.sql.SQLNonTransientConnectionException No current connection. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.noCurrentConnectionUtil.java) at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosedEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.setupContextStackEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.rollbackEmbedConnection.java) at org.apache.commons.dbcp.DelegatingConnection.rollbackDelegatingConnection.java) at org.apache.commons.dbcp.PoolingDataSourcePoolGuardConnectionWrapper.rollbackPoolingDataSource.java) at org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollbackDataSourceTransactionManager.java) at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollbackAbstractPlatformTransactionManager.java) at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollbackAbstractPlatformTransactionManager.java) at org.springframework.transaction.support.TransactionTemplate.rollbackOnExceptionTransactionTemplate.java) at org.springframework.transaction.support.TransactionTemplate.executeTransactionTemplate.java) Caused by java.sql.SQLException No current connection. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  morederby.logorg.apache.derby.shared.common.sanity.AssertFailure ASSERT FAILED Invalid method java.lang.Integer gt gt  void lt initgt short) because java.lang.NoSuchMethodException java.lang.Integer.lt initgt short) at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERTSanityManager.java) at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERTSanityManager.java) at org.apache.derby.impl.services.bytecode.d_BCValidate.checkMethodd_BCValidate.java) at org.apache.derby.impl.services.bytecode.BCMethod.callMethodBCMethod.java) at org.apache.derby.impl.services.bytecode.BCMethod.pushNewCompleteBCMethod.java) at org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpressionStaticMethodCallNode.java) at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.generateExpressionJavaToSQLValueNode.java) at org.apache.derby.impl.sql.compile.BinaryOperatorNode.generateExpressionBinaryOperatorNode.java) at org.apache.derby.impl.sql.compile.BinaryLogicalOperatorNode.generateExpressionBinaryLogicalOperatorNode.java) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinionProjectRestrictNode.java) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateProjectRestrictNode.java) at org.apache.derby.impl.sql.compile.JoinNode.getJoinArgumentsJoinNode.java) at org.apache.derby.impl.sql.compile.JoinNode.generateCoreJoinNode.java) at org.apache.derby.impl.sql.compile.JoinNode.generateJoinNode.java) at org.apache.derby.impl.sql.compile.JoinNode.getJoinArgumentsJoinNode.java) at org.apache.derby.impl.sql.compile.JoinNode.generateCoreJoinNode.java) at org.apache.derby.impl.sql.compile.JoinNode.generateJoinNode.java) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinionProjectRestrictNode.java) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateProjectRestrictNode.java) at org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode.generateScrollInsensitiveResultSetNode.java) at org.apache.derby.impl.sql.compile.CursorNode.generateCursorNode.java) at org.apache.derby.impl.sql.compile.StatementNode.generateStatementNode.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementDriver.java) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java) our trigger stored proc java code  at org.apache.derby.exe.acxxcxexffffbceb.gUnknown Source) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeReflectMethod.java) at org.apache.derby.impl.sql.execute.CallStatementResultSet.openCallStatementResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTriggerStatementTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTriggerStatementTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateEmbedPreparedStatement.java) at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdateDelegatingPreparedStatement.java) at org.springframework.jdbc.core.JdbcTemplate.doInPreparedStatementJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.executeJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.updateNamedParameterJdbcTemplate.java)Cleanup action completed . GMT Thread Main  main  Cleanup action startingjava.lang.NullPointerException at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTriggerStatementTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTriggerStatementTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateEmbedPreparedStatement.java) at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdateDelegatingPreparedStatement.java) at org.springframework.jdbc.core.JdbcTemplate.doInPreparedStatementJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.executeJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.updateNamedParameterJdbcTemplate.java) . GMT Thread Main  main  Equally severe exception raised during cleanup ignored) nulljava.lang.NullPointerException at org.apache.derby.impl.sql.compile.CompilerContextImpl.initRequiredPrivCompilerContextImpl.java) at org.apache.derby.impl.sql.compile.CompilerContextImpl.resetContextCompilerContextImpl.java) at org.apache.derby.impl.sql.compile.CompilerContextImpl.cleanupOnErrorCompilerContextImpl.java) at org.apache.derby.iapi.services.context.ContextManager.cleanupOnErrorContextManager.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.cleanupOnErrorTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateEmbedPreparedStatement.java) at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdateDelegatingPreparedStatement.java) at org.springframework.jdbc.core.JdbcTemplate.doInPreparedStatementJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.executeJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.JdbcTemplate.updateJdbcTemplate.java) at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.updateNamedParameterJdbcTemplate.java)Cleanup action completed   
0;Replication failover implementation must be modified to fail at the master after slave has been stopped   ;Jorgen says...I tried to run the failover command on the master  which seems to work fine as long as the master and slave are still connected. If the slave has been stopped for some reason  however  failover hangs on MasterControllerstartFailover here ack  transmitter.readMessage)    
0;Various formatting erros in LN property files   ;There are a number of formatting errors in the localization property files DRDA_InvalidValue.U appears twice in the drda property files english and translations) Spurious linefeed for XCL.S in messages_zh_TW.properties Quadruple single quote rather than double single quote for contraction apostrophes in messages_it.properties   
0;Adjust demos build.xml to avoid recompiling SimpleApp and SimpleMobileApp   ;I propose to adjust the javademobuild.xml file to change the srcdir and includesvalues on the javac task that compiles SimpleApp.java and SimpleMobileApp.java.Since these two Java programs are not inside of a package  Ant is happiest ifwe specify their srcdir directories directly  seehttpant.apache.orgfaq.htmlalwaysrecompiles The change to javademobuild.xml will beIndex javademobuild.xml  javademobuild.xml revision  javademobuild.xml working copy@@     @@ optimizeoptimize} proceedproceed} verboseverbose} srcdirderby.demo.src.dir} destdirout.dir} includessimple* simplemobile*gt  srcdirderby.demo.src.dir}simplederby.demo.src.dir}simplemobile destdirout.dir}gt  lt classpathgt  lt pathelement locationjavasrc.dir} jcc}gt  lt pathelement pathjavacompile.classpath} jcc}gt    
0;Test case in GrantRevokeDDLTest looks to be accidentally commented out...   ;In langGrantRevokeDDLTest.java  beginning at line  at time of writing)  there looks to be a test case that was inadvertently commented out  set connection user ijUSER)gt    test multiple FKs DERBY?set  connection userdrop table user.rtdrop table  user.rtdrop table user.rtcreate table rt c int  primary key not null  c int)insert into rt values   )   )grant references on rt to PUBLIC  user   userset connection user XJ occurred at create table  rt...create table rt c int primary key not null   constraint rtfk foreign keyc) references  user.rt)insert into rt values )  )grant  references on rt to PUBLIC  userset connection  usercreate table rt c int primary key not null   constraint rtfk foreign keyc) references  user.rt  constraint rtfk foreign keyc) references  user.rt)insert into rt values )  )set connection  user rtfk should get dropped.revoke references on rt  from PUBLICrevoke references on rt from userset  connection userrevoke references on rt from PUBLIC  expect errorinsert into rt values )set connection  user expect error  use user references privilege   rtfk still in effectinsert into rt values )set  connection userrevoke references on rt from userset  connection user ok  rtfk should be dropped.insert  into rt values )Based on the format of the comment  my guess is that this JUnit test was created using the conversion script attached to DERBY  and that the script somehow messed up the conversion.The first line of the comment mentions DERBY  but a) there is a question mark after it  and b) the commit for that issue does not appear to include the aforementioned lines.If the test case is supposed to be commented out  then some explanatory comments explaining why might be nice...   
0;Replication Slave must inform master if DBs are out of sync.   ;If I copy the database to the slave before booting the master  slave will be out of sync with the master since new log records are created during booting. The slave will then stop replication  but the master will not be notified.If I then try to stop or failover the master the master will hang.   
0;The ca option should be removed from ij and from the ij command usage line   ;The ij tool gives the following help outputUsage java org.apache.derby.tools.ij  p propertyfile   ca connectionAttributePropertyFile   inputfile The ca connectionAttributePropertyFile option is no longer needed and is deprecated  so it is not documented in the Tools Guide. The option should also be removed from the usage statement.   
0;Inconsistency in JDBC autogen APIs between Connection.prepareStatement...) and Statement.execute...)   ;In EmbedStatement.java the executeString  String[])  executeString  int[])  executeUpdateString  String[])  and executeUpdateString  int[]) methods treat a length array to mean NO_GENERATED_KEYS. But in EmbedConnection.java the prepareStatementString  String[]) and prepareStatementString  int[]) methods treat a length array to mean RETURN_GENERATED_KEYS. For the sake of consistency  the two classes should treat length arrays in the same waywhich probably means changing EmbedConnection to match EmbedStatement.   
0;DatabaseMetaData.getConnection returns the wrong connection when using connection pooling   ;The connection returned from DatabaseMetaData.getConnection is not the same as the connection used to create the meta data object when the client driver is used with connection pooling enabled.For trunk  the embedded driverds does the right thing.   
0;Register a network port for replication   ;Register a network port at IANA which will be the default port for Derby Replication.   
0;Allow SQL query text to be null in StatementKey   ;Because the SQL isnt checked before the cache is queried  StatementKey should allow the SQL query text to be null.This simplifies handling this exceptional situations  hopefully without complications.What will happen is  the cache is queried  null is returned no match) and then prepare will fail in the driver. Because the statement is never prepared  it will never be inserted into the cached  nor incorrectly) fetched from the cache in the first step.Of course  one could also explicitly check for null in either the LogicalPrepared|Callable)Statement    StatementKeyFactory or StatementCacheInteractor.However  the proposed change is small  isolated to one class and makes the exceptional case be handled by the normal code path.   
0;Move replication methods from org.apache.derby.database.Database to org.apache.derby.iapi.db.Database   ;   
0;Simple column names specified as part of AS clause in a table expression are ignored if the table expression is a view.   ;Simple repro as followscreate table t i int  j int) insert into t values   )    )    )    )    ) create view v as select j  i from t create view v x y z) as select j  i  ij from t   OK Returns column names specified in AS clause.select * from t as xa b)   OK Returns column names for the viewsselect * from v select * from v   WRONG Ignores column names specified in AS clause for the views.select * from v xa b) select * from v as xa b c) I observed this as far back as ...  so this is not a regression.   
0;Changedunexpected query plan when running test langpredicatePushdown.sql   ;Seen in tinderbox since r.See e.g. httpdbtg.thresher.comderbytesttinderbox_trunkjvm.testingtestlogSunOS._ipciderbyall_diff.txt      Start predicatePushdown jdk.._ derbyallderbylang   *** dellt  Rows seen from the left  agt  Rows seen from the left   dellt  Rows seen from the right  agt  Rows seen from the right   dellt  Rows returned  agt  Rows returned  ...   
0;Error message XRE does not include the right port number.   ;If the master is not able to connect to the slave  the error messages does not include the right port numberijgt  connect jdbcderbymasterDB useroystein passwordpass startMastertrue slaveHostlocalhost slavePort ERROR XRE Could not establish a connection to the peer of the replicated database masterDB on address localhost.   
0;When the replication log buffer becomes full  the chunk of log that should be appended is to the buffer is discarded   ;In MasterControllerappendLog  log is forcesent to the slave if the replication log buffer becomes full. However  the log chunk that should have been appended is discardedtry  logBuffer.appendLoggreatestInstant  log  logOffset  logLength } catch LogBufferFullException lbfe  try  logShipper.forceFlush  } catch IOException ioe ...}The log chunk must be added after freeing a log buffer by calling forceFlush   
0;Move the setup of NormalizeResultSetNode into the NormalizeResultSetNode   ;In DERBY Dan suggested ...Setting up a NormalizeResultSetNode is spread over three locations  the class itself very little  its almost acting like a C struct) the genNormalizeResultSetNode method and then copyLengthsAndTypesToSource. A good OO implementation would havethe logic to create a NormalizeResultSetNode selfcontained in NormalizeResultSetNode.Since the ResultColumnList of the original ResultSetNode correctly describes the desired outcome  its not clear tome why NormalizeResultSetNode cant just refer to the same list and use it for its processing. They may be some chancethat this would cause recursion at some point  where a NormalizeResultSetNode would think it needed to be wrappedin a NormalizeResultSetNode since the types of its columns and expression dont match i.e. when it is handled as a regular ResultSetNode).I think moving the setup of a NormalizeResultSetNode into the class itself  so that its inputs are just the ResultSetNode to wrapwould help clear up the code  especially if comments were added indicating why certain actions were being taken.I am separating this task out into a separate issue  so that it can be worked on independently of DERBY.   
0;CallableStatement with output parameter leaves cursor open after execution   ;When executing a CallableStatement which has an output parameter  the language result set is left open and makes subsequent calls to Connection.setTransactionIsolation) fail with ERROR XX Invalid transaction state  held cursor requires same isolation level.   
0;OOME at slave during replication   ;After deleting and inserting more than  million records during replication  I got java.lang.OutOfMemoryError Java heap space.The heap dump shows that almost the entire heap is byte arrays  and it seems most of them are referred to by ReplicationMessage objects. An inspection of the heap dump in VisualVM it seems that it is references rooted in SocketConnectionobjInputStream that keeps them from being garbage collected.   
0;startNetworkServer and stopNetworkServer dont pass arguments   ;The help scripts DERBY_HOMEbinstartNetworkServer and DERBY_HOMEbinstopNetworkServer dont pass arguments as h or p) to class org.apache.derby.drda.NetworkServerControl.Solution append command line with @beforederby_exec_commandexec JAVACMD DERBY_OPTS classpath LOCALCLASSPATH org.apache.derby.drda.NetworkServerControl startafterderby_exec_commandexec JAVACMD DERBY_OPTS classpath LOCALCLASSPATH org.apache.derby.drda.NetworkServerControl start @   
0;The replication log shipper is not notified when a new replication transmitter is instantiated in MChandleException.   ;In MasterControllerhandleException  a new ReplicationMessageTransmit object is created if the exception is IOException. However  the logShipper is not notified that the new transmitter should be used. A possible solution would be to add a setTransmitter method to AsynchronousLogShipper. Note that the logShipper may contain state information that cannot be discarded  so it cannot be reinstantiated.   
0;specialCollation) and noSpecialCollation) in TableFunctionTest fail with weme..   ;The specialCollation) and noSpecialCollation) fixtures in TableFunctionTest fail when run with weme.. I have not explicitly confirmed but it looks like this may be related to svn  . The stack trace isnoSpecialCollationo.a.dTesting.functionTests.tests.lang.TableFunctionTest)java.sql.SQLException An attempt was made to get a data value of type java.lang.Object from a data value of type DECIMAL. at o.a.d.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at o.a.d.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at o.a.d.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at o.a.d.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at o.a.d.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at o.a.d.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at o.a.d.impl.jdbc.EmbedResultSet.closeOnTransactionErrorUnknown Source) at o.a.d.impl.jdbc.EmbedResultSet.movePositionUnknown Source) at o.a.d.impl.jdbc.EmbedResultSet.nextUnknown Source) at o.a.dTesting.functionTests.tests.lang.TableFunctionTest.assertResultsTableFunctionTest.java) at o.a.dTesting.functionTests.tests.lang.TableFunctionTest.assertResultsTableFunctionTest.java) at o.a.dTesting.functionTests.tests.lang.TableFunctionTest.assertResultsTableFunctionTest.java) at o.a.dTesting.functionTests.tests.lang.TableFunctionTest.allLegalDatatypesVTIResultsTableFunctionTest.java) at o.a.dTesting.functionTests.tests.lang.TableFunctionTest.tableFunctionTestTableFunctionTest.java) at o.a.dTesting.functionTests.tests.lang.TableFunctionTest.noSpecialCollationTableFunctionTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at o.a.dTesting.junit.BaseTestCase.runBareBaseTestCase.java)Caused by ERROR  An attempt was made to get a data value of type java.lang.Object from a data value of type DECIMAL. at o.a.d.iapi.error.StandardException.newExceptionUnknown Source) at o.a.d.iapi.types.DataType.dataTypeConversionUnknown Source) at o.a.d.iapi.types.DataType.getObjectUnknown Source) at o.a.d.impl.sql.execute.VTIResultSet.castUnknown Source) at o.a.d.impl.sql.execute.VTIResultSet.populateFromResultSetUnknown Source) at o.a.d.impl.sql.execute.VTIResultSet.getNextRowCoreUnknown Source) at o.a.d.impl.sql.execute.BasicNoPutResultSetImpl.getNextRowUnknown Source)Comments from RIck on derbydev in response to DERBY inquiry) The handling of DECIMAL on the small device platform is different. The test may need some special logic so that it calls the correct method for the small device environment.   
0;NullPointerException during execution for query with LEFT OUTER JOIN whose inner table selects all constants.   ;For a query having a LEFT OUTER JOIN such that the right  or inner  table is a SELECT subquery whose result column list consists entirely of constants  Derby may throw an executiontime NPE while trying to apply the join predicate. I say may because it depends on which join strategy the optimizer chooses.Using optimizer overrides I was able to reproduce this problem against trunk with the following admittedly nonsense) query create table t i int  j int)  insert into t values   )    )    )  select * from t left outer join select  a   b from t) x DERBYPROPERTIES joinStrategyNESTEDLOOP on x.a  t.i I |J |A |B | | | | | | | | |ERROR  The exception java.lang.NullPointerException was thrown while evaluating an expression.ERROR XJ Java exception  java.lang.NullPointerException.Running the same query also failed with the same NPE on ...  even though optimizer overrides dont exist there. So Im marking all known releases to be affected by this issue.Note while this particular query may not make much sense  I have seen a user with a very large  autogenerated query that  when executed  fails due to this problem. So it is worth investigating...   
0;If NetworkServer fails to shutdown when run as a separate process by NetworkServerTestSetup  test run will hang   ;If the NetworkServer fails to shutdown for some reason  we do not clean up the process but will just hang the tests. We should kill off the process if the server fails to shutdown and continue. To reproduce try runnning the test derbynet.SecureServerTest with . derbyTesting.jar and . jars. See DERBY for details.   
1;Unable to start slave mode after authentication failure on a previous startSlave attempt   ;Trying a startSlave after an initial startSlave fails due to an authentication failure throws an errorsaying that the database has already been bootedvn@vnlaptop~workworkspacesfreshworkspaceslave java org.apache.derby.tools.ijij version .ijgt  connect jdbcderbymydb startSlavetrue slaveHostlocalhost slavePort ERROR  Connection authentication failure occurred. Reason Invalid authentication..ijgt  connect jdbcderbymydb startSlavetrue useroystein passwordpass slaveHostlocalhost slavePort ERROR XRE Cannot start replication slave mode for database mydb. The database has already been booted. ijgt    
0;Change Collation test to run DatabaseMetaDataTest  BatchUpdateTest GroupByExpressionTest  and UpdateableResultSetTest for only one locale   ;Currently CollationTest runs DatabaseMetaDataTest  BatchUpdateTest GroupByExpressionTest  and UpdateableResultSetTest for multiple locales and territory based collation. It would be sufficient for these to run with a single locale and would save some time running tests.   
1;regression test failure in testDerbyJarAttributeAlpha  Security Exception   ;I am getting  errors in this test of the following form  all security exceptions from the management test suite. I can post othersif necessary.) testDerbyJarAttributeAlphaorg.apache.derbyTesting.functionTests.tests.management.VersionMBeanTest)javax.management.RuntimeMBeanException java.lang.SecurityException Access denied org.apache.derby.security.SystemPermission engine monitor) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.rethrowDefaultMBeanServerInterceptor.java) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.rethrowMaybeMBeanExceptionDefaultMBeanServerInterceptor.java) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttributeDefaultMBeanServerInterceptor.java) at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttributeJmxMBeanServer.java) at org.apache.derbyTesting.functionTests.tests.management.MBeanTest.runMBeanTest.java) at java.security.AccessController.doPrivilegedAccessController.java) at org.apache.derbyTesting.functionTests.tests.management.MBeanTest.getAttributeMBeanTest.java) at org.apache.derbyTesting.functionTests.tests.management.MBeanTest.checkBooleanAttributeValueMBeanTest.java) at org.apache.derbyTesting.functionTests.tests.management.VersionMBeanTest.testDerbyJarAttributeAlphaVersionMBeanTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Caused by java.lang.SecurityException Access denied org.apache.derby.security.SystemPermission engine monitor) at org.apache.derby.iapi.services.info.Version.checkMonitorVersion.java) at org.apache.derby.iapi.services.info.Version.isAlphaVersion.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeMStandardMBeanIntrospector.java) at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeMStandardMBeanIntrospector.java) at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeMMBeanIntrospector.java) at com.sun.jmx.mbeanserver.PerInterface.getAttributePerInterface.java) at com.sun.jmx.mbeanserver.MBeanSupport.getAttributeMBeanSupport.java) at javax.management.StandardMBean.getAttributeStandardMBean.java) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttributeDefaultMBeanServerInterceptor.java) ...  more   
0;Alter column set data type not allowed in soft upgrade with unique constraint   ;In . I can do thisijgt  create table t i int not null  v varchar) not null  constraint uq uniquev i))  rows insertedupdateddeletedijgt  alter table t alter v set data type varchar)  rows insertedupdateddeletedijgt In . soft upgrade mode I cannotijgt  create table t i int not null  v varchar) not null  constraint uq uniquev i))  rows insertedupdateddeletedijgt  alter table t alter v set data type varchar) ERROR Z Column V cannot be made nullable. It is part of a primary key or unique constraint  which cannot have anynullable columns.ijgt    
0;LOB locators are not released if the LOB columns are not accessed by the client   ;If the client creates a result set containing LOB locator columns and iterates through it without actually accessing the LOB columns  the locators are not released.The amount of locators and their associated LOB objects causes the server to consume large amounts of memory and it eventually gets an OOME.There are a few workarounds for this bug a) Access andor properly close the LOBs i.e. Blob.free). This is partly dependent on DERBY. b) Invoke Connection.commit or rollback) periodically  which causes all locators on the connection to be released.   
0;Remove unused method Connection.resetConnectionLogWriter  String  Properties)   ;The method Connection.resetConnectionLogWriter  String  Properties) in package org.apache.derby.client.am isnt used and can be removed.There is another resetConnectionmethod that is being used.   
0;Changing certain properties on client DataSource objects causes existing connections to reflect the new values   ;The client driver has code propagating changes made to the DataSource to existing connections created by that DataSource.There is some discussion of this in the thread httpwww.nabble.comConnectionPoolDataSourcepropertiestd.html  and there is also an example of what can happen due to this feature.Besides from being a bug with the potential to cause strange errors in deployment  the issue also makes the client driver code harder to read and understand.As far as I can see  there is also some related code in other parts of the client driver  for instance for fully resetting statements. There is mention of dynamic versus static sections in the comments this one from am.Statement)  If a dataSource is passed into resetClientConnection)  then we will assume  properties on the dataSource may have changed  and we will need to go through  the openstatement list on the connection and do a full reset on all statements   including preparedStatements and callableStatements. This is because property  change may influence the section we allocate for the preparedStatement  and  also the cursor attributes  i.e. setCursorSensitivity).  If no dataSource is passed into resetClientConnection)  then we will do the  minimum reset required for preparedStatements and callableStatements.Note that the reset code for statements is also invoked when ClientPooledConnection.getConnection) is invoked. I do not understand why we should reset statements when we get a new logical connection.Further  I also suspect the concept of a deferred reset has been introduced because of the featurebug described by this Jira issue. A deferred reset seems to be a mechanism to avoid a roundtrip to validate the newly changed DataSource properties typically user  password and security mechanism).I will look into removing code related to deferred resets as well. If you have historic information about these parts of the driver  I would appreciate if you share it with the community if possible.Just to be clear  it is my opinion that changed DataSource properties should take effect when one of the following methods is invoked DataSource.getConnection) ConnectionPoolDataSource.getPooledConnection) XADataSource.getXAConnection)All of the methods above returns a physical connection. Properties like user name and password are associated with the physical connection  and thus requests to obtain a logical connection should not cause any of these properties to change.   
0;Remove am.Connection.resetLogWriter ClientBaseDataSource boolean) and called methods;am.Connection.resetLogWriter ClientBaseDataSource boolean) isnt called and can be removed.
0;suites.All fails to run on Jvm . when built with JDK . Failed to invoke suite) .jdbc._Suite)   ;Further  the following methods are only called from the reset)
0;TableFunctionTest.SpecialCollation and NoSpecialCollation fail with IBM iseries in checkGetXXXCalls   ;abstract Connection.reset_) and impl NetConnection.reset_)
0;Creation of logical connections from a pooled connection causes resource leak on the server   ;NetConnection.resetNetConnection)
0;IN clause ignores valid results  incorrect qualifier handling suspected   ;All these methods have cousins taking  arguments  which are being used by on one occasion ClientPooledConnection.getConnection).
0;SELECT DISTINCT field FROM TABLE_NAME GROUP BY field   field   ;??????・伊?收??????擺?????字?
0;TableFunctionTest fails under Ubuntu .   ;When running the test org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest  it fails with the output shown below. This test blocks the proper execution of suites.All and it was tested under Ubuntu . also tested on Windows Vista and it doesnt throw an error there).There were  errors) noSpecialCollationorg.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest)java.sql.SQLException The exception java.lang.ClassNotFoundException ERROR XBMU No class was registered for identifier . was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionErrorEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.nextEmbedResultSet.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResultsTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResultsTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResultsTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.simpleVTIResultsTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.tableFunctionTestTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.noSpecialCollationTableFunctionTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)Caused by java.sql.SQLException Java exception ERROR XBMU No class was registered for identifier . java.lang.ClassNotFoundException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.javaExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) ...  moreCaused by java.lang.ClassNotFoundException ERROR XBMU No class was registered for identifier . at org.apache.derby.iapi.services.io.FormatIdInputStream.readObjectFormatIdInputStream.java) at org.apache.derby.catalog.types.TypeDescriptorImpl.readExternalTypeDescriptorImpl.java) at org.apache.derby.iapi.services.io.FormatIdInputStream.readObjectFormatIdInputStream.java) at org.apache.derby.impl.sql.execute.VTIResultSet.thawReturnTypeVTIResultSet.java) at org.apache.derby.impl.sql.execute.VTIResultSet.getReturnColumnTypesVTIResultSet.java) at org.apache.derby.impl.sql.execute.VTIResultSet.populateFromResultSetVTIResultSet.java) at org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCoreVTIResultSet.java) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRowBasicNoPutResultSetImpl.java) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java) ...  more) specialCollationorg.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest)java.sql.SQLException The exception java.lang.ClassNotFoundException ERROR XBMU No class was registered for identifier . was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionErrorEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.nextEmbedResultSet.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResultsTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResultsTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResultsTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.simpleVTIResultsTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.tableFunctionTestTableFunctionTest.java) at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.specialCollationTableFunctionTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by java.sql.SQLException Java exception ERROR XBMU No class was registered for identifier . java.lang.ClassNotFoundException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.javaExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) ...  moreCaused by java.lang.ClassNotFoundException ERROR XBMU No class was registered for identifier . at org.apache.derby.iapi.services.io.FormatIdInputStream.readObjectFormatIdInputStream.java) at org.apache.derby.catalog.types.TypeDescriptorImpl.readExternalTypeDescriptorImpl.java) at org.apache.derby.iapi.services.io.FormatIdInputStream.readObjectFormatIdInputStream.java) at org.apache.derby.impl.sql.execute.VTIResultSet.thawReturnTypeVTIResultSet.java) at org.apache.derby.impl.sql.execute.VTIResultSet.getReturnColumnTypesVTIResultSet.java) at org.apache.derby.impl.sql.execute.VTIResultSet.populateFromResultSetVTIResultSet.java) at org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCoreVTIResultSet.java) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRowBasicNoPutResultSetImpl.java) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java) ...  moreFAILURESTests run   Failures   Errors    
0;testfailure in storetestsst_derby with ibm . on iseries machine  one deadlock message missing   ;I saw this fail once  a couple of reruns didnt duplicate the problem.The only difference appears to be that one of the deadlock messages is missing from the output. dellt  Got a Deadlock.   
0;Cannot use row_number) in ORDER BY clause   ;The following query works correctlyselect absa)  row_number) over )from twhere a gt   and a lt  order by absa)I expected the following query to also work  but it raised an exceptionselect absa)  row_number) over )from twhere a gt   and a lt  order by row_number) over )This is the error I saw ERROR X Syntax error Encountered over at line   column .Here are the reasons why I think that this syntax is supposed to be supportedAccording to my reading of the  SQL spec  the ORDER BY clause should be able to sort on any expression in the SELECT list. That includes OLAP expressions. I believe this is so because  according to part   section . lt sort specificationgt )  a lt sort keygt  can be any lt value expressiongt  and if you follow the grammar for lt value expressiongt   it can resolve to be a lt value expression primarygt  see section .)  which can in turn resolve to be a lt window functiongt . This reasoning is supported by tracing the hotlinks on the following page which lays out the SQL  BNF httpsavage.net.auSQLsql.bnf.html This interpretation is further supported by the example of an ORDER BY clause referencing an OLAP expression which is provided on page  of the introduction to OLAP written by Fred Zemke  Krishna Kulkarni  Andy Witkowski  and Bob Lyle www.cse.iitb.ac.indbmsDataPapersOtherSQLOLAPr.pdf   
0;Derby does not follow the SQL Standard when trying to map SQL routines to Java methods.   ;I have only tested this in the . trunk. However  I suspect that this affects all previous releases of Derby as well.In resolving method signatures for functionprocedure invocations  the SQL standard makes the following definitions in part   section . parameter mapping). These definitions  in turn  refer to tables B and B in JDBC . Specification  Final Release  October   JDBC ). Simply mappable  This refers to the correspondence of SQL and Java types described in  JDBC  table B. This is the table which defines the mapping of SQL types to Java primitives. Object mappable  This refers to the correspondence of SQL and Java types described in  JDBC  table B. This is the table which defines the mapping of SQL types to Java wrapper objects. Output mappable  For OUT and INOUT parameters  this refers to a single element array whose cell is simply mappable or object mappable. E.g. Integer[] or float[]. Mappable  This means simply  object  or output mappable. Result set mappable  This means a single element array whose cell is a type which implements either java.sql.ResultSet or sqlj.runtime.ResultSetIterator.Putting all of this together  section . continues A Java method with M parameters is mappable to SQL) if and only if  for some N   zero) lt  N lt  M  the data types of the first N parameters are mappable  the last M  N parameters are result set mappable  and the result type is either simply mappable  object mappable  or void.Section . gives more detailed rules  but they are hard to follow. According to section .  when resolving a routine invocation  Derby should expect to find one and only one static mappable method with the expected external name Java class  method name).I believe that this is a fair description of the rules. This  at least  is what some other databases appear to do. See  for instance  httpinfocenter.sybase.comhelpindex.jsp?topiccom.sybase.help.ase_..javahtmljavajava.htm and httpwww.servicearchitecture.comdatabasearticlesmapping_sql_and_java_data_types.htmlWe do not have a regression test which verifies that Derby applies the SQL standard resolution rules. There may be several divergences from the standard. This JIRA is a place to track those discrepancies. Here is one that I have noticedThe following SQL signature a int ) returns intshould be mappable to any of the following Java signaturespublic static int f int a )public static int f Integer a )public static Integer f int a )public static Integer f Integer a )However  I observe that Derby is only able to resolve the first and third signatures the ones with primitive arguments). I will attach a test case showing this problem.I will also attach an html table summarizing the simply and object mappable rules.   
0;errror in nightly regression test LobStreamsTestencryptedjunit.framework.AssertionFailedError fjartestJarResults.ibm_suites.AllsystemsingleUseoneuseetmplob.tmp   ;There was  failure) LobStreamsTestencryptedjunit.framework.AssertionFailedError fjartestJarResults.ibm_suites.AllsystemsingleUseoneuseetmplob.tmp at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.accessDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.runDropDatabaseSetup.java) at java.security.AccessController.doPrivilegedAccessController.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectoryDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectoryDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabaseDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.tearDownDropDatabaseSetup.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)   
1;Comment in template security policy incorrectly says that JMX is not enabled by default   ;The template policy located at DERBY_HOMEdemotemplatesserver.policy release distributions) and trunkjavadrdaorgapachederbydrdatemplate.policy source tree) contains a comment relating to JMX permissions which says JMX management of Derby is NOT enabled by default  see also DERBY.This was no longer true after DERBY was fixed  which includes the ... release. JMX monitoring and management is enabled by default given that the JVM includes the required APIs  and that the security policy allows JMX features to come up. The comment should have been removed  but this has not happened. The same applies to the default server policy  server.policy  which also should be corrected this policys comments are however not exposed to users in the same way as the template).Note that no code or actual permissions need to change as a result of this  it is merely an outdated comment that needs to be removed in order not to give users a false impression.   
0;LOBStateTracker should not use SYSIBM.CLOBRELEASELOCATOR when the database is softupgraded from .   ;Reported by Daniel Noll on derbyuser httpthread.gmane.orggmane.comp.apache.db.derby.userTo reproduce . Create a database with Derby ... . Create a table with a clob column and insert some data . Access that database with clientserver at version ... and iterate through the rows in the tableYoull see an error message like thisERROR Y SYSIBM.CLOBRELEASELOCATOR is not recognized as a function or procedure.   
0;ALTER TABLE is not allowed on the System table SYSCS_DIAG.TRANSACTION_TABLE in derbyall  storeTransactionTable.sql   ;See e.g. httpdbtg.thresher.comderbytesttinderbox_trunkjvm.testingtestlogSunOS._ipciderbyall_diff.txtlt methodgt storeTransactionTable.sqllt methodgt lt signaturegt  dellt   rows insertedupdateddeleteda gt  ERROR  The exception java.sql.SQLException ALTER TABLE is not allowed on the System table SYSCS_DIAG.TRANSACTION_TABLE. was thrown while evaluating an expression.gt  ERROR XY ALTER TABLE is not allowed on the System table SYSCS_DIAG.TRANSACTION_TABLE.lt signaturegt    
0;SYSCS_BULK_INSERT doesnt quote identifiers or strings properly   ;Discovered by Mamta A. Satoor in DERBY.SYSCS_BULK_INSERT builds an insert statement in which it doesnt quote the schema name or the table name. It also takes string parameters that are inserted into the statement text with single quotes around them  but that wont work if those strings contain single quote characters.   
0;NullPointerException when invoking statement event listeners if one of the listeners is null   ;If PooledConnection.addStatementEventListener) is called with a null argument  the client driver throws a NullPointerException when the listeners are invoked. Embedded does not throw an exception.   
0;If an IOException is encountered during establishment of the connection  Network Server should print the root exception to the console instead of a generic message   ;In working on DERBY  I noticed that when the FileNotFound exception caused the connection to fail it just printed out a generic exception  not the IOException that caused the error.That is because of this code in ClientThread. catch IOException ioe   IOException causes this thread to stop. No  console error message if this was caused by a  shutdown synchronized parent.getShutdownSync  if parent.getShutdown  parent.consolePropertyMessageDRDA_UnableToAccept.S  } }In the event of an unexpected IOException the actual exception should print and the client socket should be closed if it has been established.   
0;In Net Client mode  negative values for stream length are accepted without an exception for PreparedStatement.setAsciiStream)   ;This is related to Cloudscape bug .Pass negative length as the stream length for various setXXXStream methods should throw an exception. But in Net Client mode  passing a negative value as stream length to PreparedStatement.setAsciiStream doesnt throw an exception.e.g. from storeStreamingColumnPreparedStatement ps  prepareStatementinsert into   testLongVarCharInvalidStreamLength values?  ?  ?  ps.setInt    try  printlngt  testing using setAsciiStream with  as length  ps.setAsciiStream  fileIn     should throw exception here but doesnt. }This issue has been fixed for embedded mode  but not for client mode.   
0;setting tracedirectory from the command line does not work   ;I triedjava org.apache.derby.drda.NetworkServerControl tracedirectory tmpand gotTrace directory changed to tmp.java org.apache.derby.drda.NetworkServerControl trace onTrace turned on for all sessions.Trace turned on for all sessions.And the trace output was not redirected to the tmp directory. The tracedirectory command seemed to be ignored.Setting tracedirectory with the system property derby.drda.traceDirectory or with the NetworkServerControl api seems to work ok.   
0;NPE when firing a trigger   ;NullPointerException raised when firing a trigger. Originally reported by Thiyagu P on the Derby user list httpwww.nabble.comTriggerfunctionbrokenin...td.htmla Thiyagu reports that the same script works fine in .... Heres the scriptCREATE TABLE TRADE ID INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY START WITH )  BUYID INT NOT NULL  QTY FLOAT) NOT NULL )  CREATE TABLE TOTALBUYID INT NOT NULL  TOTALQTY FLOAT) NOT NULL)  CREATE TRIGGER TRADE_INSERT AFTER INSERT ON TRADE REFERENCING NEW AS NEWROW FOR EACH ROW MODE DBSQL UPDATE TOTAL SET TOTALQTY  NEWROW.QTY WHERE BUYID  NEWROW.BUYID  INSERT INTO TOTAL VALUES   )  INSERT INTO TRADE VALUES    ) Heres the stack tracejava.lang.NullPointerException at org.apache.derby.iapi.types.DataTypeDescriptor.getNullDataTypeDescriptor.java) at org.apache.derby.iapi.types.DataTypeDescriptor.normalizeDataTypeDescriptor.java) at org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeRowNormalizeResultSet.java) at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCoreNormalizeResultSet.java) at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCoreDMLWriteResultSet.java) at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRowsUpdateResultSet.java) at org.apache.derby.impl.sql.execute.UpdateResultSet.openUpdateResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.RowTriggerExecutor.fireTriggerRowTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.tools.ij.ij.executeImmediateij.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)   
0;...replication.buffer.LogBufferFullException causes failover to fail w XRE  SQLERRMC Could not perform operation because the database is not in replication master mode.   ;With the patch for DERBY  derby_pv.diff.txt  I was able to provoke this error twice in  test runs on this platform On another platform I saw none in  test runs.I will upload the full test run log dir.Summary testReplication_Local_StateTest_partorg.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_partjunit.framework.ComparisonFailure Unexpected SQL state. expectedlt XRE  gt  but waslt XRE  gt Master derby.log BEGIN REPLICATION ERROR MESSAGE   PM Exception occurred during log shipping.org.apache.derby.impl.store.replication.buffer.LogBufferFullException at org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer.switchDirtyBufferReplicationLogBuffer.java at org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer.appendLogReplicationLogBuffer.java at org.apache.derby.impl.store.replication.master.MasterController.appendLogMasterController.java at org.apache.derby.impl.store.raw.log.LogAccessFile.writeToLogLogAccessFile.java at org.apache.derby.impl.store.raw.log.LogAccessFile.flushDirtyBuffersLogAccessFile.java at org.apache.derby.impl.store.raw.log.LogAccessFile.flushLogAccessFileLogAccessFile.java at org.apache.derby.impl.store.raw.log.LogAccessFile.writeLogRecordLogAccessFile.java at org.apache.derby.impl.store.raw.log.LogToFile.appendLogRecordLogToFile.java at org.apache.derby.impl.store.raw.log.FileLogger.logAndDoFileLogger.java at org.apache.derby.impl.store.raw.xact.Xact.logAndDoXact.java at org.apache.derby.impl.store.raw.data.LoggableActions.doActionLoggableActions.java at org.apache.derby.impl.store.raw.data.LoggableActions.actionUpdateLoggableActions.java at org.apache.derby.impl.store.raw.data.StoredPage.doUpdateAtSlotStoredPage.java at org.apache.derby.impl.store.raw.data.StoredPage.updateOverflowDetailsStoredPage.java at org.apache.derby.impl.store.raw.data.StoredPage.updateOverflowDetailsStoredPage.java at org.apache.derby.impl.store.raw.data.BasePage.insertAllowOverflowBasePage.java at org.apache.derby.impl.store.raw.data.BasePage.insertBasePage.java at org.apache.derby.impl.store.access.heap.HeapController.doInsertHeapController.java at org.apache.derby.impl.store.access.heap.HeapController.insertHeapController.java at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRowRowChangerImpl.java at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeEmbedPreparedStatement.java at org.apache.derby.impl.drda.DRDAStatement.executeDRDAStatement.java at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjectsDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.processCommandsDRDAConnThread.java at org.apache.derby.impl.drda.DRDAConnThread.runDRDAConnThread.java END REPLICATION ERROR MESSAGE Slave derby.log . GMT Thread DRDAConnThread_  main  DATABASE  exporthometmpostestingInMyDerbySandboxdb_slavewombat  DRDAID  }  Replication slave mode started successfully for database exporthometmpostestingInMyDerbySandboxdb_slavewombat. Connection refused because the database is in replication slave mode. Replication slave role was stopped for database exporthometmpostestingInMyDerbySandboxdb_slavewombat. BEGIN SHUTDOWN ERROR STACK ERROR XSLA Cannot redo operation null in the log. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java at org.apache.derby.impl.store.raw.log.FileLogger.redoFileLogger.java at org.apache.derby.impl.store.raw.log.LogToFile.recoverLogToFile.java at org.apache.derby.impl.store.raw.RawStore.bootRawStore.java at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleBaseMonitor.java at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleMonitor.java at org.apache.derby.impl.store.access.RAMAccessManager.bootRAMAccessManager.java at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleBaseMonitor.java at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleMonitor.java at org.apache.derby.impl.db.BasicDatabase.bootStoreBasicDatabase.java at org.apache.derby.impl.db.BasicDatabase.bootBasicDatabase.java at org.apache.derby.impl.db.SlaveDatabase.bootBasicDatabaseSlaveDatabase.java at org.apache.derby.impl.db.SlaveDatabase.accessSlaveDatabase.java at org.apache.derby.impl.db.SlaveDatabaseSlaveDatabaseBootThread.runSlaveDatabase.java at java.lang.Thread.runThread.javaCaused by ERROR  Database } shutdown. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java at org.apache.derby.impl.store.raw.log.LogToFile.stopReplicationSlaveRoleLogToFile.java at org.apache.derby.impl.store.replication.slave.SlaveController.stopSlaveSlaveController.java at org.apache.derby.impl.store.replication.slave.SlaveController.accessSlaveController.java at org.apache.derby.impl.store.replication.slave.SlaveControllerSlaveLogReceiverThread.runSlaveController.java begin nested exception  level  ERROR  Database } shutdown. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java at org.apache.derby.impl.store.raw.log.LogToFile.stopReplicationSlaveRoleLogToFile.java at org.apache.derby.impl.store.replication.slave.SlaveController.stopSlaveSlaveController.java at org.apache.derby.impl.store.replication.slave.SlaveController.accessSlaveController.java at org.apache.derby.impl.store.replication.slave.SlaveControllerSlaveLogReceiverThread.runSlaveController.java end nested exception  level   END SHUTDOWN ERROR STACK    
0;Dont call RAFContainer.padFile) from instances of RAFContainer   ;In this thread on derbydev  httpmailarchives.apache.orgmod_mboxdbderbydev.mboxc.@sbcglobal.nete it was mentioned that RAFContainer calls padFile) when creating a container. Since padFile) uses old IO calls and the rest of RAFContainer uses NIO  it could possibly cause similar issues as those seen in DERBY. Although we havent verified that this is a problem  we should try to avoid mixing old IO and NIO to be on the safe side.   
0;Improve error information reported when encountering ERROR XSDB Container information cannot change once written was   now    ;Improve the text associated with ERROR XSDB Container information cannot change once written was   now . It would be nice to know whichdatabase and container at least  and possibly any other info that may have changed. Maybe pagehex dumps to track down overlapping IO errors on page .Here is a stack trace reported as part of DERBY  as encountered by a back ground thread . GMT Thread derby.rawStoreDaemon  derby.daemons  Cleanup action starting^MERROR XSDB Container information cannot change once written was   now ^M at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source)^M at org.apache.derby.impl.store.raw.data.AllocPage.WriteContainerInfoUnknown Source)^M at org.apache.derby.impl.store.raw.data.FileContainer.writeHeaderUnknown Source)^M at org.apache.derby.impl.store.raw.data.RAFContainer.writeRAFHeaderUnknown Source)^M at org.apache.derby.impl.store.raw.data.RAFContainer.cleanUnknown Source)^M at org.apache.derby.impl.services.cache.ConcurrentCache.cleanAndUnkeepEntryUnknown Source)^M at org.apache.derby.impl.services.cache.ConcurrentCache.cleanEntryUnknown Source)^M at org.apache.derby.impl.services.cache.BackgroundCleaner.performWorkUnknown Source)^M at org.apache.derby.impl.services.daemon.BasicDaemon.serviceClientUnknown Source)^M at org.apache.derby.impl.services.daemon.BasicDaemon.workUnknown Source)^M at org.apache.derby.impl.services.daemon.BasicDaemon.runUnknown Source)^M at java.lang.Thread.runUnknown Source)^M   
0;Fix error handling in PrivilegedFileOpsForTests   ;The exception handling in this utility class is unclear and can in some cases cause ClassCastException to be thrown.Note that SecurityException is a runtime exception.Potential issues to be fixed ) Avoid possibility of ClassCastException in getFileInputStream ) Dont include SecurityException in the signature throws clause) ) Document SecurityException in JavaDoc.Points  and  leads to the option of not catching SecurityException  which allows the code to be written more concisely and we can use PrivilegedAction instead of PrivilegedExceptionAction in some cases.There is also a missing character in the class name in the header  and an invalid JavaDoc tag in the class JavaDoc.   
0;Improve calculation of refSize in ClassSize.java   ;javaengineorgapachederbyiapiservicescacheClassSize.java has a static code block which calculates the size of a reference for the architecture. This code could be improved by adding garbage collection before measuring memory  to give a consistent reading. Also there have been suggestions that we use os.arch or sun.arch.data.model to make the measurement more reliable  especially on bit machines.   
0;SQL Length function materializes BLOB  into memory   ;Currently the SQL length function materializes the entire lob into memory. In SQLBinary.getLength we have public final int getLength throws StandardException  if stream  null  if streamValueLength   return streamValueLength  } return getBytes  null ?   getBytes.length  }Which actually is doubly bad because we call getBytes twice and materialize it twice.It would be good to read the length from the stream if available and otherwise stream the value to get the length  rather than materializing it into memory.To reproduce  run the attached repro.java XmxM LengthLargeLobIt gives an out of memory exceptionCaused by java.lang.OutOfMemoryError Java heap space at org.apache.derby.iapi.types.SQLBinary.readFromStreamSQLBinary.java at org.apache.derby.iapi.types.SQLBinary.readExternalSQLBinary.java at org.apache.derby.iapi.types.SQLBinary.getValueSQLBinary.java at org.apache.derby.iapi.types.SQLBinary.getBytesSQLBinary.java at org.apache.derby.iapi.types.SQLBinary.getLengthSQLBinary.java at org.apache.derby.impl.sql.execute.BaseActivation.getDBLengthBaseActivation.java at org.apache.derby.exe.acfexaxaxdbxddc.eUnknown Source at org.apache.derby.impl.services.reflect.DirectCall.invokeReflectGeneratedClass.java at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.doProjectionProjectRestrictResultSet.java at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreProjectRestrictResultSet.java at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRowBasicNoPutResultSetImpl.java at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java ...  more[   
0;Incorrect position calculation in PositionedStoreStream with readbyte[] ...)   ;A bug in the methods readbyte[]) and readbyte[] int int) in PositionedStoreStream can cause the position variable to be set to an incorrect value.The bug is only triggered if one of the two read methods is invoked after EOF of the underlying stream has been reached.If the bug is triggered  the position will be decreased by one because the underlying stream returns . Subsequent reads will further decrease the position. This can cause EOFexceptions during repositioning) or incorrect data being returned in subsequent calls.   
1;Revoking a column level privilege from a user  a prepared statement relying on that privilege can still be executed   ;When a table level SELECT privilege is revoked  a dependent prepared statement is invalidated and can no longer be executed  but in the case of a column level privilegeSELECT privilege  the dependent prepared statement can still be executed.This works as expected in .  but does not work in all . and . releases.   
0;Add more tests for legalillegal commands in the different replication states   ;Adding new replication state tests ... testReplication_Local__p_StateNegativeTests  testReplication_Local__p_StateTests_bigInsert_immediateStopMaster  testReplication_Local__p_StateTests_smallInsert_immediateStopMaster_DISABLED Due to DERBY) testReplication_Local__p_StateTests_bigInsert_sleepBeforeStopMaster testReplication_Local__p_StateTests_smallInsert_sleepBeforeStopMaster testReplication_Local__p_StateNegativeTests  testReplication_Local__p_StateNegativeTestsplus refactoring and cleanup.   
1;Revoking EXECUTE privilege on a function if used in a CHECK constraint implementation problem   ;The docs say that REVOKE EXECUTE ... RESTRICT should fail if there is a dependent constraintThe RESTRICT clause specifies that the EXECUTE privilege cannot be revoked if the specified routine is used in a view  trigger  or constraint  and the privilege is being revoked from the owner of the view  trigger  or constraint. Revoking the privilege will be correctly restricted  but possibly for the wrong reason.   
1;Derby can leak classloaders in an app server environment   ;A user reported potential class loader leaks in Derby...The first one looks like Derby created a longrunningthread and copying the context class loader. To fix  thecontext class loader should be savedsetrestored around thecreation of the new thread so that it copies some benign classloader instead e.g.  null or getClass).getClassLoader)) xe javalangThread@ee  truncating at running thread LEAK Object xe javalangThread@eeChildren xee javalangString@ff xe javalangThreadGroup@fefe xeorgapachederbyimplservicesmonitorAntiGC@aa xcfacThe second is another long running thread. The same applies xfea javalangThread@  truncating at running thread LEAK Object xfea javalangThread@Parents xea [LjavalangThread @ff xfeorgapachederbyiapiservicescontextContextManager@Children xfe javalangString@aa xe javalangThreadGroup@fefe xfeforgapachederbyimplservicesdaemonBasicDaemon@ xcfacThe third is a TimerThread owneed   which is created when aTimer is created. The same applies xac javautilTimerTimerImpl@baba  truncating at running thread LEAK Object xac javautilTimerTimerImpl@babaParents xfaaf [LjavalangThread @ccObject xac javautilTimer@bbParents xacorgapachederbyimplservicestimerSingletonTimerFactory@eeFor more info  see thread athttpwww.nabble.comClassLoaderleakstd.html   
0;Rename BaseJDBCTestCase.usingDerbyNet   ;The names of the methods usingDerbyNet and usingDerbyNetClient in BaseJDBCTestCase are confusing.I propose we change the one used to tell if we are using the DB client driver JCC).   
0;Create a utility class for skipping data in an InputStream   ;The contract of InputStream.skip is somewhat difficult  some would even say broken.See httpjava.sun.comjavasedocsapijavaioInputStream.htmlskiplong))A utility class should be created to ensure that we use the same skip procedure throughout the Derby code base.Suggested functionality long skipFullyInputStream)  skips until EOF  returns number of bytes skipped void skipFullyInputStream long)  skips requested number of bytes  throws EOFException if there is too few bytes in the streamI know of two different approaches  both skipping in a loop a) Verify EOF with a read call when skip returns zero. b) Throw EOFException if skip returns zero before requested number of bytes have been skipped.Theres related code in iapi.util.UTFUtil. Maybe this class  say StreamUtil  could be put in the same package?   
0;ImportExportLobTest failed on Zos  Clobs differ at index  expected but was   ;testImportDataExportQueryLobsInExtFileorg.apache.derbyTesting.functionTests.tests.tools.ImportExportLobTest)junit.framework.AssertionFailedError Clobs differ at index  expectedlt gt  but waslt gt  at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertEqualsBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.JDBC.assertSameContentsJDBC.java) at org.apache.derbyTesting.functionTests.tests.tools.ImportExportLobTest.verifyDataImportExportLobTest.java) at org.apache.derbyTesting.functionTests.tests.tools.ImportExportLobTest.testImportDataExportQueryLobsInExtFileImportExportLobTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)I ran on Windows with Dfile.encodingUTF and got a different error.) testImportDataExportQueryLobsInExtFileorg.apache.derbyTesting.functionTests.tests.tools.ImportExportLobTest)java.sql.SQLException The exception java.sql.SQLException Column COLUMN is either not in any table in the FROM list or appears within a join specification and is outside the scope of the join specification or appears in a HAVING clause and is not in the GROUP BY list. If this is a CREATE or ALTER TABLE statement then COLUMN is not a column in the target table. was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeEmbedPreparedStatement.java) at org.apache.derbyTesting.functionTests.tests.tools.ImportExportBaseTest.doImportDataLobsFromExtFileImportExportBaseTest.java) at org.apache.derbyTesting.functionTests.tests.tools.ImportExportLobTest.testImportDataExportQueryLobsInExtFileImportExportLobTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Caused by java.sql.SQLException The exception java.sql.SQLException Column COLUMN is either not in any table in the FROM list or appears within a join specification and is outside the scope of the join specification or appears in a HAVING clause and is not in the GROUP BY list. If this is a CREATE or ALTER TABLE statement then COLUMN is not a column in the target table. was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  moreCaused by java.sql.SQLException Column COLUMN is either not in any table in the FROM list or appears within a joinspecification and is outside the scope of the join specification or appears in a HAVING clause and is not in the GROUP BY list. If this is a CREATE or ALTER TABLE statement then COLUMN is not a column in the target table. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementDriver.java) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java) at org.apache.derby.impl.load.Import.performImportImport.java) at org.apache.derby.impl.load.Import.importDataImport.java) at org.apache.derby.catalog.SystemProcedures.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILESystemProcedures.java) at org.apache.derby.exe.acaaacxbxxcdxdcdcb.gUnknown Source) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeReflectMethod.java) at org.apache.derby.impl.sql.execute.CallStatementResultSet.openCallStatementResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) ...  moreCaused by ERROR X Column COLUMN is either not in any table in the FROM list or appears within a join specification and is outside the scope of the join specification or appears in a HAVING clause and is not in the GROUP BY list. If this is a CREATE or ALTER TABLE statement then COLUMN is not a column in the target table. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.sql.compile.ColumnReference.bindExpressionColumnReference.java) at org.apache.derby.impl.sql.compile.ResultColumn.bindExpressionResultColumn.java) at org.apache.derby.impl.sql.compile.ResultColumnList.bindExpressionsResultColumnList.java) at org.apache.derby.impl.sql.compile.SelectNode.bindExpressionsSelectNode.java) at org.apache.derby.impl.sql.compile.SelectNode.bindExpressionsWithTablesSelectNode.java) at org.apache.derby.impl.sql.compile.DMLStatementNode.bindExpressionsWithTablesDMLStatementNode.java) at org.apache.derby.impl.sql.compile.DMLStatementNode.bindResultSetsWithTablesDMLStatementNode.java) at org.apache.derby.impl.sql.compile.InsertNode.bindStatementInsertNode.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) ...  more) testImportDataExportQueryLobsInExtFileorg.apache.derbyTesting.functionTests.tests.tools.ImportExportLobTest)java.sql.SQLException The exception java.sql.SQLException Column COLUMN is either not in any table in the FROM list or appears within a join specification and is outside the scope of the join specification or appears in a HAVING clause and is not in the GROUP BY list. If this is a CREATE or ALTER TABLE statement then COLUMN is not a column in the target table. was thrown while evaluating an expression. at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.client.am.SqlException.getSQLExceptionSqlException.java) at org.apache.derby.client.am.PreparedStatement.executePreparedStatement.java) at org.apache.derbyTesting.functionTests.tests.tools.ImportExportBaseTest.doImportDataLobsFromExtFileImportExportBaseTest.java) at org.apache.derbyTesting.functionTests.tests.tools.ImportExportLobTest.testImportDataExportQueryLobsInExtFileImportExportLobTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Caused by org.apache.derby.client.am.SqlException The exception java.sql.SQLException Column COLUMN is either not in any table in the FROM list or appears within a join specification and is outside the scope of the join specification or appears in a HAVING clause and is not in the GROUP BY list. If this is a CREATE or ALTER TABLE statement then COLUMN is not a column in the target table. was thrown while evaluating an expression. at org.apache.derby.client.am.Statement.completeExecuteStatement.java) at org.apache.derby.client.net.NetStatementReply.parseEXCSQLSTTreplyNetStatementReply.java) at org.apache.derby.client.net.NetStatementReply.readExecuteCallNetStatementReply.java) at org.apache.derby.client.net.StatementReply.readExecuteCallStatementReply.java) at org.apache.derby.client.net.NetStatement.readExecuteCall_NetStatement.java) at org.apache.derby.client.am.Statement.readExecuteCallStatement.java) at org.apache.derby.client.am.PreparedStatement.flowExecutePreparedStatement.java) at org.apache.derby.client.am.PreparedStatement.executeXPreparedStatement.java) at org.apache.derby.client.am.PreparedStatement.executePreparedStatement.java) ...  moreCaused by org.apache.derby.client.am.SqlException Column COLUMN is either not in any table in the FROM list or appears within a join specification and is outside the scope of the join specification or appears in a HAVING clause and isnot in the GROUP BY list. If this is a CREATE or ALTER TABLE statement then COLUMN is not a column in the target table. ...  more   
0;jdbcClobTest fails on Zos with AssertionFailedError Streams differ at index  expected but was   ;testGetAsciiStreamCreateCloborg.apache.derbyTesting.functionTests.tests.jdbc.ClobTest)junit.framework.AssertionFailedError Streams differ at index  expectedlt gt  but waslt gt  at org.apache.derbyTesting.junit.BaseTestCase.assertEqualsBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.jdbc.ClobTest.testGetAsciiStreamCreateClobClobTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)I was able to reproduce this on Windows with slightly different errors running with Dfile.encodingUTFThere were  errors) testGetCharacterStreamClobUpdatesorg.apache.derbyTesting.functionTests.tests.jdbc.ClobTest)java.sql.SQLException Te position argument  exceeds the size of the BLOBCLOB. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.EmbedClob.setStringEmbedClob.java) at org.apache.derby.impl.jdbc.EmbedClob.setStringEmbedClob.java) at org.apache.derbyTesting.functionTests.tests.jdbc.ClobTest.testGetCharacterStreamClobUpdatesClobTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)aused by java.sql.SQLException The position argument  exceeds the size of the BLOBCLOB. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  more) testGetCharacterStreamClobUpdatesorg.apache.derbyTesting.functionTests.tests.jdbc.ClobTest)java.sql.SQLException Te position argument  exceeds the size of the BLOBCLOB. at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.client.am.SqlException.getSQLExceptionSqlException.java) at org.apache.derby.client.am.Clob.setStringClob.java) at org.apache.derbyTesting.functionTests.tests.jdbc.ClobTest.testGetCharacterStreamClobUpdatesClobTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)aused by org.apache.derby.client.am.SqlException The position argument  exceeds the size of the BLOBCLOB. at org.apache.derby.client.am.Clob.setStringXClob.java) at org.apache.derby.client.am.Clob.setStringClob.java) ...  morehere were  failures) testGetAsciiStreamCreateCloborg.apache.derbyTesting.functionTests.tests.jdbc.ClobTest)junit.framework.AssertionFaildError Streams differ at index  expectedlt gt  but waslt gt  at org.apache.derbyTesting.junit.BaseTestCase.assertEqualsBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.jdbc.ClobTest.testGetAsciiStreamCreateClobClobTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)) testGetAsciiStreamCreateCloborg.apache.derbyTesting.functionTests.tests.jdbc.ClobTest)junit.framework.AssertionFaildError Streams differ at index  expectedlt gt  but waslt gt  at org.apache.derbyTesting.junit.BaseTestCase.assertEqualsBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.jdbc.ClobTest.testGetAsciiStreamCreateClobClobTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)FAILURES!!!Tests run   Failures   Errors    
1;SecureServerTest  SSLTest are failed on Zos with exit code  starting network server   ;   
0;PositionedStoreStream.repositionpos) with pos greater than length leaves the stream object in an inconsistent state   ;PositionedStoreStream.repositionpos) with pos greater than the stream length leaves the stream object in an inconsistent state  causing subsequent calls to fail or the state to remain inconsistent which can cause the wrong data to be returned).The problem is that the position variable gets out of sync with the underlying stream.There are at least two ways to fix this assuming the positioned store stream does not know the length of the underlying stream) a) Reset stream to position zero. b) Let the stream be positioned at EOF and update the internal position variable.Option b) leaves the stream in an unusable state  and the next request will cause option a) to be performed. It also require a slight rewrite of PositionedStoreStream.skipFully and PositionedStoreStream.reposition to be able to determine the position of the stream the length in this case).Option a) will cause the first page of the stream to be read into the cache if not already there)  but taken the reason for doing this is an error condition it seems acceptable.A correct value of the position variable is required for correctvalid operation of PositionedStoreStream.   
0;Client Configuration.java imports engine class  org.apache.derby.iapi.services.info.JVMInfo   ;The client code org.apache.derby.client.am.Configuration) imports the engine class org.apache.derby.iapi.services.info.JVMInfo.This will make two copies of the class in derby.jar and derbyclient.jar which can cause problems if mixed version jars are used and I think may cause jar sealing issues as well.Until we have a good framework for sharing code between engine and client  the client shouldnt import engine classes.   
0;LOBStreamControl shouldnt throw SQLException   ;LOBStreamControl throws three types of exceptions IOException  SQLException and StandardException.All the SQLException are generatedthrown from the code in LOBStreamControl.At this level of the code  SQLException should not be thrown  as it is more tedious to handle both SQLException and StandardException at higher levels.I propose to replace SQLException with StandardException in LOBStreamControl. The purpose of this change is consistency  and also results it slightly less code at higher levels.   
0;ImportExportTest doesnt detect lack of expected errors   ;I observed that ImportExportTest contains many test cases which do trycatchassertSQLException  but none of them call fail at the end of the try block. Example public void testEarlyEndOfFile throws Exception  Connection c  getConnection  try  doImportFromFilec  extinEndOfFile.txt   T   null   null   null    } catch SQLException e  assertSQLStateXIEE  e  } }I think this means that if the expected exception isnt thrown the test still passes.   
0;NullPointerException when accessing a clob through a pooled connection   ;After returning a pooled connection to the pool and getting it again a NullPointerException is thrown when a clob field is accessed again. This may be related to the following post httpmailarchives.apache.orgmod_mboxdbderbyuser.mboxCCD.@sun.comEHere is the stack tracejava.lang.NullPointerException at org.apache.derby.client.am.PreparedStatement.setIntXUnknown Source at org.apache.derby.client.am.CallableLocatorProcedures.clobGetLengthUnknown Source at org.apache.derby.client.am.Clob.getLocatorLengthUnknown Source at org.apache.derby.client.am.Lob.sqlLengthUnknown Source at org.apache.derby.client.am.Clob.lengthUnknown Source at org.apache.derby.client.am.Cursor.getStringUnknown Source at org.apache.derby.client.am.ResultSet.getStringUnknown Source at derbyerr.Main.mainMain.javaHere is the code to reproduce the problempackage derbyerr import java.sql.Connection import java.sql.PreparedStatement import java.sql.ResultSet import java.sql.SQLException import javax.sql.PooledConnection import org.apache.derby.jdbc.ClientConnectionPoolDataSource public class Main  public static void main String[] args  org.apache.derby.tools.sysinfo.main args   ClientConnectionPoolDataSource creator  new ClientConnectionPoolDataSource     There should be an empty db named testdb creator.setDatabaseName testdb   try  PooledConnection pc  creator.getPooledConnection    Connection c  pc.getConnection    PreparedStatement ps   ResultSet rs   String s    Drop the table test  if it exsists try  ps  c.prepareStatement drop table test   ps.execute    ps.close    } catch Exception e  }  Create a test table with a clob field ps  c.prepareStatement create table test pkey varchar not null primary key  value clob   ps.execute    ps.close     Insert a record ps  c.prepareStatement insert into test values   abc   ps.execute    ps.close     Query the record and... ps  c.prepareStatement select * from test   rs  ps.executeQuery    rs.next     ...access the clob field  this works s  rs.getString    assert s.equals abc   rs.close    ps.close     Simulate connection pooling close the connection and get it again c.close    c  pc.getConnection     Now again query the record... ps  c.prepareStatement select * from test   rs  ps.executeQuery    rs.next     ...and access the clob  this fails s  rs.getString    assert s.equals abc   rs.close    ps.close    } catch Exception e  e.printStackTrace    } }}   
0;Add a SHOW FUNCTIONS command to ij   ;Currently  the ij SHOW command can give you information on a number of schema objects  including procedures. It should be fairly easy to add SHOW FUNCTIONS as well. This request surfaced on the user list httpwww.nabble.comHowcaniseemyselfdefinedfunctionstd.htmla   
0;NullPointerException in stress.multi test   ;I saw the following NPE in stress.multi running on . with derbyclient.java.lang.NullPointerException at org.apache.derby.impl.jdbc.EmbedPreparedStatement.getMetaDataUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.writeSQLDARDUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.processCommandsUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.runUnknown Source)Cleanup action completed   
0;StoreStreamClob.getReadercharPos) performs poorly   ;StoreStreamClob.getReadercharPos) performs poorly because it resets the underlying stream and skips data until it reached the requested character position. Not only does the data has to be skipped  it also has to be decoded UTF).The problem is exposed through EmbedClob.getSubString  which causes extremely bad performance for the client driver because the locator based Clob implementation uses this method.For the record  there is another read buffer size issue that exaggerates the problem it will probably be handled under DERBY  and also DERBY).   
0;Convert derbynetsysinfo and derbynetsysinfo_with_properties to JUnit   ;Im guessing these two can be combined into one file   
0;need to test getting appropriate error message when os files are readonly   ;We dont currently have a way to test what happens when a database is on readonly media e.g. a cd  floppy).Without user involvement i.e. inserting a disk somewhere etc) its hard to fully test  but a test that simulates this by making the files on the OS readonly would give some coverage.   
0;The test code executes java processes by just executing java instead of using a full path. This may cause the wrong java to be picked up.   ;There are places in the code where we execute a java process. e.g. BaseTestCase.assertExecJavaCmdAsExpected where we execcute a java process and just call java. In windows at least the new shell created for the execed process does not share the parent process path but rather picks up the path from the Windows System variables. This can cause the wrong java to be picked up. Also the method does not work for j because it calls java instead of the actual executable name. Perhaps we should have a method public static final String getJavaExecutableName  String vmname  getSystemPropertycom.ibm.oti.vm.exe  if vmname  null vmname  getSystemPropertyjava.home  File.pathSeparator  java  return vmname  }There are also issues with this in NetworkServerControlApiTest. NetworkServerTestSetup and the replication tests and maybe others as well.   
0;Behaviour of setTypeMap) differs between embedded and client   ;On the embedded driver  Connection.setTypeMap) behaves like this when the connection is not closed) if the map argument is null  throw an SQLException with SQLState XJ if the map is not null and not empty  throw an SQLException with SQLState A if the map is not null and empty  do nothingThe behaviour on the client driver is this always throw an SQLException with SQLState AWe should try to make the two drivers behave the same way when setTypeMap) is called. This would also allow us to simplify some of the tests in JEEDataSourceTest).   
0;difference between Embedded vs DerbyNetClient in format of return from timestampcast? as varchar)))   ;There is a slight difference in how Embedded vs. DerbyNetClient return a specific cast.This showed up during conversion of the test langdatetime.sql which before was only run with Embedded...The following sql prepare dateTimePS as values datecast? as integer)) timestampcast? as varchar)))) execute dateTimePS using valuescast as integer)  ...) gives  |  Embedded |...DerbyNetClient | .in Embedded theres a  between date and time part  with DerbyNetClient a space  with Embedded the separator between time elements is .  with DerbyNetClient . Embedded reflects the data as passed in  with DerbyNetClient it seems to be the default timestamp format).I am not sure which is correct at this point  but I confirmed the behavior is like this in latest builds of trunk and . and . branches.   
0;toolside is not included in the source tarball   ;The toolside directory is not part of the source tarball checked the ... release and the ... release candidate). It should be included to make it easier for people to open the source code in an IDE.   
0;NPE in testSemantics.....lang.RolesTest) on JavaME  CVM   ;See httpdbtg.thresher.comderbytestDailyjavaMEtestingtestlogubuntusuitesAll_diff.txt) testSemanticsorg.apache.derbyTesting.functionTests.tests.lang.RolesTest)junit.framework.AssertionFailedError java.lang.NullPointerException  at org.apache.derbyTesting.junit.JDBCDataSource.getDataSourceObjectLjavalangString LjavautilHashMap )LjavalangObject JDBCDataSource.java) at org.apache.derbyTesting.junit.JEEDataSource.getConnectionPoolDataSourceLorgapachederbyTestingjunitTestConfiguration LjavautilHashMap )LjavaxsqlConnectionPoolDataSource JEEDataSource.java) at org.apache.derbyTesting.junit.JEEDataSource.getConnectionPoolDataSource)LjavaxsqlConnectionPoolDataSource JEEDataSource.java) at org.apache.derbyTesting.functionTests.tests.lang.RolesTest.testCurrentRoleIsReset)VRolesTest.java) at org.apache.derbyTesting.functionTests.tests.lang.RolesTest.testSemantics)VRolesTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBare)VBaseTestCase.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runLjunitframeworkTestResult )VBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runLjunitframeworkTestResult )VBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runLjunitframeworkTestResult )VBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at sun.misc.CVM.runMain)VCVM.java)   
0;intermittent hang pinging  server on Linux   ;am looking at a intermittent hang with IBM . on Linux with the ping command. I am not entirely sure it is a jvm issue  but I have not been able to reproduce the hang with other jvms. The trace isXMTHREADINFO main TIDx  jthread_txAF  stateR  prioXMTHREADINFO native thread IDxE  native priorityx  native policyUNKNOWN)XESTACKTRACE at javanetSocketInputStream.socketReadNative Method)XESTACKTRACE at javanetSocketInputStream.readSocketInputStream.java)XESTACKTRACE at javanetSocketInputStream.readSocketInputStream.java)XESTACKTRACE at orgapachederbyimpldrdaNetworkServerControlImpl.fillReplyBufferNetworkServerControlImpl.java)XESTACKTRACE at orgapachederbyimpldrdaNetworkServerControlImpl.readResultNetworkServerControlImpl.java)XESTACKTRACE at orgapachederbyimpldrdaNetworkServerControlImpl.pingWithNoOpenNetworkServerControlImpl.java)XESTACKTRACE at orgapachederbyimpldrdaNetworkServerControlImpl.pingNetworkServerControlImpl.javaCompiled Code))XESTACKTRACE at orgapachederbydrdaNetworkServerControl.pingNetworkServerControl.javaCompiled Code))XESTACKTRACE at Repro.pingForServerUpRepro.javaCompiled Code))XESTACKTRACE at Repro.startAndShutdownRepro.java)The client has sent the ping  but there is no corresponding session on the server side to process thecommand. The full thread dump is in.javacore.....txtThe program Repro.java shows the problem. It repeatedly starts the server  pings until it comes up  and then shuts down.In the derby.log I see a startup error  that the address is already in use  so presumably the shutdown is not complete before we start the server and then perhaps it shuts down mid ping causing the hang? . GMT  Could not listen on port  on host ... java.net.BindException Address already in useAn exception was thrown during network server startup. DRDA_ListenPort.SCould not listen on port  on host ... java.net.BindException Address already in usejava.lang.reflect.InvocationTargetException at sun.reflect.GeneratedMethodAccessor.invokeUnknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at org.apache.derby.iapi.jdbc.DRDAServerStarter.runDRDAServerStarter.java) at java.lang.Thread.runThread.java)Caused by java.lang.Exception DRDA_ListenPort.SCould not listen on port  on host ... java.net.BindException Address already in use at java.lang.Throwable.lt initgt Throwable.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageWorkNetworkServerControlImpl.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageNetworkServerControlImpl.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.blockingStartNetworkServerControlImpl.java) ...  moreFull log is attached as derby.log   
0;Concurrent Inserts of rows with XML data results in an exception   ;We insert rows into a table using the following prepared statement through JDBC)INSERT INTO USER.PSTORE values? ?  XMLPARSEdocument CAST ? AS CLOB) preserve whitespace))where each of the ?s are replaced with a string.One thread runs fine. Two or more result in the following exception org.apache.derby.client.am.SqlException Java exception FWK parse may not be called while parsing. org.xml.sax.SAXException. at org.apache.derby.client.am.SqlException.lt initgt Unknown Source) at org.apache.derby.client.am.SqlException.lt initgt Unknown Source)We believe that this comes from the dBuilder.parseInputSource) method.   
0;Replication stopSlave does not close serversocket when master has crashed.   ;The stopSlave command connection URL attribute) fails to close the ServerSocket when called after master database has crashed. Because of this  the same Derby instance cannot later start a slave on the same port. The problem is in ReplicationMessageReceivetearDown and SocketConnectiontearDownSCtearDownWhen objOutputStream is closed  the streams flush method is called. Flush throws an exception  and socket.close is not called.RMRtearDownWhen socketCon.teardown throws an exception  serverSocket.close is not called.Suggested fix add trycatchfinally blocks so that vital code socket.close and serverSocket.close) is always called.Note that the stop slave command can also come from the master if stopMaster connection URL is called)  in which case this bug will not materialize.   
0;LOBStreamControl.replaceBytes) leaves temporary files open   ;I havent seen any problems as a result of this  but the code that closes and deletes the old temporary file in LOBStreamControl.replaceBytes) looks wrong to me.When replaceBytes) is called on a lob that has been materialized into a temporary file  it will create a new file and copy the relevant parts from the old file. But the old file is only closed and deleted if the block that is replaced ends before the last byte of the lob. I believe that the old file should be closed and deleted also when we replace a block that ends at or after the last byte of the original lob.   
0;Embedded Derby fails under JBoss because of JMXrelated conflicts   ;Im trying to use embedded Derby as datasource for JBoss and found that it fails with error.See stacktrace below.It looks like JMX module in Derby conflicts with JBoss JMX.After I have disabled Derby JMX removing derby.module.mgmt.jmxorg.apache.derby.impl.services.jmx.JMXManagementService line from orgapachederbymodules.properties file in derby.jar JAR  the bug disappears.How to reproduce the issue. Install JBoss. Copy jbossdocsexamplesvariaderbyplugin.jar into jbossserverdefaultlib. Copy Derby JAR derby.jar into jbossserverdefaultlib. Copy datasource file into jbossserverdefaultlib. Start JBoss using binrun.batDatasource file zzzzzds.xmllt ?xml version. encodingUTF?gt lt DOCTYPE datasources PUBLIC JBossDTD JBOSS JCA Config .EN httpwww.jboss.orgjeedtdjbossds__.dtdgt lt datasourcesgt  lt localtxdatasourcegt  lt jndinamegt zzzzzDatasourcelt jndinamegt  lt driverclassgt org.apache.derby.jdbc.EmbeddedDriverlt driverclassgt  lt connectionurlgt jdbcderbyjboss.server.data.dir}}derby}zzzzz createtruelt connectionurlgt  lt connectionurlgt jdbcderbyIGNOREDlt connectionurlgt  lt usernamegt IGNOREDlt usernamegt  lt passwordgt IGNOREDlt passwordgt  lt minpoolsizegt lt minpoolsizegt  lt maxpoolsizegt lt maxpoolsizegt  lt idletimeoutminutesgt lt idletimeoutminutesgt  lt trackstatementsgt  lt dependsgt jbossservicezzzzzDerbyDBlt dependsgt  lt localtxdatasourcegt  lt  Dont forget to install derbyplugin.jar and derby*.jar into jbossserverdefaultlib gt  lt mbean codeorg.jboss.jdbc.DerbyDatabase namejbossservicezzzzzDerbyDBgt  lt attribute nameDatabasegt zzzzzlt attributegt  lt attribute nameUsergt salt attributegt  lt attribute namePasswordgt lt attributegt  lt mbeangt lt datasourcesgt }}}Part of JBoss log with error and stacktrace  INFO  DerbyDatabase  starting derby jdbcderbyCoptjboss...GAserverdefaultdataderbyzzzzz createtrue  WARN  ServiceController  Problem starting service jbossservicezzzzzDerbyDBjava.lang.ExceptionInInitializerError at java.lang.Class.forNameNative Method at java.lang.Class.forNameClass.java at org.jboss.jdbc.DerbyDatabase.getConnectionDerbyDatabase.java at org.jboss.jdbc.DerbyDatabase.startServiceDerbyDatabase.java at org.jboss.system.ServiceMBeanSupport.jbossInternalStartServiceMBeanSupport.java at org.jboss.system.ServiceMBeanSupport.jbossInternalLifecycleServiceMBeanSupport.java at sun.reflect.GeneratedMethodAccessor.invokeUnknown Source at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at java.lang.reflect.Method.invokeMethod.java at org.jboss.mx.interceptor.ReflectedDispatcher.invokeReflectedDispatcher.java at org.jboss.mx.server.Invocation.dispatchInvocation.java at org.jboss.mx.server.Invocation.invokeInvocation.java at org.jboss.mx.server.AbstractMBeanInvoker.invokeAbstractMBeanInvoker.java at org.jboss.mx.server.MBeanServerImpl.invokeMBeanServerImpl.java at org.jboss.system.ServiceControllerServiceProxy.invokeServiceController.java at Proxy.startUnknown Source at org.jboss.system.ServiceController.startServiceController.java at sun.reflect.GeneratedMethodAccessor.invokeUnknown Source at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at java.lang.reflect.Method.invokeMethod.java at org.jboss.mx.interceptor.ReflectedDispatcher.invokeReflectedDispatcher.java at org.jboss.mx.server.Invocation.dispatchInvocation.java at org.jboss.mx.server.Invocation.invokeInvocation.java at org.jboss.mx.server.AbstractMBeanInvoker.invokeAbstractMBeanInvoker.java at org.jboss.mx.server.MBeanServerImpl.invokeMBeanServerImpl.java at org.jboss.mx.util.MBeanProxyExt.invokeMBeanProxyExt.java at Proxy.startUnknown Source at org.jboss.deployment.SARDeployer.startSARDeployer.java at sun.reflect.NativeMethodAccessorImpl.invokeNative Method at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at java.lang.reflect.Method.invokeMethod.java at org.jboss.mx.interceptor.ReflectedDispatcher.invokeReflectedDispatcher.java at org.jboss.mx.server.Invocation.dispatchInvocation.java at org.jboss.mx.interceptor.AbstractInterceptor.invokeAbstractInterceptor.java at org.jboss.mx.server.Invocation.invokeInvocation.java at org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invokeModelMBeanOperationInterceptor.java at org.jboss.mx.server.Invocation.invokeInvocation.java at org.jboss.mx.server.AbstractMBeanInvoker.invokeAbstractMBeanInvoker.java at org.jboss.mx.server.MBeanServerImpl.invokeMBeanServerImpl.java at org.jboss.mx.util.MBeanProxyExt.invokeMBeanProxyExt.java at Proxy.startUnknown Source at org.jboss.deployment.XSLSubDeployer.startXSLSubDeployer.java at org.jboss.deployment.MainDeployer.startMainDeployer.java at org.jboss.deployment.MainDeployer.deployMainDeployer.java at org.jboss.deployment.MainDeployer.deployMainDeployer.java at sun.reflect.GeneratedMethodAccessor.invokeUnknown Source at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at java.lang.reflect.Method.invokeMethod.java at org.jboss.mx.interceptor.ReflectedDispatcher.invokeReflectedDispatcher.java at org.jboss.mx.server.Invocation.dispatchInvocation.java at org.jboss.mx.interceptor.AbstractInterceptor.invokeAbstractInterceptor.java at org.jboss.mx.server.Invocation.invokeInvocation.java at org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invokeModelMBeanOperationInterceptor.java at org.jboss.mx.server.Invocation.invokeInvocation.java at org.jboss.mx.server.AbstractMBeanInvoker.invokeAbstractMBeanInvoker.java at org.jboss.mx.server.MBeanServerImpl.invokeMBeanServerImpl.java at org.jboss.mx.util.MBeanProxyExt.invokeMBeanProxyExt.java at Proxy.deployUnknown Source at org.jboss.deployment.scanner.URLDeploymentScanner.deployURLDeploymentScanner.java at org.jboss.deployment.scanner.URLDeploymentScanner.scanURLDeploymentScanner.java at org.jboss.deployment.scanner.AbstractDeploymentScannerScannerThread.doScanAbstractDeploymentScanner.java at org.jboss.deployment.scanner.AbstractDeploymentScanner.startServiceAbstractDeploymentScanner.java at org.jboss.system.ServiceMBeanSupport.jbossInternalStartServiceMBeanSupport.java at org.jboss.system.ServiceMBeanSupport.jbossInternalLifecycleServiceMBeanSupport.java at sun.reflect.GeneratedMethodAccessor.invokeUnknown Source at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at java.lang.reflect.Method.invokeMethod.java at org.jboss.mx.interceptor.ReflectedDispatcher.invokeReflectedDispatcher.java at org.jboss.mx.server.Invocation.dispatchInvocation.java at org.jboss.mx.server.Invocation.invokeInvocation.java at org.jboss.mx.server.AbstractMBeanInvoker.invokeAbstractMBeanInvoker.java at org.jboss.mx.server.MBeanServerImpl.invokeMBeanServerImpl.java at org.jboss.system.ServiceControllerServiceProxy.invokeServiceController.java at Proxy.startUnknown Source at org.jboss.system.ServiceController.startServiceController.java at sun.reflect.GeneratedMethodAccessor.invokeUnknown Source at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at java.lang.reflect.Method.invokeMethod.java at org.jboss.mx.interceptor.ReflectedDispatcher.invokeReflectedDispatcher.java at org.jboss.mx.server.Invocation.dispatchInvocation.java at org.jboss.mx.server.Invocation.invokeInvocation.java at org.jboss.mx.server.AbstractMBeanInvoker.invokeAbstractMBeanInvoker.java at org.jboss.mx.server.MBeanServerImpl.invokeMBeanServerImpl.java at org.jboss.mx.util.MBeanProxyExt.invokeMBeanProxyExt.java at Proxy.startUnknown Source at org.jboss.deployment.SARDeployer.startSARDeployer.java at org.jboss.deployment.MainDeployer.startMainDeployer.java at org.jboss.deployment.MainDeployer.deployMainDeployer.java at org.jboss.deployment.MainDeployer.deployMainDeployer.java at org.jboss.deployment.MainDeployer.deployMainDeployer.java at sun.reflect.NativeMethodAccessorImpl.invokeNative Method at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at java.lang.reflect.Method.invokeMethod.java at org.jboss.mx.interceptor.ReflectedDispatcher.invokeReflectedDispatcher.java at org.jboss.mx.server.Invocation.dispatchInvocation.java at org.jboss.mx.interceptor.AbstractInterceptor.invokeAbstractInterceptor.java at org.jboss.mx.server.Invocation.invokeInvocation.java at org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invokeModelMBeanOperationInterceptor.java at org.jboss.mx.server.Invocation.invokeInvocation.java at org.jboss.mx.server.AbstractMBeanInvoker.invokeAbstractMBeanInvoker.java at org.jboss.mx.server.MBeanServerImpl.invokeMBeanServerImpl.java at org.jboss.mx.util.MBeanProxyExt.invokeMBeanProxyExt.java at Proxy.deployUnknown Source at org.jboss.system.server.ServerImpl.doStartServerImpl.java at org.jboss.system.server.ServerImpl.startServerImpl.java at org.jboss.Main.bootMain.java at org.jboss.Main.runMain.java at java.lang.Thread.runThread.javaCaused by javax.management.JMRuntimeException Failed to load MBeanServerBuilder class org.jboss.mx.server.MBeanServerBuilderImpl java.lang.ClassNotFoundException orgjbossmxserverMBeanServerBuilderImpl at javax.management.MBeanServerFactory.checkMBeanServerBuilderMBeanServerFactory.java at javax.management.MBeanServerFactory.getNewMBeanServerBuilderMBeanServerFactory.java at javax.management.MBeanServerFactory.newMBeanServerMBeanServerFactory.java at javax.management.MBeanServerFactory.createMBeanServerMBeanServerFactory.java at javax.management.MBeanServerFactory.createMBeanServerMBeanServerFactory.java at sun.management.ManagementFactory.createPlatformMBeanServerManagementFactory.java at java.lang.management.ManagementFactory.getPlatformMBeanServerManagementFactory.java at org.apache.derby.impl.services.jmx.JMXManagementService.runUnknown Source at org.apache.derby.impl.services.jmx.JMXManagementService.runUnknown Source at java.security.AccessController.doPrivilegedNative Method at org.apache.derby.impl.services.jmx.JMXManagementService.findServerUnknown Source at org.apache.derby.impl.services.jmx.JMXManagementService.bootUnknown Source at org.apache.derby.impl.services.monitor.BaseMonitor.bootUnknown Source at org.apache.derby.impl.services.monitor.TopService.bootModuleUnknown Source at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleUnknown Source at org.apache.derby.iapi.services.monitor.Monitor.startSystemModuleUnknown Source at org.apache.derby.impl.services.monitor.BaseMonitor.runWithStateUnknown Source at org.apache.derby.impl.services.monitor.FileMonitor.lt initgt Unknown Source at org.apache.derby.iapi.services.monitor.Monitor.startMonitorUnknown Source at org.apache.derby.iapi.jdbc.JDBCBoot.bootUnknown Source at org.apache.derby.jdbc.EmbeddedDriver.bootUnknown Source at org.apache.derby.jdbc.EmbeddedDriver.lt clinitgt Unknown Source ...  moreCaused by java.lang.ClassNotFoundException orgjbossmxserverMBeanServerBuilderImpl at java.lang.Class.forNameNative Method at java.lang.Class.forNameClass.java at javax.management.MBeanServerFactory.loadBuilderClassMBeanServerFactory.java at javax.management.MBeanServerFactory.checkMBeanServerBuilderMBeanServerFactory.java ...  more  INFO  ConnectionFactoryBindingService  Bound ConnectionManager jboss.jcaserviceDataSourceBinding nameDefaultDS to JNDI name javaDefaultDS  INFO  A  Bound to JNDI name queueA  INFO  B  Bound to JNDI name queueB  INFO  C  Bound to JNDI name queueC  INFO  D  Bound to JNDI name queueD  INFO  ex  Bound to JNDI name queueex  INFO  testTopic  Bound to JNDI name topictestTopic  INFO  securedTopic  Bound to JNDI name topicsecuredTopic  INFO  testDurableTopic  Bound to JNDI name topictestDurableTopic  INFO  testQueue  Bound to JNDI name queuetestQueue  INFO  UILServerILService  JBossMQ UIL service available at  ...  INFO  DLQ  Bound to JNDI name queueDLQ  INFO  ConnectionFactoryBindingService  Bound ConnectionManager jboss.jcaserviceConnectionFactoryBinding nameJmsXA to JNDI name javaJmsXA  INFO  TomcatDeployer  deploy  ctxPathjmxconsole  warUrl...deployjmxconsole.war  ERROR  URLDeploymentScanner  Incomplete Deployment listing  MBeans waiting for other MBeans  ObjectName jbossservicezzzzzDerbyDB State FAILED Reason java.lang.ExceptionInInitializerError Depends On Me jboss.jcaserviceManagedConnectionFactory namezzzzzDatasource  MBEANS THAT ARE THE ROOT CAUSE OF THE PROBLEM  ObjectName jbossservicezzzzzDerbyDB State FAILED Reason java.lang.ExceptionInInitializerError Depends On Me jboss.jcaserviceManagedConnectionFactory namezzzzzDatasource  INFO  HttpAprProtocol  Starting Coyote HTTP. on http...  INFO  AjpAprProtocol  Starting Coyote AJP. on ajp...  INFO  Server  JBoss MX MicroKernel  ...GA build SVNTagJBoss____GA date  Started in sms   
0;LOBStreamControl.truncate) doesnt delete temporary files   ;If LOBStreamControl.truncate) reduces the size of the lob so that it fits in the internal buffer  it closes the temporary file  but it doesnt remove it. See the attached Java class TruncateClob.java) which fills the tmp directory with temporary lob files  even if each lob is explicitly freed.   
0;SQLSessionContext not correctly initialized in some nonmethod call nested contexts   ;In some contexts  beside calling stored routines containing SQL  Derbyuses nested execution contexts  wehere we have two nested activations but no nested connections.In such cases  currently a new SQLSessionContext is constructed  butnot initialized correctly. This leads to the session variablesCURRENT_ROLECURRENT_SCHEMA not being set correctly in these contextsthey should inherited from the parent context  cf DERBY).For method calls  this is being handled by generating a call tolcc.setupNestedSessionContext seeStaticMethodCallNodegenerateSetupNestedSessionContext)In some of these nested contexts  one or both of the session variablesCURRENT_ROLECURRENT_SCHEMA can be referenced  in othersnot. Obviously  if they can  this will lead to errors. The followingcontexts will have this problem ALTER TABLE ADD COLUMN lt colnamegt  lt coltypegt  DEFAULT CURRENT_ROLE In the AlterTableConstantAction  a nested UPDATE statement is used to give existing rows the new column its default value. This execution context is nested  cf. AlterTableConstantActionexecuteUpdate TRIGGER body execution may reference CURRENT_ROLECURRENT_SCHEMA. The body executes in a nested context  cf. GenericTriggerExecutorexecuteSPS.In other cases  the session variables can not be referenced  so thisnot a problem  CHECK constraint execution when executed as part of an ALTER TABLE EmbedResultSet.insertRow  .deleteRow  .updateRowThe session context should not be changed pushed) for these nestedexecutions  since there is no nested connection SQL   .. AnSQLsession is associated with an SQLconnection.)   
0;Blob.setBytes differs between embedded and client driver when the specified length is invalid   ;Blob.setBytes behaves differently with the embedded driver and the client driver.Assume a  byte array and a specified length of  Blob.setBytes  new byte[] x}    Embedded IndexOutOfBoundsException from java.io.RandomAccessFile.writeBytes or System.arraycopyClient succeeds  returns insertion count The behavior should be made consistent  but what is the correct behavior?From the Blob.setBytes JavaDocWrites all or part of the given byte array to the BLOB value that this Blob object represents and returns the number of bytes written. Writing starts at position pos in the BLOB value  len bytes from the given byte array are written. The array of bytes will overwrite the existing bytes in the Blob object starting at the position pos. If the end of the Blob value is reached while writing the array of bytes  then the length of the Blob value will be increased to accomodate the extra bytes.   
0;some messages are referenced but never used  MessageBundleTest output   ;MessageBundleTest was taken out of derbyall because it only ran with classes  not with jars  and it was decided that it would be better to make this into a build check rather than a test...However  the build check  DERBY  was never implemented  and so  the test has not been run.When I ran  I got the following outputtestSQLStateOrphanedIds ERROR Message id .S. in SQLState.java was not found in messages_en.propertiesERROR Message id XCL.S in SQLState.java was not found in messages_en.propertiesERROR Message id XRQ.C in SQLState.java was not found in messages_en.propertiesERROR Message id XSAX in SQLState.java was not found in messages_en.propertiesused  ms .testMessageIdOrphanedIds used  ms .testMessageBundleOrphanedMessages WARNING Message id .S. in messages_en.properties is not referenced in either SQLState.java or MessageId.javaWARNING Message id J in messages_en.properties is not referenced in either SQLState.java or MessageId.javaWARNING Message id J in messages_en.properties is not referenced in either SQLState.java or MessageId.javaWARNING Message id J in messages_en.properties is not referenced in either SQLState.java or MessageId.javaWARNING Message id J in messages_en.properties is not referenced in either SQLState.java or MessageId.javaWARNING Message id .S. in messages_en.properties is not referenced in either SQLState.java or MessageId.javaWARNING Message id XCL.S in messages_en.properties is not referenced in either SQLState.java or MessageId.javaWARNING Message id XJ.S in messages_en.properties is not referenced in either SQLState.java or MessageId.javaused  ms Some of these are known issues  e.g. XCL  its been in MessageBundleTest.out for a long time...XSAX looks like a assumption mismatch in MessageBundleTest  see DERBY....But others need some minor code changescleanup  for instance  looks like the need for J was removed during DERBY  see httpsvn.apache.orgviewvc?viewrevamp revision  and should probably get removed from messages_en.propertiesmessages.xml.Needs further checking.   
0;Failed tests should save the database off to the fail directory   ;Currently failed tests save the derby.log to the fail directory for that test. It would be useful to save the database as well.   
0;mismatch between error XCL and .S. and parameters in usage   ;I found a script  trunktoolstestinginTestGeneratorgenerateClientMessageTest.sh  intended to create a test to verify correctness of client error messagestrunkjavatestingorgapachederbyTestingfunctionTeststestsinTestClientMessages.java . The script is broken see DERBY but after fixing up the resulting test and running it  it did show two messages which look a little odd in their usage plus some messages for which the usage looked fineXCL  LANG_STREAMING_COLUMN_I_O_EXCEPTION messages.xml  lt msggt  lt namegt XCL.Slt namegt  lt textgt An IOException was thrown when reading a } from an InputStream.lt textgt  lt arggt valuelt arggt  lt msggt apparently correct number of parameters  but odd...doesnt look like ioe fits the usage in the message text.EmbedBlob } catch IOException ioe  throw StandardException.newException SQLState.LANG_STREAMING_COLUMN_I_O_EXCEPTION  ioe  }has a second parameterclient.am.Lob throw new SqlExceptionnull  new ClientMessageId SQLState.LANG_STREAMING_COLUMN_I_O_EXCEPTION  typeDesc  ioe  looks like second parameter fits the }SQLBinary  throw StandardException. newExceptionSQLState.LANG_STREAMING_COLUMN_I_O_EXCEPTION  ioe  getTypeName SQLChar throw StandardException. newExceptionSQLState.LANG_STREAMING_COLUMN_I_O_EXCEPTION  ioe  getTypeName  throw StandardException.newException SQLState.LANG_STREAMING_COLUMN_I_O_EXCEPTION   ioe   java.sql.String .S.  CLIENT_LENGTH_OUTSIDE_RANGE_FOR_DATATYPE lt msggt  lt namegt .S.lt namegt  lt textgt The length } exceeds the maximum length for the data type }.lt textgt  lt arggt numberlt arggt  lt arggt datatypeNamelt arggt  lt msggt correct number of parameters  but new IntegerInteger.MAX_VALUE returns a number  not a datatype name client.am.PreparedStatement throw new SqlException agent_.logWriter_  new ClientMessageId SQLState.CLIENT_LENGTH_OUTSIDE_RANGE_FOR_DATATYPE  new Longlength  new IntegerInteger.MAX_VALUE .getSQLException client.am.ResultSet throw new SqlExceptionagent_.logWriter_  new ClientMessageIdSQLState.CLIENT_LENGTH_OUTSIDE_RANGE_FOR_DATATYPE  new Longlength  new IntegerInteger.MAX_VALUE.getSQLException  throw new SqlExceptionagent_.logWriter_  new ClientMessageIdSQLState.CLIENT_LENGTH_OUTSIDE_RANGE_FOR_DATATYPE  new Longlength  new IntegerInteger.MAX_VALUE.getSQLException   throw new SqlExceptionagent_.logWriter_  new ClientMessageIdSQLState.CLIENT_LENGTH_OUTSIDE_RANGE_FOR_DATATYPE  new Longlength  new IntegerInteger.MAX_VALUE.getSQLException    
0;testMetaDataQueryRunInSYScompilationSchema.....upgradeTests.Changes_) fails on CVMphoneME   ;Seen since ~svn r. See e.g. httpdbtg.thresher.comderbytestDailyjavaMEtestingLimitedtestSummary.htmlhttpdbtg.thresher.comderbytestDailyjavaMEtestingtestlogubuntusuitesAll_diff.txt) testMetaDataQueryRunInSYScompilationSchemaorg.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_)java.sql.SQLException Failed to create database singleUseoneused  see the next exception for details. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionLjavalangString LjavalangString LjavasqlSQLException ILjavalangThrowable [LjavalangObject )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionLjavalangString [LjavalangObject LjavasqlSQLException ILjavalangThrowable )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionLjavalangString [LjavalangObject LjavasqlSQLException )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.createDatabaseLjavalangString LjavautilProperties )LorgapachederbyiapidbDatabase Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt LorgapachederbyjdbcInternalDriver LjavalangString LjavautilProperties )VUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt LorgapachederbyjdbcInternalDriver LjavalangString LjavautilProperties )VUnknown Source) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionLjavalangString LjavautilProperties )LorgapachederbyimpljdbcEmbedConnection Unknown Source) at org.apache.derby.jdbc.InternalDriver.connectLjavalangString LjavautilProperties )LjavasqlConnection Unknown Source) at org.apache.derby.jdbc.EmbeddedSimpleDataSource.getConnectionLjavalangString LjavalangString )LjavasqlConnection Unknown Source) at org.apache.derby.jdbc.EmbeddedSimpleDataSource.getConnection)LjavasqlConnection Unknown Source) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testMetaDataQueryRunInSYScompilationSchema)VChanges_.java) at org.apache.derbyTesting.junit.BaseTestCase.runBare)VBaseTestCase.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runLjunitframeworkTestResult )VBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runLjunitframeworkTestResult )VBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runLjunitframeworkTestResult )VBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runLjunitframeworkTestResult )VBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runLjunitframeworkTestResult )VBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runLjunitframeworkTestResult )VBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at sun.misc.CVM.runMain)VCVM.java)Caused by java.sql.SQLException Collator support not available from the JVM for the databases locale no. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionLjavalangString LjavalangString LjavasqlSQLException ILjavalangThrowable [LjavalangObject )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionLorgapachederbyiapierrorStandardException )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionLjavalangThrowable )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionLjavalangThrowable ZZ)LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionLjavalangThrowable )LjavasqlSQLException Unknown Source) ...  moreCaused by ERROR XBM Collator support not available from the JVM for the databases locale no. at org.apache.derby.iapi.error.StandardException.newExceptionLjavalangString LjavalangObject )LorgapachederbyiapierrorStandardException Unknown Source) at org.apache.derby.iapi.types.DataValueFactoryImpl.verifyCollatorSupport)LjavatextRuleBasedCollator Unknown Source) at org.apache.derby.iapi.types.DataValueFactoryImpl.bootZLjavautilProperties )VUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.bootLjavalangObject ZLjavautilProperties )VUnknown Source) at org.apache.derby.impl.services.monitor.TopService.bootModuleZLjavalangObject LorgapachederbyimplservicesmonitorProtocolKey LjavautilProperties )LjavalangObject Unknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleZLjavalangObject LjavalangString LjavalangString LjavautilProperties )LjavalangObject Unknown Source) at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleZLjavalangObject LjavalangString LjavautilProperties )LjavalangObject Unknown Source) at org.apache.derby.impl.db.BasicDatabase.bootZLjavautilProperties )VUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.bootLjavalangObject ZLjavautilProperties )VUnknown Source) at org.apache.derby.impl.services.monitor.TopService.bootModuleZLjavalangObject LorgapachederbyimplservicesmonitorProtocolKey LjavautilProperties )LjavalangObject Unknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.bootServiceLorgapachederbyiapiservicesmonitorPersistentService LjavalangString LjavalangString LjavautilProperties Z)LjavalangObject Unknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.createPersistentServiceLjavalangString LjavalangString LjavautilProperties )LjavalangObject Unknown Source) at org.apache.derby.iapi.services.monitor.Monitor.createPersistentServiceLjavalangString LjavalangString LjavautilProperties )LjavalangObject Unknown Source) ...  more   
0;Incorrect ORDER BY caused by index   ;I think I found a bug in Derby that is triggered by an index on a large column VARCHAR). I know it is generally not a good idea to have an index on such a large column.I have a table table) with a column value  my query orders on this column but the result is not sorted. It is sorted if I remove the index on that column.The output of the attached script is as follows results should be ordered on the middle column)ID |VALUE |VALUE | | | | | |While I would expectID |VALUE |VALUE | | | | | |This is the definitionCREATE TABLE table id BIGINT NOT NULL  PRIMARY KEYid)) CREATE INDEX key ON tableid) CREATE TABLE table id BIGINT NOT NULL  name VARCHAR) NOT NULL  value VARCHAR)  PRIMARY KEYid  name)) CREATE UNIQUE INDEX key ON tableid  name) CREATE INDEX key ON tablevalue) This is the querySELECT table.id  m.value  m.valueFROM table  table m  table mWHERE table.idm.idAND m.namePageSequenceIdAND table.idm.idAND m.namePostComponentIdAND m.valueORDER BY m.value The bug can be reproduced by just executing the attached script with the ijtool.Note that the result of the query becomes correct when enough data is changed. This prevented me from creating a smaller example.See the attached file derbyreproduce.zip for sysinfo  derby.log and script.sql.Michael Segel pointed outIt looks like its hitting the index ordering on id name from table  and is ignoring the order by clause.   
0;GeneratedColumnsTest fails with F_MINUS is not recognized as a function or procedure. on cvmphoneME   ;See httpdbtg.thresher.comderbytestDailyjavaMEtestingLimitedtestSummary.html  httpdbtg.thresher.comderbytestDailyjavaMEtestingtestlogubuntusuitesAll_diff.txt) test__basicForeignKeysorg.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest)java.sql.SQLException F_MINUS is not recognized as a function or procedure. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionLjavalangString LjavalangString LjavasqlSQLException ILjavalangThrowable [LjavalangObject )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionLorgapachederbyiapierrorStandardException )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionLjavalangThrowable )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionLjavalangThrowable ZZ)LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionLjavalangThrowable )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionLjavalangThrowable )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt LorgapachederbyimpljdbcEmbedConnection LjavalangString ZIIII[I[LjavalangString )VUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt LorgapachederbyimpljdbcEmbedConnection LjavalangString ZIIII[I[LjavalangString )VUnknown Source) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementLorgapachederbyimpljdbcEmbedConnection LjavalangString ZIIII[I[LjavalangString )LjavasqlPreparedStatement Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementLjavalangString IIII[I[LjavalangString )LjavasqlPreparedStatement Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementLjavalangString )LjavasqlPreparedStatement Unknown Source) at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.chattyPrepareLjavasqlConnection LjavalangString )LjavasqlPreparedStatement GeneratedColumnsTest.java) at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.goodStatementLjavasqlConnection LjavalangString )VGeneratedColumnsTest.java) at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.test__basicForeignKeys)VGeneratedColumnsTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBare)VBaseTestCase.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runLjunitframeworkTestResult )VBaseTestSetup.java) at sun.misc.CVM.runMain)VCVM.java)Caused by ERROR Y F_MINUS is not recognized as a function or procedure. at org.apache.derby.iapi.error.StandardException.newExceptionLjavalangString LjavalangObject )LorgapachederbyiapierrorStandardException Unknown Source) at org.apache.derby.impl.sql.compile.StaticMethodCallNode.bindExpressionLorgapachederbyimplsqlcompileFromList LorgapachederbyimplsqlcompileSubqueryList LjavautilVector )LorgapachederbyimplsqlcompileJavaValueNode Unknown Source) at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.bindExpressionLorgapachederbyimplsqlcompileFromList LorgapachederbyimplsqlcompileSubqueryList LjavautilVector )LorgapachederbyimplsqlcompileValueNode Unknown Source) at org.apache.derby.impl.sql.compile.GenerationClauseNode.bindExpressionLorgapachederbyimplsqlcompileFromList LorgapachederbyimplsqlcompileSubqueryList LjavautilVector )LorgapachederbyimplsqlcompileValueNode Unknown Source) at org.apache.derby.impl.sql.compile.TableElementList.bindAndValidateGenerationClausesLorgapachederbyimplsqlcompileFromList )VUnknown Source) at org.apache.derby.impl.sql.compile.CreateTableNode.bindStatement)VUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionLorgapachederbyiapisqlconnLanguageConnectionContext Z[LjavalangObject LorgapachederbyiapisqldictionarySchemaDescriptor Z)LorgapachederbyiapisqlPreparedStatement Unknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareLorgapachederbyiapisqlconnLanguageConnectionContext Z)LorgapachederbyiapisqlPreparedStatement Unknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementLorgapachederbyiapisqldictionarySchemaDescriptor LjavalangString ZZ)LorgapachederbyiapisqlPreparedStatement Unknown Source) ...  more) test__basicTriggersorg.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest)java.sql.SQLException F_MINUS is not recognized as a function or procedure. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionLjavalangString LjavalangString LjavasqlSQLException ILjavalangThrowable [LjavalangObject )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionLorgapachederbyiapierrorStandardException )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionLjavalangThrowable )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionLjavalangThrowable ZZ)LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionLjavalangThrowable )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionLjavalangThrowable )LjavasqlSQLException Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt LorgapachederbyimpljdbcEmbedConnection LjavalangString ZIIII[I[LjavalangString )VUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt LorgapachederbyimpljdbcEmbedConnection LjavalangString ZIIII[I[LjavalangString )VUnknown Source) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementLorgapachederbyimpljdbcEmbedConnection LjavalangString ZIIII[I[LjavalangString )LjavasqlPreparedStatement Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementLjavalangString IIII[I[LjavalangString )LjavasqlPreparedStatement Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementLjavalangString )LjavasqlPreparedStatement Unknown Source) at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.chattyPrepareLjavasqlConnection LjavalangString )LjavasqlPreparedStatement GeneratedColumnsTest.java) at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.goodStatementLjavasqlConnection LjavalangString )VGeneratedColumnsTest.java) at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.test__basicTriggers)VGeneratedColumnsTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBare)VBaseTestCase.java) at junit.extensions.TestDecorator.basicRunLjunitframeworkTestResult )VTestDecorator.java) at junit.extensions.TestSetup.protect)VTestSetup.java) at junit.extensions.TestSetup.runLjunitframeworkTestResult )VTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runLjunitframeworkTestResult )VBaseTestSetup.java) at sun.misc.CVM.runMain)VCVM.java)Caused by ERROR Y F_MINUS is not recognized as a function or procedure. at org.apache.derby.iapi.error.StandardException.newExceptionLjavalangString LjavalangObject )LorgapachederbyiapierrorStandardException Unknown Source) at org.apache.derby.impl.sql.compile.StaticMethodCallNode.bindExpressionLorgapachederbyimplsqlcompileFromList LorgapachederbyimplsqlcompileSubqueryList LjavautilVector )LorgapachederbyimplsqlcompileJavaValueNode Unknown Source) at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.bindExpressionLorgapachederbyimplsqlcompileFromList LorgapachederbyimplsqlcompileSubqueryList LjavautilVector )LorgapachederbyimplsqlcompileValueNode Unknown Source) at org.apache.derby.impl.sql.compile.GenerationClauseNode.bindExpressionLorgapachederbyimplsqlcompileFromList LorgapachederbyimplsqlcompileSubqueryList LjavautilVector )LorgapachederbyimplsqlcompileValueNode Unknown Source) at org.apache.derby.impl.sql.compile.TableElementList.bindAndValidateGenerationClausesLorgapachederbyimplsqlcompileFromList )VUnknown Source) at org.apache.derby.impl.sql.compile.CreateTableNode.bindStatement)VUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionLorgapachederbyiapisqlconnLanguageConnectionContext Z[LjavalangObject LorgapachederbyiapisqldictionarySchemaDescriptor Z)LorgapachederbyiapisqlPreparedStatement Unknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareLorgapachederbyiapisqlconnLanguageConnectionContext Z)LorgapachederbyiapisqlPreparedStatement Unknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementLorgapachederbyiapisqldictionarySchemaDescriptor LjavalangString ZZ)LorgapachederbyiapisqlPreparedStatement Unknown Source) ...  more   
0;Add tests of generated columns when sql authorization is turned on   ;Add tests of generated columns under sql authorization. For instance  we need to verify the current_role cannot appear in generation clauses.   
0;Improve performance of reading modified Clobs   ;The performance of reading modified Clobs is poor  which is demonstrated by running a test program selecting a  MB Clob and then getting the contents using getSubString unmodified Clob StoreStreamClob)  ~  ms modified Clob TemporaryClob) ~  msIn this case  the Clob was modified by changing the first character.A number of subtasks will be created to handle the various issues  which will be related to both performance and code cleanup.For a brief overview  see httpwww.nabble.comSuggestionforimprovingClobUpdatableReaderandrelatedcodeto.html   
0;Generation clauses which mention usercoded functions may produce different resuls depending on who performs the triggering INSERTUPDATE   ;This is similar to DERBY. The compiler uses the current schema in order to resolve unqualifed function names when preparing INSERTUPDATE statement. This means that a generation clause may evaluate differently depending on who invokes the triggering INSERTUPDATE statement. This violates the requirement that generation clause should be deterministic (see part  of the ANSIISO standard  section ..Hopefully  the same patch will fix both DERBY and this issue.   
0;Cannot insert  character long string into indexed column   ;Inserting a  character string into a varchar) column with an index fails.These steps. create table t x varchar) primary key). insert into t values  where ? holds a  character stringproduce the following errorERROR XSCB Limitation Record of a btree secondary index cannot be updated or inserted due to lack of space on the page. Use the parameters derby.storage.pageSize andor derby.storage.pageReservedSpace to work around this limitation. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.store.access.btree.BTreeController.doInsBTreeController.java) at org.apache.derby.impl.store.access.btree.BTreeController.insertBTreeController.java) at org.apache.derby.impl.store.access.btree.index.BIController.insertBIController.java) at org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDupsIndexChanger.java) at org.apache.derby.impl.sql.execute.IndexChanger.doInsertIndexChanger.java) at org.apache.derby.impl.sql.execute.IndexChanger.insertIndexChanger.java) at org.apache.derby.impl.sql.execute.IndexSetChanger.insertIndexSetChanger.java) at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRowRowChangerImpl.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java)The page size should be set sufficiently high at index creation time to hold columns with the specified maximum size.   
0;Dont allow references to generated columns in the NEW transition variables of triggered actions of BEFORE triggers   ;Thanks to Dag for finding this restriction in the SQL Standard  part   section .  SR  c) I see this provision ) If BEFORE is specified  then  c) The lt triggered actiongt  shall not contain a lt field referencegt  that references a field in the new transition variable corresponding to a generated column of T.   
0;PositionedStoreStream doesnt initialize itself properly   ;When a PositionedStoreStream is created on top of a stream from store  it must properly initialize itself.Proper initialization consists of initializing and resetting the stream to make sure the states of the streams are in sync.A case of out of sync stream states was detected in a test where the Clob reference wasnt kept  but a new Clob object was created for each operation  i.e rs.getClob).length)  rs.getClob).getSubString...) A symptom of out of sync stream states is EOFException on a valid request.I dont think the access style above is supposed to work  but the proper initialization should be performed anyway.   
0;Clob.truncatelong) in the client driver doesnt update the cached Clob length   ;The client driver caches the Clob length  but doesnt update it when Clob.truncate is called.I will attach a few regression tests  where one of them demonstrates the issue. The fix is also very simple  update the cached length.   
0;Add a facility to override the default set of old versions to be tested in the upgrade tests.   ;In my testing I have seen a need for performing upgrade testing from localinternal nonpublic versions of Derby.That is  having localinternal changes to some older branch and allowing upgrade testing from this not yet public) version.One solution is to locally modify the VERSIONS table of the upgradetests _Suite  but this means modifying the source for each such case.A more flexible solution is to override the default versions given in VERSIONS) by using a property giving a file which lists the versions to test upgrade from. The location to local version jars can currently be given by the derbyTesting.oldReleasePath property. The list of versions could be given by a property derbyTesting.oldVersionsPath.This will also easily allow us to skip testing upgrade from a specific version. This can already be done by not having the version jars available.)The list of versions given via the property should be used whether versions jars) are available locally as given by the derbyTesting.oldReleasePath property or fetched from the Apache Derby svn repository httpsvn.apache.orgreposasfdbderbyjars).I have a patch for this which I will submit for review.   
0;ResultSetStreamTest fails on case sensitive file systems  and isnt run as part of any suite   ;ResultSetStreamTest fails on case sensitive file systems  and it isnt run as part of any suite.I believe this should be easy to fix  and can be a nice issue to work on for people wanting to get more familiar with the basics of the Derby test framework including JUnit).Assuming the test works once the first obstacle has been removed   
0;With IBM . T_RawStoreFactory fails with There should be  observers  but we still have  observers on Win K   ;On WinK T_RawStoreFactory fails consistently with java version ..JavaTM) SE Runtime Environment build pwisr_SR))IBM J VM build .  JRE .. IBM J . Windows XP x jvmwi_ JIT enabled  AOT enabled)JVM  __lHdSMrJIT  r__GC  _AB)JCL  _     Start T_RawStoreFactory jdk..   *** dellt    Unit Test T_RawStoreFactory finished addgt  There should be  observers  but we still have  observers.gt  Shutting down due to unit test failure.Test Failed.    I have seen the same failure on Linux and Windows XP intermittently with IBM ..   
0;ORDER BY causes column to be returned   ;The ORDER BY is causing the ordered column to be retrieved even though it is not part of the SELECT clause. Here is a script to create a table  insert a row  and perform the selectCREATE TABLE REVIEWS.GEOFF_REVIEWS_REVIEW PK INTEGER PRIMARY KEY not null  numstars BIGINT  body VARCHAR)  title VARCHAR)  authoremail VARCHAR)) INSERT INTO REVIEWS.GEOFF_REVIEWS_REVIEW PK numstars body title authoremail) VALUES  not nullable  s s s) SELECT review.numstarsFROM GEOFF_REVIEWS_REVIEW AS reviewWHERE review.PK  ORDER BY review.PK   
0;ALTER COLUMN ... WITH DEFAULT NULL does not change the default   ;Reported on derbyuser.httpmailarchives.apache.orgmod_mboxdbderbyuser.mboxc.post@talk.nabble.comeijgt  create table t x varchar) default abc)  rows insertedupdateddeletedijgt  alter table t alter column x with default null  rows insertedupdateddeletedijgt  insert into t values default  row insertedupdateddeletedijgt  select * from t X abc  row selected   
0;ArrayIndexOutOfBoundsException in TopService.inService under heavy multithreaded use of EmbeddedDriver   ;I have created a test program that reproduces this issue. The program pounds on Derby by running jobs on a pool of  threads. Each job creates a new Derby database  a schema  a table  and an index. Then it shuts down the database and finishes. The program runs until an error occurs or until  jobs have finished.The problem is very intermittent  and related I think to multithreaded access of a vector moduleInstances in TopService.java. I am seeing the error on my machine about half the time I run the test program. Sometimes it happens after  or  jobs...but sometimes not until  or more  or not at all.I am using the .. derby.jar downloaded from httpdb.apache.orgderbyreleasesrelease....cgi  without any modifications on my part.I will attach the test program plus output from a run that failed with the ArrayIndexOutOfBoundsException. The actual exception thrown to the application from Derby is SQLException  but the underlying cause is an ArrayIndexOutOfBoundsException.) BE AWARE that if you run this test program it can use up a GByte or more of disk space in your Java tmp directory.   
0;Remove dependency of junit targets on deprecated jdk variable   ;The junit target for running the jdbc tests depends on the jdk variable being set in your ant.properties. For the build  this variable has been deprecated. We should be able to make the jdbc tests depend on whether the environment is Java  instead.   
0;Improve length caching in TemporaryClob   ;TemporaryClob doesnt save the known length of the Clob in all situations.The following places in the code should be improved some easier than others) a) TemporaryClobString ConChild) b) copyClobContentInternalClob long) nonstatic) c) copyClobContentInternalClob) nonstatic)There might be additional places to fix too.   
0;Replace felix.jar file with the felix sources   ;In order to bundle Derby with popular linux distributions like Debian and Ubuntu  it must be possible to build Derby from sources and existing linux components. By replacing Felix jar with the corresponding sources  we move another step closer to being able to bundle Derby with linux distributions.   
0;An attempt was made to access an out of range slot on a page   ;When running our application we get the following error messageAn attempt was made to access an out of range slot on a pageINSERT INTO orders operation  receptacle  vehicle_id  iata_origin  icao_origin  sta  eta  ata  pta  onb  arr_stand_id  arr_gate  arr_flight_no  arr_remarks  flight_no  icao_flight_no  icao_callsign  iata_destination  icao_destination  std  etd  atd  ofb  stand_id  pit_code  gate  aircraft_subtype_code  aircraft_registration  fuel_request  canceled  delay_ind  remarks  ptd  slot_request_code  slot_request  slot_granted  terminal  customer_name  customer_type  supplier_id  carnet_no  carnet_expiry  contract_id  authorization_reference  service_level  standby_at  started_at  completed_at  status  comment  meter_start_volume_automatic  meter_start_volume_manual  meter_stop_volume_automatic  meter_stop_volume_manual  meter_start_volume_automatic  meter_start_volume_manual  meter_stop_volume_automatic  meter_stop_volume_manual  temperature  density  created_at  updated_at  fuel_on_board  id) VALUESFUELLING  NULL  NULL  NULL  NULL                 anAEBOyqrzaaabxfoB_Q  NULL  DY   NULL  DY   NAX  NAX  TOS  ENTC     NULL        anAEBOyqrzaaabxfoB_Q  NULL      LNKHA      X  NULL     NULL  NULL  NULL    NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL  NULL          aVHYQirBDabxfoB_Q)The error occurs several times per day on different systems. It started yesterday   
1;On ZOS storeaccess.sql fails with encryptionAES and encryptionDES   ;On ZOS access.sql fails for encryptionAES and encryptionDES. The diff is big but I cant quite make out what the problem is. Maybe just a change of query plans.   
0;org.apache.derby.impl.load.Import needs to escape single quotes   ;The code that builds the SQL statement that invokes the Import VTI doesnt properly escape single quotes. This causes problems for users  see httpmailarchives.apache.orgmod_mboxdbderbyuser.mboxc.post@talk.nabble.comeImport.performImport) is the method that needs to be fixed.   
0;Use helper methods from IdUtil to quote SQL identifiers in EmbedResultSet   ;EmbedResultSet has two methods quoteSqlIdentifier) and getFullBaseTableName) which should be replaced with IdUtil.normalToDelimited) and IdUtil.mkQualifiedName)  respectively.   
0;Multithreaded clob update causes growth in table that does not get reclaimed   ;Doing a multithreaded update of a Clob table causes table growth that does not get reclaimed except by compressing the table. The reproduction has a table with two threads. One thread updates row  repeatedly with   character clob. The other thread updates row  with a small clob  hello. The problem occurs back to . but seems much worse on trunk than .. The trunk database grew to MB on trunk after  updates of each row. The . database grew only to MB. If the update is synchronized there is no growth.I will attach the repro.   
0;InputStream returned from Blob.getBinaryStreamlong  long) terminates the stream by returning   should return    ;Take the following code to copy a substream from a BLOBBlob blob  rs.getBlob InputStream stream  blob.getBinaryStream   try  IOUtils.copystream  out } finally  stream.close }This will loop forever in IOUtils.copy  as the InputStream is returning  at end of stream instead of . It probably should return  to comply with the Javadoc for InputStream.NotesI have not yet checked Blob.getBinaryStream  or any of the Clob methods  or the client driver. So some of these may have a similar issue.   
0;ClientConnectionPoolDataSource.getPooledConnection and ClientXADataSource.getXAConnection ignore connection attributes   ;The methods CCPDS.getPooledConnection and CXADS.getXAConnection fail to pick up attributes set with setConnectionAttributesString).The current regression tests fail to detect this  because they obtain a connection using getConnection). Im not sure if this method should be present in a XADataSource at all  but this problem should be addressed by a separate issue.   
1;shutdown with incorrect permission on log files shows java.lang.NullPointerException  at org.apache.derby.impl.store.raw.log.LogToFile.flushLogToFile.java).  Should give bettter message.   ;I recently saw case where a user was seeing the following error in the derby.log when trying to shutdown their database.New exception raised during cleanup nulljava.lang.NullPointerException at org.apache.derby.impl.store.raw.log.LogToFile.flushLogToFile.java) at org.apache.derby.impl.store.raw.log.LogToFile.flushLogToFile.java) at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.flushBaseDataFileFa at org.apache.derby.impl.store.raw.data.CachedPage.writePageCachedPage.java at org.apache.derby.impl.store.raw.data.CachedPage.cleanCachedPage.java) at org.apache.derby.impl.services.cache.ConcurrentCache.cleanAndUnkeepEntryConc at org.apache.derby.impl.services.cache.ConcurrentCache.cleanCacheConcurrentCac at org.apache.derby.impl.services.cache.ConcurrentCache.cleanAllConcurrentCache at org.apache.derby.impl.services.cache.ConcurrentCache.shutdownConcurrentCache at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.stopBaseDataFileFac at org.apache.derby.impl.services.monitor.TopService.stopTopService.java) at org.apache.derby.impl.services.monitor.TopService.shutdownTopService.java at org.apache.derby.impl.services.monitor.BaseMonitor.shutdownBaseMonitor.java at org.apache.derby.impl.db.DatabaseContextImpl.cleanupOnErrorDatabaseContextIm at org.apache.derby.iapi.services.context.ContextManager.cleanupOnErrorContextM at org.apache.derby.impl.jdbc.TransactionResourceImpl.cleanupOnErrorTransaction at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionDriver.java) at org.apache.derby.jdbc.InternalDriver.connectInternalDriver.java) at org.apache.derby.jdbc.AutoloadedDriver.connectAutoloadedDriver.java) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java)It ended up that some of the log files did not have proper write permissions because some operation on the database had been performed by root. They had subsequently deleted their db.lck file so the database did not boot READ ONLY as it would if the root owned db.lck file still existed and the symptom was that they got this error on shutdown.Clearly this was user error  but it would have been good if we gave a better error message. To reproduce on LinuxAs a user with umask   run the program java MakeDBthis will make the databases wombat and create a table.su rootwith umask   run the program to insert data and remove the db.lck filejava InsertALotrm wombatdb.lckgo back to the original userrun the programjava ConnectAndShutdownThe application gets the normal shutdown exception but if you look in derby.log you will see the exception.java.lang.NullPointerException at org.apache.derby.impl.store.raw.log.LogToFile.flushLogToFile.java) ...I will attach the files.   
0;BTreeController.comparePreviousRecord) may fail to release latch on leftmost leaf   ;If comparePreviousRecord) is called on some other leaf page than the leftmost leaf  and all the rows to the left of the current position are deleted so that the position is moved all the way to slot  on the leftmost leaf  comparePreviousRecord) will return without releasing the latch on the leftmost leaf. Only the leaf on which comparePreviousRecord) is called should be latched when the method returns.Since comparePreviousRecord) currently fails to continue after finding a deleted row  this bug is not possible to expose until DERBY is fixed.   
0;BTreeScan.delete) throws AM_RECORD_NOT_FOUND if record is found   ;The code below is from BTreeScan.delete. If the call to reposition manages to position on the row  an exception is raised indicating that the row could not be found. If the row is not found  no exception is raised  but code later in the method will probably throw a NullPointerException because scan_position.current_leaf is set to null by reposition. I believe that if reposition... should be changed to if reposition.... According to the test coverage reports  this code is not exercised by any of the existing tests. if latch_released   lost latch on page in order to wait for row lock.  Because we have scan lock on page  we need only  call reposition which will use the saved record  handle to reposition to the same spot on the page.  We dont have to search the  tree again  as we have the a scan lock on the page  which means the current_rh is valid to reposition on. if repositionscan_position  false  throw StandardException.newException SQLState.AM_RECORD_NOT_FOUND  new Longerr_containerid  new Longscan_position.current_rh.getId  } } }   
0;It should be possible to run unit tests right after ant all   ;Right now  the property derby.junit.classpath is empty by default. There should be an ant target which sets the correct classpath to run all tests after an initial checkout and ant all.The current situation is very confusing to beginners and people who try to build Derby for the first time. For example  when running the tests  I got this exceptionjava.lang.ClassNotFoundException org.apache.derbyTesting.junit.EnvTestbut that class was there  the file was there  everything was correct. Googling for the error didnt turn anything up  either. It took me a while to believe that build.xml just wouldnt try to setup a classpath for the tests.   
0;Trigger  fails with ERROR  The exception java.sql.SQLException ResultSet not open  during VTIResultSet.getNextRowCore)   ;I dont have a reproduction without the user database yet  but it seems that recompiling the trigger stored prepared statements on upgrade is causing a result set to get closed and is causing the following error when firing a trigger in a global transaction. The holdability in an XA transaction is CLOSE_CURSORS_AT_COMMIT so it may be that there is a commit occurring as part of the process that is causing the problem. I havent tried yet with a regular transaction and using default holdability CLOSE_CURSORS_AT_COMMIT. The error comes on a delete which fires an after delete statement trigger to insert some values into another table.Here is the stack trace . GMT Thread main  main  XID  )  SESSIONID  )  DATABASE  derbywpsdb)  DRDAID  null)  Cleanup action starting . GMT Thread main  main  XID  )  SESSIONID  )  DATABASE  derbywpsdb)  DRDAID  null)  Failed Statement is DELETE FROM XXX WHERE WSIDERROR  The exception java.sql.SQLException ResultSet not open. Operation next not permitted. Verify that autocommit is OFF. was thrown while evaluating an expression. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.iapi.error.StandardException.unexpectedUserExceptionStandardException.java) at org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCoreVTIResultSet.java) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreProjectRestrictResultSet.java) at org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet.getNextRowCoreNestedLoopJoinResultSet.java) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreProjectRestrictResultSet.java) at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCoreNormalizeResultSet.java) at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCoreDMLWriteResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTriggerStatementTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.DeleteResultSet.fireAfterTriggersDeleteResultSet.java) at org.apache.derby.impl.sql.execute.DeleteResultSet.openDeleteResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdateEmbedStatement.java) at org.apache.derby.iapi.jdbc.BrokeredStatement.executeUpdateBrokeredStatement.java) at ReproRSClosed.mainReproRSClosed.java)Caused by java.sql.SQLException ResultSet not open. Operation next not permitted. Verify that autocommit is OFF. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.EmbedConnection.newSQLExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.newSQLExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedResultSet.checkIfClosedEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.checkExecIfClosedEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.nextEmbedResultSet.java) at org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCoreVTIResultSet.java) ...  moreCaused by java.sql.SQLException ResultSet not open. Operation next not permitted. Verify that autocommit is OFF. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  more begin nested exception  level ) java.sql.SQLException ResultSet not open. Operation next not permitted. Verify that autocommit is OFF. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.EmbedConnection.newSQLExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.newSQLExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedResultSet.checkIfClosedEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.checkExecIfClosedEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.nextEmbedResultSet.java) at org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCoreVTIResultSet.java) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreProjectRestrictResultSet.java) at org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet.getNextRowCoreNestedLoopJoinResultSet.java) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreProjectRestrictResultSet.java) at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCoreNormalizeResultSet.java) at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCoreDMLWriteResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTriggerStatementTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.DeleteResultSet.fireAfterTriggersDeleteResultSet.java) at org.apache.derby.impl.sql.execute.DeleteResultSet.openDeleteResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdateEmbedStatement.java) at org.apache.derby.iapi.jdbc.BrokeredStatement.executeUpdateBrokeredStatement.java) at ReproRSClosed.mainReproRSClosed.java)Caused by java.sql.SQLException ResultSet not open. Operation next not permitted. Verify that autocommit is OFF. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  more end nested exception  level )  begin nested exception  level ) java.sql.SQLException ResultSet not open. Operation next not permitted. Verify that autocommit is OFF. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.EmbedConnection.newSQLExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.newSQLExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedResultSet.checkIfClosedEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.checkExecIfClosedEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java) at org.apache.derby.impl.jdbc.EmbedResultSet.nextEmbedResultSet.java) at org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCoreVTIResultSet.java) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreProjectRestrictResultSet.java) at org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet.getNextRowCoreNestedLoopJoinResultSet.java) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCoreProjectRestrictResultSet.java) at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCoreNormalizeResultSet.java) at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCoreDMLWriteResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTriggerStatementTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.DeleteResultSet.fireAfterTriggersDeleteResultSet.java) at org.apache.derby.impl.sql.execute.DeleteResultSet.openDeleteResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdateEmbedStatement.java) at org.apache.derby.iapi.jdbc.BrokeredStatement.executeUpdateBrokeredStatement.java) at ReproRSClosed.mainReproRSClosed.java) end nested exception  level ) Cleanup action completed   
0;testMixedInsertDeleteorg.apache.derbyTesting.functionTests.tests.lang.NullableUniqueConstraintTest)org.apache.derby.client.am.BatchUpdateException   ;Seen twice....See httpdbtg.thresher.comderbytesttrunkjvm.testingtestlogSunOS._sunusparcorg.apache.derbyTesting.functionTests.suites.All_diff.txthttpdbtg.thresher.comderbytesttrunkjvm.testingtestlogSunOS._ipciorg.apache.derbyTesting.functionTests.suites.All_diff.txt) testMixedInsertDeleteorg.apache.derbyTesting.functionTests.tests.lang.NullableUniqueConstraintTest)org.apache.derby.client.am.BatchUpdateException Nonatomic batch failure. The batch was submitted  but at least one exception occurred on an individual member of the batch. Use getNextException) to retrieve the exceptions for specific batched elements. at org.apache.derby.client.am.Agent.endBatchedReadChainUnknown Source) at org.apache.derby.client.am.PreparedStatement.executeBatchRequestXUnknown Source) at org.apache.derby.client.am.PreparedStatement.executeBatchXUnknown Source) at org.apache.derby.client.am.PreparedStatement.executeBatchUnknown Source) at org.apache.derbyTesting.functionTests.tests.lang.NullableUniqueConstraintTest.testMixedInsertDeleteNullableUniqueConstraintTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)   
0;Provide a way to drop statistics information   ;Now that DERBY has been resolved  users can update statistics  but once they do  they are committed to using and maintaining the statistics  even if it doesnt improve performance or they have difficulty maintaining the statistics on a regular basis. It would be good to have a way to drop statistics information so that users could revert to the prior behavior if needed.   
0;SYSCS_UTIL.SYSCS_UPDATE_STATISTICS should update the store estimated row count for the table   ;When SYSCS_UTIL.SYSCS_UPDATE_STATISTICS is run  it doesnt update the store estimated row count. The program oldSelectivity.java attached to DERBY shows that the statistics are not updated.See discussions in DERBYhttpsissues.apache.orgjirabrowseDERBY?focusedCommentIdamp pagecom.atlassian.jira.plugin.system.issuetabpanelsAcommenttabpanelaction_httpsissues.apache.orgjirabrowseDERBY?focusedCommentIdamp pagecom.atlassian.jira.plugin.system.issuetabpanelsAcommenttabpanelaction_   
0;derbyclient.jar is not a complete OSGi bundle   ;The manifest in derbyclient.jar is incomplete for usage in OSGi. There are no packages exported. This appears to only be a problem in standalone equinox outside of eclipse). Note that I did not try other OSGi containers.The fix is relatively simple. Adding the ExportPackage manifest header should take care of the problem.   
0;The inmemory storage back end doesnt work on Windows   ;Bug reported by Knut Magne Solem  see DERBY.Using the inmemory storage back end fails on Windows i.e. connect jdbcderbymemoryMyDbTest createtrue  from ij)ERROR XJ Java exception ASSERT FAILED serviceName  memoryCDocuments and SettingsuserworkspacederbyMyDbTest storageFactory.getCanonicalName)  CDocuments and SettingsuserworkspacederbyMyDbTest org.apache.derby.shared.common.sanity.AssertFailure.With an insane build  the error messages will look like thisERROR XJ Failed to create database memorymyDB  see the next exception for details.ERROR XBM Startup failed due to an exception. See next exception for details.ERROR XSTB Cannot log transaction changes  maybe trying to write to a read only database.The error occurs during boot  which means Windows users are unable to use the inmemory back end at all.   
0;testTableFunctionInJar fails w The class DummyVTI does not exist or is inaccessible... on jvm.   ;Seen in tests on jvm. since ~ svn rev. See e.g.httpdbtg.thresher.comderbytestDailyjvm.testingLimitedtestSummary.htmlE.g.) testTableFunctionInJarorg.apache.derbyTesting.functionTests.tests.lang.DatabaseClassLoadingTest)java.sql.SQLException The class DummyVTI does not exist or is inaccessible. This can happen if the class is not public. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeQueryUnknown Source) at org.apache.derbyTesting.functionTests.tests.lang.DatabaseClassLoadingTest.testTableFunctionInJarDatabaseClassLoadingTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Caused by java.sql.SQLException Java exception DummyVTI  DummyVTI Unsupported major.minor version .) java.lang.ClassNotFoundException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) ...  moreCaused by java.lang.ClassNotFoundException DummyVTI  DummyVTI Unsupported major.minor version .) at org.apache.derby.impl.services.reflect.DatabaseClasses.loadApplicationClassUnknown Source) at org.apache.derby.iapi.services.loader.ClassInspector.getClassUnknown Source) at org.apache.derby.iapi.services.loader.ClassInspector.accessibleUnknown Source) at org.apache.derby.impl.sql.compile.QueryTreeNode.verifyClassExistUnknown Source) at org.apache.derby.impl.sql.compile.StaticMethodCallNode.bindExpressionUnknown Source) at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.bindExpressionUnknown Source) at org.apache.derby.impl.sql.compile.ResultColumn.bindExpressionUnknown Source) at org.apache.derby.impl.sql.compile.ResultColumnList.bindExpressionsUnknown Source) at org.apache.derby.impl.sql.compile.RowResultSetNode.bindExpressionsUnknown Source) at org.apache.derby.impl.sql.compile.DMLStatementNode.bindExpressionsUnknown Source) at org.apache.derby.impl.sql.compile.DMLStatementNode.bindUnknown Source) at org.apache.derby.impl.sql.compile.CursorNode.bindStatementUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementUnknown Source) ...  more   
0;java.lang.VerifyError causing java.sql.SQLException Cannot create an instance of generated class ... in lang.GeneratedColumnsTest and GeneratedColumnsPermsTest  on IBM iseries   ;This results in  errors.Heres the stack trace with an insane build) test__basicInsertorg.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest)java.sql.SQLException Cannot create an instance of generated class org.apache.derby.exe.acdddxxbdxdffxffffb. at java.lang.Throwable.lt initgt Throwable.java) at java.lang.Exception.lt initgt Exception.java) at java.sql.SQLException.lt initgt SQLException.java) at org.apache.derby.impl.jdbc.EmbedSQLException.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsHelper.chattyPrepareGeneratedColumnsHelper.java) at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsHelper.goodStatementGeneratedColumnsHelper.java) at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.test__basicInsertGeneratedColumnsTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by java.sql.SQLException Java exception orgapachederbyexeacdddxxbdxdffxffffb    java.lang.VerifyError. at java.lang.Throwable.lt initgt Throwable.java) at java.lang.Exception.lt initgt Exception.java) at java.sql.SQLException.lt initgt SQLException.java) at org.apache.derby.impl.jdbc.EmbedSQLException.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) ...  moreCaused by java.lang.VerifyError orgapachederbyexeacdddxxbdxdffxffffb    at java.lang.Throwable.lt initgt Throwable.java) at java.lang.Error.lt initgt Error.java) at java.lang.VerifyError.lt initgt VerifyError.java) at sun.reflect.NativeConstructorAccessorImpl.newInstanceNativeConstructorAccessorImpl.java) at sun.reflect.DelegatingConstructorAccessorImpl.newInstanceDelegatingConstructorAccessorImpl.java) at java.lang.reflect.Constructor.newInstanceConstructor.java) at org.apache.derby.iapi.services.loader.ClassInfo.getNewInstanceUnknown Source) at org.apache.derby.impl.services.reflect.LoadedGeneratedClass.newInstanceUnknown Source) at org.apache.derby.impl.services.reflect.ReflectGeneratedClass.newInstanceUnknown Source) at org.apache.derby.impl.sql.GenericActivationHolder.lt initgt Unknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.getActivationUnknown Source) ...  more   
0;NullPointerException in system.sttest run with ...   ;I see the following stack trace on line  of the redirected outputThread finished complete initial datatotal memory  free  Tue Mar   PDT java.lang.NullPointerException at org.apache.derbyTesting.system.sttest.utils.Datatypes.update_one_rowDatatypes.java) at org.apache.derbyTesting.system.sttest.Sttest.runSttest.java)Exception in thread Thread java.lang.NullPointerException at org.apache.derbyTesting.system.sttest.Sttest.runSttest.java)java.lang.NullPointerException at org.apache.derbyTesting.system.sttest.utils.Datatypes.update_one_rowDatatypes.java) at org.apache.derbyTesting.system.sttest.Sttest.runSttest.java)Exception in thread Thread java.lang.NullPointerException at org.apache.derbyTesting.system.sttest.Sttest.runSttest.java)java.lang.NullPointerException at org.apache.derbyTesting.system.sttest.utils.Datatypes.update_one_rowDatatypes.java) at org.apache.derbyTesting.system.sttest.Sttest.runSttest.java)Exception in thread Thread java.lang.NullPointerException at org.apache.derbyTesting.system.sttest.Sttest.runSttest.java)quantity in pick_some is  rows deletedMatching this up with the derby.log  the first entry in derby.log is  . GMT  and ls al shows   PDT for the creation of testDB  so time diff was  hours  shows nothing of interest. The last entry in derby.log is at  . GMT  so only  hours later.Ive seen the same thing  times  this needs to be analyzed further.I will also run on another machine  and run with sane jars to see if we get any stack trace of other help from derby.log.   
0;Create a test to verify that virgin metadata is identical to hardupgraded metadata   ;We should write a test to verify that the metadata is correct for each release for all hardupgrade trajectories which terminate in that release. The test should examine all system tables. Note that if there are N releases  then there will lt supgt Nlt supgt   N)   trajectories to examine.   
0;improvements to the mailjdbc test   ;When recently working with the mailjdbc system test org.apache.derbyTesting.system.mailjdbc on DERBY I noticed some potential improvements that might be good for the test. We should probably hold off on these improvements however until the root cause of DERBY is established  however  so we dont muddy the waters with that issue by changing the test.) DbTasks.moveToFolders may throw an IllegalArgumentException. There is a line message_id  Rn.nextIntcount  )  if count is  the argument to nextInt) might be  which is not allowed. I hit this once but lost the stack trace  but it is apparent that when there is only one row in the table this can occur.) Allowimplement multiple attachments per message and cleanup DbTasks.insertMail) logic. Remove the attach_id column from INBOX to allow multiple attachments. Make the attachment insert part of the message for loop in insertMail. Use getGeneratedKeys) to get the id of the inserted message. When attachments are inserted  insert ) attachments and give them a corresponding attach_id from .This will allow for removal of the select statements used to determine id and attach_id. Ill file another issue for these improvements if folks agree that they are sensible.A detailed description of the current implementation of insertMail is described at httpsissues.apache.orgjirasecureattachmentinsertMailSummary.txt) DbTasks.databaseSize calculation is wrong. It doesnt match du sk. The method does not recurse into subdirectories and includes the length) on directory files which is undefined accourding to the file.length) javadoc.   
0;No method was found that matched the method call .... in testPayment and testSubmitter org.apache.derbyTesting.system.oe.test.OperationsTester) on ... RC)   ;Seen when running testPaymentorg.apache.derbyTesting.system.oe.test.OperationsTester) with ... RC).The test passed with no failures on ....) testPaymentorg.apache.derbyTesting.system.oe.test.OperationsTester)java.sql.SQLSyntaxErrorException No method was found that matched the method call org.apache.derbyTesting.system.oe.routines.Data.dataForBadCreditjava.lang.String  short  short  short  short  int  java.math.BigDecimal)  tried all combinations of object and primitive types and any possible type conversion for any parameters the method call may have. The method might exist but it is not public andor static  or the parameter types are not method invocation convertible. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at org.apache.derbyTesting.system.oe.direct.StatementHelper.prepareStatementStatementHelper.java) at org.apache.derbyTesting.system.oe.direct.Standard.paymentByIdStandard.java) at org.apache.derbyTesting.system.oe.direct.Standard.paymentStandard.java) at org.apache.derbyTesting.system.oe.test.OperationsTester.testPaymentOperationsTester.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)) testSubmitterorg.apache.derbyTesting.system.oe.test.OperationsTester)java.sql.SQLSyntaxErrorException No method was found that matched the method call org.apache.derbyTesting.system.oe.routines.Data.dataForBadCreditjava.lang.String  short  short  short  short  int  java.math.BigDecimal)  tried all combinations of object and primitive types and any possible type conversion for any parameters the method call may have. The method might exist but it is not public andor static  or the parameter types are not method invocation convertible. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at org.apache.derbyTesting.system.oe.direct.StatementHelper.prepareStatementStatementHelper.java) at org.apache.derbyTesting.system.oe.direct.Standard.paymentByIdStandard.java) at org.apache.derbyTesting.system.oe.direct.Standard.paymentStandard.java) at org.apache.derbyTesting.system.oe.client.Submitter.runPaymentSubmitter.java) at org.apache.derbyTesting.system.oe.client.Submitter.runTransactionSubmitter.java) at org.apache.derbyTesting.system.oe.test.OperationsTester.testSubmitterOperationsTester.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Related to DERBY  DERBY  DERBY  DERBY?   
0;Connections to ondisk db go to inmemory db if inmemory db with same name is booted   ;When an inmemory database has been booted  subsequent attempts to connect to an ordinary ondisk) database with the same name as the inmemory database will connect to the inmemory db.ij version .ijgt  connect jdbcderbymemoryMyDB createtrue    with subprotocol memoryijgt  create table t x varchar))  rows insertedupdateddeletedijgt  insert into t values This is the inmemory backend  row insertedupdateddeletedijgt  connect jdbcderbyMyDB createtrue  without subprotocol memory  should create disk dbWARNING J Database MyDB not created  connection made to existing database instead.ijCONNECTION)gt  select * from t X This is the inmemory backend  row selected   
0;Javadoc for BTreeLockingPolicy should not mention scan lock anymore   ;The javadoc for BTreeLockingPolicy still talks about scan locks  although the scan lock is no longer in use after DERBY. The javadoc should be updated so that it reflects the current state of the code.   
0;bootLock.java fails with missing exception on zOS with  pmzsrifix_SRIZIZ)  and Windows Vista   ;I saw this diff in storebootLock.java. I did not see it with the bit jvm run on ... RC     Start bootLock jdk.. storeallstoremore   *** dlt  expected exceptionlt  SQLSTATEXJ)lt  SQLSTATEXSDB)Test Failed. End bootLock jdk.. storeallstoremore   ***    The test passed on rerun when run independently.   
0;Convert altertable.sql to JUnit   ;Converting altertable.sql harness test to JUnit   
0;When using the FOR UPDATE OF clause with SUR Scrollinsensive updatable result sets)  the updateRow) method crashes   ;This problem occurs on both ClientServer and Embedded.With the Embedded driver  the JVM crashes with the following errorlt ) testReproductionorg.apache.derbyTesting.functionTests.tests.store.ReproHoldCursorBug)org.apache.derby.shared.common.sanity.AssertFailure ASSERT FAILED statementContext is not expected to equal statementContexts   at org.apache.derby.shared.common.sanity.SanityManager.ASSERTSanityManager.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.popStatementContextGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedResultSet.updateRowEmbedResultSet.java) at org.apache.derbyTesting.functionTests.tests.store.ReproHoldCursorBug.testReproductionReproHoldCursorBug.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)lt It shows a stack trace after this  but Im attaching the result folders since those are more thorough.)  On the client driver  the JVM does not crash but it also errors out) testReproductionorg.apache.derbyTesting.functionTests.tests.store.ReproHoldCursorBug)java.sql.SQLException DERBY SQL error SQLCODE   SQLSTATE XJ  SQLERRMC java.lang.NullPointerExceptionXJ.Umore detail on the log files)  The error does not show as long as the OF DATA isnt specified. It also wont show if the whole FOR UPDATE clause is omitted.I would also like some comments and advice on how to proceed on converting holdCursorJDBC.sql as it is affected by this problem. The original test does an update on a cursor with the FOR UPDATE OF DATA clause  and this isnt working on the Java version of the test. Do I go around it by removing the FOR UPDATE clause or should I wait for this bug to get fixed?Attachments    ErrorOutput_Embedded.tar.gz  Error output files of the Embedded run    ErrorOutput_Client.tar.gz  Error output files of the ClientServer run    ReproHoldCursorBug.java  The reproduction of the errors   
1;SecureServerTest AssertionFailedError Timed out waiting for network server to start   ;I saw this failure in the nightly run on  on the . branch  ...  ). I have not seen it in previous runs on the same machine. There were actually two failures in the test. I think the second one failed because of the first so am not reporting a separate issue for that.There were  failures) SecureServerTest Opened  false  Authenticated false  CustomDerbyProperties null  WildCardHost null )junit.framework.AssertionFailedError Timed out waiting for network server to startSpawned SpawnedNetworkServer exitCode at org.apache.derbyTesting.junit.NetworkServerTestSetup.setUpNetworkServerTestSetup.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) SecureServerTest Opened  false  Authenticated false  CustomDerbyProperties functionTeststestsderbynetSecureServerTest.derby.properties  WildCardHost null )junit.framework.AssertionFailedError directory trace does not exist at org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.setTraceDirectorySecureServerTest.java) at org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.testServerStartupSecureServerTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.javaCompiled Code)) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)   
0;TableView MAX_SCAN does not exist in org.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest   ;See e.g. httpdbtg.thresher.comderbytesttrunkjvm.testingtestlogLinux...ELsmp_x_x_org.apache.derbyTesting.functionTests.suites.All_diff.txtThere were  errors) testMultipleLastKeyWaitsInMaxScanorg.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest)java.sql.SQLException TableView MAX_SCAN does not exist. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest.doWorkIndexSplitDeadlockTest.java) at org.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTestAsyncThread.runIndexSplitDeadlockTest.java) at java.lang.Thread.runThread.java)Caused by ERROR X TableView MAX_SCAN does not exist. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.sql.compile.DMLModStatementNode.verifyTargetTableUnknown Source) at org.apache.derby.impl.sql.compile.InsertNode.bindStatementUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.rePrepareUnknown Source) ...  more) testMultiplePrevKeyWaitsInForwardScanorg.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest)java.sql.SQLException TableView FW_SCAN does not exist. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest.doWorkIndexSplitDeadlockTest.java) at org.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTestAsyncThread.runIndexSplitDeadlockTest.java) at java.lang.Thread.runThread.java)Caused by ERROR X TableView FW_SCAN does not exist. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.sql.compile.DMLModStatementNode.verifyTargetTableUnknown Source) at org.apache.derby.impl.sql.compile.InsertNode.bindStatementUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.rePrepareUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) ...  moreor httpdbtg.thresher.comderbytestDailyjvm.testingtestloglinsuitesAll_diff.txt or httpdbtg.thresher.comderbytestDailyjvm.testingtestlogslessuitesAll_diff.txt or httpdbtg.thresher.comderbytestDailyjavaMEtestingtestlogubuntusuitesAll_diff.txt   
0;Remove unused prein constructors in BatchUpdateException   ;client.am.BatchUpdateException contains a number of unused constructors. There is a comment saying that they should be removed when in is complete. Since the in work on the client driver has been completed  and the constructors are no longer used  they should be removed.   
0;XAResource.setTransactionTimeout) makes XAResource.start) fail with the client driver   ;Got below error message when running an XA prolgram with derby. org.apache.derby.client.am.XaException XAER_PROTO  Error executing a XAResource.start  server returned XAER_PROTO. at org.apache.derby.client.net.NetXAResource.throwXAExceptionUnknown Source at org.apache.derby.client.net.NetXAResource.startUnknown Source at TestDerbyXA.processTestDerbyXA.java at TestDerbyXA.mainTestDerbyXA.javaCaused by org.apache.derby.client.am.SqlException Error executing a XAResource.start  server returned XAER_PROTO. at org.apache.derby.client.net.NetXAResource.xaRetValErrorAccumSQLUnknown Source ...  moreBelow is the example program I used. Note The program will succeed if comment out line   setTransactionTimeout. Does that means call XAResource.setTransactionTimeout caused the failure?I use Apache Derby Network Server  ...  . The same program works fine with another version Apache Derby Network Server  ...  . It looks like there is a regression between the two versions.import java.sql.Connection import java.sql.PreparedStatement import java.sql.SQLException import java.sql.Statement import javax.sql.XAConnection import javax.transaction.xa.XAException import javax.transaction.xa.XAResource import javax.transaction.xa.Xid import org.apache.derby.jdbc.ClientXADataSource public class TestDerbyXA  ClientXADataSource xaDSLocal  null  ClientXADataSource xaDSRemote  null  public TestDerbyXA   Create two XA data sources. xaDSLocal  new ClientXADataSource  xaDSLocal.setServerNamelocalhost  xaDSLocal.setPortNumber  xaDSLocal.setDatabaseNametestdb  xaDSLocal.setUserapp  xaDSLocal.setPasswordderby  xaDSRemote  new ClientXADataSource  xaDSRemote.setServerNamelocalhost  xaDSRemote.setPortNumber  xaDSRemote.setDatabaseNametestdb  xaDSRemote.setUserapp  xaDSRemote.setPasswordderby   xaDSRemote  xaDSLocal  } public static void mainString[] args throws Exception  TestDerbyXA testObj  new TestDerbyXA  testObj.dropTabletablea  testObj.createTableCREATE TABLE tablea col INT  col VARCHAR  testObj.dropTabletableb  testObj.createTableCREATE TABLE tableb col INT  col VARCHAR  testObj.process  } public void dropTableString tableName throws Exception  Connection conn  null  Statement stmt  null  try  conn  xaDSLocal.getConnection  stmt  conn.createStatement  stmt.executeUpdateDROP TABLE   tableName  System.out.printlnDrop table   tableName   succeed.  } catch SQLException sqle  System.out.printlnDrop table   tableName   failed.  sqle.printStackTrace  } finally    Close JDBC objects  including the connection  if stmt  null  try  stmt.close  stmt  null  } catch SQLException e  } } if conn  null  try  conn.close  conn  null  } catch SQLException e  } } } } public void createTableString DDL throws Exception  Connection conn  null  Statement stmt  null  try  conn  xaDSLocal.getConnection  stmt  conn.createStatement  stmt.executeUpdateDDL  System.out.printlnDDL   succeed.  } catch SQLException sqle  System.out.printlnDDL   failed.  sqle.printStackTrace  } finally    Close JDBC objects  including the connection  if stmt  null  try  stmt.close  stmt  null  } catch SQLException e  } } if conn  null  try  conn.close  conn  null  } catch SQLException e  } } } } public void process throws Exception  Connection connLocal  null  Connection connRemote  null  int rows    PreparedStatement pstmtLocal  null  PreparedStatement pstmtRemote  null  XAConnection xaConnLocal  null  XAConnection xaConnRemote  null  XAResource xarLocal  null  XAResource xarRemote  null  Xid xidLocal  null  Xid xidRemote  null  try  xaConnLocal  xaDSLocal.getXAConnection  xaConnRemote  xaDSRemote.getXAConnection  connLocal  xaConnLocal.getConnection  connRemote  xaConnRemote.getConnection  xarLocal  xaConnLocal.getXAResource  xarRemote  xaConnRemote.getXAResource   Create the Xids  Create the global ID byte[] globalTransactionId  new byte[]  globalTransactionId[]  byte   byte[] globalTransactionId  new byte[]  globalTransactionId[]  byte    Create the local branch ID byte[] branchQualifierLocal  new byte[]  branchQualifierLocal[]  byte   xidLocal  new XidImplglobalTransactionId  branchQualifierLocal  x   Create the remote branch ID byte[] branchQualifierRemote  new byte[]  branchQualifierRemote[]  byte   xidRemote  new XidImplglobalTransactionId  branchQualifierRemote  x   Database operations on the local branch  suspend local branch xarLocal.setTransactionTimeout   The failure will disappear if comment out this line. connLocal.setAutoCommitfalse  xarLocal.startxidLocal  XAResource.TMNOFLAGS  pstmtLocal  connLocal .prepareStatementINSERT INTO tablea col  col VALUES ?  ?  pstmtLocal.setInt    pstmtLocal.setString  insert first rec to tablea  rows  pstmtLocal.executeUpdate  System.out.printlnrows   rows inserted to tablea  pstmtLocal.close  pstmtLocal  null  xarLocal.endxidLocal  XAResource.TMSUCCESS  connLocal.setAutoCommittrue   Database operation on the remote branch  commit remote branch xarRemote.setTransactionTimeout  connRemote.setAutoCommitfalse  xarRemote.startxidRemote  XAResource.TMNOFLAGS  pstmtRemote  connRemote .prepareStatementINSERT INTO tableb col  col VALUES ?  ?  pstmtRemote.setInt    pstmtRemote.setString  insert second rec to tableb  rows  pstmtRemote.executeUpdate  System.out.printlnrows   rows inserted to tableb  pstmtRemote.close  pstmtRemote  null  xarRemote.endxidRemote  XAResource.TMSUCCESS  connRemote.setAutoCommittrue  System.out.printlncommit remote branch  xarRemote.commitxidRemote  true   Resume the local branch and do some database operation  commit local branch xarLocal.setTransactionTimeout  connLocal.setAutoCommitfalse  xarLocal.startxidLocal  XAResource.TMJOIN  pstmtLocal  connLocal .prepareStatementINSERT INTO tablea col  col VALUES ?  ?  pstmtLocal.setInt    pstmtLocal.setString  insert third rec to tablea  rows  pstmtLocal.executeUpdate  System.out.printlnrows   rows inserted to tablea  pstmtLocal.close  pstmtLocal  null  xarLocal.endxidLocal  XAResource.TMSUCCESS  connLocal.setAutoCommittrue  System.out.printlncommit local branch  xarLocal.commitxidLocal  true   Close the resources connLocal.close  connLocal  null  connRemote.close  connRemote  null  xaConnLocal.close  xaConnLocal  null  xaConnRemote.close  xaConnRemote  null  } catch SQLException e  System.err.printlnSQL Error   e.getMessage  e.printStackTrace  } catch XAException e  System.err.printlnXA Error   e.getMessage  e.printStackTrace  } finally  if pstmtLocal  null try  pstmtLocal.close  pstmtLocal  null  } catch SQLException ignore  } if pstmtRemote  null try  pstmtRemote.close  pstmtRemote  null  } catch SQLException ignore  } if connLocal  null try  connLocal.close  connLocal  null  } catch SQLException ignore  } if connRemote  null try  connRemote.close  connRemote  null  } catch SQLException ignore  } if xaConnLocal  null try  xaConnLocal.close  xaConnLocal  null  } catch SQLException ignore  } if xaConnRemote  null try  xaConnRemote.close  xaConnRemote  null  } catch SQLException ignore  } } }}   
0;Improve transition from readonly to writable Clob representation   ;When a store stream Clob is going to be modified  it will be written out to the temporary area of Derby and represented as a TemporaryClob.The transfer of the data is done in a suboptimal manner for two reasons  o for transfer of the complete Clob  the copy method operates on the byte level and were not able to save the character length. o for transfer of parts of the Clob i.e. truncation)  we have to first decode the UTF encoding to find the byte count and then transfer the same bytes.I intend to do the following two changes  ) Add a getCharLengthIfKnowmethod to InternalClob. ) Add a UTF aware copy method to LOBStreamControl.When a complete Clob is to be copied  code like this will be executed  cachedCharLength  internalClob.getLengthIfKnown)  if cachedCharLength gt  )  use existing byteoriented copy method for best performance copy until EOF) else cachedCharLength  control.copyUTFData)When parts of a Clob is to be copied  we always use the UTF aware copy method  but we also do a cheap range check. cachedCharLength  internalClob.getLengthIfKnown)  if cachedCharLength gt   amp amp  requestedLength gt  cachedCharLength) throw EOFException)  if cachedCharLength  requestedLength)  use existing byteoriented copy method for best performance copy until EOF) else cachedCharLength  control.copyUTFDatarequestedLength) Adding the UTF aware copy method was started under DERBY  including comments on the first revision of a patch.   
0;convert checkConstraint.sql to JUnit   ;Converting CheckConstraint.sql to JUnit under supervision of Bryan Pendleton.   
0;PropertySetter isnt able to recognize JDK without version number in path   ;With empty ant.properties and JDK  installed in tmpjdk as the only JDK on the system  PropertySetter complains that its not able to set javacompile.classpath   setJdkProperties   setJdkProperties  PropertySetter environment   setJdkProperties   setJdkProperties  java.vendor  Sun Microsystems Inc.  setJdkProperties  java.home  tmpjdkjre  setJdkProperties  java.version  .._  setJdkProperties  os.name  SunOS  setJdkProperties  jlib  null  setJdkProperties  jlib  null  setJdkProperties  jlib  null  setJdkProperties  BUILD FAILED codederbytrunkbuild.xml Dont know how to set javacompile.classpath  javacompile.classpath using this environment java.vendor  Sun Microsystems Inc. java.home  tmpjdkjre java.version  .._ os.name  SunOS jlib  null jlib  null jlib  nullSince it is able to detect both that the version of the default JDK is .._ and where it is installed  setting javacompile.classpath should be trivial.If the name of the JDK directory is changed from tmpjdk to tmpjdk..  Derby is built successfully.   
0;A lock could not be obtained within the time requested error in testBTreeForwardScan_fetchRows_resumeAfterWait_nonUnique_split   ;I recently merged changes for DERBY into ... codeline revision ) and I ran the junit tests on the merged code. The tests finished with one A lock could not be obtained within the time requested. Knut suggested that I open a new jira entry for this issue. Copying his comment from DERBY here Yes  that test was added for DERBY.. It requires some coordination between two threads  so my first guess would be that there is a timing issue in the test. Please file a separate JIRA issue for this failure. Thanks. Following is the stack track for the failureThere was  error ) testBTreeForwardScan_fetchRows_resumeAfterWait_nonUnique_splitorg.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest)java.sql.SQLException A lock could not be obtained within the time requested  at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java)  at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java)  at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java)  at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java)  at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java)  at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java)  at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionErrorEmbedResultSet.java)  at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java)  at org.apache.derby.impl.jdbc.EmbedResultSet.nextEmbedResultSet.java)  at org.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest.testBTreeForwardScan_fetchRows_resumeAfterWait_nonUnique_splitIndexSplitDeadlockTest.java)  at sun.reflect.NativeMethodAccessorImpl.invokeNative Method)  at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java)  at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java)  at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)  at junit.extensions.TestDecorator.basicRunTestDecorator.java)  at junit.extensions.TestSetup.protectTestSetup.java)  at junit.extensions.TestSetup.runTestSetup.java)  at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)  at junit.extensions.TestDecorator.basicRunTestDecorator.java)  at junit.extensions.TestSetup.protectTestSetup.java)  at junit.extensions.TestSetup.runTestSetup.java)  at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) Caused by ERROR XL A lock could not be obtained within the time requested at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java)  at org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObjectConcurrentLockSet.java)  at org.apache.derby.impl.services.locks.ConcurrentLockSet.zeroDurationLockObjectConcurrentLockSet.java)  at org.apache.derby.impl.services.locks.AbstractPool.zeroDurationlockObjectAbstractPool.java)  at org.apache.derby.impl.store.raw.xact.RowLockingnohold.lockRecordForReadRowLockingnohold.java)  at org.apache.derby.impl.store.access.heap.HeapController.lockRowHeapController.java)  at org.apache.derby.impl.store.access.heap.HeapController.lockRowHeapController.java)  at org.apache.derby.impl.store.access.btree.index.BIRowLocking.lockRowOnPageBIRowLocking.java)  at org.apache.derby.impl.store.access.btree.index.BIRowLocking._lockScanRowBIRowLocking.java)  at org.apache.derby.impl.store.access.btree.index.BIRowLockingRR.lockScanRowBIRowLockingRR.java)  at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRowsBTreeForwardScan.java)  at org.apache.derby.impl.store.access.btree.BTreeScan.fetchNextGroupBTreeScan.java)  at org.apache.derby.impl.sql.execute.BulkTableScanResultSet.reloadArrayBulkTableScanResultSet.java)  at org.apache.derby.impl.sql.execute.BulkTableScanResultSet.getNextRowCoreBulkTableScanResultSet.java)  at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRowBasicNoPutResultSetImpl.java)  at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionEmbedResultSet.java)  ...  more FAILURES Tests run   Failures   Errors    
0;SYSCS_UPDATE_STATISTICS takes unnecessary table lock   ;Im using SYSCS_UTIL.SYSCS_UPDATE_STATISTICS in an application and see deadlocks similar to this one from time to timeCaused by java.sql.SQLTransactionRollbackException A lock could not be obtained due to a deadlock  cycle of locks and waiters isLock  ROW  SYSSTATISTICS    Waiting XID    S}   APP  SELECT CS.REVISION  A.NAME  CS.TIME  CS.MESSAGE  F.PATH FROM CHANGESETS CS  FILECHANGES FC  REPOSITORIES R  FILES F  AUTHORS A  FILECHANGES FC  FILES F WHERE R.PATH  ? AND F.PATH LIKE ? ESCAPE  AND F.REPOSITORY  R.ID AND A.REPOSITORY  R.ID AND CS.ID  FC.CHANGESET AND R.ID  CS.REPOSITORY AND FC.FILE  F.ID AND A.ID  CS.AUTHOR AND CS.ID  FC.CHANGESET AND FC.FILE  F.ID ORDER BY CS.ID DESC Granted XID    X} Lock  TABLE  CHANGESETS  Tablelock Waiting XID    X}   APP  alter table APP.CHANGESETS all update statistics  Granted XID    IS} . The selected victim is XID  .Here  a select statement is being reprepared because update statistics has invalidated it  but it has to wait for update statistics to finish in order to read the new statistics from SYSSTATISTICS. Then update statistics attempts to obtain an exclusive lock on the table whose indexes are being updated  but it has to wait because the select statement is holding an intention lock on the table. Both transactions wait for each other  so we have a deadlock.Since SYSCS_UPDATE_STATISTICS does not update the table  only its entries in SYSSTATISTICS  there is no need to take an exclusive table lock. If it didnt lock the table exclusively  this deadlock situation would go away.   
1;Update demos to remove references to com.ibm.db.jcc.DBDriver   ;SimpleApp.java is still refering to DB JDBC driver. I think it should be take out to reflect DB driver is no longer supported.There are also some typos in SimpleApp.java. i.e. noone  retreiving  etc.example.html that should be updated as well.Kathey mention nserverdemo also has references to the DB driver. This issue will address that as well.   
0;. Upgrade test fails SYSCS_UTIL.SYSCS_SET_XPLAIN_SCHEMA is not recognized as a function   ;The . upgrade tests are currently commented out. When the . upgrade test is enabled  it fails with the following exceptionCaused by java.sql.SQLException SYSCS_UTIL.SYSCS_SET_XPLAIN_SCHEMA is not recognized as a function or procedure. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  moreCaused by ERROR Y SYSCS_UTIL.SYSCS_SET_XPLAIN_SCHEMA is not recognized as a function or procedure. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.sql.compile.StaticMethodCallNode.bindExpressionStaticMethodCallNode.java) at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.bindExpressionJavaToSQLValueNode.java) at org.apache.derby.impl.sql.compile.CallStatementNode.bindStatementCallStatementNode.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) ...  more   
0;All Columns become Nullable when Using left join   ;Consider followingcreate table person  id varchar) not null  name varchar) not null) create table car  id varchar) not null  person_id varchar) not null  model varchar) not null  plat_no varchar) not null) When select selectp.name c.model c.plat_nofrom person pleft join car c on p.id  c.person_id) From the ResultSet  get the ResultSetMetaData and inspect each columns isNullable) value  which is always   always nullable). Expected  column p.name isNullable   not nullable)  but I get p.name isNullable   nullable)   
1;creation of FileInputStream in org.apache.derby.impl.tools.ij.Main not wrapped in privilege  block which can cause problems running under SecurityManager   ;org.apache.derby.impl.tools.ij.Main has this code where the call to FileInputStream is not wrapped in a privilege block try  in  new FileInputStreamfile  if in  null  in  new BufferedInputStreamin  utilMain.BUFFEREDFILESIZE  in  langUtil.getNewInputin  } } catch FileNotFoundException e  if Boolean.getBooleanij.searchClassPath  in  langUtil.getNewInpututil.getResourceAsStreamfile  }This can cause issues when running under SecurityManager   
1;Mutable public static variables   ;There are quite a few instances of public static fields which appear to be intended to be constant  but which are not final.The code would be safer if all the constant fields were made final.Patch to follow for some of the problem fields.The following also ought to be fixedorg.apache.derby.iapi.services.property.PropertyUtil.servicePropertyList e.g. use an accessor to lookup the values)org.apache.derby.iapi.types.JSQLType.primitiveNames ditto)   
0;compilation time did not compute    ) expected but was in testGroupBySortProps....tests.lang.XplainStatisticsTest)   ;Seen inhttpdbtg.thresher.comderbytesttrunkjvm.testingtestlogCYGWIN_NT._iunknownorg.apache.derbyTesting.functionTests.suites.All_diff.txtThere was  failure) testGroupBySortPropsorg.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest)junit.framework.AssertionFailedError compilation time did not compute    ) expectedlt gt  but waslt gt  at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.verifySensibleStatementTimingsXplainStatisticsTest.java) at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.testGroupBySortPropsXplainStatisticsTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)   
0;SQLException XJ on insert  with setCharacterStream) and autocommit off in mailjdbc test   ;I am running the . maildbc test on Linux with network server and the ... release candidate and an updated derbyTesting.jar to have just Lilys change to change the backup user I see in the test output early and often  this error inserting data into the tableSQLState XJSeverity Message You cannot invoke other java.sql.Clobjava.sql.Blob methods after calling the free method or afterClobs transaction has been committed or rolled back.java.sql.SQLException You cannot invoke other java.sql.Clobjava.sql.Blob methods after calling the free mter the BlobClobs transaction has been committed or rolled back. at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Source at org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Source at org.apache.derby.client.am.Lob.checkValidityUnknown Source at org.apache.derby.client.am.Clob.lengthUnknown Source at org.apache.derby.client.net.NetStatementRequest.computeProtocolTypesAndLengthsUnknown Source at org.apache.derby.client.net.NetStatementRequest.buildSQLDTAcommandDataUnknown Source at org.apache.derby.client.net.NetStatementRequest.writeExecuteUnknown Source at org.apache.derby.client.net.NetPreparedStatement.writeExecute_Unknown Source at org.apache.derby.client.am.PreparedStatement.writeExecuteUnknown Source at org.apache.derby.client.am.PreparedStatement.flowExecuteUnknown Source at org.apache.derby.client.am.PreparedStatement.executeUpdateXUnknown Source at org.apache.derby.client.am.PreparedStatement.executeUpdateUnknown Source at org.apache.derbyTesting.system.mailjdbc.utils.DbTasks.insertMailDbTasks.java at org.apache.derbyTesting.system.mailjdbc.tasks.Refresh.insertMailRefresh.java at org.apache.derbyTesting.system.mailjdbc.tasks.Refresh.doWorkRefresh.java at org.apache.derbyTesting.system.mailjdbc.tasks.Refresh.runRefresh.javaCaused by org.apache.derby.client.am.SqlException You cannot invoke other java.sql.Clobjava.sql.Blob metholling the free method or after the BlobClobs transaction has been committed or rolled back.The interesting thing is that the test itself is not using any Clob methods it uses setCharacterStream and also autocommit is off.Below is a code excerpt and conn.setAutoCommitfalse  PreparedStatement insertFirst  conn.prepareStatement Statements.insertStr  Statement.RETURN_GENERATED_KEYS  String name  new StringABCD  String l_name  new StringWXYZ  long s_insert  System.currentTimeMillis  for int i    i lt  num  i  String new_name  new Stringincrementname    String new_lname  new Stringdecrementl_name    insertFirst.setString  new_name  insertFirst.setString  new_lname  insertFirst.setTimestamp  new TimestampSystem .currentTimeMillis  name  new_name  l_name  new_lname  try   to create a stream of random length between  bytes and MB int clobLength  Rn.nextInt        streamReader  new LoopingAlphabetReaderclobLength  CharAlphabet.modernLatinLowercase  insertFirst.setCharacterStream  streamReader  clobLength  } catch Exception e  MailJdbc.logAct.logMsgLogFile.ERROR  thread_name      File not found Exception    e.getMessage  errorPrinte  throw e  } int rand_num  Rn.nextInt    if i  rand_num  ResultSet rs  stmt .executeQueryselect count from REFRESH.INBOX where attach_idgt   while rs.next  id_count  rs.getInt  insertFirst.setInt  rs.getInt    } rs.close  conn.setTransactionIsolationConnection.TRANSACTION_READ_COMMITTED  } else insertFirst.setInt    insertFirst .setString   This column is used only to by pass the space problem. If the problem still exists  then we are going to   have a serious issue here.*****************************************************************************************************  int result  insertFirst.executeUpdate if I connect with ij I do see some rows in the INBOX  so some inserts do seem to be happening. Kristian pointed out that this looks similar to DERBY with setAsciiStream but this looks far more serious as autocommit is off and there does not appear to be a commit  so there is no obvious workaround. I assume this is also a regression. We shouldnt be throwing this error if the user did not use any Clob methods. I will try to narrow down the reproduction and track down where the issue was introduced. Knut said DERBY goes all the way back to ... with DERBY. I dont know if it is the same case with this one.   
0;With derby client setTransactionIsolation executes and commits even if isolation has not changed   ;With in EmbedConnection.setIsolation we have a check to see if the isolation level is the same and if so just return without doing a commit public void setTransactionIsolationint level throws SQLException { if level  getTransactionIsolation return with org.apache.derby.client.am.Connection we have no such check. It would be good if the client driver acted like embedded.   
0;Attempt to reuse streams in client on insert gives protocol exception and inserts wrong data   ;If a user attempts to reuse a stream set as a parameter to a prepared statement  the statement execution should fail with SQL State XJ. Instead client fails with a protocol error and inserts wrong data. See the attached java program ReproReuseStream.java for a reproduction. Ckmarsdenreproreusestream  java ReproReuseStreamInsert row Try to insert row  with reused streamsjava.sql.SQLException Network protocol error end of stream prematurely reached  parameter . Remaining data has been padded with x. at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.client.am.SqlException.getSQLExceptionSqlException.java) at org.apache.derby.client.am.PreparedStatement.executeUpdatePreparedStatement.java) at ReproReuseStream.mainReproReuseStream.java)Caused by org.apache.derby.client.am.SqlException Network protocol error end of stream prematurely reached  parameter . Remaining data has been padded with x. at org.apache.derby.client.net.Request.writePlainScalarStreamRequest.java) at org.apache.derby.client.net.Request.writeScalarStreamRequest.java) at org.apache.derby.client.net.NetStatementRequest.buildEXTDTANetStatementRequest.java) at org.apache.derby.client.net.NetStatementRequest.writeExecuteNetStatementRequest.java) at org.apache.derby.client.net.NetPreparedStatement.writeExecute_NetPreparedStatement.java) at org.apache.derby.client.am.PreparedStatement.writeExecutePreparedStatement.java) at org.apache.derby.client.am.PreparedStatement.flowExecutePreparedStatement.java) at org.apache.derby.client.am.PreparedStatement.executeUpdateXPreparedStatement.java) at org.apache.derby.client.am.PreparedStatement.executeUpdatePreparedStatement.java) ...  moreGo ahead and commit so we can see the wrong data.ID |MNAMEMVALUE BYTEDATACHARDATA |mname amp cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccamp  mname amp  amp To workaround the issue users should not attempt to reuse streams but we should give a better message and not insert wrong data.The code was extracted from StreamingColumnTest testDerby but the commits were removed.   
0;hang in suites.all with ibm . on AIX after ttestDefaultProperties   ;The test run for ... hung in suites.All. The console output the run was with Dderby.tests.tracetrue) showed ttestDefaultProperties had successfully completed but the run was halted.ps eaf | grep java showed the process that kicked off suites.All  and a networkserver process with the following flags classpath lt classpath including derby.jar  derbytools.jar  derbyclient.jar  derbynet.jar  derbyTesting.jar  derbyrun.jar  derbyTesting.jar and junit.jargt  Dderby.drda.logConnections Dderby.drda.traceAll Dderby.drda.traceDirectory Dderby.drda.keepAlive Dderby.drda.timeSlice Dderby.drda.host Dderby.drda.portNumber derby.drda.minThreads Dderby.drda.maxThreads Dderby.drda.startNetworkServer Dderby.drda.debug org.apache.derby.drda.NetworkServerControl start h localhost p This process had been sitting for  days.After killing the NetworkServerControl process  the test continued successfully except for DERBY  fixed in trunk)  but the following was put out to the console STARTSPAWNEDSpawnedNetworkServer STANDARD OUTPUT exit code . GMT  Security manager installed using the Basic serversecurity policy. . GMT  Apache Derby Network Server  ...  )started and ready to accept connections on port ENDSPAWNED SpawnedNetworkServer STANDARD OUTPUT   
1;test nstest generates errors XBM re reencryption and  re value outside range for decimalnumeric   ;The test nstest both in embedded and networkserver) ran into a JVMbugrelated error the last few times I tried it  but with a newer jvm I notice its generating an XBM errorXBM Startup failed. An encrypted database cannot be accessed without the correct boot password. From the tests README.txt it shows it is indeed attempting to reencrypt  but this is failing.The test needs to be tightened up so it doesnt show unusual errors.The test also generates The resulting value is outside the range for the data type DECIMALNUMERIC )The tests readme and comments dont indicate this is a negative test  so this too should get tightenedcleaned up.   
1;hang on winvista with IBM . SR in NSSecurityMechanismTest   ;This is stopping my platform testing on winvista with ibm . SR.During the initial run of suites.All  I got testNetworkServerSecurityMechanism java.net.SocketException Connection reset by peer setsockopt at java.net.PlainSocketImpl.socketSetOptionNative Method) at java.net.PlainSocketImpl.setOptionPlainSocketImpl.java) at java.net.Socket.setKeepAliveSocket.java) at org.apache.derby.impl.drda.ClientThread.runUnknown Source)Rerunning suites.All gave the same error.There is only  java process active amp  hanging.Running just the test itself also results in a hang but there was so far  its been sitting unchanged for  hours) java.net.SocketException.   
0;SQLSTATE  NullPointerException) at inner self join and valuex  x...)   ;create table xyz c int  c int) insert into xyz values ) select * from xyz t inner join xyz t on t.c  t.c where valuet.c  t.c)   causes the following errorFEHLER  Bei der Auswertung eines Ausdrucks wurde die Ausnahme java.lang.NullPointerException ausgeloest.FEHLER XJ JavaAusnahme  java.lang.NullPointerException.   
0;ASSERT FAILED calling setTransactionIsolation checking isolation_  level   on  pooled connection   ;For DERBY  I thought I would do a little testing to understand the server round trips in various scenarios for pooled connections. So I wrote the small attached program ConnReuse.java and hit this assertion in clientException in thread main org.apache.derby.shared.common.sanity.AssertFailure ASSERT FAILED at org.apache.derby.shared.common.sanity.SanityManager.ASSERTSanityManager.java) at org.apache.derby.client.am.Connection.setTransactionIsolationXConnection.java) at org.apache.derby.client.am.Connection.setTransactionIsolationConnection.java) at org.apache.derby.client.am.LogicalConnection.setTransactionIsolationLogicalConnection.java) at TestConnReuse.mainTestConnReuse.java)To run the program on trunkjava org.apache.derby.drda.NetworkServerControl startjava TestConnReuse.This needs more investigation  but I thought I would go ahead and log the bug. I tried this only on trunk. I have not yet Tried it on the branches. Tried it with Lilys DERBY patch. Tried it with embedded. Tried actually doing something with the prior logical connection which might be related.   
0;Copy table content with INSERT INTO table SELECT FROM ...) statement leads to corrupt data   ;I had to change a the primary key of a table and used ddlutils to do so. Ddlutils recreated the table to perform this task.After the schema conversion the row data of the changed table were corrupted. The values of the last table column were filled with values from other rowsAfter performing a few tests I could break down the problem to the SQL statement INSERT INTO table SELECT FROM ...)To reprocude the effect do the following. unpack attached database rmdb.zip. connect to the database with embedded driver  User IGEL Password test . read data of an example row from database select * from stringrangenew where classname  x.xserver.colordepth result is  x.xserver.colordepth          . now copy the data to the second table column INSTANCENR has been added to this table) INSERT INTO STRINGRANGENEW_ CLASSNAME FIRMWAREID RVALUE) SELECT CLASSNAME FIRMWAREID RVALUE FROM STRINGRANGENEW . select data of example row from second table select * from stringrangenew_ where classname  x.xserver.colordepth result is  x.xserver.colordepth    CCW  CW  XX gt  value of last column is not the same as in orignal tableHere some additional information i worked out during my tests if you change the copy statement to include the additional column INSTANCENR  the copied data are correct. delete from STRINGRANGENEW_  INSERT INTO STRINGRANGENEW_ CLASSNAME FIRMWAREID  INSTANCENR  RVALUE) SELECT CLASSNAME FIRMWAREID    RVALUE FROM STRINGRANGENEW  if you select the rows only SELECT CLASSNAME FIRMWAREID RVALUE FROM STRINGRANGENEW  the result shows correct dataNote The effect is not restricted to this row but also applies to other rows. But its always the same rows  that get corrupted.   
0;Implement CROSS JOIN   ;Implement the CROSS JOIN syntaxSELECT * from t CROSS JOIN t as an alternative syntax toSELECT * FROM t  t  This should be pretty straight forward and ease the migration of SQL code to Derby.   
0;TableFunctions provide no information to limit underlying query   ;The API specification for TableFunctions cannot provide information to the implementer of the TableFunction about the details of the query. For example a) I defined a table function named MyFunction with columns a b  amp  cb) I bind the table function properly using the CREATE FUNCTION SQL.User executes the following SQLselect a b from table  MyFunction) ) where c  Without passing the column list andor where clause as arguments to the table function  my implementation can not know that it only needs two of the three columns  and only rows where c  .For TableFunctions that are built to integrate distantlegacy data  the cost of the query can be prohibitive. It would be better if information regarding the columns in the select and restrictions from the where clause could be passed to the developer.   
0;NullPointerException when preparing LEFT OUTER JOIN between VALUES statements   ;ij version .ijgt  connect jdbcderbydb createtrue ijgt  select a.* from values a) b) null)) a left outer join values c) d)) b on  ERROR XJ Java exception  java.lang.NullPointerException.   
0;Replace Utils.min and Utils.max in the client driver with standard methods in java.lang.Math   ;The client has a utility class implementing functions for choosing the smallest and the largest int. These functions are already defined in java.lang.Math  and should be used instead because they are more familiar and because there is no need to duplicate the functionality.   
0;Wrong result for simple join when index is created   ;In the example below  the first SELECT has correct result. After the index is created  the second SELECT gives wrong result.ijgt  CREATE TABLE t i INT  j INT)  rows insertedupdateddeletedijgt  CREATE TABLE t i INT  j INT)  rows insertedupdateddeletedijgt  INSERT INTO t VALUES   ) NULL  )  rows insertedupdateddeletedijgt  INSERT INTO t VALUES   )  row insertedupdateddeletedijgt  SELECT * FROM t INNER JOIN t ON t.j  t.i) OR t.j  t.j) I |J |I |J  | | | NULL | | |  rows selectedijgt  CREATE INDEX ix ON tj)  rows insertedupdateddeletedijgt  SELECT * FROM t INNER JOIN t ON t.j  t.i) OR t.j  t.j) I |J |I |J  | | |  row selected   
0;JavaDoc warnings in several classes in implsqlexecuterts   ;A raw nonASCII character was introduced in several classes as part of a commit for DERBY.These should be removed to get rid of the JavaDoc warnings.I plan to enable JavaDoc warnings reporting in the Hudson Derby build job.   
0;Infinite loop in PredicateList.joinClauseTransitiveClosure)   ;This sequence of statements triggers an infinite loop in PredicateList.joinClauseTransitiveClosure) and never completescreate table c a int  b int  c int) create table cc aa int) select * from cc t  c t  cc t where t.aa  t.a and t.aa  t.b and t.aa  t.c    
0;NullPointerException in RIGHT JOIN with NOT BETWEEN   ;ijgt  create table tx int)  rows insertedupdateddeletedijgt  create table tx int)  rows insertedupdateddeletedijgt  insert into t values )  row insertedupdateddeletedijgt  select * from t right join t on t.x  t.x where t.x not between  and  X |X ERROR  The exception java.lang.NullPointerException was thrown while evaluating an expression.ERROR XJ Java exception  java.lang.NullPointerException.   
0;NullPointerException when comparing indexed column with result from a set operation   ;Im reporting this issue on behalf of Bernt M. Johnsen.If an indexed column is compared with a UNION query or some other set operation)  a NullPointerException is raised  as can be seen by this sequence of statements in ijijgt  create table ta int not null primary key  b int)  rows insertedupdateddeletedijgt  select * from t where a lt  values  union values ) ERROR XJ Java exception  java.lang.NullPointerException.   
0;Transformation to inner join not performed for certain threeway joins   ;In the CROSS JOIN section in the reference manual httpdb.apache.orgderbydocsdevrefrrefsqljcrossjoin.html) there are three examples that are supposed to be equivalent. However  the performance differs significantly between the different queries.The queries use the tours db and look like this)SELECT * FROM CITIES LEFT OUTER JOIN FLIGHTS CROSS JOIN COUNTRIES) ON CITIES.AIRPORT  FLIGHTS.ORIG_AIRPORT WHERE COUNTRIES.COUNTRY_ISO_CODE  US)SELECT * FROM CITIES LEFT OUTER JOIN FLIGHTS INNER JOIN COUNTRIES ON  ON CITIES.AIRPORT  FLIGHTS.ORIG_AIRPORT WHERE COUNTRIES.COUNTRY_ISO_CODE  US)SELECT * FROM CITIES LEFT OUTER JOIN SELECT * FROM FLIGHTS  COUNTRIES) S ON CITIES.AIRPORT  S.ORIG_AIRPORT WHERE S.COUNTRY_ISO_CODE  USWhen executed in ij  ) and ) need  seconds to complete  whereas ) completes in  ms.The query plans for ) and ) use nested loop joins and table scans. ) uses a combination of hash join and nested loop join  and index scans as well as table scans.It looks like ) has been rewritten from a left outer join to an inner join internally. This is fine because all rows that have the rightside columns filled with NULLs will be filtered out by the predicate S.COUNTRY_ISO_CODEUS  so the extra rows generated by the outer join will not be returned.This optimization should also be possible for ) and ). We should improve the logic so that those joins are transformed too. The transformation happens in HalfOuterJoinNode.transformOuterJoins).   
0;NullPointerException when USING clause contains all columns in both join tables   ;ijgt  create table tx int)  rows insertedupdateddeletedijgt  select t.  t. from t t join t t using  ERROR XJ Java exception  java.lang.NullPointerException.This statement should have raised an exception because both t.* and t.* expand to no columns. See DERBY.   
0;Scalar subquery erroneously rejected for not returning exactly one row   ;This sequence of statements causes an error because the scalar subquery supposedly doesnt return exactly one row  even though it does return exactly one rowijgt  create table t x int unique  y int)  rows insertedupdateddeletedijgt  insert into t values  )  row insertedupdateddeletedijgt  select * from t where x gt  values  union select y from t where ) ERROR  Scalar subquery is only allowed to return a single row.ijgt  values  union select y from t where     row selectedBefore DERBY  the problematic statement would have caused a NullPointerException.   
0;Make getNegation) abstract in BinaryComparisonOperatorNode and UnaryComparisonOperatorNode   ;Both BinaryComparisonOperatorNode and UnaryComparisonOperatorNode have a method called getNegation) with the following code * Keep the compiler happy  this method should never be called. We should always be calling the method in a subclass. * if SanityManager.DEBUG) SanityManager.ASSERTfalse  expected to call getNegation) for subclass   getClass).toString))  return this Instead of relying on asserts to detect missing method overrides at runtime  we should make the methods abstract so that such errors are detected by the compiler.   
0;NullPointerException with JOIN...USING and invalid table name in select list   ;ij version .ijgt  connect jdbcderbymemorydb createtrue ijgt  create table ta int  b int  c int)  rows insertedupdateddeletedijgt  select t.* from t t join t t using a) ERROR XJ Java exception  java.lang.NullPointerException.java.sql.SQLException Java exception  java.lang.NullPointerException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.javaExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.tools.ij.ij.executeImmediateij.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)Caused by java.sql.SQLException Java exception  java.lang.NullPointerException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  moreCaused by java.lang.NullPointerException at org.apache.derby.impl.sql.compile.JoinNode.getAllResultColumnsJoinNode.java) at org.apache.derby.impl.sql.compile.FromList.expandAllFromList.java) at org.apache.derby.impl.sql.compile.ResultColumnList.expandAllsAndNameColumnsResultColumnList.java) at org.apache.derby.impl.sql.compile.ResultColumnList.bindExpressionsResultColumnList.java) at org.apache.derby.impl.sql.compile.SelectNode.bindExpressionsSelectNode.java) at org.apache.derby.impl.sql.compile.DMLStatementNode.bindExpressionsDMLStatementNode.java) at org.apache.derby.impl.sql.compile.DMLStatementNode.bindDMLStatementNode.java) at org.apache.derby.impl.sql.compile.CursorNode.bindStatementCursorNode.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) ...  moreThe query is expected to fail because the table name in t.* does not match any of the joined tables)  but not with a NullPointerException. A similar query with ON instead of USING fails more gracefullyijgt  select t.* from t t join t t on t.at.a ERROR X T is not an exposed table name in the scope in which it appears.   
0;Add proper delete mechanism for inmemory databases   ;The current mechanism for deleting inmemory databases isnt good enough  and a proper one must be added.It is also important to be able to delete inmemory databases  since they occupy valuable main memory that should be discarded when the database is no longer needed.I intend to implement the mechanism by using the JDBC connection URLjdbcderbymemorymyDatabase deletetrue  userX passwordY The connection attempt will throw an exception in any case  either because the request failed or because it succeeded.Reasons for a failure can be invalid user andor password  lacking encryption attributes  or conflicting attributes.For the time being  only the database owner will be allowed to delete databases note do we have a way to controllimit inmemory database creation?)   
0;Memory leak when attempting to boot nonexisting database with the inmemory back end   ;When attempting to boot a nonexisting database with the inmemory back end  a DataStore is created and referenced by a map. Since the database doesnt exist  Derby wont use the DataStore again and it will hang around indefinitely in VFMemoryStorageFactory or until the same database is actually created  in which case the data store will be used).FYI  storage factory instances are instantiated liberally  including for the same service i.e. six instances of VFMemoryStorageFactory may be created to boot jdbcderbymemorymyDB).   
0;TableView T already exists in Schema APP in lang.DropTableTest on phoneMEcvm   ;See httpdbtg.foundry.sun.comderbytestDailyjavaMEtestingLimitedtestSummary.htmlhttpdbtg.foundry.sun.comderbytestDailyjavaMEFailReports_bySig.html same signature as DERBY  org.apache.derbyTesting.functionTests.tests.lang.DropTableTest  org.apache.derbyTesting.functionTests.tests.lang.CheckConstraintTest  DERBY Closed  signature  Caused by test not cleaning up and phoneMEcvm executing tests in a different order than other jvms Introduced by r  DERBY.I am testing a fix.   
0;Evaluation of default value and identity in an INSERT result set evaluated too early.   ;In contrast to generated column  which are evaluated when the next row from the result set to be inserted  currently default values and identity columns are generated early  that is as part of avaluating the subquery SELECT or VALUES as the case may be). This does not currently cause a user visible bug in Derby  but it lies behind DERBY and the effect Bryan observed in DERBY.Additionally  early computation has given rise to much special handling and ensuing bugs  cf. DERBY  DERBY  DERBY  DERBY and others.DERBY requires this fix for correct behaviour with INSERT.See alsohttpsissues.apache.orgjirabrowseDERBY?focusedCommentIdamp pagecom.atlassian.jira.plugin.system.issuetabpanelsAcommenttabpanelaction_   
0;Wrap rollback in exception handlers in trycatch   ;Avoid this pattern everywhere }catchSQLException se issue a rollback on any errors conn.rollback  throw se  }because an error in rollback will shadow the original exception.   
0;Prepared statement failure with CLOB Stream has already been read and endoffile reached and cannot be reused.   ;Possibly related to ?We have encountered an error when using Prepared Statements and CLOBs. I have readhttpdb.apache.orgderbypapersJDBCImplementation.htmlsetAsciiStreamCsetBinaryStreamCsetCharacterStreamBut it does not seem applicable  as we are not reusing a stream.The environment is this. Java . Derby .... Bitronix JTA ..Were actually using Hibernate  but I eliminated it from the equation and the problem persists).A summary of the failure flow is this. Start a transaction. Obtain a connection from a pool of connections for this test  the pool size is pinned at ). Prepare a statement that inserts a CLOB.. Set the parameters. Add the prepared statement to a batch but we only batch    this is to emulate what hibernate is doing as closely as possible).. Execute the batch.Everything up to this point works.. Repeat steps . But this time  the connection will be reused from the pool  and the statement will be gotten from a prepared statement cache maintained by bitronix). I.e. the prepared statement is reused.. Observe the following failureorg.apache.derby.client.am.BatchUpdateException Nonatomic batch failure. The batch was submitted  but at least one exception occurred on an individual member of the batch. Use getNextException) to retrieve the exceptions for specific batched elements. at org.apache.derby.client.am.Agent.endBatchedReadChainUnknown Source) at org.apache.derby.client.am.PreparedStatement.executeBatchRequestXUnknown Source) at org.apache.derby.client.am.PreparedStatement.executeBatchXUnknown Source) at org.apache.derby.client.am.PreparedStatement.executeBatchUnknown Source) at bitronix.tm.resource.jdbc.JdbcPreparedStatementHandle.executeBatchJdbcPreparedStatementHandle.java) at org.dancernetworks.TestFailure.doInsertTestFailure.java) at org.dancernetworks.TestFailure.doPreparedTestFailure.java) at org.dancernetworks.TestFailure.mainTestFailure.java)Nov     PM bitronix.tm.BitronixTransactionManager shutdownINFO shutting down Bitronix Transaction ManagerAn IOException was thrown when reading a java.sql.String from an InputStream.java.sql.SQLException An IOException was thrown when reading a java.sql.String from an InputStream. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedResultSet.noStateChangeExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.transferParametersUnknown Source) at org.apache.derby.jdbc.XAStatementControl.getRealPreparedStatementUnknown Source) at org.apache.derby.iapi.jdbc.BrokeredPreparedStatement.getPreparedStatementUnknown Source) at org.apache.derby.iapi.jdbc.BrokeredPreparedStatement.getStatementUnknown Source) at org.apache.derby.iapi.jdbc.BrokeredStatement.closeUnknown Source) at org.apache.derby.impl.drda.DRDAStatement.closeUnknown Source) at org.apache.derby.impl.drda.Database.closeUnknown Source) at org.apache.derby.impl.drda.Session.closeUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.closeSessionUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.runUnknown Source)Caused by java.sql.SQLException An IOException was thrown when reading a java.sql.String from an InputStream. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source) ...  moreCaused by java.sql.SQLException Java exception Stream has already been read and endoffile reached and cannot be reused. java.io.EOFException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) ...  moreCaused by java.io.EOFException Stream has already been read and endoffile reached and cannot be reused. at org.apache.derby.iapi.types.ReaderToUTFStream.readUnknown Source) at java.io.DataInputStream.readUnsignedShortDataInputStream.java) at org.apache.derby.iapi.types.SQLChar.readExternalUnknown Source) at org.apache.derby.iapi.types.SQLChar.getStringUnknown Source) at org.apache.derby.iapi.types.SQLChar.setFromUnknown Source) at org.apache.derby.iapi.types.DataType.setValueUnknown Source) at org.apache.derby.impl.sql.GenericParameterValueSet.transferDataValuesUnknown Source) at org.apache.derby.impl.sql.execute.BaseActivation.setParametersUnknown Source) at org.apache.derby.impl.sql.GenericActivationHolder.setParametersUnknown Source) ...  moreAttached is an archived Eclipse project of a selfcontained reproduction. It includes everything needed to run  including the Bitronix .. jar.   
0;Forbid ordering operations on UDTs   ;Knut has provided an example of an ordering operation which succeeds on a UDT in his Dec.    comment on DERBY.   
0;Use helper methods from IdUtil instead of TupleDescriptor.quoteProtectName)   ;TupleDescriptor.quoteProtectName) duplicates functionality provided by the o.a.d.iapi.util.IdUtil class. The method should be removed  and its callers should use IdUtil.normalToDelimited) or IdUtil.mkQualifiedName) instead.   
0;Selecting  projecting a column whose value is represented by a stream more than once fails   ;Selecting  projecting a column whose value is represented as a stream more than once crashes Derby  i.e.ResultSet rs  stmt.executeQuerySELECT clobValue AS clobOne  clobValue AS clobTwo FROM mytable) rs.getString) rs.getString) After having looked at the class of bugs having to do with reuse of stream data types  I now have a possible fix. It fixes DERBY  DERBY and DERBY there may be more Jiras).The core of the fix is cloning certain DVDs being selectedprojected in multiple columns. There are two types of cloning A) materializing clone B) stream cloneA) can be implemented already  B) requires code to clone a stream without materializing it. Note that the streams Im talking about are streams originating from the store.Testing revealed the following the cost of the checks performed to figure out if cloning is required seems acceptable negligible?) in some cases A) has better performance than B) because the raw data only has to be decoded once stream clones are preferred when the data value is above a certain size for several reasons avoids potential outofmemory errors and in case of a server environment  it lowers the memory pressure) avoids decoding the whole value if the JDBC streaming APIs are used to access only parts of the value avoids decoding overall in cases where the value isnt accessed by the client  user this statement conflicts with the performance observation above)We dont always know the size of a value  and since the fix code deals with all kinds of data types  it is slightly more costly to try to obtain the size.What do people think about the following goal statement?Goals Phase  ) No crashes or wrong results due to stream reuse when executing duplicate column selections minus goal ) ) Minimal performance degradation for nonduplicate column selections ) Only a minor performance degradation for duplicate [ LONG  VAR]CHAR  FOR BIT DATA  column selections Phase  ) No outofmemory exceptions during execution of duplicate column selections of BLOBCLOB ) Optimize BLOBCLOB cloningI think phase  can proceed by reviewing and discussing the prototype patch. Phase  requires more discussion and work see DERBY).A note about the bug behavior factsSince this issue is the underlying cause for several other reported issues  I have decided to be liberal when setting the bug behavior facts. Depending on where the duplicate column selection is used  it can cause both crashes  wrong results and data corruption.   
0;Use AtomicLong for XactFactory.tranId   ;Dyre Tjeldvoll posted some results on DERBY that indicated that some types of load might cause contention on XactFactory.tranId a shared long)  and suggested that it was replaced with a java.util.concurrent.atomic.AtomicLong on the platforms that support java.util.concurrent.*.Im splitting this issue out from DERBY so that the two possible improvements reported there can be addressed independently.   
0;Add importexport support for UDTs.   ;Importexport should work on UDTs.   
0;Nullpointer when performing INSERT INTO   ;To replicate  execute the following  queriesCREATE TABLE feed fst INTEGER  snd VARCHAR)  UNIQUEfst))INSERT INTO feed VALUES   fst)CREATE TABLE tbl col INTEGER  col INTEGER NOT NULL REFERENCES feed fst) ON DELETE RESTRICT ON UPDATE RESTRICT)INSERT INTO tblcol) SELECT  FROM feedThe result of the last INSERT INTO query isjava.lang.NullPointerException at org.apache.derby.impl.store.access.btree.BTreeScan.initScanParamsUnknown Source) at org.apache.derby.impl.store.access.btree.BTreeScan.reopenScanUnknown Source) at org.apache.derby.impl.sql.execute.TableScanResultSet.reopenScanControllerUnknown Source) at org.apache.derby.impl.sql.execute.TableScanResultSet.reopenScanControllerUnknown Source) at org.apache.derby.impl.sql.execute.TableScanResultSet.reopenCoreUnknown Source) at org.apache.derby.impl.sql.execute.BulkTableScanResultSet.reopenCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.reopenCoreUnknown Source) at org.apache.derby.impl.sql.execute.NormalizeResultSet.reopenCoreUnknown Source) at org.apache.derby.impl.sql.execute.InsertResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUnknown Source)   
0;Column list size mismatch with ORDER BY in INSERT statement   ;I see this error on trunk revision )ijgt  create table tx varchar))  rows insertedupdateddeletedijgt  insert into t select * from select * from sysibm.sysdummy order by lengthibmreqd)) t ERROR X The number of columns in the derived column list must match the number of columns in table T.The statement succeeds if I remove the ORDER BY clauseijgt  insert into t select * from select * from sysibm.sysdummy) t  row insertedupdateddeleted   
0;jME test failures relating to runtimeStatisticsParser   ;After my change for DERBY to the runtimeStatisticsParser  the IBM tests show  errors and the Sun tests   because Ive used the String.split method which isnt available with jME.For example ) testDynamicLikeOptimizationorg.apache.derbyTesting.functionTests.tests.lang.DynamicLikeOptimizationTest)java.lang.NoSuchMethodError javalangString.splitLjavalangString[LjavalangString  at org.apache.derbyTesting.junit.RuntimeStatisticsParser.getStartPositionRuntimeStatisticsParser.java) at org.apache.derbyTesting.junit.RuntimeStatisticsParser.lt initgt RuntimeStatisticsParser.java) at org.apache.derbyTesting.junit.SQLUtilities.getRuntimeStatisticsParserSQLUtilities.java) at org.apache.derbyTesting.functionTests.tests.lang.DynamicLikeOptimizationTest.testDynamicLikeOptimizationDynamicLikeOptimizationTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)The runtimeStatisticsParser code needs to be adjusted.   
0;Document and clarify the use of DataValueDescriptor.setValueInputStream int)   ;The usage of the method DataValueDescriptor.setValueInputStream stream  int length) is unclear. The intended use seems to be to pass on the known length of an input stream set from the JDBClayer i.e. setBinaryStream).There seems to be two distinct cases the logical length of the stream is known the logical length of the stream is not knownUsing  when the length is not known seems to be an established pattern.   
0;Refactor and extend data type cloning facilities   ;With the increased use of streams to represent data values  the cloning facilities needs to be improved.Unless I get pushback  I will proceed by producing patches to reach the following goals move the functionality provided by CloneableObject into DataValueDescriptor all classes implementing CloneableObject also implements DataValueDescriptor) introduce the cloning methods cloneValue  cloneState and cloneHolder all in DataValueDescriptor  see description below) Note that they all return a usable DVD. Im all ears for better names for the clone methods another suggestion mentioned is cloneDeep  cloneHalfDeep  and cloneShallow).NOTE See comment below  the method names changed during the course of development.cloneValue lt deepgt  new method  functionality was present through combined calls to the DVD public interface)  a DVD obtained through cloneValue is independent of other DVDs and the state of the Derby store the data value will be materializedcloneState lt halfDeepgt  ~ DataValueDescriptor.getClone) a DVD obtained through cloneState is independent of other DVDs  but may depend on the state of the Derby store due to references to store streams) the data value will be materialized if the value is represented by a noncloneable stream or if Derby believes materializing the value is more appropriate than keeping the stream representationcloneHolder lt shallowgt  ~ CloneableObject.cloneObject) a DVD obtained through cloneHolder is dependent on the original DVD and its clones made through cloneHolder. If one of the DVDs changes its state  all of them will be affected. Will also be dependent on the state of the Derby store if there are references to store streams. the data value will never be materialized due to cloneHolder being invokedFor many of the data types  cloneState and cloneHolder will forward to cloneValue.cloneState will be used the most. cloneValue is currently only required in the sorter. cloneHolder is required for performance reasons and maybe to avoid OOME) when DVDs pass through temporary holders BackingStoreHashtable  TemporaryRowHolderImpl). I have not gone through all the usages of cloneState to see if any of them can be  or has to be  replaced with another clonecall.The ability to clone store streams will be added by Mikes patch attached to DERBY. New method namesIt turned out that using only two methods was sufficientcloneHolder lt shallowgt  as above)cloneValueboolean forceMaterialization) lt halfDeep or deepgt Basically  cloneValuefalse) equals cloneState) above  and cloneValuetrue) equals cloneValue) above.   
0;If the CREATE TRIGGER does not have the REFERENCING clause  then there is no need to keep before and after values for the triggering table   ;In order for the trigger action to have access to before and after values of the triggering table  the CREATE TRIGGER should use the REFERENCING clause. Without the REFERENCING clause  old and new values of triggering table cant be accessed by the trigger action. Based on this  we can improve Derby memory utilization by not keeping old and new values if REFERENCING clause is missing. It will be good to see if the code already does this optimization and if not  then introducing this optimization will definitely be very useful when the triggering table could have LOB columns.   
0;Make it possible to put the optional clauses of a CREATE SEQUENCE statement in the arbitrary order allowed by the SQL Standard   ;The current syntax for CREATE SEQUENCE requires that the optional clauses appear in a fixed order. The SQL Standard is more flexible here.   
0;Avoid materialization where possible when cloning CollatorSQLClob   ;Cloning a CollatorSQLClob results in always materializing the value. Since CLOBs can be very large  this should be avoided. There should now be sufficient functionality to do this  see SQLClob.   
0;test__tableFunctionColumns fails with weme JME) with java.lang.NoClassDefFoundError java.sql.DriverManager   ;Starting Friday Feb   testing svn   IBM weme . fails as follows.httppeople.apache.org~myrnavlderby_test_resultsmainwindowstestlogweme.suites.All_diff.txtIt would appear that either the test needs to be disabled for JME or DriverManager use needs to be removed from the test.) test__tableFunctionColumnsorg.apache.derbyTesting.functionTests.tests.lang.UDTTest)java.sql.SQLException The exception java.lang.NoClassDefFoundError java.sql.DriverManager was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQueryUnknown Source) at org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsHelper.assertResultsGeneratedColumnsHelper.java) at org.apache.derbyTesting.functionTests.tests.lang.UDTTest.test__tableFunctionColumnsUDTTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Caused by java.sql.SQLException Java exception java.sql.DriverManager java.lang.NoClassDefFoundError. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) ...  moreCaused by java.lang.NoClassDefFoundError java.sql.DriverManager at org.apache.derbyTesting.functionTests.tests.lang.UDTTest.hashmapReaderUDTTest.java) at org.apache.derby.exe.acbdfxxaxbefexdbd.gUnknown Source) at java.lang.reflect.AccessibleObject.invokeLAccessibleObject.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeUnknown Source) at org.apache.derby.impl.sql.execute.VTIResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) ...  more   
0;would like an alternative location for ant.properties   ;The current build.xml directs ant to look for a file ant.properties in user.home. This can get confusing when you have multiple versions on the same machine.Ive worked around this in the past by pointing ant at other directories with Duser.home...  but it would be easier to have another place set up  I dont really like changing user.home.We could add another line to build.xml  e.g.  for trunks current build.xml@@     @@ lt  Set Properties gt  lt  User settings gt  lt property fileant.propertiesgt  lt property fileuser.home}ant.propertiesgt  lt  Set property lib dir gt  lt property nameproperties.dir valuetoolsantpropertiesgt This would make ant look first for ant.properties in the same directory as the top level build.xml  and secondly for the one in user.home.If the community agrees this would be ok  Id like to make this change and backport it all the way to ..By having an additional place wed not cause incompatibilities to other build processes except if someone has put an ant.properties file in the top of the checked out tree.If we do this  I think its up to the developers to ensure that theres not  ant.properties files that are conflicting.   
0;NPE in JBitSet   ;A NPE occurs at org.apache.derby.iapi.util.JBitSet.or).A NPE occured at the same location before httpissues.apache.orgjirabrowseDERBYThe bug was confirmed by Bryan Pendleton to show in the HEAD as well httpmailarchives.apache.orgmod_mboxdbderbyuser.mboxCBFE.@amberpoint.comETo reproduceCREATE TABLE ABC ID int PRIMARY KEY NOT NULL) CREATE TABLE DEF ID int PRIMARY KEY NOT NULL) SELECT * FROM ABC tWHERE SELECT DISTINCT t.ID FROM DEF t)  IN SELECT t.ID FROM DEF t) Leads to error message Error DERBY SQL error SQLCODE   SQLSTATE XJ  SQLERRMC java.lang.NullPointerExceptionXJ.USQLState XJErrorCode Stacktracejava.lang.NullPointerException at org.apache.derby.iapi.util.JBitSet.orUnknown Source) at org.apache.derby.impl.sql.compile.OptimizerImpl.lt initgt Unknown Source) at org.apache.derby.impl.sql.compile.LevelOptimizerImpl.lt initgt Unknown Source) at org.apache.derby.impl.sql.compile.LevelOptimizerFactoryImpl.getOptimizerImplUnknown Source) at org.apache.derby.impl.sql.compile.OptimizerFactoryImpl.getOptimizerUnknown Source) at org.apache.derby.impl.sql.compile.ResultSetNode.getOptimizerUnknown Source) at org.apache.derby.impl.sql.compile.SelectNode.optimizeUnknown Source) at org.apache.derby.impl.sql.compile.SubqueryNode.optimizeUnknown Source) at org.apache.derby.impl.sql.compile.SubqueryList.optimizeUnknown Source) at org.apache.derby.impl.sql.compile.SelectNode.optimizeUnknown Source) at org.apache.derby.impl.sql.compile.DMLStatementNode.optimizeStatementUnknown Source) at org.apache.derby.impl.sql.compile.CursorNode.optimizeStatementUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at org.apache.derby.impl.drda.DRDAStatement.prepareUnknown Source) at org.apache.derby.impl.drda.DRDAStatement.explicitPrepareUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.parsePRPSQLSTTUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.processCommandsUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.runUnknown Source)Cleanup action completed   
1;Allow database user to execute stored procedures with same permissions as database owner andor routine definer   ;Curretnly there is no way to hide data and database structure in embedded derby from the end user. One way to accomplish the above requirement is as follows. Create encrypted database so data is protected. Enable authentication and sql authorization in database. Create two users  dbUser and dbOwner. Store application logic as stored procedure in the databse so dbUser does not know what tables are accecced by the application logic  thus hiding table structure. Revoke select permission from dbUser so he cannot describe tables thus protecting table structures. Give only Execute permissions on stored procedures to dbUserThe above steps will ensure that data and data structure is hidden when application is delivered to end user.The problem is  if user does not have select permission  the stored procedures will not execute. So I am requesting the following enhancement to DerbyIf dbOwner has given Execure permission to stored procecure to a dbUser  then allow stored procedure to execute even if the dbUser has no select permission. In otherwords  When dbUser calls stored procedure  database will use dbOwners authorization to execute stored procedure rather than dbUsers. This may be implemented by creating new permission called RunAsDbOwner.DbOwner can then grant permission to dbUser to execute a stored procedure with RunAsDbOwner.If this is implemented  applications can be created which will truely hide the database structure and data from end users. Database will behave as a blackbox with only inout data exposed in stored procedures.   
0;Remove langscrollCursors.sql   ;langscrollCursors.sql was converted to JUnit in DERBY. The canons were removed  but the original sql test file is still in the code. The sql file should also be removed.   
0;Complation of prepared statement results in Syntax Error   ;In attempting to upgrade our product from Derby ... to ...  I simply replaced the derby jars  no change to java environment or code. I now experience a Syntax Error when preparing a statement that previously worked correctly.This statementSELECT Offset  CMFragmentOID  CMContentOID  FragmentLength  Fragment FROM CMFragment  WHERE CMContentOID  ? AND Offset BETWEEN  SELECT Offset FROM CMFragment WHERE CMContentOID  ? AND Offset lt  ? AND Offset  FragmentLength gt  ?)  AND SELECT Offset FROM CMFragment WHERE CMContentOID  ? AND Offset lt  ? AND Offset  FragmentLength gt  ?) ORDER BY Offset ASCWhich should evaluate to the following after the parameters are providedSELECT Offset  CMFragmentOID  CMContentOID  FragmentLength  Fragment FROM CMFragment  WHERE CMContentOID   AND Offset BETWEEN  SELECT Offset FROM CMFragment WHERE CMContentOID   AND Offset lt   AND Offset  FragmentLength gt  )  AND SELECT Offset FROM CMFragment WHERE CMContentOID   AND Offset lt   AND Offset  FragmentLength gt  ) ORDER BY Offset ASCFails withCaused by java.sql.SQLSyntaxErrorException Syntax error Encountered Offset at line   column . at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at com.paisley.foundation.sql.decorator.BaseConnectionDecorator.prepareStatementBaseConnectionDecorator.java) at com.paisley.foundation.sql.decorator.batchvalidator.BatchValidatorConnection.prepareStatementBatchValidatorConnection.java) at com.paisley.foundation.sql.decorator.BaseConnectionDecorator.prepareStatementBaseConnectionDecorator.java) at com.paisley.foundation.database.connection.DatabaseConnection.prepareStatementDatabaseConnection.java) at com.paisley.foundation.persistent.sql.PersistentQuery.executePersistentQuery.java) at com.paisley.rnj.content.model.CMFragment.loadCMFragment.java) ...  moreCaused by java.sql.SQLException Syntax error Encountered Offset at line   column . at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source) ...  moreCaused by ERROR X Syntax error Encountered Offset at line   column . at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.sql.compile.ParserImpl.parseStatementUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementUnknown Source) ...  moreThe failure position indicated is in this clause AND Offset  FragmentLength gt  ?This statement does work correctly in .... It also works as a direct SQL statement  if I dont use a prepared statement  but execute the SQL above.   
0;failures in ij test with cdcfoundation ibms weme .)   ;The test ij.sql from derbyall is failing for weme. like so     Start ij jdkWECE JME Foundation Specification v. derbyallderbytools   *** dellt  IJ ERROR Unable to establish prepared statement Sagt  IJ ERROR Unable to establish prepared statement S@CONNECTIONTest Failed. End ij jdkWECE JME Foundation Specification v. derbyallderbytools   ***    I think this is expected after the change r | rhillegas |    Wed   Feb ) |  lineDERBY Commit Sylvain Lerouxs patch which adds qualified identifiers to ij.Looks like all thats needed is an update of javatestingorgapachederbyTestingfunctionTestsmasterj_foundationij.out.   
0;Cannot use dblook on softupgraded database TableView SYS.SYSSEQUENCES does not exist.   ;I tried to use dblook on trunk to dump the schema of a database created with Derby .. dblook printed the following message  Timestamp  .  Source database is db  Connection URL is jdbcderbydb  appendLogs false  Note At least one unexpected errorwarning message was  encountered during DDL generation. See dblook.log  to review the messages).In dblook.log  I saw an exception with this messagejava.sql.SQLSyntaxErrorException TableView SYS.SYSSEQUENCES does not exist.   
0;Corrupted database prevents startup and should be automatically repaired perhaps   ;I have found a database in my application that prevents startup due to it being corrupted. The driver reports that the database does not exist  even though it does. Then when my app tries to create the database using  createtrue  on the URL it fails.I think this happened due to the app being killed in Task Manager while it was creating the database.I have the database saved so that you can reproduce the problem. Im not sure if I can attach it yet)   
1; failures and  errors with IBM weme.jcdcfoundation after revision  for DERBY   ;Since March  theres been  failures and  errors in the nightly test run with IBMs jMECDCfoundation profile implementation  see httppeople.apache.org~myrnavlderby_test_resultsmainwindowstestSummary.html. Things were ok on March   see httppeople.apache.org~myrnavlderby_test_resultsmainwindowstestSummary.html.I believe these were the effect of the following checkin for DERBYr | kahatlen |    Fri   Mar ) |  linesDERBY Provide a way to change the hash algorithm used by BUILTIN authenticationIll attach the full failure stacks in a separate file  but I believe perhaps new tests have been added that need to be excluded from the run  because the provider doesnt support the intended mechanism.Id also be interested to know if these same failures occur with SunsOracles phoneME.This is the top of the first error) testVariousBuiltinAlgorithmsorg.apache.derbyTesting.functionTests.tests.jdbcapi.AuthenticationTest)java.sql.SQLException The message digest algorithm SHA is not supported by any of the available cryptography providers. Please install a cryptography provider that supports that algorithm  or specify another algorithm in the derby.authentication.builtin.algorithm property. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedCallableStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.jdbcapi.AuthenticationTest.setDatabasePropertyAuthenticationTest.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.AuthenticationTest.setDatabasePropertyAuthenticationTest.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.AuthenticationTest.testVariousBuiltinAlgorithmsAuthenticationTest.java)The failures are likely a result of this  the stack shows issues like no cleaning up of databases etc.   
0;test testBuiltinAuthenticationWithConfigurableHash fails from upgradeTests.Changes_ with ibms j   ;With the patch for DERBY I saw one error with IBMs weme .) testBuiltinAuthenticationWithConfigurableHashorg.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_)java.sql.SQLException The message digest algorithm SHA is not supported by any of the available cryptography providers. Please install a cryptography provider that supports that algorithm  or specify another algorithm in the derby.authentication.builtin.algorithm property. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedCallableStatement.executeStatementEmbedCallableStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeEmbedPreparedStatement.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.setPasswordsChanges_.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes_.testBuiltinAuthenticationWithConfigurableHashChanges_.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by java.sql.SQLException Java exception SHA java.security.NoSuchAlgorithmException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.javaExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) ...  moreCaused by java.security.NoSuchAlgorithmException SHA at java.lang.Throwable.lt initgt Throwable.java) at java.security.MessageDigest.getInstanceMessageDigest.java) at org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.encryptPasswordConfigurableSchemeAuthenticationServiceBase.java) at org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.encryptUsingDefaultAlgorithmAuthenticationServiceBase.java) at org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.mapAuthenticationServiceBase.java) at org.apache.derby.iapi.services.property.PropertyValidation.doValidateApplyAndMapPropertyValidation.java) at org.apache.derby.impl.store.access.PropertyConglomerate.validateApplyAndMapPropertyConglomerate.java) at org.apache.derby.impl.store.access.PropertyConglomerate.setPropertyPropertyConglomerate.java) at org.apache.derby.impl.store.access.RAMTransaction.setPropertyRAMTransaction.java) at org.apache.derby.iapi.db.PropertyInfo.setDatabasePropertyPropertyInfo.java) at org.apache.derby.catalog.SystemProcedures.SYSCS_SET_DATABASE_PROPERTYSystemProcedures.java) at org.apache.derby.exe.acxxbaxdxfffffdb.gUnknown Source) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeReflectMethod.java) at org.apache.derby.impl.sql.execute.CallStatementResultSet.openCallStatementResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtGenericPreparedStatement.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java)   
0;PropertySetter fails due to an empty jrelib directory   ;If a JDK directory with an empty jrelib directory is chosen by the old algorithm for detecting JDKs on the build system  the build fails because the classpath is set to the empty string instead of the default stubs and the higher level JDK classpath).The situation causing this problem can arise if a JDK with extension libs is uninstalled. Depending on the packaging system  this may leave the jrelibext directory behind.   
0;Invalid conversion from Timestamp to String when calling setTimestamp) with Calendar   ;If you set a VARCHAR parameter with setTimestamp)  the string will be formatted differently depending on whether a Calendar is specified or not  even if the default calendar is used.Take for example this statement VALUES CAST? AS VARCHAR))I executed this statement twice with the same Timestamp instance. First like this ps.setTimestamp  ts) and then like this ps.setTimestamp  ts  Calendar.getInstance)) In this example  both of the methods should use the default Calendar to convert the timestamp to a string. However  I see that they generate different strings . vs  Note there are two differences) The method that takes a Calendar object does not show the fraction part .)) The method that takes a Calendar object is  hours off  instead of )   
0;Broken logic for avoiding testing across midnight in TimestampArithTest   ;TimestampArithTests decorator has this code to avoid failures in case the test starts close to midnight * Make sure that we are not so close to midnight that TODAY might be yesterday before we are finished using it. * while calendar.getCalendar.HOUR   amp amp  calendar.getCalendar.MINUTE gt   Unknown macro  try  Thread.sleep  calendar.getCalendar.SECOND *   } catch InterruptedException ie   ignore it } } There are at least three problems with this code calendar.getCalendar.HOUR   never evaluates to true  because calendar.getCalendar.HOUR returns values in the range . Calendar.HOUR_OF_DAY should be used instead. If the current time is after  and before   the code sleeps until   the test will wait until  before it starts  making it even more likely that it will cross midnight while running. The code is executed after the Calendar object has been initialized  so if this code is ever triggered and waits until after midnight  the TODAY field is guaranteed to be yesterday when the test starts executing.   
0;Expose names of toplevel test suites for easier scripting   ;I sometimes run each of the toplevel JUnit test suites individually so that they can be run in parallel and complete faster. It would be useful if AllPackages could expose the list of suites to allow scripting of such tasks without needing to change the script when a new suite is added.   
0;BaseTestCase.execJavaCmd) does not work with weme .   ;Spawning a java process with BaseTestCase.execJavaCmd) does not work with weme .  I think because the boot classpath does not get passed. This issue came up in DERBY. After this issue is fixed  BootLockTest should be enabled for weme.The error is actually.JVMJVMW Unable to load jclfoun_ The specified module could not be found.JVMEXEXE Internal VM error Failed to create Java VMJVMEXEXI Run Ccygwinibmsvnntsoftwareweme.binj.exe help for usageexecJavaProcess does pick up the j executable but does not pass on the other settings.This is how my script invokes the test with j. It probably has a lot of legacy system properties not needed  but I suppose execJavaCmd should just pass along all system properties  but I dont know how it would get the bootclasspath. Perhaps Dbootcp was a way to pass it on in the old harness.ccygwinibmsvnntsoftwareweme.binj jclfoun DderbyTesting.serverhostlocalhost DderbyTesting.clienthostlocalhost Demma.active Xbootclasspathaccygwinibmsvnntsoftwareweme.libjdbc.jar Dbootcpccygwinibmsvnntsoftwareweme.libjdbc.jar junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.store.BootLockTest Otherwise  currently I think the method is only used in replication and network server  but am not sure.   
0;Hidden assumptions in FromVTI.makeRestriction)   ;FromVTI.makeRestriction has this code to strip away Boolean constants from AND and OR expressions  strip off trailing vacuous constant if present if  andOperator.getRightOperand instanceof BooleanConstantNode   return makeRestriction andOperator.getLeftOperand  columnNameMap   }and  strip off trailing vacuous constant if present if  orOperator.getRightOperand instanceof BooleanConstantNode   return makeRestriction orOperator.getLeftOperand  columnNameMap   }The code for AND will only work as expected if the right operand is TRUE. The code for OR only works correctly if the right operand is FALSE.Im not sure if this can ever result in uservisible bugs  since Boolean constants are usually removed before we get to this point in the code. The predicate has probably been transformed to conjunctive normal form  in which Boolean constants in the right operand of an AndNode or an OrNode in fact is always TRUE or FALSE  respectively.I think this code either should be changed to work regardless of the value of the constant in the right operand  or the assumption that the predicate is on conjunctive normal form should be documented in the comments and perhaps also checked in an assert statement.   
0;Reduce size of encoding buffer for short character values   ;When inserting character values Derby converts from Java char to an ondisk encoding of UTF. To to this  the user stream is read and the resulting bytes after conversion are placed in a translation buffer. The default size of the buffer is  KB. When inserting a lot of short values  the pressure on the Java garbage collector is unnecessary high and the allocationGC also causes a somewhat higher CPU usage.This effect of this issue can easily be reduced by sizing the buffer in the appropriate cases.   
0;Write a regression test to verify the behavior of ResultSet.getBoolean)   ;The JDBC spec partially defines the expected behavior of ResultSet.getBoolean). It would be good to have a regression test which tracks Derbys actual implementation. For the moment  it appears that Derby conforms to the defined behavior  does something reasonable in the undefined cases  and behaves the same way in the embedded and client drivers.The behavior of ResultSet.getBoolean) does not appear to have been defined until JDBC . Here is the JDBC  javadocIf the designated column has a datatype of CHAR or VARCHAR and contains a  or has a datatype of BIT  TINYINT  SMALLINT  INTEGER or BIGINT and contains a   a value of false is returned. If the designated column has a datatype of CHAR or VARCHAR and contains a  or has a datatype of BIT  TINYINT  SMALLINT  INTEGER or BIGINT and contains a   a value of true is returned. The behavior for those datatypes is not specified if the actual value is not  or . However  in a private communication I have the following statement of intent from Lance Andersen  the JDBC spec leadNote Please refer to your driver documentation for the return value when the designated column contains a values other than      or .In addition  the behavior for other datatypes is not specified. Some day it might be good if Derbys documentation described our behavior in the unspecified cases. Here it is) ResultSet.getBoolean) on LONG VARCHAR behaves like CHAR and VARCHAR) ResultSet.getBoolean) on DECIMAL  REAL  DOUBLE  and NUMERIC behaves like INTEGER.) Derby raises an exception if you call ResultSet.getBoolean) on BLOB  CHAR FOR BIT DATA  CLOB  DATE  LONG VARCHAR FOR BIT DATA  TIME  TIMESTAMP  or VARCHAR FOR BIT DATA.) You cant even directly select an XML value.   
0;Unidiomatic error handling in TimestampArithTest   ;TimestampArithTest contains some error handling code that prevents the underlying error from being reported to the JUnit framework  and it may even terminate the JVM running the tests on some errors. ExamplesThis code prints the stack trace of the underlying error to the terminal  but it wont be included in the report from the JUnit framework printStackTracesqle  failUnexpected exception from statement   sql   This code terminates the JVM on error  preventing subsequent tests from running  and also preventing the JUnit framework to report the results from the tests that did run } catch Exception e  System.out.printlns   is not a proper timestamp string.  System.out.printlne.getClass.getName     e.getMessage  e.printStackTrace  System.exit  return null  }   
0;Deadunreachable code in OpenConglomerate.lockPositionForWrite)   ;OpenConglomerate.lockPositionForWrite contains this code twice if waitForLock   throw lock timeout error. throw StandardException.newExceptionSQLState.LOCK_TIMEOUT  }The second occurrence of this code can never end up throwing an exception  since waitForLock is guaranteed to be true there because of the identical check a couple of lines above. Judging by the similar method lockPositionForRead  it is probably the first check that should be removed  so that the latch on the page is released before the exception is thrown.Also  the method is always called with forInsertfalse  so the forInsert parameter can be removed. I also suspect that the method doesnt work correctly if ever used in an insert operation  since it calls latchPageRowPosition which will unlatch the page if the row isnt found on the page  and I assume that a row that is about to be inserted does not exist yet.   
0;Too few arguments when generating AM_RECORD_NOT_FOUND error   ;The message for AM_RECORD_NOT_FOUND has three parameters  but all the methods that generate an exception with that message  only use two of them. So the generated message ends up looking like thisERROR XSAM Record } on page  in container  not found.whereas it should have looked like thisERROR XSAM Record  on page  in container  not found.I dont know if these messages ever make it all the way up to the application  since they are typically caught by this code block in TableScanResultSet if se.getMessageId.equalsSQLState.AM_RECORD_NOT_FOUND   Somehow the row got deleted between the above  doesCurrentPositionQualify call and here one way is if  this scan is read uncommitted isolation level. return null  }But they may be logged in derby.log if the log severity level is set appropriately.   
0;Unions between BOOLEAN and nonBOOLEAN datatypes should be rejected   ;DERBY fixed problems in implicit casts to BOOLEAN. However  the query which created the implicit casts should raise an error for other reasonsselect isindex from sys.sysconglomerates where conglomeratename  foounionvalues  true )This should fail because if either of the datatypes being UNIONed is BOOLEAN  then both should be BOOLEAN. Here is my reasoning  copied from the related discussion on DERBY) The rules for determining whether two datatypes are union compatible are stated in the SQL Standard in part   section . lt query expressiongt )  syntax rule .b.ii.) That  in turn  refers the reader to section . Result of data type combinations).) Section .  syntax rule .g says that if either of two values to be merged is BOOLEAN  then both must be BOOLEAN.   
0;column rename looses identity attribute.   ;renaming an identity column causes the column to loose its identity attribute.you can reproduce the problem as followsCREATE TABLE njr_version  id INTEGER generated always as identity  databaseVersion INTEGER) insert into njr_version databaseVersion) values )   column inserted successfully.rename column njr_version.id to idVersion insert into njr_version databaseVersion) values ) Error Column IDVERSION cannot accept a NULL value.To compound this problem there is no way to restore the renamed columns identity attribute as the alter command doesnt let you set an identity attribute. The only work around is to create a new table and copy the data across.   
0;Internal assignment of tablenumer  columnnumber looks wrong in query tree  although no ill effects are seen.   ;While looking into derby  I also looked at the query inderby to validate that my changes also worked for that variant ofthe problem.During inspection of the query trees after the bind phase  I found oneinstance in which the pair tablenumber  columnnumber) of a columnreference was wrong. Although it did not seem to impact the queryresult  I note it here as as something we should probably investiateas it may be a symptom an underlying problem  or a potential forfuture problems.The query looks like thisselect b.* from b join bvw on b.c  bvw.c) join b on bvw.c  b.c) where b.c  and the underlying DDL is thiscreate table b c int  c int  c char)  c int  c int  c int) create table b c int  c int  c int) create table b c int  c int  c int  c int) create table b c int  c int  c char)  c int  c int  c int) create view bvw c  c  c  c  c) asselect c  c  c  c  c from b unionselect c  c  c  c  c from b create view bvw c  c  c  c  c) asAfter the bind phase  the join clause bvw.c  b.c has thefollowing entry for the column reference bvw.C tableNumber  columnNumber The problem is that the node with tablenumber  is bvw  which is theview with the subquery for the union  which has only  resultingcolumns  so  must be wrong. Although both the view participant tablesb  b) both have six column  the view does not. In any case  C iscolumn  in the view and column  in the two union selects from both band b.C is however  column  of the join node resulting from select b.*from b join bvw on b.c  bvw.c)  but the correct table number forthat would be   not .So  it would seem the table number has been bound to the bvw viewsresult set  but the column number has been bound to the innermost joinnodes result set. This looks worrying to me.See derby.log attached for the full dump of the query tree after thebind phase.sourceResultSet  org.apache.derby.impl.sql.compile.FromSubquery@d correlation Name BVW null tableNumber  lt  Note level  resultSetNumber  referencedTableMap null statementResultSet false resultColumns  org.apache.derby.impl.sql.compile.ResultColumnList@cd indexRow false orderBySelect      org.apache.derby.impl.sql.compile.ResultColumn@dca **truncated**     org.apache.derby.impl.sql.compile.ResultColumn@d exposedName C name C tableName null isDefaultColumn false wasDefaultColumn false isNameGenerated false sourceTableName B type INTEGER columnDescriptor null isGenerated false isGeneratedForUnmatchedColumnInInsert false isGroupingColumn false isReferenced true isRedundant false virtualColumnId  resultSetNumber  dataTypeServices INTEGER expression  org.apache.derby.impl.sql.compile.VirtualColumnNode@bec dataTypeServices null sourceColumn  org.apache.derby.impl.sql.compile.ResultColumn@dda **truncated** sourceResultSet  org.apache.derby.impl.sql.compile.UnionNode@d **truncated**     org.apache.derby.impl.sql.compile.ResultColumn@a exposedName C name C tableName null isDefaultColumn false wasDefaultColumn false isNameGenerated false sourceTableName B type INTEGER columnDescriptor null isGenerated false isGeneratedForUnmatchedColumnInInsert false isGroupingColumn false isReferenced true isRedundant false virtualColumnId  resultSetNumber  dataTypeServices INTEGER expression  org.apache.derby.impl.sql.compile.VirtualColumnNode@ffc dataTypeServices null sourceColumn  org.apache.derby.impl.sql.compile.ResultColumn@e **truncated** sourceResultSet  org.apache.derby.impl.sql.compile.UnionNode@d **truncated**     org.apache.derby.impl.sql.compile.ResultColumn@eccd exposedName C name C tableName null isDefaultColumn false wasDefaultColumn false isNameGenerated false sourceTableName B type CHAR) columnDescriptor null isGenerated false isGeneratedForUnmatchedColumnInInsert false isGroupingColumn false isReferenced true isRedundant false virtualColumnId  resultSetNumber  dataTypeServices CHAR) expression  org.apache.derby.impl.sql.compile.VirtualColumnNode@cf dataTypeServices null sourceColumn  org.apache.derby.impl.sql.compile.ResultColumn@c **truncated** sourceResultSet  org.apache.derby.impl.sql.compile.UnionNode@d **truncated**    lt  highest column number is  index is zerobased) org.apache.derby.impl.sql.compile.ResultColumn@edf exposedName C name C tableName null isDefaultColumn false wasDefaultColumn false isNameGenerated false sourceTableName B type INTEGER columnDescriptor null isGenerated false isGeneratedForUnmatchedColumnInInsert false isGroupingColumn false isReferenced true isRedundant false virtualColumnId  resultSetNumber  dataTypeServices INTEGER expression  org.apache.derby.impl.sql.compile.VirtualColumnNode@ffb dataTypeServices null sourceColumn  org.apache.derby.impl.sql.compile.ResultColumn@a **truncated** sourceResultSet  org.apache.derby.impl.sql.compile.UnionNode@d **truncated** subquery  org.apache.derby.impl.sql.compile.UnionNode@d **truncated**   
0;Add method to obtain a bogus port in TestConfiguration   ;In some cases one needs to obtain a port number on which there is no Derby network server.Today this is solved in an adhoc way  for instance by using the current port minus one. When running tests in parallel  there is a chance that a port where there actually is a Derby network server listening is picked.As a start  I suggest that the bogus port is allocated to the last port in the port range configured for the run baseport  MAX_PORTS_USED .   
0;Complex nested joins problems   ;I ran a randomized test for nested joins against PostgreSQL  Derby  and H  and found some problems with Derby. The queries below throw NullPointerExceptions  the last query an assertion. The test case is here httpcode.google.comphdatabasesourcebrowsetrunkhsrctestorghtestdbTestNestedJoins.java . There are probably shorter queries that are problematic  but I cant test it because Derby closes the connection after the assertion.create table tx int) create table tx int) create table tx int) create table tx int) create table tx int) insert into t values) insert into t values) insert into t values) insert into t values) create table tx int) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) create table tx int) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) create table tx int) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) create table tx int) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) create table tx int) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) insert into t values) select t.x   t.x   t.x   t.x   t.x   t.x   t.x   t.x   t.x from t inner join t right outer join t inner join t on t.x  t.x ) on t.x  t.x ) left outer join t inner join t on t.x  t.x ) on t.x  t.x ) on t.x  t.x ) left outer join t inner join t on t.x  t.x ) on t.x  t.x ) inner join t on t.x  t.x ) select t.x   t.x   t.x   t.x   t.x   t.x   t.x   t.x from t right outer join t on t.x  t.x ) inner join t inner join t left outer join t on t.x  t.x ) on t.x  t.x ) right outer join t on t.x  t.x ) left outer join t inner join t on t.x  t.x ) on t.x  t.x ) on t.x  t.x ) select t.x   t.x   t.x   t.x   t.x   t.x   t.x   t.x from t left outer join t on t.x  t.x ) right outer join t on t.x  t.x ) right outer join t on t.x  t.x ) inner join t inner join t on t.x  t.x ) right outer join t right outer join t on t.x  t.x ) on t.x  t.x ) on t.x  t.x ) select t.x   t.x   t.x   t.x   t.x   t.x from t inner join t on t.x  t.x ) right outer join t right outer join t on t.x  t.x ) on t.x  t.x ) inner join t left outer join t on t.x  t.x ) on t.x  t.x ) select t.x   t.x   t.x   t.x   t.x   t.x   t.x from t right outer join t right outer join t left outer join t left outer join t on t.x  t.x ) on t.x  t.x ) on t.x  t.x ) on t.x  t.x ) left outer join t inner join t on t.x  t.x ) on t.x  t.x )    
0;Enable BOOLEAN typed columns   ;Allow tables to have boolean columns.   
0;add more information to the XACT_PROTOCOL_VIOLATION returned from store.   ;Improve the following messageERROR XT An internal error was identified by RawStore module.At least add the state variables. Originally it wasnt expected that this error would ever fire  but it often does. It usuallyis caused by some previous bug and then something going wrong with the cleanup after the bug in an XA transaction.   
0;StringIndexOutOfBoundsException on syntax error invalid COMMIT)   ;Start the network server on port  on localhost.Run ant on the followinglt project defaultallgt   lt property environmentenv gt   lt path idderby.classpath.idgt   lt fileset dir{env.DERBY_LIBgt   lt include namederbynet.jar gt   lt include namederbyclient.jar gt   lt filesetgt   lt pathgt   lt target nameallgt   lt sql driverorg.apache.derby.jdbc.ClientDriver urljdbcderbylocalhostderbyDB createtrue userderbyuser passswordderbypwd  useridderbyuser  passwordderbypwd  classpathrefderby.classpath.id  onerrorcontinuegt create table mytable mycol varchar  commit   lt sqlgt   lt targetgt  lt projectgt  On ..  I get  sql  Executing commands   sql  Failed to execute commit   sql  java.sql.SQLSyntaxErrorException Syntax error Encountered commit  at line   column .   sql   of  SQL statements executed successfully but on ..  I get  sql  Executing commands BUILD FAILED java.lang.StringIndexOutOfBoundsException String index out of range   at java.lang.String.charAtString.java  at org.apache.derby.client.am.Statement.isolateAnyInitialIdentifierUnknown Source  at org.apache.derby.client.am.Statement.getStatementTokenUnknown Source  at org.apache.derby.client.am.Statement.parseSqlAndSetSqlModesUnknown Source ....   
0;CheapDateFormatter returns incorrect and invalid date strings   ;CheapDateFormatter has multiple problems. These are the ones Im aware of On the boundary between nonleap years and leap years it will return first day of thirteenth month in previous year for instance   instead of  It treats all years divisible by four as leap years. Those divisible by  and not by  are not leap years. It attempts to adjust for that see the snippet below but it always ends up setting leapYeartrue if year.  Its a leap year if divisible by   unless divisible by    unless divisible by . if year  L    if year  L    if year  L    leapYear  true  } } leapYear  true  } More leap year trouble. To find out which year it is  it calculates the number of four year periods that have elapsed since . A four year period is considered * days. Although most four year periods are of that length  some are shorter  so well get one day off starting from year   two days off from year   and so on.   
0;DERBY added a new message to derby.log during engine shutdown and it changed the database shutdown message. Need to update docs with that information   ;DERBY added a new message to derby.log during engine shutdown and it changed the database shutdown message. Need to update docs with that information. I have found  places in our docs where we show examples of shutdown messages)In Getting started Guide  under Creating a Derby database and running SQL statements section  we show a typical startup and shutdown message. That section will need to change)In Derby Developers Guide  under section Derby System gt  Shutting down the systemAn eg of engine shutdown message in derby.log is . GMT Thread main  main  Shutting down Derby EngineAn eg of database shutdown message is as follows . GMTShutting down instance fefcef on database directory Cpclientssvnmainclienttrunksystestoutdbstours with class loader sun.misc.LauncherAppClassLoader@fefe Notice that this message includes the name of the db getting shutdown. Before the changes for DERBY went in  we didnt include the name of the database)   
0;test failure in derbynettestProtocol.java with ibm jvms   ;On Friday  I saw this failure     Start testProtocol jdk.. DerbyNetClient derbynetmatsderbynetmats   *** addgt  Test UNICODEMGR at level  while sending UTF characters in RDBNAMgt  PASSEDgt  Test UNICODEMGR at level  while sending UTF characters in USRID and PASSWORDgt  PASSEDgt  Test setting RDBNAM at ACCSEC *and* at SECCHKgt  PASSEDTest Failed.    I assume its related to the checkin for DERBY revision ).   
0;Files with missing ASF license headers   ;There are some files consisting of creative works) without license headers in the repository. Some files are also using a different text for the Apache License header then the other files.I plan to add the license header after having verified that the files were uploaded to Jira with the grant license to ASF bullet ticked.The list of files I have identified so far  grouped based on the assumed action required.  Add license headerjavatestingorgapachederbyTestingfunctionTeststestsmemoryTriggerTests.javajavaengineorgapachederbyimplsqlcatalogXPLAINStatementDescriptor.javajavaengineorgapachederbyimplsqlcatalogXPLAINScanPropsDescriptor.javajavaengineorgapachederbyimplsqlcatalogXPLAINResultSetDescriptor.javajavaengineorgapachederbyimplsqlcatalogXPLAINStatementTimingsDescriptor.javajavaengineorgapachederbyimplsqlcatalogXPLAINSortPropsDescriptor.javajavaengineorgapachederbyimplsqlcatalogXPLAINResultSetTimingsDescriptor.javajavaengineorgapachederbyimplsqlcatalogXPLAINTableDescriptor.javajavaengineorgapachederbyimplsqlexecutexplainXPLAINSystemTableVisitor.javajavaengineorgapachederbyimplsqlexecutexplainXPLAINDefaultVisitor.javajavaengineorgapachederbyimplsqlexecutexplainXPLAINFactory.javajavaengineorgapachederbyimplsqlexecutexplainXPLAINUtil.javajavaengineorgapachederbyiapisqlexecutexplainXPLAINFactoryIF.javajavaengineorgapachederbyiapisqlexecutexplainXPLAINable.javajavaengineorgapachederbyiapisqlexecutexplainXPLAINVisitor.javajavatoolsorgapachederbytoolsPlanExporter.javajavatoolsorgapachederbyimpltoolsplanexporterTreeNode.javajavatoolsorgapachederbyimpltoolsplanexporterAccessDatabase.javajavatoolsorgapachederbyimpltoolsplanexporterCreateHTMLFile.javajavatoolsorgapachederbyimpltoolsplanexporterCreateXMLFile.java  Update license headerjavaengineorgapachederbyimplservicesjmxnoneNoManagementService.javajavaengineorgapachederbyimplservicesjmxJMXManagementService.javajavaengineorgapachederbyiapiservicesjmxManagementService.java  Consider adding headerjavasharedorgapachederbysharedcommonsanitySanityState.javajavasharedorgapachederbysharedcommonsanitySanityState.tmpljavatoolsorgapachederbyimpltoolsplanexporterresourcesadvancedViewXSL.xsljavatoolsorgapachederbyimpltoolsplanexporterresourcesvanilla_html.xsljavatoolsorgapachederbyimpltoolsplanexporterresourcesadvancedViewXSL.xslThe SanityState classes seem to come from somewhere. Does anyone have the history? Can we add the ASF license header?The xsl files also look like creative works to me. Any objections on that?   
0;NPE while inserting into a table which has a generated column and an insert trigger   ;The following script generates an NPE on the concluding insertconnect jdbcderbymemorydummy createtrue create function getRegion v int )returns varchar  )language java parameter style java deterministic no sqlexternal name java.lang.Integer.toString create table orders orderID bigint primary key  salesPrice int not null  region generated always as  getRegion salesPrice ) )) create table dummy a int ) create trigger newOrderTriggerafter insert on ordersfor each rowinsert into dummy a ) values   ) insert into orders orderID  salesPrice ) values     ) Here is the NPEjava.lang.NullPointerException at org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreamsUnknown Source) at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCoreUnknown Source) at org.apache.derby.impl.sql.execute.InsertResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source)   
0;Missing escape for apostrophes in many messages   ;The properties file format requires that singlequote characters are escaped with an extra singlequote. A number of messages dont follow this rule.Take this example from the Italian localizationXEsiste un parametro ? nellelenco di selezione. CiuF non uE consentito.Note that theres only a single apostrophe in nellelenco above. When this message is printed  the apostrophe will be omitted LC_ALLit_IT.UTF java jar derbyrun.jar ijVersione ij .ijgt  connect jdbcderbydb createtrue ijgt  select ? from sys.systables ERRORE X Esiste un parametro ? nellelenco di selezione. Ciﾃｲ non ﾃｨ consentito.We should go through the message files and add extra apostrophes where they are missing.   
0;Sequences do not work in INSERTSELECT   ;Using sequence in SELECT works fine whereas the same SELECT query used in INSERTSELECT results in The statement references the following sequence more than once error. This happens even though the SELECT in question returns exactly  row of data.The Reference Manual states .  NEXT VALUE FOR expression may occur in the following places SELECT statement As part of the expression defining a returned column in a SELECT list and .  NEXT VALUE expression may not appear in any of these situations CASE expression  WHERE clause  ORDER BY clause  Aggregate expression  ROW_NUMBER function  DISTINCT select list.Nowhere a restriction on INSERTSELECT is mentioned. Additionally  other databases i.e. Oracle) support use of sequences in INSERTSELECT.Therefore  I consider it a bug.   
0;setTimestamp) methods dont agree on trailing zeros   ;With the statement VALUES CAST? AS VARCHAR))PreparedStatement.setTimestampint Timestamp) and PreparedStatement.setTimestampint Timestamp Calendar) dont agree on what to do with trailing zeros in the nanosecond component. The method that doesnt take a Calendar argument  removes trailing zeros. The method that takes a Calendar object appends zeros so that the nanosecond component always has nine digits. Both methods have a special case when nanoseconds is zero  and they agree on adding just a single zero after the decimal point in that case.)The format used by PreparedStatement.setTimestampint Timestamp) matches what java.sql.Timestamp.toString) returns in fact  it uses Timestamp.toString) internally to produce the string representation)  and I think it would be reasonable to use that format for both the methods.   
0;ReplicationMessageTransmit run does not unwrap PrivilegedActionException which can lead to failure of replicationTests.ReplicationRun_Local_StateTest_part_   ;One of our nightly tests failed with the exception db path slightly edited) below.Looking at the source of org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit.run  it seems that the code does not completely unwrap the PrivilegedActionException compared to how this is done in for example org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.getFileInputStream)).It could be that the test is looking for the java.io.IOException  which it doesnt get it gets the PrivilegedActionException instead).) testReplication_Local_StateTest_part_org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part_)junit.framework.AssertionFailedError Got  XRE DERBY SQL error SQLCODE   SQLSTATE XRE  SQLERRMC Replicated database testresultsdb_slavewombat shutdown.. Expected XRE at java.lang.Throwable.lt initgt Throwable.java) at junit.framework.AssertionFailedError.lt initgt AssertionFailedError.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.assertExceptionReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part_._testPostStartedMasterAndSlave_StopSlaveReplicationRun_Local_StateTest_part_.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part_.testReplication_Local_StateTest_part_ReplicationRun_Local_StateTest_part_.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBareReplicationRun.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)The exception in the db_masterderby.log wasDatabase Class Loader started  derby.database.classpath BEGIN REPLICATION ERROR MESSAGE   AM) Replication slave got a fatal error for database testresultsdb_masterwombat. Replication will be stopped.ERROR XRE Could not establish a connection to the peer of the replicated database testresultsdb_masterwombat on address localhost. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.store.replication.master.MasterController.setupConnectionUnknown Source) at org.apache.derby.impl.store.replication.master.MasterController.startMasterUnknown Source) at org.apache.derby.impl.store.raw.RawStore.startReplicationMasterUnknown Source) at org.apache.derby.impl.store.access.RAMAccessManager.startReplicationMasterUnknown Source) at org.apache.derby.impl.db.BasicDatabase.startReplicationMasterUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleStartReplicationMasterUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionUnknown Source) at org.apache.derby.jdbc.InternalDriver.connectUnknown Source) at org.apache.derby.jdbc.AutoloadedDriver.connectUnknown Source) at org.apache.derby.impl.drda.Database.makeConnectionUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.getConnFromDatabaseNameUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.verifyUserIdPasswordUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.parseSECCHKUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.parseDRDAConnectionUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.processCommandsUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.runUnknown Source)Caused by java.security.PrivilegedActionException java.net.ConnectException Connection refused at java.security.AccessController.doPrivilegedAccessController.java) at org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit.initConnectionUnknown Source) ...  moreCaused by java.net.ConnectException Connection refused at java.net.PlainSocketImpl.socketConnectNative Method) at java.net.PlainSocketImpl.doConnectPlainSocketImpl.java) at java.net.PlainSocketImpl.connectToAddressPlainSocketImpl.java) at java.net.PlainSocketImpl.connectPlainSocketImpl.java) at java.net.SocksSocketImpl.connectSocksSocketImpl.java) at java.net.Socket.connectSocket.java) at org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit.runUnknown Source) at java.security.AccessController.doPrivilegedAccessController.java) ...  more begin nested exception  level ) java.security.PrivilegedActionException java.net.ConnectException Connection refused at java.security.AccessController.doPrivilegedAccessController.java) at org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit.initConnectionUnknown Source) at org.apache.derby.impl.store.replication.master.MasterController.setupConnectionUnknown Source) at org.apache.derby.impl.store.replication.master.MasterController.startMasterUnknown Source) at org.apache.derby.impl.store.raw.RawStore.startReplicationMasterUnknown Source) at org.apache.derby.impl.store.access.RAMAccessManager.startReplicationMasterUnknown Source) at org.apache.derby.impl.db.BasicDatabase.startReplicationMasterUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleStartReplicationMasterUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionUnknown Source) at org.apache.derby.jdbc.InternalDriver.connectUnknown Source) at org.apache.derby.jdbc.AutoloadedDriver.connectUnknown Source) at org.apache.derby.impl.drda.Database.makeConnectionUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.getConnFromDatabaseNameUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.verifyUserIdPasswordUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.parseSECCHKUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.parseDRDAConnectionUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.processCommandsUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.runUnknown Source)Caused by java.net.ConnectException Connection refused at java.net.PlainSocketImpl.socketConnectNative Method) at java.net.PlainSocketImpl.doConnectPlainSocketImpl.java) at java.net.PlainSocketImpl.connectToAddressPlainSocketImpl.java) at java.net.PlainSocketImpl.connectPlainSocketImpl.java) at java.net.SocksSocketImpl.connectSocksSocketImpl.java) at java.net.Socket.connectSocket.java) at org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit.runUnknown Source) at java.security.AccessController.doPrivilegedAccessController.java) ...  more end nested exception  level )  begin nested exception  level ) java.net.ConnectException Connection refused at java.net.PlainSocketImpl.socketConnectNative Method) at java.net.PlainSocketImpl.doConnectPlainSocketImpl.java) at java.net.PlainSocketImpl.connectToAddressPlainSocketImpl.java) at java.net.PlainSocketImpl.connectPlainSocketImpl.java) at java.net.SocksSocketImpl.connectSocksSocketImpl.java) at java.net.Socket.connectSocket.java) at org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit.runUnknown Source) at java.security.AccessController.doPrivilegedAccessController.java) at org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit.initConnectionUnknown Source) at org.apache.derby.impl.store.replication.master.MasterController.setupConnectionUnknown Source) at org.apache.derby.impl.store.replication.master.MasterController.startMasterUnknown Source) at org.apache.derby.impl.store.raw.RawStore.startReplicationMasterUnknown Source) at org.apache.derby.impl.store.access.RAMAccessManager.startReplicationMasterUnknown Source) at org.apache.derby.impl.db.BasicDatabase.startReplicationMasterUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleStartReplicationMasterUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionUnknown Source) at org.apache.derby.jdbc.InternalDriver.connectUnknown Source) at org.apache.derby.jdbc.AutoloadedDriver.connectUnknown Source) at org.apache.derby.impl.drda.Database.makeConnectionUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.getConnFromDatabaseNameUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.verifyUserIdPasswordUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.parseSECCHKUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.parseDRDAConnectionUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.processCommandsUnknown Source) at org.apache.derby.impl.drda.DRDAConnThread.runUnknown Source) end nested exception  level )    
0;Override mechanism for modules.properties works backwards   ;It is possible to override the properties in orgapachederbymodules.properties by putting your own version of it somewhere on the classpath. BaseMonitor.getDefaultModuleProperties) apparently intends to use values from the first modules.properties file that mentions a property String key  String) newKeys.nextElement)  if moduleList.contains key))  RESOLVE how do we localize messages before we have finished initialization? report Ignored duplicate property   key   in   modulesPropertiesURL.toString))  else moduleList.setProperty key  otherList.getProperty key)) However  moduleList.containskey) doesnt look for a key in moduleList  it looks for a property value. This code should have used containsKey) instead.Beacuse of this  the last modules.properties on the classpath will take precedence over the ones earlier on the classpath. So if you for example have two different versions of derby.jar in the classpath  the engine will use the classes from the first jar and modules.properties from the last jar.   
0;Errors should be displayed if using wrong CLASSPATH to make documentation target for release   ;When making Derby documentation for ... release  no error was prompt when wrong version of java is being used or wrong value for CLASSPATH.In order to make Derby documentation  the release manager has to set CLASSPATH to include fop.jar  avalonframeworkcvs.jar  and batik.jar files located in DOC_ROOTtrunklib for PDF output. When using wrong CLASSPATH to build pdf documentation  no error was prompt and no PDF output was created. Error will be more intuitive that the build was not successful.   
0;Recompilation may cause duplicate entries in the XPLAIN table   ;If happening at the right moment  a recompilation request may cause duplicate entries in the XPLAIN statement tables.I have only confirmed this for the SYSXPLAIN_STATEMENTS table  and I do not know if the other XPLAIN tables are affected.The error is highly intermittent  and so far I have only been able to trigger it when testing the automatic index statistics update prototype.See the attached stacktrace for some more details.   
1;Missing doPrivileged in DatabaseClasses.WriteClassFile)   ;One of my test runs failed with the following error) testAllUncommittedReclaimorg.apache.derbyTesting.functionTests.tests.store.AccessTest)java.sql.SQLException Java exception access denied java.io.FilePermission exporthometmpkhderbyallsystemacxbxcdxxffffacba.class write) java.security.AccessControlException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source)...)Caused by java.security.AccessControlException access denied java.io.FilePermission exporthometmpkhderbyallsystemacxbxcdxxffffacba.class write) at java.security.AccessControlContext.checkPermissionAccessControlContext.java) at java.security.AccessController.checkPermissionAccessController.java) at java.lang.SecurityManager.checkPermissionSecurityManager.java) at java.lang.SecurityManager.checkWriteSecurityManager.java) at java.io.FileOutputStream.lt initgt FileOutputStream.java) at java.io.FileOutputStream.lt initgt FileOutputStream.java) at org.apache.derby.impl.services.reflect.DatabaseClasses.WriteClassFileUnknown Source) at org.apache.derby.impl.services.reflect.DatabaseClasses.loadGeneratedClassUnknown Source)...)I think the underlying error is an OutOfMemoryError  because I have seen tests running out of permgen space with the same configuration lately. But that error never gets all the way out to the test framework because of the above file permission error.When DatabaseClasses.loadGeneratedClass) fails with a LinkageError or a VirtualMachineError the superclass of OutOfMemoryError)  it attempts to dump the generated class to disk. But since the tests run under a security manager  and the code writes the class to disk isnt wrapped in a privileged block  the dumping of extra debug info fails and hides the original error.   
0;Simplify SYSCS_BULK_INSERT with IdUtil.mkQualifiedName)   ;SystemProcedures.SYSCS_BULK_INSERT contains this piece of code String entityName  IdUtil.normalToDelimitedtableName  if schemaName  null  entityName  IdUtil.normalToDelimitedschemaName  .  entityName  }The helper method IdUtil.mkQualifiedName could do the exact same in one line.   
0;NullPointerException in testBoundaries with ibm jvm .   ;With the line skipping the testBoundaries fixture of the InternationalConnectTest commented out  I get the following stack when I run the test with ibm .) testBoundariesorg.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectTest)java.sql.SQLException DERBY SQL error SQLCODE   SQLSTATE XJ  SQLERRMC java.lang.NullPointerExceptionXJ.U at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.client.am.SqlException.getSQLExceptionSqlException.java) at org.apache.derby.jdbc.ClientDriver.connectClientDriver.java) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectTest.testBoundariesInternationalConnectTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Caused by org.apache.derby.client.am.SqlException DERBY SQL error SQLCODE   SQLSTATE XJ  SQLERRMC java.lang.NullPointerExceptionXJ.U at org.apache.derby.client.am.Connection.completeSqlcaConnection.java) at org.apache.derby.client.net.NetConnectionReply.parseRdbAccessFailedNetConnectionReply.java) at org.apache.derby.client.net.NetConnectionReply.parseAccessRdbErrorNetConnectionReply.java) at org.apache.derby.client.net.NetConnectionReply.parseACCRDBreplyNetConnectionReply.java) at org.apache.derby.client.net.NetConnectionReply.readAccessDatabaseNetConnectionReply.java) at org.apache.derby.client.net.NetConnection.readSecurityCheckAndAccessRdbNetConnection.java) at org.apache.derby.client.net.NetConnection.flowSecurityCheckAndAccessRdbNetConnection.java) at org.apache.derby.client.net.NetConnection.flowUSRIDONLconnectNetConnection.java) at org.apache.derby.client.net.NetConnection.flowConnectNetConnection.java) at org.apache.derby.client.net.NetConnection.lt initgt NetConnection.java) at org.apache.derby.client.net.NetConnection.lt initgt NetConnection.java) at org.apache.derby.client.net.ClientJDBCObjectFactoryImpl.newNetConnectionClientJDBCObjectFactoryImpl.java) at org.apache.derby.jdbc.ClientDriver.connectClientDriver.java) ...  moreThis is after the latest check in for DERBY revision ).Ill attach derby.log.   
0;Unchecked warnings in JMXManagementService and VTI demos   ;These warnings I only see if javacompile.classpath points to Java  class libraries either set explicitly in ant.properties  or implicitly by the property setter  javac  codederbytrunkjavaengineorgapachederbyimplservicesjmxJMXManagementService.java warning  unchecked  unchecked conversion  javac  found  java.lang.Class  javac  required java.lang.Classlt java.lang.Objectgt   javac  new StandardMBeanbean  beanInterface   javac  ^  javac  codederbytrunkjavaengineorgapachederbyimplservicesjmxJMXManagementService.java warning  unchecked  unchecked method invocation lt Tgt StandardMBeanT java.lang.Classlt Tgt  in javax.management.StandardMBean is applied to java.lang.Object java.lang.Class  javac  new StandardMBeanbean  beanInterface   javac  ^  javac   warnings  javac  codederbytrunkjavademovtisjavaorgapachederbyDemovtiscoreQueryVTIHelper.java warning  unchecked  unchecked call to getMethodjava.lang.String java.lang.Classlt ?gt ... as a member of the raw type java.lang.Class  javac   methodName  new Class[]  String.class }    javac  ^  javac  codederbytrunkjavademovtisjavaorgapachederbyDemovtiscoreXmlVTI.java warning  unchecked  unchecked call to getMethodjava.lang.String java.lang.Classlt ?gt ... as a member of the raw type java.lang.Class  javac   methodName  new Class[]  String.class }    javac  ^  javac  codederbytrunkjavademovtisjavaorgapachederbyDemovtiscoreXmlVTI.java warning  unchecked  unchecked call to getConstructorjava.lang.Classlt ?gt ... as a member of the raw type java.lang.Class  javac   new Class[]  String.class  String.class  String[].class }    javac  ^  javac  codederbytrunkjavademovtisjavaorgapachederbyDemovtissnapshotSubscription.java warning  unchecked  unchecked call to getMethodjava.lang.String java.lang.Classlt ?gt ... as a member of the raw type java.lang.Class  javac   methodName  new Class[] }    javac  ^  javac   warnings   
0;ClassCastException when calling boolean metadata functions with . client against . server   ;I noticed that DESCRIBE didnt work when I tried to connect to a . server with ijclient driver at version ..ijgt  describe t JAVA ERROR java.lang.ClassCastException java.lang.Integer cannot be cast to java.lang.Booleanjava.lang.ClassCastException java.lang.Integer cannot be cast to java.lang.Boolean at org.apache.derby.client.am.DatabaseMetaData.getMetaDataInfoBooleanDatabaseMetaData.java) at org.apache.derby.client.am.DatabaseMetaData.storesLowerCaseIdentifiersDatabaseMetaData.java) at org.apache.derby.impl.tools.ij.ij.caIdentifierij.java) at org.apache.derby.impl.tools.ij.ij.DescTableStatementij.java) at org.apache.derby.impl.tools.ij.ij.ijStatementij.java) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java) at org.apache.derby.iapi.tools.run.mainrun.java)   
0;Thread local TableDescriptorreferencedColumnMap is not removed from app threads when Derby is shut down   ;gt  This has been seen to cause error messages in TomCat  cf. this quote from a mail on derbyusergt  gt  httpmailarchives.apache.orgmod_mboxdbderbyuser.mboxCEBBCBCABBCFB@MERCMBXR.na.SAS.comEgt  gt  SEVERE The web application  MyApp  created a ThreadLocal with key of type [org.apache.derby.iapi.sqgt  l.dictionary.TableDescriptor] value  org.apache.derby.iapi.sql.dictionary.TableDescriptor@da gt  and a value of type  java.util.WeakHashMap  value [      }  null  null}] but failed to remogt  ve it when the web application was stopped. This is very likely to create a memory leak.   
0;Refactor access to primary structures in AlterTableConstantAction   ;Many of the private methods in impl.sql.execute.AlterTableConstantAction take the activation and sometimes a number of references obtained through it) as an argument. This seems unnecessary  and it clutters the code with argument passing  boilerplate code and variable hiding.   
0;EmbeddedXADataSource with  createtrue attribute set in setDatabaseName fails with java.sql.SQLException Database not available   ;Setting the  createtrue attribute in setDatabaseName with EmbededXADataSource and EmbeddedXADataSource fails with  java TestDerbyCreateException in thread main java.sql.SQLException Database not available at org.apache.derby.jdbc.EmbeddedXADataSource.setupResourceAdapterEmbededXADataSource.java at org.apache.derby.jdbc.EmbeddedXADataSource.getXAConnectionEmbeddedXDataSource.java at TestDerbyCreate.mainTestDerbyCreate.javausing the create attributie in databaseName works fine with EmbeddedDataSource. Using setCreateDatabasecreate with EmbeddedXADataSource is a good work around and I think generally preferable.import java.sql.* import javax.sql.* public class TestDerbyCreate{ public static void mainString[] args throws Throwable { org.apache.derby.jdbc.EmbeddedXADataSource ds  new org.apache.derby.jdbc.EmbeddedXADataSource  ds.setDatabaseNameTestDB createtrue  ds.setUserdbuser  ds.setPassworddbpwd  PooledConnection pooledConn  ds.getXAConnection  Connection conn  pooledConn.getConnection  System.out.printlnDatabase product   conn.getMetaData.getDatabaseProductName  System.out.printlnDatabase version   conn.getMetaData.getDatabaseProductVersion  System.out.printlnDriver name   conn.getMetaData.getDriverName  System.out.printlnDriver version   conn.getMetaData.getDriverVersion  System.out.printlnJDBC driver major ve   
0;Four replication tests fail on zOS with junit.framework.AssertionFailedError startMaster did not succeed.   ;Four replication tests failed with junit.framework.AssertionFailedError startMaster did not succeed. running on the bit JVM on zOSReplicationRun_Local__p ReplicationRun_Local_StateTest_partReplicationRun_Local__p ReplicationRun_Local_StateTest_part_Below are the stack traces. I will attach the fail directory.There were  failures) testReplication_Local_StateTest_partorg.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part)junit.framework.AssertionFailedError startMaster did not succeed. at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster_directReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMasterReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part._testPreStartedMasterReplicationRun_Local_StateTest_part.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part.testReplication_Local_StateTest_partReplicationRun_Local_StateTest_part.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBareReplicationRun.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testReplication_Local_StateTest_part_org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part_)junit.framework.AssertionFailedError startMaster did not succeed. at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster_directReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMasterReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part_.testReplication_Local_StateTest_part_ReplicationRun_Local_StateTest_part_.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBareReplicationRun.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testReplication_Local__p_StateTests_bigInsert_sleepBeforeStopMasterorg.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local__p)junit.framework.AssertionFailedError startMaster did not succeed. at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster_directReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMasterReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local__p.replication_Local__p_StateTestsReplicationRun_Local__p.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local__p.testReplication_Local__p_StateTests_bigInsert_sleepBeforeStopMasterReplicationRun_Local__p.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBareReplicationRun.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testReplication_Local__p_StateNegativeTestsorg.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local__p)junit.framework.AssertionFailedError startMaster did not succeed. at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster_directReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMasterReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local__p.testReplication_Local__p_StateNegativeTestsReplicationRun_Local__p.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBareReplicationRun.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)FAILURESTests run   Failures   Errors    
0;restoreIntrFlagIfSeen may throw ShutdownException causing confusing console stack trace at server shutdown   ;Exception in thread DRDAConnThread_org.apache.derby.iapi.error.ShutdownException at org.apache.derby.iapi.services.context.ContextManager.checkInterruptContextManager.java) at org.apache.derby.iapi.services.context.ContextManager.getContextContextManager.java) at org.apache.derby.iapi.services.context.ContextService.getContextOrNullContextService.java) at org.apache.derby.iapi.util.InterruptStatus.restoreIntrFlagIfSeenInterruptStatus.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.closeActionsEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.closeEmbedStatement.java) at org.apache.derby.impl.drda.DRDAStatement.closeDRDAStatement.java) at org.apache.derby.impl.drda.Database.closeDatabase.java) at org.apache.derby.impl.drda.Session.closeSession.java) at org.apache.derby.impl.drda.DRDAConnThread.closeSessionDRDAConnThread.java) at org.apache.derby.impl.drda.DRDAConnThread.runDRDAConnThread.java)   
0;Instability in DerbyLayerBTest   ;Seen on . RCtestFailedStreamInsertBinaryAutoCommitRollbackOnErrororg.apache.derbyTesting.functionTests.tests.jdbc.DerbyLayerBTest) FAILUREjunit.framework.AssertionFailedError Column value mismatch @ column B  row  Expected gt flt  Found gt flt  at junit.framework.Assert.failAssert.java) at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinionJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.functionTests.tests.jdbc.DerbyLayerBTest.doInsertTestDerbyLayerBTest.java) at org.apache.derbyTesting.functionTests.tests.jdbc.DerbyLayerBTest.testFailedStreamInsertBinaryAutoCommitRollbackOnErrorDerbyLayerBTest.java)   
0;test failure in OSReadOnlyTest in assertDirectoryDeleted   ;Ive seen the assert flag a failure for deleteing a log file last night  and a seg file the night before.This is one stack trace) testOSReadOnlyorg.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest)junit.framework.AssertionFailedError Failed to delete  files rootFtestJarResults.ibm_suites.AllsystemsingleUsereadWrite FtestJarResults.ibm_suites.AllsystemsingleUsereadWritelog isDirtrue  canReadtrue  canWritetrue  size)  FjartestJarResults.ibm_suites.AllsystemsingleUsereadWrite isDirtrue  canReadtrue  canWritetrue  size) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertDirectoryDeletedBaseJDBCTestCase.java) at org.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest.moveDatabaseOnOSOSReadOnlyTest.java) at org.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest.testOSReadOnlyOSReadOnlyTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)This is another) testOSReadOnlyorg.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest)junit.framework.AssertionFailedError Failed to delete  files rootFtestJarResults.ibm_suites.AllsystemsingleUsereadOnly FtestJarResults.ibm_suites.AllsystemsingleUsereadOnlyseg isDirtrue  canReadtrue  canWritetrue  size)  FjartestJarResults.ibm_suites.AllsystemsingleUsereadOnly isDirtrue  canReadtrue  canWritetrue  size) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertDirectoryDeletedBaseJDBCTestCase.java) at org.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest.moveDatabaseOnOSOSReadOnlyTest.java) at org.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest.testOSReadOnlyOSReadOnlyTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)This is on a machine that Ive been able to arrange for a windows machine on which to run the tests for . nightly  but this is not a new machine. So perhaps the disk  being older  is a little slow in deleting? Perhaps the check can be delayed  or redone if failed first time. Im still investigating  checking on hardware settings. The disk scan showed up healthy  and multithreading is not on.   
0;suites.All stuck in RAFContainer.awaitRestoreChannel)   ;I have suites.All running on trunk  and it seems to be stuck in a call to RAFContainer.awaitRestoreChannel). Heres the stack for the waiting threadmain prio tidx nidx waiting on condition  xfee  java.lang.Thread.State TIMED_WAITING sleeping) at java.lang.Thread.sleepNative Method) at org.apache.derby.impl.store.raw.data.RAFContainer.awaitRestoreChannelRAFContainer.java) at org.apache.derby.impl.store.raw.data.RAFContainer.writePageRAFContainer.java) at org.apache.derby.impl.store.raw.data.CachedPage.writePageCachedPage.java) at org.apache.derby.impl.store.raw.data.CachedPage.cleanCachedPage.java) at org.apache.derby.impl.services.cache.ConcurrentCache.cleanAndUnkeepEntryConcurrentCache.java) at org.apache.derby.impl.services.cache.ConcurrentCache.cleanCacheConcurrentCache.java) at org.apache.derby.impl.services.cache.ConcurrentCache.cleanAllConcurrentCache.java) at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.checkpointBaseDataFileFactory.java) at org.apache.derby.impl.store.raw.log.LogToFile.checkpointWithTranLogToFile.java) at org.apache.derby.impl.store.raw.log.LogToFile.checkpointLogToFile.java) at org.apache.derby.impl.store.raw.RawStore.stopRawStore.java) at org.apache.derby.impl.services.monitor.TopService.stopTopService.java) at org.apache.derby.impl.services.monitor.TopService.shutdownTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.shutdownBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.shutdownBaseMonitor.java) at org.apache.derby.jdbc.InternalDriver.connectInternalDriver.java) at org.apache.derby.jdbc.AutoloadedDriver.connectAutoloadedDriver.java) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java) at org.apache.derbyTesting.junit.DriverManagerConnector.getConnectionByAttributesDriverManagerConnector.java) at org.apache.derbyTesting.junit.DriverManagerConnector.shutEngineDriverManagerConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.junit.SystemPropertyTestSetup.setUpSystemPropertyTestSetup.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.textui.TestRunner.doRunTestRunner.java) at junit.textui.TestRunner.startTestRunner.java) at junit.textui.TestRunner.mainTestRunner.java)   
0;Embedded Derby does not start when derby.jar is dynamically uploaded  added to the classpath   ;Hi  For our workflowsystem  we can use a variety of DBMS as the store engine. Derby is one of them especially popularfor test and development purposes. During setup of our system  we allow to upload a jar file with the JDBCDriver for the DBMS.In case of derby  we use the embedded mode and upload derby.jar. After that we add the jar to the repositories of our class loaderand call Class drc  Class.forNameorg.apache.derby.jdbc.EmbeddedDriver  true  ourclassloader) Driver drv  Driver)drc.newInstance) this worked perfectly for many years up to version ...  but ceased to work in ...  i assume the unreleased future versions are affected  toowhen derby.jar is placed in the classpath manually before starting our setup  everything works fine regardless of the derby version.investigations lead to the following conclusion since rev.  this is broken  in the immediate predecessor rev.  it worked. rev.  in the org.apache.derby.impl.store.raw.data.BaseDataFileFactory class introduced a new method private static String jarClassPathfinal Class cls) which tries to find the jarfile from which derby was loaded. it contains the following lines if  cs  null ) return null URL result  cs.getLocation) return result.toString)   but in the case  when we dynamically load derby   cs is not null but cs.getLocation) is null. so i propose to change the line with the if to...if  cs  null || cs.getLocation)null) return null ...or maybe it would be better to surround the whole body of the method with a try catch  since it is not essential  and a null return value is also ok?thank you for your efforts concerning derby at large  Michael   
0;Backward  confusing error message when you use the wrong ResultSet.getXXX) method in the client driver   ;If you try to get a Time value out of an INTEGER column  the client driver gives this error. I believe that similar nonsense comes back when you try other mismatched getters on other datatypes An attempt was made to get a data value of type java.sql.Types  from a data value of type java.sql.Time.The exception is a java.sql.SQLDataException with SQLState . The embedded driver returns a better message An attempt was made to get a data value of type java.sql.Time from a data value of type INTEGER.I recommend two improvements to the utility method which generates these exceptions) Flip the order of the type names.) Use the ResultSetMetaData to look up the source data type name.   
0;AccessControlException when running AssertFailureTest from Ant   ;Seen when running ant junitall  junit  Running org.apache.derbyTesting.unitTests.junit._Suite  junit  Exception in thread main java.security.AccessControlException access denied java.io.FilePermission codederbytrunkjunit__junitvmwatcher.properties write)  junit  at java.security.AccessControlContext.checkPermissionAccessControlContext.java)  junit  at java.security.AccessController.checkPermissionAccessController.java)  junit  at java.lang.SecurityManager.checkPermissionSecurityManager.java)  junit  at java.lang.SecurityManager.checkWriteSecurityManager.java)  junit  at java.io.FileOutputStream.lt initgt FileOutputStream.java)  junit  at java.io.FileOutputStream.lt initgt FileOutputStream.java)  junit  at java.io.FileWriter.lt initgt FileWriter.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.registerTestCaseJUnitTestRunner.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.accessJUnitTestRunner.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.startTestJUnitTestRunner.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.startTestJUnitTestRunner.java)  junit  at junit.framework.TestResult.startTestTestResult.java)  junit  at junit.framework.TestResult.runTestResult.java)  junit  at junit.framework.TestCase.runTestCase.java)  junit  at junit.framework.TestSuite.runTestTestSuite.java)  junit  at junit.framework.TestSuite.runTestSuite.java)  junit  at junit.framework.TestSuite.runTestTestSuite.java)  junit  at junit.framework.TestSuite.runTestSuite.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.runJUnitTestRunner.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launchJUnitTestRunner.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.mainJUnitTestRunner.java)  junit  Running org.apache.derbyTesting.unitTests.junit._Suite  junit  Tests run   Failures   Errors   Time elapsed  sec  junit  Test org.apache.derbyTesting.unitTests.junit._Suite FAILED crashed)   
0;Race condition in FileContainerallocCache when reopening RAFContainer after interrupt   ;The symptom is an ArrayIndexOutOfBoundsExceptionjava.lang.ArrayIndexOutOfBoundsException  at org.apache.derby.impl.store.raw.data.AllocationCache.validateAllocationCache.java) at org.apache.derby.impl.store.raw.data.AllocationCache.getLastPageNumberAllocationCache.java) at org.apache.derby.impl.store.raw.data.FileContainer.pageValidFileContainer.java) at org.apache.derby.impl.store.raw.data.FileContainer.getUserPageFileContainer.java) at org.apache.derby.impl.store.raw.data.FileContainer.getInsertablePageFileContainer.java) at org.apache.derby.impl.store.raw.data.FileContainer.getPageForInsertFileContainer.java) at org.apache.derby.impl.store.raw.data.BaseContainerHandle.getPageForInsertBaseContainerHandle.java) at org.apache.derby.impl.store.access.heap.HeapController.doInsertHeapController.java) at org.apache.derby.impl.store.access.heap.HeapController.insertAndFetchLocationHeapController.java) at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRowRowChangerImpl.java) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreInsertResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtGenericPreparedStatement.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateEmbedPreparedStatement.java) at InterruptTestWorkerThread.runInterruptTest.javaThis can only happen if another thread has called allocCache.reset while the thread above is in the loop in validate  so as to set numExtents to .The synchronization of allocCache is documented in the Javadoc of the FileContainer class all accesses to allocCache should synchronize.This is omitted when we reopen FileContaineropenContainer calls readHeader gt  readHeaderFromArray gt  allocCache.reset   
0;Replication tests lose derby.log for slave   ;After running ReplicationRun_Local__p I notice that of the two directories created  db_master and db_slave  only db_master contains a derby.log file. This is not so nice  since the log file is sometimes needed for test debugging   
0;Retrying after interrupts in store pops a bug in derbyallstoreallstoreunitT_RawStoreFactory in some cases   ;Cf Myrnas comment on DERBYI think the latest checkin has caused the following tinderbox failurederbyallstoreallstoreall.failunitT_RawStoreFactory.unitsee httpdbtg.foundry.sun.comderbytesttinderbox_trunkjvm.testingtestlogSunOS._ipciderbyall_diff.txt                 Diff file derbyallstoreallstoreunitT_RawStoreFactory.diff             Start T_RawStoreFactory jdk.._ storeallstoreunit   *** dellt    Unit Test T_RawStoreFactory finished addgt  ran out of timegt  Exit due to time bombTest Failed. End T_RawStoreFactory jdk.._ storeallstoreunit   ***It failed in the nightly runs with ibm . also and .. and .).   
0;failure in jdbcapi.StatementJdbcTesttestCompletionClosure_jdbc_ with j jMECDC)   ;After revision  for DERBY  there is the following failure in the tests when run with ibms j) testCompletionClosure_jdbc_org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementJdbcTest)java.sql.SQLException The exception java.lang.NoClassDefFoundError java.sql.DriverManager was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementJdbcTest.vetClosedCallStatementJdbcTest.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementJdbcTest.vetClosureStatementJdbcTest.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementJdbcTest.testCompletionClosure_jdbc_StatementJdbcTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Caused by java.sql.SQLException Java exception java.sql.DriverManager java.lang.NoClassDefFoundError. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) ...  moreCaused by java.lang.NoClassDefFoundError java.sql.DriverManager at org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementJdbcTest.dynamicResultsStatementJdbcTest.java) at org.apache.derby.exe.acdfdaxdxbexfxffffdbbed.gUnknown Source) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeUnknown Source) at org.apache.derby.impl.sql.execute.CallStatementResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) ...  moreNote  that there is no record of how this test would fare with the phoneME  those tests havent been running since midSeptember  httpdbtg.foundry.sun.comderbytestDailyjavaMEtestingFullindex_all.html).   
0;ALTER TABLE DROP COLUMN may leave triggers invalid even if they are not using the column getting dropped.   ;While doing testing for DERBY  I found a case where ALTER TABLE DROP COLUMN will leave triggers in invalid state even if those triggers are not using the column getting dropped. egCREATE TABLE tab   element_id INTEGER NOT NULL   altered_id VARCHAR) NOT NULL)  insert into tab values aa)   Create a trigger against the table CREATE TRIGGER mytrig  AFTER UPDATE OF altered_id ON tab  REFERENCING NEW AS newt OLD AS oldt  FOR EACH ROW MODE DBSQL  SELECT newt.altered_id from tab Drop the first column in the table. This will cause the column positions to be recalculated within the tablealter table tab drop column element_id  mytrig is still looking for column altered_id at position  but drop column has changed its position within the table to update tab set altered_idbb As shown in the example above  table TAB only has  columns. The trigger MYTRIG uses the nd column in its trigger action through the REFERENCING clause. During trigger action sql parsing  every column referenced through REFERENCING clause gets transformed into a reference to the column through its column position in the trigger tablethis change to look for columns based on their column positions rather than the name went in as revision  with following commit comments DERBY Change the generated code for a newold column in a row trigger to access columns by position and not name to avoid the caseinsensitive name lookup specified by JDBC.) When in the script above  we drop the column in position   the trigger MYTRIG ends up becoming invalid because column being used in the trigger action is no more in column position .One possible solution is to regenerate the SPSDescriptor associated with the trigger action for all the triggers defined on the table whose column is getting dropped. We could be little smarter and only regenerate the SPSDescriptor for the triggers who use the REFERENCING clause. But we need to do more testing to make sure that triggers without REFERENCING clause do not get impacted by a drop of column which is not the last column of the table. This optimization of recognizing the right triggers may not be worth it since performance may not be that big a criteria for an ALTER TABLE DROP COLUMN which should be a rare operation in a production system.An interim solution to this problem is obviously to drop and recreate the triggers   
0;BootLockTest can fail with ERROR XCY Required property derby.serviceProtocol has not been set  with slow configurations   ;If derby tests are running with JVM options that slow things down substantially  it can fail with testBootLockorg.apache.derbyTesting.functionTests.tests.store.BootLockTestjunit.framework.ComparisonFailure Dual boot not detected check BootLockMinion.log expectedlt ...SDBgt  but waslt ...CYgt  at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLStateBaseJDBCTestCase.java at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLStateBaseJDBCTestCase.java at org.apache.derbyTesting.functionTests.tests.store.BootLockTest.testBootLockBootLockTest.java at sun.reflect.NativeMethodAccessorImpl.invokeNative Method at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java at junit.extensions.TestDecorator.basicRunTestDecorator.java at junit.extensions.TestSetup.protectTestSetup.java at junit.extensions.TestSetup.runTestSetup.java at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java at junit.extensions.TestDecorator.basicRunTestDecorator.java at junit.extensions.TestSetup.protectTestSetup.java at junit.extensions.TestSetup.runTestSetup.java at junit.extensions.TestDecorator.basicRunTestDecorator.java at junit.extensions.TestSetup.protectTestSetup.java at junit.extensions.TestSetup.runTestSetup.javaCaused by java.sql.SQLException Required property derby.serviceProtocol hasnot been set. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabaseEmbedConnection.java at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java at org.apache.derby.jdbc.Driver.getNewEmbedConnectionDriver.java at org.apache.derby.jdbc.InternalDriver.connectInternalDriver.java at org.apache.derby.jdbc.AutoloadedDriver.connectAutoloadedDriver.java at java.sql.DriverManager.getConnectionDriverManager.java at java.sql.DriverManager.getConnectionDriverManager.java at org.apache.derbyTesting.junit.DriverManagerConnector.openConnectionDriverManagerConnector.java at org.apache.derbyTesting.junit.DriverManagerConnector.openConnectionDriverManagerConnector.java at org.apache.derbyTesting.junit.TestConfiguration.openDefaultConnectionTestConfiguration.java at org.apache.derbyTesting.junit.BaseJDBCTestCase.openDefaultConnectionBaseJDBCTestCase.java at org.apache.derbyTesting.junit.BaseJDBCTestCase.getConnectionBaseJDBCTestCase.java at org.apache.derbyTesting.functionTests.tests.store.BootLockTest.testBootLockBootLockTest.java ...  moreCaused by java.sql.SQLException Required property derby.serviceProtocol hasnot been set. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java ...  moreCaused by ERROR XCY Required property derby.serviceProtocol has not been set. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderServiceBaseMonitor.java at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartServiceBaseMonitor.java at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceBaseMonitor.java at org.apache.derby.iapi.services.monitor.Monitor.startPersistentServiceMonitor.java at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabaseEmbedConnection.java ...  moreThe test waits for the spawned process to create db.lck and service.properties and then waits three seconds more to make sure the properties have been written  but this might not be enough time.Although I have not seen this myself with unchanged code   I can simulate it on windows by changing StorageFactoryService.saveServiceProperties to have a sleep between creating the service.properties file and writing the properties out  e.g. try  os  servicePropertiesFile.getOutputStream  try  Thread.sleep  } catch Exception e } properties.store os  serviceName  MessageService.getTextMessageMessageId.SERVICE_PROPERTIES_DONT_EDIT    
0;Release notes should specify which Java version is needed to run Derby   ;Since .  it appears we no longer include information about what Java version is needed to run Derby  at least not on the release notes published on the web site  cf.httpdb.apache.orgderbyreleasesrelease....html and others.In the . release notes  we seeJDKJDBC support JDK .  .  .  and JME JMECDCFoundation Profile JSR  JDBC .  and JDBC . supportI think this type of information should still be readily available from the release notes  does anybody know why we stopped doing that?   
0;Intermittent bug in InterruptResilienceTest   ;Knut saw an error on the nightly test on Windows  apparently an interrupt happened when waiting for a lock. Cf. enclosure test.log.   
0;[patch] fix npe in error condition   ;LogToFileswitchLogFile In the cleanup code that handles failure of initLogFile  we seecode nulls out a variable and then access it push the nulling down to the end.   
0;[patch] Client driver lexer to determine statement type fix bad attempt at incrementing a variable   ;In the client driver lexer to determine statement type  we look for token select  update  values etc. The lexer used to has a bug in itshandling of endofline comments .code doesidx  idx but this does absolutely nothing   
0;[patch] remove erroneous throws clauses on non derivable methods that dont throw   ;various constructorsprivate methods declare throwing exceptions that they dont in fact throw. This causes calling methods to handle these exceptions  for no reason. patch removes.   
0;[patch] override equals correctly   ;code implements equals wo an Object parm. Calling code that doesnt have first class signature of FormatableBitSet will not work as expected. Properly override equals to fix.   
0;Cannot find Ant libraries when building from NetBeans   ;Building Derby doesnt work out of the box in NetBeans. The wiki page httpwiki.apache.orgdbderbyBuildingDerby instructs NetBeans users to specify the ant.library.dir property in order to get the build working.The Ant documentation says the following about the ant.library.dir property The following property is only set if Ant is started via the Launcher class which means it may not be set inside IDEs either  httpant.apache.orgmanualproperties.htmlSince the property is not guaranteed to be set  I suggest that we replace references to ant.library.dir}ant.jar with references to ant.core.lib} in the build scripts. According to the above mentioned Ant manual page the ant.core.lib property should always be available and point to ant.jar. Changing this makes it possible to build Derby from NetBeans with no special customization.   
0;UpdateStatisticsTest fails after we enabled the automatic calculation of index statistics.   ;After enabling the automatic calculation of statistics  we see the following error in UpdateStatisticsTest in the tinderbox run. See  for instance  httpdbtg.foundry.sun.comderbytesttinderbox_trunkjvm.testingLimitedtestSummary.html ) testUpdateStatisticsorg.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest)junit.framework.AssertionFailedError at org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testUpdateStatisticsUpdateStatisticsTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)) testUpdateStatisticsorg.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest)junit.framework.AssertionFailedError at org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testUpdateStatisticsUpdateStatisticsTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)   
0;[patch] derived InternalXact attempts and fails) to override a method from base   ;RawTransaction implementspublic void checkLogicalOperationOk throws StandardException }which is attempted to be overridden in derived class InternalXact  but is not done so because of a case problem in InternalXact public void checkLogicalOperationOK throws StandardException  throw StandardException.newException SQLState.XACT_NOT_SUPPORTED_IN_INTERNAL_XACT }Code that calls this method thru the parent will not get the overridden method called.   
0;[patch] System.arraycopy  being native  is more performant   ;various places in the code  manual loops are used to copy one array to another  switch with System.arraycopy for better performance.   
0;[patch] bad field masking makes non functional rowsInput evaluation   ;RealDistinctScalarAggregateStatistics derives from RealScalarAggregateStatisticsRealDistinctScalarAggregateStatistics takes a constructor parm of rowsInput and forwards it to the super classs constructor  where it is stored for use by the class.However  the subclass mistakenly added a masked rowsInput field that is never set  and thus interferes with the proper use of the super classs rowsInput field.patch removed the erroneous subclasss field.   
0;ResultSet.updateBoolean) on new BOOLEAN type throws exception   ;I am encountering an error trying to update a BOOLEAN type through anupdatable ResultSet. My table looks like thisCREATE TABLE file_store  path VARCHAR) NOT NULL  network VARCHAR) NOT NULL  file_blob BLOB  file_md VARCHAR)  is_directory BOOLEAN NOT NULL DEFAULT false  PRIMARY KEY path  network)) My SQL looks like thisSELECT path  network  is_directory FROM file_storeWHERE path? AND network? AND is_directorytrue FOR UPDATE OF path  network  is_directoryMy Java code looks like this...resultSet.moveToInsertRow) resultSet.updateStringpath  dirPath) resultSet.updateStringnetwork  network) resultSet.updateBooleanis_directory  true) resultSet.insertRow) An exception is thrown in the call to updateBoolean) as followsjava.sql.SQLException An attempt was made to put a data value of type byte into a data value of type BOOLEAN.Its a shame  I was looking forward to using the new BOOLEAN type before I roll out the next version of our software. For now I will fallback to SMALLINT. Doeswill ALTER TABLE support a change from SMALLINT to BOOLEAN?   
0;Assert failures in UpdateStatisticsTest   ;I saw these failures when running suites.All against revision   the b patch attached to DERBYjunit.framework.AssertionFailedError Index statistics for lt ALL TABLESgt  tableIdadeafddfffffa  tableNamelt nagt   indexNamelt nagt   lcols  rows  uniquecard  created .} expectedlt gt  but waslt gt  at org.apache.derbyTesting.junit.IndexStatsUtil.assertStatsIndexStatsUtil.java at org.apache.derbyTesting.junit.IndexStatsUtil.assertNoStatsIndexStatsUtil.java at org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testUpdateStatisticsUpdateStatisticsTest.java at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java at junit.extensions.TestDecorator.basicRunTestDecorator.java at junit.extensions.TestSetup.protectTestSetup.java at junit.extensions.TestSetup.runTestSetup.java at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java at junit.extensions.TestDecorator.basicRunTestDecorator.java at junit.extensions.TestSetup.protectTestSetup.java at junit.extensions.TestSetup.runTestSetup.java at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.javajunit.framework.AssertionFailedError Index statistics for lt ALL TABLESgt  tableIdadeafddfffffa  tableNamelt nagt   indexNamelt nagt   lcols  rows  uniquecard  created .} expectedlt gt  but waslt gt  at org.apache.derbyTesting.junit.IndexStatsUtil.assertStatsIndexStatsUtil.java at org.apache.derbyTesting.junit.IndexStatsUtil.assertNoStatsIndexStatsUtil.java at org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testUpdateStatisticsUpdateStatisticsTest.java at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java at junit.extensions.TestDecorator.basicRunTestDecorator.java at junit.extensions.TestSetup.protectTestSetup.java at junit.extensions.TestSetup.runTestSetup.java at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java at junit.extensions.TestDecorator.basicRunTestDecorator.java at junit.extensions.TestSetup.protectTestSetup.java at junit.extensions.TestSetup.runTestSetup.java at junit.extensions.TestDecorator.basicRunTestDecorator.java at junit.extensions.TestSetup.protectTestSetup.java at junit.extensions.TestSetup.runTestSetup.java at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java at junit.extensions.TestDecorator.basicRunTestDecorator.java at junit.extensions.TestSetup.protectTestSetup.java at junit.extensions.TestSetup.runTestSetup.java at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java   
0;Intermittent assert failure in AutomaticIndexStatisticsTest.testStatisticsCorrectness   ;An assert on timestamps in the test AutomaticIndexStatisticsTest.testStatisticsCorrectnes is unstable  and fails on sufficiently fast machines andor operating systems with lower resolution timers.   
0;[patch] Bad name collision causes non functional method   ;ijMultipleResultSetResult has this method ** Create a ijResultImpl that represents multiple result set. * public ijMultipleResultSetResultList resultSets throws SQLException  resultSets  new ArrayList  resultSets.addAllresultSets  }due to the name collision  this does nothing... patch fixes with this. prefixing.   
0;[patch] reduce superfluous boxing histrionics   ;code converts strings to primitives using excessive boxing patterns. patch reduces.   
0;Embedded driver allows updateBytes) on BOOLEAN column   ;The following code inserts the value TRUE into the table T on the embedded driver Statement s  c.createStatementResultSet.TYPE_FORWARD_ONLY  ResultSet.CONCUR_UPDATABLE)  s.executecreate table tb boolean))  ResultSet rs  s.executeQueryselect b from t)  rs.moveToInsertRow)  rs.updateBytes  this is a test.getBytes))  rs.insertRow) The client driver failsjava.sql.SQLException An attempt was made to put a data value of type byte[] into a data value of type BOOLEAN.I believe the client driver is correct  and embedded should be changed to match it.   
0;[patch] remove unused fetching of data dictionary   ;code fetches data dictionary for no reason.   
0;[patch] use string buffers when building strings in loops   ;Various spots in code builds up strings in loops. This causes n extra StringBuffer allocations and n extra String allocationspatch replaces with direct StringBuffer use.   
0;test failures) with IBM .. in store.InterruptResilienceTest.testRAFWriteInterrupted java.sql.SQLException The exception junit.framework.AssertionFailedError interrupt flag lost was thrown while evaluating an expression.   ;Since February   I see this failure) testRAFWriteInterruptedorg.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest) java.sql.SQLException The exception junit.framework.AssertionFailedError interrupt flag lost was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdateUnknown Source) at org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest.testRAFWriteInterruptedInterruptResilienceTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.javaCompiled Code)) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.javaCompiled Code)) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.javaCompiled Code)) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.javaCompiled Code)) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by java.sql.SQLException Java exception interrupt flag lost junit.framework.AssertionFailedError. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) ...  moreCaused by junit.framework.AssertionFailedError interrupt flag lost at org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest.tstRAFwriteInterruptedInterruptResilienceTest.javaCompiled Code)) at org.apache.derby.exe.acbbxexdxexaefbe.gUnknown Source) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.javaCompiled Code)) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.javaCompiled Code)) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.javaCompiled Code)) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeUnknown Source) at org.apache.derby.impl.sql.execute.CallStatementResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) ...  moretwice February  and February ) this was followed by a second test failure) testRAFReadWriteMultipleThreadsorg.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest)java.sql.SQLException The exception junit.framework.AssertionFailedError Column value mismatch @ column   row  Expected gt lt  Found gt lt  was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdateUnknown Source) at org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest.testRAFReadWriteMultipleThreadsInterruptResilienceTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.javaCompiled Code)) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.javaCompiled Code)) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.javaCompiled Code)) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.javaCompiled Code)) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by java.sql.SQLException Java exception Column value mismatch @ column   row  Expected gt lt  Found gt lt  junit.framework.AssertionFailedError. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) ...  moreCaused by junit.framework.AssertionFailedError Column value mismatch @ column   row  Expected gt lt  Found gt lt  at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.javaCompiled Code)) at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.javaInlined Compiled Code)) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinionJDBC.javaCompiled Code)) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.javaInlined Compiled Code)) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.javaInlined Compiled Code)) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.javaInlined Compiled Code)) at org.apache.derbyTesting.junit.JDBC.assertSingleValueResultSetJDBC.javaCompiled Code)) at org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest.tstRAFReadWriteMultipleThreadsInterruptResilienceTest.java) at org.apache.derby.exe.acabxexexbxebfa.gUnknown Source) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.javaCompiled Code)) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.javaCompiled Code)) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.javaCompiled Code)) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeUnknown Source) at org.apache.derby.impl.sql.execute.CallStatementResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) ...  moreSee for instance httppeople.apache.org~myrnavlderby_test_resultsmainlinuxtestlogibmsuites.All_diff.txtandhttppeople.apache.org~myrnavlderby_test_resultsmainlinuxtestlogibmsuites.All_diff.txtI can reproduce the first failure on my laptop with Windows XP with ibm .. in fact  I got the same failure twice  I assume once with NetworkServerclient  once with embedded) by just running the test.This popping up on the th is because this test didnt run with ibm .. for a while before revision  see DERBY  but this is a different problem.)I marked this store  but this test doesnt fail with Suns .. jvm  judging from the results at httpdbtg.foundry.sun.comderbytestDailyjvm.testingLimited   so its possible theres a jvm issue here.   
0;[patch] move instanceof check up above where casts occur   ;code does an instanceof check on Diagnosable much after multiple casts to Diagnosable occurs above it.Move the instanceof check up before the first cast  so that it does some good.   
0;[patch] remove non productive instanceof checks   ;various places in code does instanceof checks where the outcome can be determined statically to be always true or always false.removed these checks as they do nothing.   
0;Incorrect list of compatible JRE versions in client trace   ;When running with client side tracing enabled  these lines appear first in the trace file derby  BEGIN TRACE_DRIVER_CONFIGURATION derby  Driver Apache Derby Network Client JDBC Driver ... alpha  P derby  Compatible JRE versions  .  . }The list of compatible JRE versions is wrong. The client driver doesnt work on .  and . and . are missing from the list.   
0;DERBY caused a regression which will not allow users to drop a table if the table was involved in a trigger action rebind during ALTER TABLE DROP COLUMN   ;The fix for DERBY has introduced a regression which adds rows into SYSDEPENDS which are incorrect. The error I think was caused when before doing a rebind of trigger action  I made the trigger table as the current dependent in the dependency system and hence all the dependencies required by the trigger action got associated with that trigger table and hence causing the errorneous behavior. I will work on this asap. The fix went into trunk and .. I will add a test case for this in the jira and will also add a test case in our junit test   
0;ShutdownException in ContextManager.checkInterrupt) during shutdown   ;When running the attached repro script  I often but not always) see a ShutdownException in ContextManager.checkInterrupt) when ij exits and shuts down the Derby engine. ij expects an exception here  but it expects an SQLException  not a ShutdownException.   
0;After specifying deregisterfalse on the engine shutdown URL  Derby forgets that the default behavior is deregistertrue   ;If you shutdown the engine specifying deregisterfalse  then get a new connection  then shutdown the engine again without specifying any value for the deregister attribute  Derby acts as though you specified deregisterfalse again. I will attach a test program which shows this problem.   
0;Disable istat logging by default   ;The automatic index statistics daemon will by default log what its doing. That means messages like these ones will be written to derby.log during normal operationWed Mar   CET  Thread main  main  istat} APP.T update scheduled  cecec reason no stats  rowestimate  queueSizeWed Mar   CET  Thread indexstatthread  main  istat} APP.T generating index statisticsWed Mar   CET  Thread indexstatthread  main  istat} APP.T generation complete  msWed Mar   CET  Thread main  main  istat} stopping daemon  activefalse  workage  qps errkuc rejfdo Although these messages may be helpful in diagnosing bugs  they may also be a source of confusion since users probably only expect errorsproblems to be logged by default. Also  for some workloads  large quantities of log may be produced and take up disk space. Therefore  I think we should disable the logging before the . release  and instead instruct users who experience problems to enable logging manually with the derby.storage.indexStats.log property.   
0;NPE in istat daemon when encountering critical exception during shutdown   ;If the istat daemon encounters a critical error during shutdown and the data dictionary module has been stopped  it will run into a NPE.This bug is highly timingdependent in two ways the data dictionary module must have been stopped first  and then the istat daemon must encounter a critical error at the right time.I have seen this bug once on my laptop.   
0;[patch] avoid Boolean allocations for rowset data in client cursor   ;code allocates a new Boolean for every row value of a boolean column  creating needless garbage. Patch switches to use immutable Boolean.TRUE and Boolean.FALSE values.   
0;[patch] avoid Integer allocations fetching client meta data info   ;code needlessly generates Integer objects garbage) in loops looking for meta data information  patch removes these allocations   
0;GetCurrentPropertiesTest depends on implicit ordering of test cases   ;The test cases in GetCurrentPropertiesTest must run in the order in which they are defined in the source file. If for example the test case testPropertiesTraceOn runs first  the test will fail with the following stack trace) testPropertiesTraceOnorg.apache.derbyTesting.functionTests.tests.derbynet.GetCurrentPropertiesTest)junit.framework.ComparisonFailure expectedlt  tru egt  but waslt  fals egt  at org.apache.derbyTesting.functionTests.tests.derbynet.GetCurrentPropertiesTest.testPropertiesTraceOnGetCurrentPropertiesTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)...)Seen in the nightly tests  for example here httpdbtg.foundry.sun.comderbytestDailyjvm.testingtestlogvistasuitesAll_diff.txt   
0;ProcedureInTriggerTest depends on implicit ordering of test cases   ;If for example the test case testTriggerContainsSql is executed as the first test case  it will fail with the following error) testTriggerContainsSqlorg.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest)junit.framework.AssertionFailedError expectedlt gt  but waslt gt  at org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.checkAndResetGetConnectionProcCountProcedureInTriggerTest.java) at org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.testTriggerContainsSqlProcedureInTriggerTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)The test should either make the order of the test cases explicit or make the test cases independent of the order in which they run.Seen in the nightly tests  for example here httpdbtg.foundry.sun.comderbytestDailyjvm.testingtestloglinsuitesAll_diff.txt   
0;Lacking cleanup in CheckConstraintTest.testJira)   ;The test case testJira in CheckConstraintTest doesnt drop the table it creates. The table itself has a unique name that doesnt conflict with any other test case  but it also has a constraint with a generic name CK) that is in conflict with constraints created in testCheckConstraints and testPositionalUpdate. If testJira runs before any of those test cases  the test will fail.Example from the nightly testshttpdbtg.foundry.sun.comderbytestDailyjvm.testingtestloglinsuitesAll_diff.txt) testCheckConstraintsorg.apache.derbyTesting.functionTests.tests.lang.CheckConstraintTest)java.sql.SQLException Constraint CK already exists in Schema APP. at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Source) at org.apache.derby.client.am.Statement.executeUpdateUnknown Source) at org.apache.derbyTesting.functionTests.tests.lang.CheckConstraintTest.testCheckConstraintsCheckConstraintTest.java)   
0;Assert failure in SavepointJdbcTest.testReleaseSqlSavepointAndRollback   ;Seen in nightly testing on Java httpdbtg.foundry.sun.comderbytestDailyjvm.testingtestlogvistasuitesAll_diff.txt) testReleaseSqlSavepointAndRollbackorg.apache.derbyTesting.functionTests.tests.jdbcapi.SavepointJdbcTest)junit.framework.AssertionFailedError expectedlt gt  but waslt gt  at org.apache.derbyTesting.functionTests.tests.jdbcapi.SavepointJdbcTest.testReleaseSqlSavepointAndRollbackSavepointJdbcTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java)   
0;ParameterMetaDataJdbcTest fails with DUMMYINT is not recognized as a function or procedure   ;ParameterMetaDataJdbcTest has failed a couple of times in the nightly tests on Java .httpdbtg.foundry.sun.comderbytestDailyjvm.testingtestloglinsuitesAll_diff.txt) testMetatdataAfterProcRecompileorg.apache.derbyTesting.functionTests.tests.jdbcapi.ParameterMetaDataJdbcTest)java.sql.SQLSyntaxErrorException DUMMYINT is not recognized as a function or procedure. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedCallableStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedCallableStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedCallableStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedCallableStatement.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.newEmbedCallableStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareCallUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareCallUnknown Source) at org.apache.derbyTesting.junit.BaseJDBCTestCase.prepareCallBaseJDBCTestCase.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.ParameterMetaDataJdbcTest.testMetatdataAfterProcRecompileParameterMetaDataJdbcTest.java)   
0;testQualifiersorg.apache.derbyTesting.functionTests.tests.store.AccessTest)java.sql.SQLException TableView FOO already exists in Schema APP.   ;) testQualifiersorg.apache.derbyTesting.functionTests.tests.store.AccessTest)java.sql.SQLException TableView FOO already exists in Schema APP. at java.lang.Throwable.lt initgt Throwable.java) at java.sql.SQLException.lt initgt SQLException.java) at java.sql.SQLException.lt initgt SQLException.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdateUnknown Source) at org.apache.derbyTesting.functionTests.tests.store.AccessTest.testQualifiersAccessTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by java.sql.SQLException TableView FOO already exists in Schema APP. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source) ...  moreCaused by ERROR XY TableView FOO already exists in Schema APP. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.duplicateDescriptorExceptionUnknown Source) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addDescriptorUnknown Source) at org.apache.derby.impl.sql.execute.CreateTableConstantAction.executeConstantActionUnknown Source) at org.apache.derby.impl.sql.execute.MiscResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) ...  moreNote this was followed by another failure DERBY. Not sure if the failure to create the table might have impacted that test.   
0;nightly test failure in derbyallstoreallstoremoreSpaceTable   ;httpdbtg.foundry.sun.comderbytestDailyjvm.testingtestloglinderbyall_diff.txtFailure Details                 Diff file derbyallstoreallstoremoreSpaceTable.diff             Start SpaceTable jdk.._ storeallstoremore   *** dellt  PLATYPUS | | | | | agt  PLATYPUS | | | | | Test Failed. End SpaceTable jdk.._ storeallstoremore   ***   
0;Incomplete quoting of SQL identifiers in AlterTableConstantAction   ;AlterTableConstantAction generates SQL statements various places. Identifiers schema names  table names  column names) are surrounded with double quotes in case they contain special characters. This is not enough if the identifiers contain double quotes  as can be seen with this exampleijgt  create table tx int)  rows insertedupdateddeletedijgt  alter table t add column  int default  ERROR X Syntax error Encountered  at line   column .Ive found three places where AlterTableConstantAction generates SQL statements updateNewColumnToDefault)  updateNewAutoincrementColumn)  getColumnMax). All three places suffer from this problem.   
0;ParameterMetaDataJdbcTest fails with PMDD is not recognized as a function or procedure   ;Seen in nightly testing on Java httpdbtg.foundry.sun.comderbytestDailyjvm.testingtestlogsolsuitesAll_diff.txt) testParameterMetadataWithLITERALParametersorg.apache.derbyTesting.functionTests.tests.jdbcapi.ParameterMetaDataJdbcTest)java.sql.SQLSyntaxErrorException PMDD is not recognized as a function or procedure. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedCallableStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedCallableStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedCallableStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedCallableStatement.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.newEmbedCallableStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareCallUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareCallUnknown Source) at org.apache.derbyTesting.junit.BaseJDBCTestCase.prepareCallBaseJDBCTestCase.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.ParameterMetaDataJdbcTest.testParameterMetadataWithLITERALParametersParameterMetaDataJdbcTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Caused by java.sql.SQLException PMDD is not recognized as a function or procedure. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source) ...  moreCaused by ERROR Y PMDD is not recognized as a function or procedure. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.sql.compile.StaticMethodCallNode.bindExpressionUnknown Source) at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.bindExpressionUnknown Source) at org.apache.derby.impl.sql.compile.CallStatementNode.bindStatementUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementUnknown Source) ...  moreLooks like a problem with the ordering of the test cases. testParameterMetadataWithDECIMALParameters) creates the procedure PMDD  and testParameterMetadataWithLITERALParameters) calls it and drops it. If the test cases run in the opposite order  testParameterMetadataWithLITERALParameters) cannot find the procedure and fails.   
0;Cannot rollback after syntax error in internal statement   ;To reproduce  execute the statements below in ij. Can only be reproduced this way before DERBY. I dont know how to reproduce it when that bug is fixed.ij version .ijgt  connect jdbcderbydb createtrue ijgt  autocommit off ijgt  create table tx int)  rows insertedupdateddeletedijgt  alter table t add column  int default  ERROR X Syntax error Encountered  at line   column .Issue the help command for general information on IJ command syntax.Any unrecognized commands are treated as potential SQL commands and executed directly.Consult your DBMS server reference documentation for details of the SQL syntax supported by your server.ijgt  rollback ERROR XY Cannot issue rollback in a nested connection when there is a pending operation in the parent connection.The error message implies that weve called rollback) on a nested transaction  whereas were in fact called it on the parent transaction.Expected result The rollback statement should abort the transaction without raising any errors.   
0;CLOB INOUT arg set to NULL by procedure does not preserve NULL value when reinvoked   ;If a procedure sets an INOUT CLOB arg to NULL and is then reinvoked  the NULL is not preserved. Instead  the procedure sees the same CLOB that it saw in the last invocation. This bug was disclosed during the testing of the fix for DERBY. I will attach a repro.   
0;[patch] fix up sql cleanup handling   ;When a sql exception occurs  dont allow potential cascading sql problems when closing sql objects from masking the original cause of the exception.Also make sure statements get closed.   
0;PropertySetter should ignore GCJ installations   ;Many Linux platforms come with GCJ installed. GCJ implements most of the Java SE API  but not all of it  so it cannot be used to build Derby. Unfortunately  PropertySetter sometimes get confused by it and constructs a compile classpath using GCJs libraries.For example  on a machine running Debian ..  I have the sunjavajdk package as well as the gcjjdk package installed. When running ant to build Derby with no ~ant.properties  I get these compile classpaths constructedprintCompilerProperties  echo  After setting properties compilerPropsAlreadySet  true  echo  After setting properties compilerLevel  .  echo  After setting properties jsrcompile.classpath  homekahderbytrunkclassesstubsjsrusrlibjvmjava..gcj.jrelibrt.jar  echo  After setting properties jlib  jlib}  echo  After setting properties javacompile.classpath  usrlibjvmjava..gcj.jrelibrt.jar  echo  After setting properties jlib  jlib}  echo  After setting properties javacompile.classpath  usrlibjvmjava..gcj.jrelibrt.jar  echo  After setting properties jlib  jdk}jrelib  echo  After setting properties javacompile.classpath  usrlibjvmjavasun...jrelibaltrt.jarusrlibjvmjavasun...jrelibaltstring.jarusrlibjvmjavasun...jrelibcharsets.jarusrlibjvmjavasun...jrelibdeploy.jarusrlibjvmjavasun...jrelibjavaws.jarusrlibjvmjavasun...jrelibjce.jarusrlibjvmjavasun...jrelibjsse.jarusrlibjvmjavasun...jrelibmanagementagent.jarusrlibjvmjavasun...jrelibplugin.jarusrlibjvmjavasun...jrelibresources.jarusrlibjvmjavasun...jrelibrt.jarSince javacompile.classpath is based on GCJ  and GCJ lacks some classes in the javax.management.remote package  the build fails when it gets to the JMX testscompile_jdk  javac  Compiling  source files to homekahderbytrunkclasses  javac  homekahderbytrunkjavatestingorgapachederbyTestingfunctionTeststestsmanagementJMXConnectionDecorator.java cannot find symbol  javac  symbol  class JMXServiceURL  javac  location package javax.management.remote  javac  import javax.management.remote.JMXServiceURL   javac  ^...  javac  homekahderbytrunkjavatestingorgapachederbyTestingfunctionTeststestsmanagementRemoteConnectionGetter.java cannot find symbol  javac  symbol  class JMXConnector  javac  location class org.apache.derbyTesting.functionTests.tests.management.RemoteConnectionGetter  javac  JMXConnector jmxc  conns.removejmxConnection   javac  ^  javac   errorsBUILD FAILEDhomekahderbytrunkbuild.xml The following error occurred while executing this linehomekahderbytrunkjavatestingbuild.xml The following error occurred while executing this linehomekahderbytrunkjavatestingorgapachederbyTestingfunctionTeststestsmanagementbuild.xml Compile failed  see the compiler error output for details.Total time  minute  secondsPropertySetter should ignore GCJ installations to prevent this problem. If it hadnt found GCJ  it would have constructed javacompile.classpath from javacompile.classpath  and the build would have succeeded.   
0;Setting up network server for management tests hangs intermittently   ;Ive seen on three occurrences with the ... and ... release candidates that suites.All has been stuck when setting up the network server decorator for the management test suite. Heres what I see at the end of the console output running with derby.tests.tracetrue)  junit  test_jdbc_ used  ms   junit  test_jdbc_ used  ms   junit  test_notBooted used  ms java.net.SocketException Connection reset  junit  at java.net.SocketInputStream.readSocketInputStream.java)  junit  at java.net.SocketInputStream.readSocketInputStream.java)  junit  at java.net.SocketInputStream.readSocketInputStream.java)  junit  at org.apache.derby.impl.drda.NetworkServerControlImpl.fillReplyBufferUnknown Source)  junit  at org.apache.derby.impl.drda.NetworkServerControlImpl.readResultUnknown Source)  junit  at org.apache.derby.impl.drda.NetworkServerControlImpl.pingWithNoOpenUnknown Source)  junit  at org.apache.derby.impl.drda.NetworkServerControlImpl.pingUnknown Source)  junit  at org.apache.derby.drda.NetworkServerControl.pingUnknown Source)  junit  at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerUpNetworkServerTestSetup.java)  junit  at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerStartNetworkServerTestSetup.java)  junit  at org.apache.derbyTesting.junit.NetworkServerTestSetup.setUpNetworkServerTestSetup.java)  junit  at junit.extensions.TestSetup.protectTestSetup.java)  junit  at junit.framework.TestResult.runProtectedTestResult.java)  junit  at junit.extensions.TestSetup.runTestSetup.java)  junit  at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)  junit  at junit.extensions.TestDecorator.basicRunTestDecorator.java)  junit  at junit.extensions.TestSetup.protectTestSetup.java)  junit  at junit.framework.TestResult.runProtectedTestResult.java)  junit  at junit.extensions.TestSetup.runTestSetup.java)  junit  at junit.extensions.TestDecorator.basicRunTestDecorator.java)  junit  at junit.extensions.TestSetup.protectTestSetup.java)  junit  at junit.framework.TestResult.runProtectedTestResult.java)  junit  at junit.extensions.TestSetup.runTestSetup.java)  junit  at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)  junit  at junit.framework.TestSuite.runTestTestSuite.java)  junit  at junit.framework.TestSuite.runTestSuite.java)  junit  at junit.framework.TestSuite.runTestTestSuite.java)  junit  at junit.framework.TestSuite.runTestSuite.java)  junit  at junit.framework.TestSuite.runTestTestSuite.java)  junit  at junit.framework.TestSuite.runTestSuite.java)  junit  at junit.framework.TestSuite.runTestTestSuite.java)  junit  at junit.framework.TestSuite.runTestSuite.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.runJUnitTestRunner.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launchJUnitTestRunner.java)  junit  at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.mainJUnitTestRunner.java)The exception trace is just printed to the console  but it doesnt make any test fail. The exception printed on FreeBSD was different  it said DRDA_InvalidReplyTooShort.SInvalid reply from network server Insufficient data. The other two looked like the one above.)All the hangs have happened on VirtualBox instances  though with different guest operating systems and JVMs. Probably the timing is different from what we have on physical machines.   
0;Interrupt of create table or index i.e. a container) will throw XSDF under NIO  connection survives   ;Cf the enclosed repro. It would be good to make Derby ignore the interrupt here. Cf DERBY. Note that this is less serious than in the cases referred to in DERBY here the database does not get shut down  even the connection survives  cf the repro. So  this can be considered a followup to DERBY to further improve Derbys robustness under interrupts.   
0;Client driver silently truncates strings that exceed KB   ;Can be seen with this JUnit test case that retrieves a VARCHAR value with  characters. With the client driver  the string is truncated to  characters  bytes when encoded in UTF. public void testLongColumn throws SQLException  PreparedStatement ps  prepareStatement values cast? as varchar  char[] chars  new char[]  Arrays.fillchars  ue  String str  new Stringchars  ps.setString  str  JDBC.assertSingleValueResultSetps.executeQuery  str  }   
0;Remove usages of DriverManager to obtain an Embedded Connection in Derby Server   ;The Derby Network Server appears to look up the Derby Embedded Driver from the java.sql.DriverManager in a couple of places in order to get the connection to the actual database.This means the network server cannot operate in environments where for whatever reason it is not OK to access the embedded driver from the DriverManager. Just in general this behavior is unexpected as it should be possible to directly load the embedded driver.Ive observed this issue in ... and checked that the relevant usages are unchanged in trunk.   
0;assert failure in test testRAFReadWriteMultipleThreads interrupted flag cleared   ;This is another instance of an interrupted thread losing its interrupted flag after calling Derby  but I believe this is distinct from other we have seen.) testRAFReadWriteMultipleThreadsorg.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest)java.sql.SQLException The exception junit.framework.AssertionFailedError WorkerThread  was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdateUnknown Source) at org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest.testRAFReadWriteMultipleThreadsInterruptResilienceTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by java.sql.SQLException Java exception WorkerThread  junit.framework.AssertionFailedError. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) ...  moreCaused by junit.framework.AssertionFailedError WorkerThread  at org.apache.derbyTesting.junit.BaseTestCase.failBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest.tstRAFReadWriteMultipleThreadsInterruptResilienceTest.java) at org.apache.derby.exe.acabxxedxadxebfce.gUnknown Source) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeUnknown Source) at org.apache.derby.impl.sql.execute.CallStatementResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) ...  moreCaused by junit.framework.AssertionFailedError at org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTestWorkerThread.runInterruptResilienceTest.java)   
0;DatabaseMetaData.getColumnsnull  null  tableName  null) does not return the columns meta for a SYNONYM   ;DatabaseMetaData.getColumnsnull  null  tableName  null does not return the columns meta for a SYNONYM.Sample java code use for testing.** ListColumns.java *import java.sql.* import java.util.Properties public class ListColumns  public static void mainString[] args  Connection con  null  try  Class.forNameorg.apache.derby.jdbc.ClientDriver  Properties connectionProps  new Properties  connectionProps.putuser  app  connectionProps.putpassword  app  con  DriverManager.getConnection jdbcderbylocalhostnorthwind  connectionProps  String tableName  V  DatabaseMetaData meta  con.getMetaData  System.out.printlnDatabase Product Version  meta.getDatabaseProductVersion  ResultSet res  meta.getColumnsnull  null  tableName  null  System.out.printlnList of columns for   tableName  while res.next  System.out.println   res.getStringTABLE_SCHEM      res.getStringTABLE_NAME      res.getStringCOLUMN_NAME      res.getStringTYPE_NAME      res.getIntCOLUMN_SIZE      res.getStringNULLABLE  } res.close  con.close  } catch java.lang.ClassNotFoundException e  System.err.printlnClassNotFoundException   e.getMessage  } catch SQLException e  System.err.printlnSQLException   e.getMessage  } }}   
0;Simplify bytecode generation for concatenation operator   ;ConcatenationOperatorNode generates bytecode that ensures the result object is not null before calling the method that implements the operator. This breaks the pattern used by other operators which ensures that the result object is not null inside the method that implements the operator  not in the generated bytecode)  and it unnecessarily complicates the code in BinaryOperatorNode.The comments indicate that the current approach was chosen to prevent the null check from happening at execution time  but the generated bytecode does perform the null check at execution time  so generating byte code for it shouldnt have any real benefit over writing Java code for it. In general  implementing as much as possible of the execution time code as Java code is preferred to implementing it directly as bytecode because its easier to read and debug Java code  and because the generated bytecode cannot be shared between execution plans and take more memory.   
0;Warnings regarding XPath displayed when generating JavaDoc   ;When generating JavaDocs for Derby. the following warnings are displayed  javadoc  Constructing Javadoc information...  javadoc  homekwderbycommits.javaengineorgapachederbyiapitypesSqlXmlUtil.java package org.wc.dom.xpath does not exist  javadoc  import org.wc.dom.xpath.XPathEvaluator   javadoc  ^  javadoc  homekwderbycommits.javaengineorgapachederbyiapitypesSqlXmlUtil.java package org.wc.dom.xpath does not exist  javadoc  import org.wc.dom.xpath.XPathExpression   javadoc  ^  javadoc  homekwderbycommits.javaengineorgapachederbyiapitypesSqlXmlUtil.java package org.wc.dom.xpath does not exist  javadoc  import org.wc.dom.xpath.XPathResult   javadoc  ^  javadoc  homekwderbycommits.javaengineorgapachederbyiapitypesSqlXmlUtil.java cannot find symbol  javadoc  symbol  class XPathExpression  javadoc  location class org.apache.derby.iapi.types.SqlXmlUtil  javadoc  private XPathExpression query    
0;A table created with ... with constraints cannot be dropped with . due to NullPointerException with insane build or ASSERT FAILED Failed to find sharable conglomerate descriptor for index conglomerate  with sane build   ;In ... there was some bug that caused a duplicate entry in sys.sysconglomerates.After running the attached repro_create.sql with ...  you will see two rows returned instead of one withselect c.constraintname  c.constraintid  cong.conglomerateid  cong.conglomeratename from sys.sysconglomerates cong  sys.syskeys k  sys.sysconstraints c where c.constraintname  PK_RS and c.constraintid k.constraintid and k.conglomerateid  cong.conglomerateid  I am not sure what practical impact this has with . as you can still drop the table s.rs with that version.On connecting to the database with .  either soft or hard upgrade with ...  DROP TABLE S.RS fails withCaused by java.sql.SQLException Java exception ASSERT FAILED Failed to findsharable conglomerate descriptor for index conglomerate   org.apache.derby.shared.common.sanity.AssertFailure. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  moreCaused by org.apache.derby.shared.common.sanity.AssertFailure ASSERT FAILED Failed to find sharable conglomerate descriptor for index conglomerate   at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERTSanityManager.java) at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERTSanityManager.java) at org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor.describeSharedConglomerateConglomerateDescriptor.java) at org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor.dropConglomerateDescriptor.java) at org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor.dropConstraintDescriptor.java) at org.apache.derby.impl.sql.execute.DDLSingleTableConstantAction.dropConstraintDDLSingleTableConstantAction.java) at org.apache.derby.impl.sql.execute.DDLSingleTableConstantAction.dropConstraintDDLSingleTableConstantAction.java) at org.apache.derby.impl.sql.execute.DropTableConstantAction.dropAllConstraintDescriptorsDropTableConstantAction.java) at org.apache.derby.impl.sql.execute.DropTableConstantAction.executeConstantActionDropTableConstantAction.java) at org.apache.derby.impl.sql.execute.MiscResultSet.openMiscResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtGenericPreparedStatement.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) ...  moreand with an insane build with a NullPointerExceptionjava.lang.NullPointerException  at  org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor.dropUnknown  Source)  at  org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor.dropUnknown  Source)  at  org.apache.derby.impl.sql.execute.DDLSingleTableConstantAction.dropConst  raintUnknown Source)  at  org.apache.derby.impl.sql.execute.DDLSingleTableConstantAction.dropConst  raintUnknown Source)  at  org.apache.derby.impl.sql.execute.DropTableConstantAction.dropAllConstra  intDescriptorsUnknown Source)  at  org.apache.derby.impl.sql.execute.DropTableConstantAction.executeConstan  tActionUnknown Source)  at org.apache.derby.impl.sql.execute.MiscResultSet.openUnknown  Source)  at  org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown  Source)  at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown  Source)  at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown  Source)  at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source)  at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdateUnknown  Source) Still need to figure out the exact versions affected  when the dup row was fixed  and when the drop stopped working.To reproduce connect to a database with ... can be accessed at httpsvn.apache.orgreposasfdbderbyjars...)run the attached script repro_create.sql connect with the latest on the trunk or . branchDROP TABLE S.RS The table will not drop. The work around is to drop the table with the old version ...   
0;Engine code references org.apache.derby.shared.common.sanity.SanityManager   ;Derby engine code is importing org.apache.derby.shared.common.sanity.SanityManager  causing sealing violations. See DERBY why this fix is inadequate.Even though this wont fix theall problems  using shared.common.sanity.SanityManager on the client and iapi.services.sanity.SanityManager in the engine code is a simple rule to follow. Violations are also easily addressed.   
0;Intermittent OutOfMemoryErrors in BasicSetup.testTriggersWithLOBcolumns)   ;Seen many times in the JDK  tests lately  and also in the Tinderbox. First occurrence was here httpdbtg.foundry.sun.comderbytestDailyjvm.testingtestlogsolsuitesAll_diff.txtThere had been no commits in the last two days before this test run  so its difficult to say if a recent change caused it.)The test case has a comment that says that it should never read the LOB into memory  but according to the stack trace  thats exactly whats happeningCaused by java.lang.OutOfMemoryError Java heap space at org.apache.derby.iapi.types.SQLBinary.readFromStreamUnknown Source) at org.apache.derby.iapi.types.SQLBinary.readExternalUnknown Source) at org.apache.derby.iapi.types.SQLBinary.getValueUnknown Source) at org.apache.derby.iapi.types.SQLBinary.loadStreamUnknown Source) at org.apache.derby.impl.sql.execute.UpdateResultSet.objectifyStreamUnknown Source) at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRowsUnknown Source) at org.apache.derby.impl.sql.execute.UpdateResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdateUnknown Source) at org.apache.derbyTesting.functionTests.tests.upgradeTests.BasicSetup.testTriggersWithLOBcolumnsBasicSetup.java)   
0;Large batch of DDL in a database procedure dies on a transaction severity error.   ;The batch of DDL run by the procedure which registers database metadata functions now dies with the following errorERROR XC Dead statement. This may be caused by catching a transaction severity error inside this statement.A process of binary search shows that this problem was introduced by revision  as part of the work on DERBY.The bug can be reproduced by compiling the DBMDWrapper class attached to DERBY and then running the following scriptconnect jdbcderbymemorydb createtrue  create procedure registerPublicStaticMethods in connectionURL varchar  )  in printSQL boolean )language java parameter style java modifies sql dataexternal name DBMDWrapper.registerPublicStaticMethods call registerPublicStaticMethods jdbcdefaultconnection  false ) If you change the second argument to registerPublicStaticMethods to true  then you will see all of the DDL being issued by the database procedure. The procedure runs fine in . but fails with this error in ..   
0;Update toolsidenetbeans directory   ;The toolside directory contains projects for two versions of NetBeans . and .). Since they havent been updated for newer versions of NetBeans  I suppose it means they arent used much. Also  since there are two of them  NetBeans gets confused as to which of the projects to use  and I have experienced that it often uses a mix of the . and . projects for the open source files  which causes problems for navigation and debugging. The problem with having multiple NetBeans projects pointing to the same source is described here httpwiki.netbeans.orgFaqSourceRootOverlapTo prevent these problems  we should either remove the toolsidenetbeans directory and let NetBeans users create their own projects there a pretty good description on the wiki httpwiki.apache.orgdbderbyBuildingDerbyUsing_NetBeans_to_Build_Derby )  or provide an updated project and remove the old ones.The project files arent really tied to a particular version of NetBeans and can be opened by newer versions. But the projects still need to be updated to be usable  I think. For example  they should have projectspecific formatting settings added in NB .  I think) which set tab size to   since setting tab size globally to  as you would have to with the current projects  only works if Derby is the only project youre working on in NetBeans.)   
0;Unable to boot ... database  fails during softhard upgrade process for a new version number while trying to drop jdbc metadata   ;I have been unable to get Derby ... and ... to boot the attached ... database. Derby ... is however able to use the DB.Im not sure if this is a backwards compatibility bug or the result of corruption to the database. Running SYSCS_CHECK_TABLE and SYSCS_COMPRESS_TABLE under ... found no problems with the database.NOTE I have had to remove all data and nonessential tablescolumnstriggersetc prior to attaching this database.Output when connecting to the DB using ijERROR XJ Failed to start database CUsersBMASONSandboxInternalDB with class loader sun.misc.LauncherAppClassLoader@be  see the next exception for details.ERROR XSDA Restore of a serializable or SQLData object of class   attempted to read more data than was originally storedFull exception from our applicationjava.sql.SQLException Failed to start database CUsersBMASONSandboxInternalDB with class loader sun.misc.LauncherAppClassLoader@dee  see the next exception for details. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabaseUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionUnknown Source) at org.apache.derby.jdbc.InternalDriver.connectUnknown Source) at org.apache.derby.jdbc.EmbeddedDataSource.getConnectionUnknown Source) at org.apache.derby.jdbc.EmbeddedDataSource.getConnectionUnknown Source) at com.ADInstruments.LTS.util.DerbyUtils.existsDerbyUtils.java) at com.ADInstruments.LTS.InternalDB.InternalDbUtilities.cacheInternalDbVersionInternalDbUtilities.java) at com.ADInstruments.LTCS.InternalDB.InternalDbStartup.initialiseDatabaseInternalDbStartup.java) at com.ADInstruments.LTCS.StartupTasksStartupRunnable.initDatabasesStartupTasks.java) at com.ADInstruments.LTCS.StartupTasksStartupRunnable.runStartupTasks.java) at java.lang.Thread.runThread.java)Caused by java.sql.SQLException Failed to start database CUsersBMASONSandboxInternalDB with class loader sun.misc.LauncherAppClassLoader@dee  see the next exception for details. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source) ...  moreCaused by java.sql.SQLException Restore of a serializable or SQLData object of class   attempted to read more data than was originally stored at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUnknown Source) ...  moreCaused by ERROR XSDA Restore of a serializable or SQLData object of class   attempted to read more data than was originally stored at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.store.raw.data.StoredPage.readRecordFromArrayUnknown Source) at org.apache.derby.impl.store.raw.data.StoredPage.restoreRecordFromSlotUnknown Source) at org.apache.derby.impl.store.raw.data.BasePage.fetchFromSlotUnknown Source) at org.apache.derby.impl.store.access.conglomerate.GenericScanController.fetchRowsUnknown Source) at org.apache.derby.impl.store.access.heap.HeapScan.fetchNextUnknown Source) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaHeapUnknown Source) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getAllSPSDescriptorsUnknown Source) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSesUnknown Source) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.updateMetadataSPSesUnknown Source) at org.apache.derby.impl.sql.catalog.DD_Version.handleMinorRevisionChangeUnknown Source) at org.apache.derby.impl.sql.catalog.DD_Version.upgradeIfNeededUnknown Source) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.loadDictionaryTablesUnknown Source) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.bootUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.bootUnknown Source) at org.apache.derby.impl.services.monitor.TopService.bootModuleUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleUnknown Source) at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModuleUnknown Source) at org.apache.derby.impl.db.BasicDatabase.bootUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.bootUnknown Source) at org.apache.derby.impl.services.monitor.TopService.bootModuleUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.bootServiceUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderServiceUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartServiceUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceUnknown Source) at org.apache.derby.iapi.services.monitor.Monitor.startPersistentServiceUnknown Source) ...  moreCaused by java.io.EOFException at java.io.DataInputStream.readIntDataInputStream.java) at org.apache.derby.iapi.sql.dictionary.TriggerDescriptor.readExternalUnknown Source) at org.apache.derby.iapi.services.io.FormatIdInputStream.readObjectUnknown Source) at org.apache.derby.iapi.services.io.ArrayUtil.readArrayItemsUnknown Source) at org.apache.derby.impl.sql.execute.TriggerInfo.readExternalUnknown Source) at org.apache.derby.iapi.services.io.FormatIdInputStream.readObjectUnknown Source) at org.apache.derby.impl.sql.execute.WriteCursorConstantAction.readExternalUnknown Source) at org.apache.derby.impl.sql.execute.UpdateConstantAction.readExternalUnknown Source) at org.apache.derby.iapi.services.io.FormatIdInputStream.readObjectUnknown Source) at org.apache.derby.impl.sql.GenericStorablePreparedStatement.readExternalUnknown Source) at org.apache.derby.iapi.services.io.FormatIdInputStream.readObjectUnknown Source) at org.apache.derby.iapi.types.UserType.readExternalUnknown Source) ...  more   
0;test failure NullPointerException with JME weme .) in testDerby_TransactionTimeoutSpecifiedNotExceededorg.apache.derbyTesting.functionTests.tests.memory.XAMemTest)   ;See httppeople.apache.org~myrnavlderby_test_resultsmainwindowstestlogweme.suites.All_diff.txtuntil cleaned up).This test started failing after the following three changes were committedr | kahatlen |    Thu   Jun ) |  linesDERBY Remove usages of DriverManager to obtain an Embedded Connection in Derby ServerRemove import of DriverManager now that its not used.r | kahatlen |    Thu   Jun ) |  linesDERBY getColumns) doesnt work with auto generated identitycolumns that start with large numbersRemoved hardcoded maximum length for the start value and increment inthe metadata query.r | kristwaa |    Thu   Jun ) |  linesDERBY OOM issue using XA with timeouts Reduce the memory footprint when executing successful XA transactions thathave a timeout set by nulling out the reference to the XATransactionStateobject in the timer task. The timer task will stay around in the timer queueuntil reaching the scheduled time  even if the task is canceled.Added a regression test run as part of ant junitlowmem).Patch file derbyareduce_memory_footprint.diffThe stack trace is like so) testDerby_TransactionTimeoutSpecifiedNotExceededorg.apache.derbyTesting.functionTests.tests.memory.XAMemTest)junit.framework.AssertionFailedError java.lang.NullPointerException at org.apache.derbyTesting.junit.JDBCDataSource.getDataSourceObjectJDBCDataSource.java) at org.apache.derbyTesting.junit.JEEDataSource.getXADataSourceJEEDataSource.java) at org.apache.derbyTesting.junit.JEEDataSource.getXADataSourceJEEDataSource.java) at org.apache.derbyTesting.functionTests.tests.memory.XAMemTest.testDerby_TransactionTimeoutSpecifiedNotExceededXAMemTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Likely this test just needs to not run if JDBC.vmSupportsJSR)).   
1;SQLAuthorisation and views   ;Hi in some cases there seem to be issues with SQLAuthorisation in conjunction with database VIEWS.Please see attached files as repro script.txt has only the SQL I executed  output is the output resulting when running the script). I would think identical results should be returned in all cases and independent on how the view has been defined  but this to my surprise not being the case) Trying to select from view appl.VW_MyTasks  which is a simple view defined on just one table  leads to expected results  i.e. my tasks are being returned.) Trying to select from view appl.VW_MyPriorityTasks  which is a view defined on two joined tables without using an inner join clause  leads to expected results  i.e. my priority tasks are being returned.) Trying to select from view appl.VW_MyPriorityTasks  which is the same view but now the two tables joined using an inner join clause  leads to an error and no tasks returned when the same results as in ) above were expected).) Trying to select from view appl.VW_MyPriorityTasks  which is a view defined using a subselect  also unexpectedly leads to an error.Note While I could rewrite each inner join clause with changing the syntax like in ) above  this provides a simple workaround for such cases. May be there is a workaround for subselects also not sure if every subselect could be rewritten to a join?). However when depending on using EXISTS constructs in the query there unfortunately is no way I would know of) to get around this problem. Unfortuanetly a view that makes use of EXISTS is also one I would need to define in my data base...Thanks   
0;Change derby.tests.trace to print the class as well as fixture name   ;I was thinking it would be good for the test output with Dderby.tests.tracetrue to have the class name as well as the fixture as I think if I had a nickel for every time I grepped for a fixture name to find out what class it is in  I would have a pretty big piggy bank.It could print the full class name  like thisorg.apache.derbyTesting.functionTests.tests.lang.SimpleTest.testBasicOperations used  ms .or strip off the org.apache.derbyTesting.functionTests for less output liketests.lang.SimpleTest.testBugFixes used  ms .Any preferences?   
0;Remove dead methods June )   ;Unused methods should be removed.   
0;Assert failure with CASE expression in GROUP BY clause   ;I see the following assert failure with debug jars on ... and later doesnt fail on ... and earlier)ijgt  create table tx int)  rows insertedupdateddeletedijgt  insert into t values   row insertedupdateddeletedijgt  select case when a then  else  end from t ta) join t tb) on ab group by case when a then  else  end ERROR XJ Java exception ASSERT FAILED retVN expected to be instanceof ColumnReference  not org.apache.derby.impl.sql.compile.ConditionalNode org.apache.derby.shared.common.sanity.AssertFailure.   
0;Incorrect use of CharsetEncoder in DDMWriter   ;DDMWriter has two calls to CharsetEncoder.encode)  in writeLDString) and writeString). According to the javadoc for CharsetEncoder  one should call reset) before one calls encode)  and flush) after on. DDMWriter doesnt call reset) or flush). Im not aware of any problems that happen because of it  but we should follow the spec to avoid surprises.   
0;Repeated database creation causes OutOfMemoryError   ;Repeatedly creating  querying  updating  and shutting down a database or databases eventually causes OutOfMemoryError.Java source reproducing the problem is attached.   
0;Starting  weme . upgrade tests started failing with  failures  errors with java.lang.IllegalAccessException   ;Starting on  weme . upgrade tests started failing with many failures and errors.The first Error is a java.lang.IllegalAccessException with stack trace below. It is probably related to this checkin.r | kahatlen |    Wed   Jul ) |  linesDERBY Unload old JDBC drivers when done with them in the upgrade testsAt first glance it looks like a JVM issue as the native method shoudlnt get an IllegalAccessException.Probably best to work around it short term and disable the fix for weme. I think it just impacts the tests and not the product.Time  .There were  errors) ... Upgrade Phase CREATE java.lang.IllegalAccessException at java.lang.reflect.Field.setImplNative Method) at java.lang.reflect.Field.setField.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.PhaseChanger.clearFieldPhaseChanger.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.PhaseChanger.clearDerbyThreadLocalsPhaseChanger.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.PhaseChanger.tearDownPhaseChanger.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testUnimplementedSQLObjectAttributesorg.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest)SQL Exception Feature not implemented no details. at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.notImplementedUnknown Source) at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getAttributesUnknown Source) at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testUnimplementedSQLObjectAttributesDatabaseMetaDataTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)   
0;URLCheck fails on phoneME   ;I see this failure on phoneMEorg.apache.derbyTesting.functionTests.tests.tools.ToolScripts.URLCheck from org.apache.derbyTesting.functionTests.suites.All)junit.framework.ComparisonFailure Output at line  expectedlt  ijCONNECTION)gt   Find an unknown attribute. gt  but waslt  JAVA ERROR java.lang.NoClassDefFoundError java.sql.Driver gt  at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanonUnknown Source) at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTestUnknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareUnknown Source) at junit.extensions.TestDecorator.basicRunUnknown Source) at junit.extensions.TestSetup.protectUnknown Source) at junit.extensions.TestSetup.runUnknown Source) at org.apache.derbyTesting.junit.BaseTestSetup.runUnknown Source) at sun.misc.CVM.runMainUnknown Source)The original test was excluded on Foundation because it required java.sql.Driver.   
0;ijTest fails on phoneME   ;org.apache.derbyTesting.functionTests.tests.tools.ijTest.ij from org.apache.derbyTesting.functionTests.suites.All)junit.framework.ComparisonFailure Output at line  expectedlt ij CONNECTION) gt  gt  but waslt ij[]gt  gt  at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanonUnknown Source) at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTestUnknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareUnknown Source) at junit.extensions.TestDecorator.basicRunUnknown Source) at junit.extensions.TestSetup.protectUnknown Source) at junit.extensions.TestSetup.runUnknown Source) at junit.extensions.TestDecorator.basicRunUnknown Source) at junit.extensions.TestSetup.protectUnknown Source) at junit.extensions.TestSetup.runUnknown Source) at org.apache.derbyTesting.junit.BaseTestSetup.runUnknown Source) at sun.misc.CVM.runMainUnknown Source)   
0;Restricted Table Function support should pass NOT EQUAL restrictions to initScan   ;Restricted Table Function support should pass NOT EQUAL restrictions to initScan. Currently any  or lt gt  constraints on the SQL used in the WHERE clause of a SELECT on a Restricted Table Funtion are not passed to the initScan method. These can be useful depending on how the Restricted Table Function is implemented.   
0;AssertionFailedError in testCaseCSB_NonUniqueIndex in AccessTest   ;There was  failure) testCaseCSB_NonUniqueIndexorg.apache.derbyTesting.functionTests.tests.store.AccessTest)junit.framework.AssertionFailedError at org.apache.derbyTesting.functionTests.tests.store.AccessTest.assertStatsOKAccessTest.java) at org.apache.derbyTesting.functionTests.tests.store.AccessTest.doTestCaseCSBAccessTest.java) at org.apache.derbyTesting.functionTests.tests.store.AccessTest.testCaseCSB_NonUniqueIndexAccessTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Cf. httpdbtg.foundry.sun.comderbytestDailyjvm.testingLimitedtestSummary.html   
0;NPE in BasicDatabase.stop in replication slave mode dd.clearSequenceCaches)   ;To reproduce  set up a replication pair and then stop the master I used stopMastertrue).From derby.log on the slaveReplication slave role was stopped for database replicDB.java.lang.NullPointerException at org.apache.derby.impl.db.BasicDatabase.stopUnknown Source) at org.apache.derby.impl.db.SlaveDatabase.stopSlaveDatabase.java) at org.apache.derby.impl.services.monitor.TopService.stopTopService.java) at org.apache.derby.impl.services.monitor.TopService.shutdownTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.shutdownBaseMonitor.java) at org.apache.derby.impl.db.DatabaseContextImpl.cleanupOnErrorDatabaseContextImpl.java) at org.apache.derby.iapi.services.context.ContextManager.cleanupOnErrorContextManager.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.cleanupOnErrorTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.internalStopReplicationSlaveEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionDriver.java) at org.apache.derby.jdbc.InternalDriver.connectInternalDriver.java) at org.apache.derby.jdbc.AutoloadedDriver.connectAutoloadedDriver.java) at org.apache.derby.impl.db.SlaveDatabase.handleShutdownSlaveDatabase.java) at org.apache.derby.impl.db.SlaveDatabase.accessSlaveDatabase.java) at org.apache.derby.impl.db.SlaveDatabaseSlaveDatabaseBootThread.runSlaveDatabase.java) at java.lang.Thread.runThread.java)The reason is that there is no data dictionary available when the database is in replication slave mode.Note that the exception is caught and simply printed to derby.log.   
1;By default  only the DBO should be allowed to run several of the diagnostic VTIs.   ;Only the DBO should be allowed to run the following VTIs syscs_diag.statement_cache syscs_diag.transaction_table syscs_diag.error_log_reader ) syscs_diag.statement_duration)   
0;Intermittent failures in CompressTableTest and TruncateTableTest   ;The test cases CompressTableTest.testConcurrentInvalidation) and TruncateTableTest.testConcurrentInvalidation) fail intermittently with errors such asERROR XSAI The conglomerate  ) requested does not exist.The problem has been analyzed in the comments on DERBY  and a patch attached to that issue invalidationduringcompilation.diff) fixes the underlying race condition. However  that patch only works correctly together with the fix for DERBY  which was backed out because it caused the regression DERBY.We will therefore need to find a way to fix DERBY without reintroducing DERBY in order to resolve this issue.   
0;MemoryLeakFixesTest.testRepeatedDatabaseCreationWithAutoStats) fails on phoneME java.lang.InternalError Number of class names exceeds vm limit.   ;Seen when running MemoryLeakFixesTest  both with trunk and with the ... release candidate) testRepeatedDatabaseCreationWithAutoStatsorg.apache.derbyTesting.functionTests.tests.memory.MemoryLeakFixesTest)java.lang.InternalError Number of class names exceeds vm limit. at java.lang.ClassLoader.findLoadedClassNative Method) at java.lang.ClassLoader.findLoadedClassUnknown Source) at java.lang.ClassLoader.loadClassUnknown Source) at sun.misc.LauncherAppClassLoader.loadClassUnknown Source) at java.lang.ClassLoader.loadClassUnknown Source) at java.util.ResourceBundle.loadBundleUnknown Source) at java.util.ResourceBundle.findBundleUnknown Source) at java.util.ResourceBundle.getBundleImplUnknown Source) at java.util.ResourceBundle.getBundleUnknown Source) at org.apache.derby.iapi.services.in.MessageService.getBundleWithEnDefaultUnknown Source) at org.apache.derby.iapi.services.in.MessageService.getBundleForLocaleUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.getBundleUnknown Source) at org.apache.derby.iapi.services.in.MessageService.getBundleUnknown Source) at org.apache.derby.iapi.services.in.MessageService.getCompleteMessageUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionUnknown Source) at org.apache.derby.jdbc.InternalDriver.connectUnknown Source) at org.apache.derby.jdbc.EmbeddedSimpleDataSource.getConnectionUnknown Source) at org.apache.derby.jdbc.EmbeddedSimpleDataSource.getConnectionUnknown Source) at org.apache.derbyTesting.functionTests.tests.memory.MemoryLeakFixesTest.testRepeatedDatabaseCreationWithAutoStatsUnknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareUnknown Source) at junit.extensions.TestDecorator.basicRunUnknown Source) at junit.extensions.TestSetup.protectUnknown Source) at junit.extensions.TestSetup.runUnknown Source) at org.apache.derbyTesting.junit.BaseTestSetup.runUnknown Source) at sun.misc.CVM.runMainUnknown Source)   
0;SysDiagVTIMappingTest.test_) failed java.text.ParseException Unparseable date Thu Sep   CEST    ;Seen when testing the ... release candidate on Windows httpdbtg.foundry.sun.comderbytest..._RClogsjvm.winsuitesAllreport.txtThere were  errors) test_org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest)java.text.ParseException Unparseable date Thu Sep   CEST  at java.text.DateFormat.parseDateFormat.java) at org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest.vetTimestampSysDiagVTIMappingTest.java) at org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest.test_SysDiagVTIMappingTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) test_org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest)java.text.ParseException Unparseable date Thu Sep   CEST  at java.text.DateFormat.parseDateFormat.java) at org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest.vetTimestampSysDiagVTIMappingTest.java) at org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest.test_SysDiagVTIMappingTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)   
0;Make Derby run on Oracle Java ME Embedded Client   ;I tried running Derby on Oracle Java ME Embedded Client .  and booting the engine failedCaused by java.lang.NoClassDefFoundError java.nio.channels.OverlappingFileLockException at org.apache.derby.impl.io.DirStorageFactory.newPersistentFileDirStorageFactory.java) at org.apache.derby.impl.io.DirStorageFactory.newStorageFileDirStorageFactory.java) at org.apache.derby.impl.services.monitor.StorageFactoryService.runStorageFactoryService.java) at java.security.AccessController.doPrivilegedCompiled Method)AccessController.java) at java.security.AccessController.doPrivilegedAccessController.java) at org.apache.derby.impl.services.monitor.StorageFactoryService.lt initgt StorageFactoryService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.getPersistentServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.accessBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitorProviderEnumeration.getNextStorageFactoryBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitorProviderEnumeration.hasMoreElementsBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartServiceBaseMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentServiceBaseMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.startPersistentServiceMonitor.java) at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabaseEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java)This seems to happen because Derby recognizes it as a Java . platform  whereas its actually a CDCFP .. platform.   
0;On zOS testConnectWrongSubprotocolWithSystemPropertyorg.apache.derbyTesting.functionTests.tests.tools.ConnectWrongSubprotocolTest)junit.framework.Asserti ailedError   ;With the release candidate ...  ) I saw the following two failures on zOS in testConnectWrongSubprotoctestolWithoutSystemPropertyThere were  failures) testConnectWrongSubprotocolWithSystemPropertyorg.apache.derbyTesting.functionTests.tests.tools.ConnectWrongSubprotocolTest)junit.framework.AssertionFailedError at org.apache.derbyTesting.functionTests.tests.tools.ConnectWrongSubprotocolTest.checkConnectWrongSubprotocolConnectWrongSubprotocolTest.java) at org.apache.derbyTesting.functionTests.tests.tools.ConnectWrongSubprotocolTest.testConnectWrongSubprotocolWithSystemPropertyConnectWrongSubprotocolTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testConnectWrongSubprotoctestolWithoutSystemPropertyorg.apache.derbyTesting.functionTests.tests.tools.ConnectWrongSubprotocolTest)junit.framework.AssertionFailedError at org.apache.derbyTesting.functionTests.tests.tools.ConnectWrongSubprotocolTest.checkConnectWrongSubprotocolConnectWrongSubprotocolTest.java) at org.apache.derbyTesting.functionTests.tests.tools.ConnectWrongSubprotocolTest.testConnectWrongSubprotoctestolWithoutSystemPropertyConnectWrongSubprotocolTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)FAILURESTests run   Failures   Errors The test is newly converted with DERBY so not likely a regression  but probably more likely an encoding issue related to this test String ijResult  runIjScriptijScript  useSystemProperties)   assertTrueijResult.indexOf) gt  )    
1;Unauthorized shutdown should not generate thread dump and javacore. AuthenticationTest dumps over  javacores with IBM JVM for normal user errors   ;If jdbcapi.AuthenticationTest is run without changing the derby.stream.error.extendedDiagSeverityLevel as is done in the test  it generates thread dumps and javacores for IBM jvms. I beleive the errors in this test are expected user errors and not crashes so they should not generate a thread dump or javacore. To reproduce remove this line from test Derby set the property to avoid thread dump and diagnostic info sysprops.putderby.stream.error.extendedDiagSeverityLevel ) Until fixed  users can work around the issue by setting derby.stream.error.extendedDiagSeverityLevel to  as is done in the test.   
0;Empty MAPS table in toursdb   ;The toursdb thats bundled with ... and ... and the ... release candidate) has no rows in the MAPS table. Version ... had three rows in that tableijgt  select * from maps MAP_ID |MAP_NAME |REGION |AREA |PHOTO_FORMAT |PICTURE  |North Ocean |Cup Island |. |gif |fefcccffffffffffffffffffffffffamp  |Middle Ocean |Small Island |. |gif |efcccffffffffffffffffffffffffamp  |South Ocean |Witch Island |. |gif |fffcccffffffffffffffffffffffffamp  rows selectedBuilding it on a clean trunk and looking at generatedtoursdbtoursdb.out gives the following hintFAIL   unexpected exception java.sql.SQLException Database toursDB not found.java.sql.SQLException Database toursDB not found. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.EmbedConnection.newSQLExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleDBNotFoundEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.lt initgt EmbedConnection.java) at org.apache.derby.jdbc.Driver.getNewEmbedConnectionDriver.java) at org.apache.derby.jdbc.InternalDriver.connectInternalDriver.java) at org.apache.derby.jdbc.AutoloadedDriver.connectAutoloadedDriver.java) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java) at toursdb.insertMaps.maininsertMaps.java)Caused by java.sql.SQLException Database toursDB not found. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  moreI suspect this was introduced by the changes in DERBY when the destination directory for toursdb was changed.   
0;SpawnedProcess.complete may fail to destroy the process when a timeout is specified   ;The logic in SpawnedProcess has a weakness that may result in the wrapped process not being destroyed if the destroy variable is false and a timeout is specified.The problem is that the while condition will shortcut the if condition in the catch clause where destroy is set to true if the timeout is exceeded).   
0;ERROR  deadlock in nstest on select maxserialkey)   ;nstest with .. both ... RC revision  and builds off the .. tree at ... level after backing out re DERBY show deadlock errors like the followingCaused by ERROR  A lock could not be obtained due to a deadlock  cycle of at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionErrorUnknown Source at org.apache.derby.impl.jdbc.EmbedResultSet.movePositionUnknown Source at org.apache.derby.impl.jdbc.EmbedResultSet.nextUnknown Source at org.apache.derbyTesting.system.nstest.utils.DbUtil.pick_oneDbUtil.java at org.apache.derbyTesting.system.nstest.utils.DbUtil.delete_one_rowDbUtil.java at org.apache.derbyTesting.system.nstest.tester.TesterObject.doIUDOperationTesterObject.java at org.apache.derbyTesting.system.nstest.tester.Tester.startTestingTester.java at org.apache.derbyTesting.system.nstest.NsTest.runNsTest.javaCaused by java.sql.SQLException A lock could not be obtained due to a deadlock  cycle of locks and waiters isLock  ROW  NSTESTTAB    Waiting XID    S}   NSTEST  select maxserialkey from nstesttab where serialkey gt  ? Granted XID    X}Lock  ROW  NSTESTTAB    Waiting XID    S}   NSTEST  select maxserialkey from nstesttab where serialkey gt  ? Granted XID    X}. The selected victim is XID  . at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source ...  moreFor more examples  see comments on DERBY.   
0;Problems running SecureServerTest and replication tests on Open JDK  for Mac OS X   ;I see the following errors when I run the JUnit tests on Open JDK  for Mac OS Xsanity is sane..STARTSPAWNEDsysinfo STANDARD OUTPUT exit codeTue Oct   PDT   Error getting SysInfo information.ENDSPAWNED sysinfo STANDARD OUTPUTFSTARTSPAWNEDSpawnedNetworkServer STANDARD OUTPUT exit codeTue Oct   PDT   Security manager installed using the Basic server security policy.Tue Oct   PDT   Warning UnknkownHostException richardhillegascomputer.local richardhillegascomputer.local nodename nor servname provided  or not known.Tue Oct   PDT   Apache Derby Network Server  ...  ) started and ready to accept connections on port Tue Oct   PDT   host localhost is not local to the server running on ...  so cannot be used for NetworkServerControl commands Tue Oct   PDT   host localhost is not local to the server running on ...  so cannot be used for NetworkServerControl commands ENDSPAWNED SpawnedNetworkServer STANDARD OUTPUTE.STARTSPAWNEDsysinfo STANDARD OUTPUT exit codeTue Oct   PDT   Error getting SysInfo information.ENDSPAWNED sysinfo STANDARD OUTPUTFSTARTSPAWNEDSpawnedNetworkServer STANDARD OUTPUT exit codeTue Oct   PDT   Security manager installed using the Basic server security policy.Tue Oct   PDT   Warning UnknkownHostException richardhillegascomputer.local richardhillegascomputer.local nodename nor servname provided  or not known.Tue Oct   PDT   Apache Derby Network Server  ...  ) started and ready to accept connections on port Tue Oct   PDT   host localhost is not local to the server running on ...  so cannot be used for NetworkServerControl commands Tue Oct   PDT   host localhost is not local to the server running on ...  so cannot be used for NetworkServerControl commands ENDSPAWNED SpawnedNetworkServer STANDARD.STARTSPAWNEDSpawnedNetworkServer ERROR OUTPUTError Exception thrown by the agent  java.net.MalformedURLException Local host name unknown java.net.UnknownHostException richardhillegascomputer.local richardhillegascomputer.local nodename nor servname provided  or not knownENDSPAWNED SpawnedNetworkServer ERROR OUTPUTF.STARTSPAWNEDSpawnedNetworkServer ERROR OUTPUTError Exception thrown by the agent  java.net.MalformedURLException Local host name unknown java.net.UnknownHostException richardhillegascomputer.local richardhillegascomputer.local nodename nor servname provided  or not knownENDSPAWNED SpawnedNetworkServer ERROR OUTPUTF.STARTSPAWNEDSpawnedNetworkServer ERROR OUTPUTError Exception thrown by the agent  java.net.MalformedURLException Local host name unknown java.net.UnknownHostException richardhillegascomputer.local richardhillegascomputer.local nodename nor servname provided  or not knownENDSPAWNED SpawnedNetworkServer ERROR OUTPUTF.STARTSPAWNEDSpawnedNetworkServer ERROR OUTPUTError Exception thrown by the agent  java.net.MalformedURLException Local host name unknown java.net.UnknownHostException richardhillegascomputer.local richardhillegascomputer.local nodename nor servname provided  or not knownENDSPAWNED SpawnedNetworkServer ERROR OUTPUTF.....STARTSPAWNEDSpawnedNetworkServer ERROR OUTPUTError Exception thrown by the agent  java.net.MalformedURLException Local host name unknown java.net.UnknownHostException richardhillegascomputer.local richardhillegascomputer.local nodename nor servname provided  or not knownENDSPAWNED SpawnedNetworkServer ERROR OUTPUTF......................STARTSPAWNEDSpawnedNetworkServer ERROR OUTPUTError Exception thrown by the agent  java.net.MalformedURLException Local host name unknown java.net.UnknownHostException richardhillegascomputer.local richardhillegascomputer.local nodename nor servname provided  or not knownENDSPAWNED SpawnedNetworkServer ERROR OUTPUTF.E.E.E.F.E.E.E.E.E.E.E.E.E.E.E.E.E.E.ETime  .There were  errors) SecureServerTest Opened  false  Authenticated true  CustomDerbyProperties null  WildCardHost ... )java.lang.Exception DRDA_NeedLocalHost.Shost localhost is not local to the server running on ...  so cannot be used for NetworkServerControl commands  at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageWorkUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.readResultUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.shutdownUnknown Source) at org.apache.derby.drda.NetworkServerControl.shutdownUnknown Source) at org.apache.derbyTesting.junit.NetworkServerTestSetup.tearDownNetworkServerTestSetup.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) SecureServerTest Opened  false  Authenticated true  CustomDerbyProperties null  WildCardHost ... )java.lang.Exception DRDA_NeedLocalHost.Shost localhost is not local to the server running on ...  so cannot be used for NetworkServerControl commands  at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageWorkUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.readResultUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.shutdownUnknown Source) at org.apache.derby.drda.NetworkServerControl.shutdownUnknown Source) at org.apache.derbyTesting.junit.NetworkServerTestSetup.tearDownNetworkServerTestSetup.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testReplication_Local_LogFilesSynchedorg.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local)java.sql.SQLException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Source) at org.apache.derby.client.am.Statement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.bootMasterDatabaseReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local.testReplication_Local_LogFilesSynchedReplicationRun_Local.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBareReplicationRun.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by org.apache.derby.client.am.SqlException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.Statement.completeSqlcaUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePrepareErrorUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePRPSQLSTTreplyUnknown Source) at org.apache.derby.client.net.NetStatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.StatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.NetStatement.readPrepare_Unknown Source) at org.apache.derby.client.am.Statement.readPrepareUnknown Source) at org.apache.derby.client.am.Statement.flowExecuteUnknown Source) at org.apache.derby.client.am.Statement.executeXUnknown Source) ...  more) testReplication_Local__InsertUpdateDeleteOnMasterorg.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_)java.sql.SQLException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Source) at org.apache.derby.client.am.Statement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.bootMasterDatabaseReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_.testReplication_Local__InsertUpdateDeleteOnMasterReplicationRun_Local_.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBareReplicationRun.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by org.apache.derby.client.am.SqlException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.Statement.completeSqlcaUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePrepareErrorUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePRPSQLSTTreplyUnknown Source) at org.apache.derby.client.net.NetStatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.StatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.NetStatement.readPrepare_Unknown Source) at org.apache.derby.client.am.Statement.readPrepareUnknown Source) at org.apache.derby.client.am.Statement.flowExecuteUnknown Source) at org.apache.derby.client.am.Statement.executeXUnknown Source) ...  more) testReplication_Local__Indexingorg.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_Indexing)java.sql.SQLException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Source) at org.apache.derby.client.am.Statement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.bootMasterDatabaseReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.makeReadyForReplicationReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_Indexing.testReplication_Local__IndexingReplicationRun_Local_Indexing.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBareReplicationRun.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by org.apache.derby.client.am.SqlException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.Statement.completeSqlcaUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePrepareErrorUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePRPSQLSTTreplyUnknown Source) at org.apache.derby.client.net.NetStatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.StatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.NetStatement.readPrepare_Unknown Source) at org.apache.derby.client.am.Statement.readPrepareUnknown Source) at org.apache.derby.client.am.Statement.flowExecuteUnknown Source) at org.apache.derby.client.am.Statement.executeXUnknown Source) ...  more) testReplication_Local_StateTest_part_org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part_)java.sql.SQLException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Source) at org.apache.derby.client.am.Statement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.bootMasterDatabaseReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part_.testReplication_Local_StateTest_part_ReplicationRun_Local_StateTest_part_.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBareReplicationRun.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by org.apache.derby.client.am.SqlException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.Statement.completeSqlcaUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePrepareErrorUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePRPSQLSTTreplyUnknown Source) at org.apache.derby.client.net.NetStatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.StatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.NetStatement.readPrepare_Unknown Source) at org.apache.derby.client.am.Statement.readPrepareUnknown Source) at org.apache.derby.client.am.Statement.flowExecuteUnknown Source) at org.apache.derby.client.am.Statement.executeXUnknown Source) ...  more) testReplication_Local_StateTest_part_org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part_)java.sql.SQLException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Source) at org.apache.derby.client.am.Statement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.bootMasterDatabaseReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part_.testReplication_Local_StateTest_part_ReplicationRun_Local_StateTest_part_.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBareReplicationRun.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by org.apache.derby.client.am.SqlException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.Statement.completeSqlcaUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePrepareErrorUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePRPSQLSTTreplyUnknown Source) at org.apache.derby.client.net.NetStatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.StatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.NetStatement.readPrepare_Unknown Source) at org.apache.derby.client.am.Statement.readPrepareUnknown Source) at org.apache.derby.client.am.Statement.flowExecuteUnknown Source) at org.apache.derby.client.am.Statement.executeXUnknown Source) ...  more) testReplication_Local_StateTest_part_org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part_)java.sql.SQLException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Source) at org.apache.derby.client.am.Statement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.bootMasterDatabaseReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part_.testReplication_Local_StateTest_part_ReplicationRun_Local_StateTest_part_.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBareReplicationRun.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by org.apache.derby.client.am.SqlException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.Statement.completeSqlcaUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePrepareErrorUnknown Source) at org.apache.derby.client.net.NetStatementReply.parsePRPSQLSTTreplyUnknown Source) at org.apache.derby.client.net.NetStatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.StatementReply.readPrepareUnknown Source) at org.apache.derby.client.net.NetStatement.readPrepare_Unknown Source) at org.apache.derby.client.am.Statement.readPrepareUnknown Source) at org.apache.derby.client.am.Statement.flowExecuteUnknown Source) at org.apache.derby.client.am.Statement.executeXUnknown Source) ...  more) testReplication_Local_StateTest_partorg.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part)java.sql.SQLException DERBY SQL error SQLCODE   SQLSTATE XSAI  SQLERRMC XSAI.S at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Source) at org.apache.derby.client.am.Statement.executeUnknown Source) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.bootMasterDatabaseReplicationRun.java) at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part.testReplication_Local_StateTest_partReplicationRun_Local_StateTest_part.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.functi
0;ant release should not modify drdamaint version   ;ant release automatically sets drdamaint version to  in release.properties.However  on the . branch  drdamaint version had been increased to trigger a difference in behavior with vs. without a particular check in  ant release caused this to get reset thus breaking the fix.ant release should somehow assess the value of drdamaint.   
0;Speed up message splitting in build   ;On a slow machine I sometimes use to build Derby  running the org.apache.derbyBuild.splitmessages tool takes  seconds and accounts for  of the total time needed to run ant q buildsource which builds the engine  the network server and the client  but not the tests or demos). The tool is invoked  times  and each time a new Java process is started because the Ant target has specified forkyes. By changing it to run the splitmessages tool in the same Java process as the one running Ant  the time is reduced to  seconds on the same machine.   
0;Speed up creation of bin scripts   ;The binscripts build target takes around  seconds in the environments I use for building Derby. It looks like most of the time is spent running the chmod Ant task on the generated scripts. There are six invocations of the chmod task  one for each script. The chmod task can operate on multiple files  so one invocation should be enough and one invocation on six files seems to have about the same cost as one invocation on a single file).A related problem is that the scripts are always regenerated in incremental builds  even when theres nothing to do  so the binscripts target accounts for a significant part of the time it takes to run an incremental build.   
0;Dont run MessageVetter unless messages have changed   ;Continuing my series of patches microoptimizing the build scripts...MessageVetter is always run as part of the build  also in incremental builds when nothing has changed. Since it needs to go through more than  files  it may take a while just half a second on the fastest machine I tested  so not a big deal  but thats still a significant portion of the total time in an incremental build). We should skip the message check in incremental builds if none of the messages have changed.   
0;Reduce number of jar invocations in the buildjars target   ;When building derby.jar  derbytools.jar and derbynet.jar  the build script runs the jar target twice for each of the jars. The first jar invocation creates the jar and adds some files  and the second one updates the jars with some more files. It would be simpler to create each of the jar files in a single invocation  and it would also cut off a few seconds on the time to build the jars.   
1;Restrictive file permissions permissions removed also for owner on NTFS if Acl does not contain explicit entry for owner   ;It turns out that the file owner does not necessarily get an explicit AclEntry  this depends on whether the created file has sufficient permissions already through  say  a permission for everybody to write. The present logic removes all AclEntries except those granted to the files owner  erroneously presuming there would be such an entry always. This led to all AclEntries being removed. This error is seen in Oracles nightly regressions for Windows  but did not reproduced when running manually on Windows. This was due to different default inherited permissions on the directories in which the regression tests were run.   
0;Same value returned by successive calls to a sequence generator.   ;The following script shows the same value being returned from a sequence generator by two successive NEXT VALUE FOR calls. Thanks to Knut for finding thisconnect jdbcderbymemorydb createtrue create table t x int) create sequence s autocommit off select count from sys.syssequences with rs values next value for s drop table t rollback   same value as previous callvalues next value for s    
1;ClosedByInterruptException in AuthenticationTest   ;AuthenticationTest failed with this error on trunk intermittent error  passed when I reran suites.All)java.sql.SQLException DERBY SQL error SQLCODE   SQLSTATE XJ  SQLERRMC Failed to start database singleUseoneusec with class loader sun.misc.LauncherAppClassLoader@ffea  see the next exception for details.SQLSTATE XJJava exception ASSERT FAILED Unable to Acquire Exclusive Lock on exporthomehudsond.hudsonjobsDerbyJUnitworkspacetestsystemsingleUseoneusecdbex.lck org.apache.derby.shared.common.sanity.AssertFailure.SQLSTATE XJJava exception  java.nio.channels.ClosedByInterruptException. at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.client.am.SqlException.getSQLExceptionSqlException.java) at org.apache.derby.jdbc.ClientDriver.connectClientDriver.java) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java) at org.apache.derbyTesting.junit.DriverManagerConnector.openConnectionDriverManagerConnector.java) at org.apache.derbyTesting.junit.DriverManagerConnector.openConnectionDriverManagerConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.openDefaultConnectionTestConfiguration.java) at org.apache.derbyTesting.junit.BaseJDBCTestSetup.getConnectionBaseJDBCTestSetup.java) at org.apache.derbyTesting.junit.DatabasePropertyTestSetup.tearDownDatabasePropertyTestSetup.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by org.apache.derby.client.am.SqlException DERBY SQL error SQLCODE   SQLSTATE XJ  SQLERRMC Failed to start database singleUseoneusec with class loader sun.misc.LauncherAppClassLoader@ffea  see the next exception for details.SQLSTATE XJJava exception ASSERT FAILED Unable to Acquire Exclusive Lock on exporthomehudsond.hudsonjobsDerbyJUnitworkspacetestsystemsingleUseoneusecdbex.lck org.apache.derby.shared.common.sanity.AssertFailure.SQLSTATE XJJava exception  java.nio.channels.ClosedByInterruptException. at org.apache.derby.client.am.Connection.completeSqlcaConnection.java) at org.apache.derby.client.net.NetConnectionReply.parseRdbAccessFailedNetConnectionReply.java) at org.apache.derby.client.net.NetConnectionReply.parseAccessRdbErrorNetConnectionReply.java) at org.apache.derby.client.net.NetConnectionReply.parseACCRDBreplyNetConnectionReply.java) at org.apache.derby.client.net.NetConnectionReply.readAccessDatabaseNetConnectionReply.java) at org.apache.derby.client.net.NetConnection.readSecurityCheckAndAccessRdbNetConnection.java) at org.apache.derby.client.net.NetConnection.flowSecurityCheckAndAccessRdbNetConnection.java) at org.apache.derby.client.net.NetConnection.flowUSRIDPWDconnectNetConnection.java) at org.apache.derby.client.net.NetConnection.flowConnectNetConnection.java) at org.apache.derby.client.net.NetConnection.lt initgt NetConnection.java) at org.apache.derby.client.net.NetConnection.lt initgt NetConnection.java) at org.apache.derby.client.net.ClientJDBCObjectFactoryImpl.newNetConnectionClientJDBCObjectFactoryImpl.java) at org.apache.derby.jdbc.ClientDriver.connectClientDriver.java)The server side log was not preserved because the failure happened inside a decorator.   
0;Subquery is only allowed to return a single column  When using derby with hibernate or JPA) queries are created per JPA spec. For tables with multicolumn PK  subqueries are created with two columns in select clause.   ;ERROR Subquery is only allowed to return a single column.PROBLEM When using derby with hibernate or JPA) queries are created by the JPA engine per JPA spec. For tables with multicolumn PK  subqueries are created with two columns in select clause see select colofassig_.activityID  colofassig_.assigneeID from Assignment in the query below).Without this support  I can not use Derby with JPA.Hibernate select distinct activitybe_.activityID as activityID_  activitybe_.createdBy as createdBy_  activitybe_.createdOn as createdOn_  activitybe_.lastModifiedBy as lastModi__  activitybe_.lastModifiedOn as lastModi__  activitybe_.activityDate as activity__  activitybe_.activityTypeHierarchyID as activity__  activitybe_.activityTypeID as activity__  activitybe_.campaignID as campaignID_  activitybe_.comments as comments_  activitybe_.description as descrip__  activitybe_.inputID as inputID_  activitybe_.inputTypeID as inputTy__  activitybe_.name as name_  activitybe_.notes as notes_  activitybe_.organizationID as organiz__  activitybe_.parentActivityTypeID as parentA__ from Activity activitybe_  Activity activitybe_ inner join ActivitySchedule colofactiv_ on activitybe_.activityIDcolofactiv_.activityID inner join ActivityScheduleStatus colofactiv_ on colofactiv_.activityScheduleIDcolofactiv_.activityScheduleID inner join ActivityScheduleStatusType activitysc_ on colofactiv_.activityScheduleStatusTypeIDactivitysc_.activityScheduleStatusTypeID  ActivityTypeHierarchy activityty_ where activitybe_.activityTypeHierarchyIDactivityty_.activityTypeHierarchyID and activityty_.activityTypeHierarchyID? and not exists select colofassig_.activityID  colofassig_.assigneeID from Assignment colofassig_ where activitybe_.activityIDcolofassig_.activityID)) and activitybe_.activityIDlt gt activitybe_.activityID or activitysc_.namelt gt Route)   ERROR  org.hibernate.util.JDBCExceptionReporter  EJBTimer targetjboss.jeeearoecrm..RCderbyjboss.ear jarbuilderejb.jar nameWorkflowActivatorBean serviceEJB ) Subquery is only allowed to return a single column.   
0;SecureServerTest  DriverUnbootedTest and replication tests not prepared for space in java.home   ;SecureServerTest  DriverUnbootedTest and the replication tests fork JVMs by calling Runtime.exec methods that take the command as a String parameter  not a String[]. This causes problems like the ones seen in DERBY when theres a space in java.home}.The tests should be rewritten to use the helper method BaseTestCase.execJavaCmd  which handles this case correctly.   
0;XATransactionTest TableView DERBY already exists   ;Cf the test report on trunk.httpdbtg.foundry.sun.comderbytestDailyjvm.testingLimitedtestSummary.htmlIt looks like the ordering between testForgetExceptionDerbyPROTO and testForgetExceptionDerbyNOTA is inversed in this run on Windows  and the test currently requires testForgetExceptionDerbyPROTO to be run ahead of testForgetExceptionDerbyNOTA. JDK  canwill reorder the fixtures.   
0;SQLChar.getCollationKey NPE in indexstatthread   ;With this JDBC connection url is  jdbcderbydirectorydb_name territoryfr_FR collationTERRITORY_BASEDPRIMARY createtrueI get a NullPointerException in indexstatthreadSun Dec   CET  Thread poolthread  main  istat} PROXIFLEX.IDAXX_RES update scheduled  reason no stats  rowestimate  queueSizeSun Dec   CET  Thread indexstatthread  main  istat trace@} worker thread started xid  qps errkuc rejfdo Sun Dec   CET  Thread indexstatthread  main  istat trace@} processing PROXIFLEX.IDAXX_RES Sun Dec   CET  Thread indexstatthread  main  istat} runtime exception during normal operationjava.lang.NullPointerException at org.apache.derby.iapi.types.SQLChar.getCollationKeyUnknown Source at org.apache.derby.iapi.types.WorkHorseForCollatorDatatypes.stringCompareUnknown Source at org.apache.derby.iapi.types.CollatorSQLVarchar.stringCompareUnknown Source at org.apache.derby.iapi.types.SQLChar.compareUnknown Source at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImplKeyComparator.compareWithPrevKeyUnknown Source at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinionUnknown Source at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.generateStatisticsUnknown Source at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.processingLoopUnknown Source at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.runUnknown Source at java.lang.Thread.runThread.javaSun Dec   CET  Thread indexstatthread  main  istat trace@} worker thread exit  qps errkuc rejfdo If I remove territory and collation parameters I dont have the exception.In case you want to disable automatic statistics  set derby property  derby.storage.indexStats.auto to false.   
1;Harden password hashing in the builtin authentication service   ;The Open Web Application Security Project has some suggestions on how to make it harder for an attacker to crack hashed passwords httpswww.owasp.orgindex.phpHashing_JavaThe builtin authentication service doesnt follow all the suggestions. In particular  it doesnt add a random salt  and it only performs the hash operation once.I propose that we add two new properties that makes it possible to configure builtin to use a random salt and run multiple iterations of the hash operation derby.authentication.builtin.saltLength  the length of the random salt to add in bytes) derby.authentication.builtin.iterations  the number of times to perform the hash operationId also suggest that we set the defaults so that random salt and multiple iterations are used by default. The OWASP page mentions  bits of salt  bytes) and a minimum of  iterations. I consulted a security expert who thought that these recommendations sounded OK  but he believed the recommended salt length was likely to be revised and suggested  bytes instead. The only price we pay by going from  to  bytes  is that well need to store  bytes extra per user in the database  so I dont see any reason not to set the default for derby.authentication.builtin.saltLength as high as . Setting the default for derby.authentication.builtin.iterations to  will make authentication of a user somewhat slower which is the point  really)  but experiments on my machine suggest that running our default hash function SHA)  times takes around  ms. Since authentication only happens when establishing a new connection to the database  that would be a negligible cost  I think.If saltLength is set to  and iterations is set to   the hashing will be done in the exact same way as in previous versions.Both of the properties should only be respected when the data dictionary version is . or higher  so that users in softupgraded databases can still log in after a downgrade.   
0;Call initCause) and getCause) without reflection in BaseJDBCTestCase   ;BaseJDBCTestCase uses reflection to call Throwable.initCause) and Throwable.getCause). This was needed when running the tests on Java . and on Foundation Profile .  but those platforms arent supported any more. Now we should call the methods directly.   
0;Remove unnecessary field rwsOK in DirStorageFactory   ;DirStorageFactory has a field called rwsOK defined like this private static final boolean rwsOK  JVMInfo.JDK_ID gt  JVMInfo.JSE_ The only supported platform whose JVMInfo.JDK_ID is less than JVMInfo.JSE_  is FPCDC. But DirStorageFactory is not used on FPCDC because it depends on NIO. This means that the field will always have the value true  and it can be eliminated.   
1;NSSecurityMechanismTest fixture testNetworkServerSecurityMechanism fails intermittentlyt   ;Theres an intermittent failure in NSSecurityMechanismTest fixture testNetworkServerSecurityMechanism  which I couldnt find was logged separately.This is the stack trace) testNetworkServerSecurityMechanismorg.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest)junit.framework.AssertionFailedError Timed out waiting for network server to start at org.apache.derbyTesting.junit.NetworkServerTestSetup.waitForServerStartNetworkServerTestSetup.java) at org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.setSecurityMechanismNSSecurityMechanismTest.java) at org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.testNetworkServerSecurityMechanismNSSecurityMechanismTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)The test output printed out this in the consolenet)derbynet.NSSecurityMechanismTest.testNetworkServerSecurityMechanism java.net.SocketException Connection reset at java.net.SocketInputStream.readSocketInputStream.java) at java.net.SocketInputStream.readSocketInputStream.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.fillReplyBufferUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.readResultUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.pingWithNoOpenUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.pingUnknown Source) at org.apache.derby.drda.NetworkServerControl.pingUnknown Source) at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerUpNetworkServerTestSetup.java) at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerStartNetworkServerTestSetup.java) at org.apache.derbyTesting.junit.NetworkServerTestSetup.waitForServerStartNetworkServerTestSetup.java) at org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.setSecurityMechanismNSSecurityMechanismTest.java) at org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.testNetworkServerSecurityMechanismNSSecurityMechanismTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at junit.framework.TestCase.runTestTestCase.java) at junit.framework.TestCase.runBareTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.framework.TestResult.protectTestResult.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.framework.TestResult.runTestResult.java) at junit.framework.TestCase.runTestCase.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.textui.TestRunner.doRunTestRunner.java) at junit.textui.TestRunner.startTestRunner.java) at junit.textui.TestRunner.mainTestRunner.java)java.net.SocketException Connection reset at java.net.SocketInputStream.readSocketInputStream.java) at java.net.SocketInputStream.readSocketInputStream.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.fillReplyBufferUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.readResultUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.pingWithNoOpenUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.pingUnknown Source) at org.apache.derby.drda.NetworkServerControl.pingUnknown Source) at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerUpNetworkServerTestSetup.java) at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerStartNetworkServerTestSetup.java) at org.apache.derbyTesting.junit.NetworkServerTestSetup.waitForServerStartNetworkServerTestSetup.java) at org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.setSecurityMechanismNSSecurityMechanismTest.java) at org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.testNetworkServerSecurityMechanismNSSecurityMechanismTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at junit.framework.TestCase.runTestTestCase.java) at junit.framework.TestCase.runBareTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.framework.TestResult.protectTestResult.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.framework.TestResult.runTestResult.java) at junit.framework.TestCase.runTestCase.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.textui.TestRunner.doRunTestRunner.java) at junit.textui.TestRunner.startTestRunner.java) at junit.textui.TestRunner.mainTestRunner.java)Ive looked through my nightly test records for earlier occurrences on trunklinux this apparently has not happened on windows)   and found the following occurrences ibm)Slightly different stack traces were seen in other runs ibm) ibm) ibm) ibm) ibm) ibm) ibm)   
0;Derby threads hanging when using ClientXADataSource and a deadlock or lock timeout occurs   ;The issue arrives when multiple XA transactions are done in parallel and there is either a lock timeout or a lock deadlock detected. When this happens the connection is leaked in the Glassfish connection pool and the client thread hangs in org.apache.derby.client.netReply.fillReply.java). Shutting down the app server fails because the thread has a lock in org.apache.derby.client.net.NetConnection and another task is calling org.apache.derby.client.ClientPooledConnection.closeClientPooledConnection.java) which is waiting for the lock.Killing the appsever using kill and then attempting to shutdown Derby network server causes the Network Server to hang. One of the threads hangs waiting for a lock at org.apache.derby.impl.drda.NeworkServerControlImpl.removeFromSessionTableNetworkServerControlImpl.java) and the main thread has this locked at org.apache.derby.impl.drda.NetworkServerControlImpl.executeWorkNetworkServerControlImpl.java) and it itself is waiting for a lock which belongs to a thread that is stuck at org.apache.derby.impl.services.locks.ActiveLock.waitForGrantActiveLock.java) which is in the TIMED_WAITING state.Only by killing the Network Server using kill is possible at this point.There are transactions left even though all clients have been removed.   
0;NullPointerException in generated VTI code   ;With the latest ... binary distribution  the following short script produces a NullPointerExceptionjava Dij.exceptionTracetrue org.apache.derby.tools.ijijgt  connect jdbcderbybrydb createtrue ijgt  create table t a int) ijgt  SELECT T.  systabs.  syscgs.conglomeratenumber FROM  SYS.SYSTABLES systabs  sys.sysconglomerates syscgs  TABLE SYSCS_DIAG.SPACE_TABLEsystabs.tablename)) AS T WHERE systabs.tabletype  T and systabs.tableid  syscgs.tableid The exception trace is pasted belowERROR  The exception java.lang.NullPointerException was thrown while evaluating an expression.java.sql.SQLException The exception java.lang.NullPointerException was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source)Caused by java.sql.SQLException The exception java.lang.NullPointerException was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source) ...  moreCaused by java.sql.SQLException Java exception  java.lang.NullPointerException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) ...  moreCaused by java.lang.NullPointerException at org.apache.derby.exe.acfexxxx.gUnknown Source) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeUnknown Source) at org.apache.derby.impl.sql.execute.VTIResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openRightUnknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) ...  moreERROR XJ Java exception  java.lang.NullPointerException.java.sql.SQLException Java exception  java.lang.NullPointerException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source)Caused by java.sql.SQLException Java exception  java.lang.NullPointerException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDAUnknown Source) ...  moreCaused by java.lang.NullPointerException at org.apache.derby.exe.acfexxxx.gUnknown Source) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeUnknown Source) at org.apache.derby.impl.sql.execute.VTIResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openRightUnknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.JoinResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCoreUnknown Source) at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) ...  more   
0;AssertFailures   or ) with ibm . and . on Windows XP in lang.NativeAuthProcs fixture testAll   ;Since revision   on windows XP I see some failures in the nightly test like this) testAllorg.apache.derbyTesting.functionTests.tests.lang.NativeAuthProcs)junit.framework.AssertionFailedError at org.apache.derbyTesting.functionTests.tests.lang.NativeAuthProcs.vetResetPasswordNativeAuthProcs.java) at org.apache.derbyTesting.functionTests.tests.lang.NativeAuthProcs.resetPasswordTestsNativeAuthProcs.java) at org.apache.derbyTesting.functionTests.tests.lang.NativeAuthProcs.testAllNativeAuthProcs.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)See for instance httppeople.apache.org~myrnavlderby_test_resultsmainwindowstestlogibmsuites.All_diff.txtThere might be an intermittent issue here  one of the runs lists only  failures. But mostly theres .This does not occur on Linux with the same jvm versions.The changes between this run and the previous one when these failures did not occur SUBVERSION LOG FROM  TO r | rhillegas |    Tue   Dec ) |  lineDERBY Add regression tests for GRANTREVOKE on new procedures supporting NATIVE authentication.r | rhillegas |    Tue   Dec ) |  lineDERBY Adjust RolesTest to account for new tuple in SYSROUTINEPERMS.r | rhillegas |    Tue   Dec ) |  lineDERBY Add syscs_reset_password) and syscs_modify_password) system procedures.derby.log in the failed directory only shows a start and shutdown.   
0;Java deadlock between LogicalConnection and ClientXAConnection patch attached)   ;There is a Java deadlock between LogicalConnection and ClientXAConnection. The order of calls that cause the deadlock areThread LogicalConnection.closeClientPooledConnection.recycleConnectionThread ClientPooledConnection.closeLogicalConnection.nullPhysicalConnectionThread  acquires a lock on the LogicalConnection and attempts to acquire a lock on the ClientPooledConnectionThread  acquires a lock on the ClientPooledConnection and attempts to acquire a lock on the LogicalConnectionIn production this occurs when one thread is committing a transaction and another thread is trying to close the connection. This occurred because the Glassfish connection pool is setup to close all connections on any error on any connection and an error has been detected on another connection in the pool.   
0;Race conditions in LogicalConnection checking for a null physical connection   ;There are race conditions with checkForNullPhysicalConnection calls in LogicalConnection. checkForNullPhysicalConnection is not synchronized and it checks for the member phsyicalConnection which can be cleared by nullPhsyicalConnection which is synchronized) and close which is synchronized) and closeWithoutRecyclingToPool which is synchronized).This affects nativeSQL  getAutoCommit  getTransactionIsolation  getWarnings  isReadOnly  getCatalog  getTypeMap  createStatement  prepareCall  prepareStatement  setHoldability  getHoldability  setSavePoint  rollBack  releaseSavePoint  getSchema  setSchema.All of these call checkForNullPhysicalConnection and then use the member physicalConnection after that call returns. Because these methods are not synchronized  between the time checkForNullPhysicalConnectoin returns and physicalConnection is used  the physicalConnection member could be set to null and then a NPE occurs.Probably all of these methods should be changed to synchronized.   
1;Network Server should reject client connections that are not Derby Network Client   ;Since there have been no other network clients besides Derby Network Client tested or supported with Derby since . and since any protocol based client needs to understand Derbys DRDA extensions  deviations  and stored procedure usage. I think it would be a good idea in . for Network Server to outright reject any network clients that are not Derby Network Client.This would eliminate confusion up front for those that might not be aware that the DB Universal JDBC Driver and DB Runtime Client are not supported. They would get a clean reasonable error instead of hitting various protocol errors.Also it would mean if someone does want to add support for some network client in the future they would at least need to add the one or two lines of code in AppRequester to identify it  which I think would be a good thing.I think the code change would not be hard but the biggest impact might be anyone who still runs tests with JCC on trunk would need to disable those tests. There is a separate issue DERBY that Jayaram is working on to complete remove the JCC related code from the tests and test infrastructure.   
0;AlterTableTesttestDropColumn fails drop view cannot be performed due to dependency   ;Saw this when running suitesAll on ...) testDropColumnorg.apache.derbyTesting.functionTests.tests.lang.AlterTableTest)java.sql.SQLException Operation DROP VIEW cannot be performed on object ATDC_VW_A_ because VIEW ATDC_VW_A_ is dependent on that object. at org.apache.derby.client.am.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.client.am.SqlException.getSQLExceptionUnknown Source) at org.apache.derby.client.am.Statement.executeUpdateUnknown Source) at org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testDropColumnAlterTableTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by org.apache.derby.client.am.SqlException Operation DROP VIEW cannot be performed on object ATDC_VW_A_ because VIEW ATDC_VW_A_ is dependent on that object. at org.apache.derby.client.am.Statement.completeSqlcaUnknown Source) at org.apache.derby.client.am.Statement.completeExecuteImmediateUnknown Source) at org.apache.derby.client.net.NetStatementReply.parseEXCSQLIMMreplyUnknown Source) at org.apache.derby.client.net.NetStatementReply.readExecuteImmediateUnknown Source) at org.apache.derby.client.net.StatementReply.readExecuteImmediateUnknown Source) at org.apache.derby.client.net.NetStatement.readExecuteImmediate_Unknown Source) at org.apache.derby.client.am.Statement.readExecuteImmediateUnknown Source) at org.apache.derby.client.am.Statement.flowExecuteUnknown Source) at org.apache.derby.client.am.Statement.executeUpdateXUnknown Source) ...  morePrior to this  though  I saw this on the console  but no errorfailure. Probably not related  I believe we have seen this beforejava.lang.Exception DRDA_InvalidReplyTooShort.SInvalid reply from network server Insufficient data. at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageWorkUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.fillReplyBufferUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.readResultUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.pingWithNoOpenUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.pingUnknown Source) at org.apache.derby.drda.NetworkServerControl.pingUnknown Source) at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerUpNetworkServerTestSetup.java) at org.apache.derbyTesting.functionTests.tests.derbynet.ServerPropertiesTest.canPingServerServerPropertiesTest.java) at org.apache.derbyTesting.functionTests.tests.derbynet.ServerPropertiesTest.ttestSetPortPriorityServerPropertiesTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at junit.framework.TestCase.runTestTestCase.java) at junit.framework.TestCase.runBareTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.framework.TestResult.protectTestResult.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.framework.TestResult.runTestResult.java) at junit.framework.TestCase.runTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.textui.TestRunner.doRunTestRunner.java) at junit.textui.TestRunner.startTestRunner.java) at junit.textui.TestRunner.mainTestRunner.java)   
0;AssertionFailedError Should not hold locks after commit in ResultSetMiscTest   ;Saw this failure when running the ... regression tests on Java ub) testBugorg.apache.derbyTesting.functionTests.tests.jdbcapi.ResultSetMiscTest)junit.framework.AssertionFailedError Should not hold locks after commit at org.apache.derbyTesting.functionTests.tests.jdbcapi.ResultSetMiscTest.checkLocksForAutoCommitSelectResultSetMiscTest.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.ResultSetMiscTest.testBugResultSetMiscTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)   
0;NativeAuthenticationServiceTest getting multiple errors trying to delete filesdirectories during teardown   ;Multiple errors during teardown while trying to delete filesdirectories of the test databases on vista against sun jdk on vista  but passed against same jvm on sun nightly runs againstlinux and solaris.As of time of this report the tests against other sun jvms had not finished. Errors were also seen in ibm nightly runs  Ill rerport those in following comments.The following checkin that was included in the reported test failures changed the Native authentication tests  so seems likely to have caused the issuesr | rhillegas |    Thu   Jan ) |  lineFirst version of NATIVE authentication service  including first tranche of tests for it.vista run had  errorshttpdbtg.foundry.sun.comderbytestDailyjvm.testingtestlogvistasuitesAll_diff.txt) testAllorg.apache.derbyTesting.functionTests.tests.lang.NativeAuthenticationServiceTest)junit.framework.AssertionFailedError Failed to delete  files rootCcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneused) CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseddb.lck isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedloglog.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedlog isDirtrue  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegca.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcb.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcd.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegce.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcf.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegca.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcb.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcd.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegce.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcf.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegca.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcb.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcd.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegce.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcf.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegca.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcb.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcd.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegce.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedsegcf.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusedseg isDirtrue  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneused isDirtrue  canReadtrue  canWritetrue  size) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertDirectoryDeletedBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.access$DropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup$.runDropDatabaseSetup.java) at java.security.AccessController.doPrivilegedNative Method) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectoryDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectoryDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabaseDropDatabaseSetup.java) at org.apache.derbyTesting.junit.TestConfiguration$.tearDownTestConfiguration.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testAllorg.apache.derbyTesting.functionTests.tests.lang.NativeAuthenticationServiceTest)junit.framework.AssertionFailedError Failed to delete  files rootCcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusee) CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseedb.lck isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseeloglog.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseelog isDirtrue  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegca.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcb.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcd.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegce.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcf.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegca.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcb.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcd.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegce.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcf.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegca.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcb.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcd.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegce.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcf.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegca.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcb.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcd.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegce.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseesegcf.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseeseg isDirtrue  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusee isDirtrue  canReadtrue  canWritetrue  size) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertDirectoryDeletedBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.access$DropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup$.runDropDatabaseSetup.java) at java.security.AccessController.doPrivilegedNative Method) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectoryDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectoryDropDatabaseSetup.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabaseDropDatabaseSetup.java) at org.apache.derbyTesting.junit.TestConfiguration$.tearDownTestConfiguration.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup$.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testAllorg.apache.derbyTesting.functionTests.tests.lang.NativeAuthenticationServiceTest)junit.framework.AssertionFailedError Failed to delete  files rootCcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusef) CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefdb.lck isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefloglog.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneuseflog isDirtrue  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegc.dat isDirfalse  canReadtrue  canWritetrue  size)  CcludevjagtmpautoderbyN_regressionsuitesAll_logsystemsingleUseoneusefsegca.dat isDirfalse  canReadtrue  canWritetrue  size)  
1;Access denied java.lang.RuntimePermission modifyThreadGroup) in IndexStatisticsDaemonImpl.schedule)   ;I user reported this exception with ...  ) when running regression tests against ..As soon as the Index Statistics Thread was initialized they got the stack trace below.There was some discussion of this issue on the dev listhttpold.nabble.comReportofsecuritymanagerissuewith.andndexStatisticsDaemonImpl.scheduleto.htmlI assume the failure is in  runningThread  new Threadthis  indexstatthread) Stack Tracejava.security.AccessControlException Access deniedjava.lang.RuntimePermission modifyThreadGroup) atjava.security.AccessController.checkPermissionAccessController.java) atjava.lang.SecurityManager.checkPermissionSecurityManager.java) atcom.ibm.ws.security.core.SecurityManager.checkPermissionSecurityManager.java) atcom.ibm.ws.security.core.SecurityManager.checkAccessSecurityManager.java) at java.lang.ThreadGroup.checkAccessThreadGroup.java) at java.lang.Thread.initializeThread.java) at java.lang.Thread.lt initgt Thread.java) at java.lang.Thread.lt initgt Thread.java) atorg.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.scheduleUnknownSource) atorg.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknownSource) atorg.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementUnknownSource) atorg.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) atorg.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) atorg.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) atorg.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) atorg.apache.derby.jdbc.Driver.newEmbedPreparedStatementUnknown Source) atorg.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) atorg.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at   
0;Select statement with subqueries with group by and count distinct statements returns wrong number of results   ;Steps to reproduce. Create database  connect to database with any JDBC client. create two tablesCREATE TABLE TEST_  profile_id INTEGER NOT NULL  group_ref INTEGER NOT NULL  matched_count INTEGER NOT NULL )  CREATE TABLE TEST_  profile_id INTEGER NOT NULL  group_ref INTEGER NOT NULL  matched_count INTEGER NOT NULL ) . Insert two records for each tableinsert into test_ values    ) insert into test_ values     ) insert into test_ values    ) insert into test_ values     ) . Run following statementSELECT *FROM SELECT ps.group_ref  COUNTDISTINCT ps.matched_count) AS matched_count FROM test_ ps GROUP BY ps.group_ref  ps.profile_id ) a  SELECT ps.group_ref  COUNT DISTINCT ps.matched_count) AS matched_count FROM test_ ps GROUP BY ps.group_ref  ps.profile_id ) bAs a result Ive got  records instead of   at least Oracle greturns  records for this statement. Maybe im doing something wrong.Do you have any suggestions  possible workarounds for this problem   
0;[patch] access static constants with static references   ;code access static fields by fetching instances and getting the static variable from the object. Just use the class reference.   
0;Prepare old test harness for running tests on Java    ;When running an old harness test with a Java  preview available from httpjdk.java.netdownload.html)  itll fail like this java org.apache.derbyTesting.functionTests.harness.RunTest langsupersimple.sql  listing properties  derby.locks.deadlockTimeout derby.locks.waitTimeoutWHOA  javavm is NULLProcess exception java.lang.ClassNotFoundException org.apache.derbyTesting.functionTests.harness.jdk     Start supersimple jdk..ea   ***Exception in thread main java.lang.ClassNotFoundException org.apache.derbyTesting.functionTests.harness.jdk at java.net.URLClassLoader.runURLClassLoader.java) at java.net.URLClassLoader.runURLClassLoader.java) at java.security.AccessController.doPrivilegedNative Method) at java.net.URLClassLoader.findClassURLClassLoader.java) at java.lang.ClassLoader.loadClassClassLoader.java) at sun.misc.LauncherAppClassLoader.loadClassLauncher.java) at java.lang.ClassLoader.loadClassClassLoader.java) at java.lang.Class.forNameNative Method) at java.lang.Class.forNameClass.java) at org.apache.derbyTesting.functionTests.harness.jvm.getJvmjvm.java) at org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommandRunTest.java) at org.apache.derbyTesting.functionTests.harness.RunTest.testRunRunTest.java) at org.apache.derbyTesting.functionTests.harness.RunTest.mainRunTest.java)    We need to add the org.apache.derbyTesting.functionTests.harness.jdk class to make the tests run on Java .   
0;ServerPropertiesTest prints .java.net.SocketException Connection reset to console but test passes   ;ServerPropertiesTest showed the below output when running. The ping retries and the test passes. I am not sure if in fact a Connection reset is a valid response if the server is not fully up and the test is just being too verbose or if it is real problem that we get this Error......................java.net.SocketException Connection reset at java.net.SocketInputStream.readSocketInputStream.java) at java.net.SocketInputStream.readSocketInputStream.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.fillReplyBufferUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.readResultUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.pingWithNoOpenUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.pingUnknown Source) at org.apache.derby.drda.NetworkServerControl.pingUnknown Source) at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerUpNetworkServerTestSetup.java) at org.apache.derbyTesting.functionTests.tests.derbynet.ServerPropertiesTest.canPingServerServerPropertiesTest.java) at org.apache.derbyTesting.functionTests.tests.derbynet.ServerPropertiesTest.shutdownServerServerPropertiesTest.java) at org.apache.derbyTesting.functionTests.tests.derbynet.ServerPropertiesTest.ttestSetPortPriorityServerPropertiesTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at junit.framework.TestCase.runTestTestCase.java) at junit.framework.TestCase.runBareTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.framework.TestResult.protectTestResult.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.framework.TestResult.runTestResult.java) at junit.framework.TestCase.runTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.textui.TestRunner.doRunTestRunner.java) at junit.textui.TestRunner.startTestRunner.java) at junit.textui.TestRunner.mainTestRunner.java)java.net.SocketException Connection reset at java.net.SocketInputStream.readSocketInputStream.java) at java.net.SocketInputStream.readSocketInputStream.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.fillReplyBufferUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.readResultUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.pingWithNoOpenUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.pingUnknown Source) at org.apache.derby.drda.NetworkServerControl.pingUnknown Source) at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerUpNetworkServerTestSetup.java) at org.apache.derbyTesting.functionTests.tests.derbynet.ServerPropertiesTest.canPingServerServerPropertiesTest.java) at org.apache.derbyTesting.functionTests.tests.derbynet.ServerPropertiesTest.shutdownServerServerPropertiesTest.java) at org.apache.derbyTesting.functionTests.tests.derbynet.ServerPropertiesTest.ttestSetPortPriorityServerPropertiesTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at junit.framework.TestCase.runTestTestCase.java) at junit.framework.TestCase.runBareTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.framework.TestResult.protectTestResult.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.framework.TestResult.runTestResult.java) at junit.framework.TestCase.runTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.textui.TestRunner.doRunTestRunner.java) at junit.textui.TestRunner.startTestRunner.java) at junit.textui.TestRunner.mainTestRunner.java)....................   
1;NPE in Store  when running SELECT in a readonly database accessed via the classpath subprotocol when authentication  authorization  and Java security are turned on   ;I get an NPE trying to select from a table on which I dont have select privilege. The database is stored in a jar file accessed via the classpath protocol. BUILTIN authentication and sql authorization are turned on in the database. Running under a Java security manager. I will attach a repro. Here is the NPEFailed Statement is select * from KIWI.tjava.lang.NullPointerException at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.openContainerBaseDataFileFactory.java) at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.openContainerBaseDataFileFactory.java) at org.apache.derby.impl.store.raw.xact.Xact.openContainerXact.java) at org.apache.derby.impl.store.access.btree.OpenBTree.initOpenBTree.java) at org.apache.derby.impl.store.access.btree.BTreeController.initBTreeController.java) at org.apache.derby.impl.store.access.btree.index.BIController.initBIController.java) at org.apache.derby.impl.store.access.btree.index.BI.openBI.java) at org.apache.derby.impl.store.access.RAMTransaction.openConglomerateRAMTransaction.java) at org.apache.derby.impl.store.access.RAMTransaction.openConglomerateRAMTransaction.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.debugGenerateInfoDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinionDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getColumnDescriptorsScanDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getColumnDescriptorsScanDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.finishTableDescriptorDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getTableDescriptorIndexScanDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getUncachedTableDescriptorDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.NameTDCacheable.setIdentityNameTDCacheable.java) at org.apache.derby.impl.services.cache.ConcurrentCache.findConcurrentCache.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getTableDescriptorDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.faultInTabInfoDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getNonCoreTIDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getUncachedPermissionsDescriptorDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getUncachedTablePermsDescriptorDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.PermissionsCacheable.setIdentityPermissionsCacheable.java) at org.apache.derby.impl.services.cache.ConcurrentCache.findConcurrentCache.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getPermissionsDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getTablePermissionsDataDictionaryImpl.java) at org.apache.derby.iapi.sql.dictionary.StatementTablePermission.oneAuthHasPermissionOnTableStatementTablePermission.java) at org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTableStatementTablePermission.java) at org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.checkStatementColumnPermission.java) at org.apache.derby.impl.sql.conn.GenericAuthorizer.authorizeGenericAuthorizer.java) at org.apache.derby.exe.acxxccxx.fillResultSetUnknown Source) at org.apache.derby.exe.acxxccxx.executeUnknown Source) at org.apache.derby.impl.sql.GenericActivationHolder.executeGenericActivationHolder.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtGenericPreparedStatement.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.tools.ij.ij.executeImmediateij.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)Cleanup action completed   
0;System can run out of stack space while processing DropOnCommit requests.   ;The system currently recursively calls xact.notifyObservers) from DropOnCommit.update). It does this because in some casesnew observers can be added while processing the list of notifyObservers and those were being missed before the change  causingAssertions in the tests and possibly files not properly dropped on commit.Multiple users on the Derby user list have had failures running SYSCS_UTIL.SYSCS_COMPRESS_TABLE)  running out of stack trackwith a heavily recursive stack trace of the form see more detail from these reports in subsequent comments)Caused by java.lang.StackOverflowErrorat java.lang.ThreadLocal.getThreadLocal.java)at java.lang.StringCoding.derefStringCoding.java)at java.lang.StringCoding.encodeStringCoding.java)at java.lang.String.getBytesString.java)at java.io.UnixFileSystem.getBooleanAttributesNative Method)at java.io.UnixFileSystem.getBooleanAttributesUnixFileSystem.java)at java.io.File.existsFile.java)at org.apache.derby.impl.store.raw.data.StreamFileContainer.runUnknown Source)at java.security.AccessController.doPrivilegedNative Method)at org.apache.derby.impl.store.raw.data.StreamFileContainer.privExistsUnknown Source)at org.apache.derby.impl.store.raw.data.StreamFileContainer.openUnknown Source)at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.openStreamContainerUnknown Source)at org.apache.derby.impl.store.raw.xact.Xact.openStreamContainerUnknown Source)at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.dropStreamContainerUnknown Source)at org.apache.derby.impl.store.raw.xact.Xact.dropStreamContainerUnknown Source)at org.apache.derby.impl.store.raw.data.DropOnCommit.updateUnknown Source)at java.util.Observable.notifyObserversObservable.java)at org.apache.derby.iapi.store.raw.xact.RawTransaction.notifyObserversUnknown Source)at org.apache.derby.impl.store.raw.data.DropOnCommit.updateUnknown Source)at java.util.Observable.notifyObserversObservable.java)at org.apache.derby.iapi.store.raw.xact.RawTransaction.notifyObserversUnknown Source)at org.apache.derby.impl.store.raw.data.DropOnCommit.updateUnknown Source)at java.util.Observable.notifyObserversObservable.java)at org.apache.derby.iapi.store.raw.xact.RawTransaction.notifyObserversUnknown Source)at org.apache.derby.impl.store.raw.data.DropOnCommit.updateUnknown Source)at java.util.Observable.notifyObserversObservable.java)   
0;OutOfMemoryError in OCRecoveryTest on phoneME   ;httpdbtg.foundry.sun.comderbytestDailyjavaMEtestingLimitedtestSummary.htmlThere was  failure) testOCRecoveryorg.apache.derbyTesting.functionTests.tests.store.OCRecoveryTest)junit.framework.AssertionFailedError expectedExitValue does not match exitValueexpected output strings   OK  test) actual outputlt STDOUTgt .ETime .There was  error) launchOCRecovery_org.apache.derbyTesting.functionTests.tests.store.OCRecoveryTest)lt END STDOUTgt lt STDERRgt java.lang.OutOfMemoryError [C at java.io.BufferedReader.lt initgt Unknown Source) at java.io.BufferedReader.lt initgt Unknown Source) at junit.runner.BaseTestRunner.getFilteredTraceUnknown Source) at junit.textui.ResultPrinter.printDefectTraceUnknown Source) at junit.textui.ResultPrinter.printDefectUnknown Source) at junit.textui.ResultPrinter.printDefectsUnknown Source) at junit.textui.ResultPrinter.printErrorsUnknown Source) at junit.textui.ResultPrinter.printUnknown Source) at sun.misc.CVM.runMainUnknown Source)lt END STDERRgt  expectedlt gt  but waslt gt  at org.apache.derbyTesting.junit.BaseTestCase.assertExecJavaCmdAsExpectedUnknown Source) at org.apache.derbyTesting.junit.BaseTestCase.assertLaunchedJUnitTestMethodUnknown Source) at org.apache.derbyTesting.functionTests.tests.store.OCRecoveryTest.testOCRecoveryUnknown Source) at org.apache.derbyTesting.junit.BaseTestCase.runBareUnknown Source) at junit.extensions.TestDecorator.basicRunUnknown Source) at junit.extensions.TestSetup.protectUnknown Source) at junit.extensions.TestSetup.runUnknown Source) at org.apache.derbyTesting.junit.BaseTestSetup.runUnknown Source) at junit.extensions.TestDecorator.basicRunUnknown Source) at junit.extensions.TestSetup.protectUnknown Source) at junit.extensions.TestSetup.runUnknown Source) at sun.misc.CVM.runMainUnknown Source)   
0;Get upgrade tests to pass on OJEC .   ;The upgrade tests fail on OJEC . because Derby ... cannot be loaded. That version is ignored on phoneME for the exact same reason. We should do the same for OJEC.   
0;NATIVE warns about password expiry for DBO   ;The DBOs password cannot expire. Still  NATIVE warns that the password is about to expire.ijgt  connect jdbcderbyauthdb createtrue useradmin ijgt  call syscs_util.syscs_set_database_propertyderby.authentication.native.passwordLifetimeMillis  )  rows insertedupdateddeletedijgt  call syscs_util.syscs_create_userADMIN  *)  rows insertedupdateddeletedijgt  call syscs_util.syscs_set_database_propertyderby.authentication.provider  NATIVELOCAL)  rows insertedupdateddeletedijgt  connect jdbcderbyauthdb shutdowntrue ERROR  Database authdb shutdown.ijgt  connect jdbcderbyauthdb useradmin password* WARNING J Your password will expire in  days). Please use the SYSCS_UTIL.SYSCS_MODIFY_PASSWORD procedure to change your password.   
0;Rolling back a transaction leads to an inconsistent state   ;Rolling back a transaction can leave a table in an inconsistent state if the table has been previously altered through the addition of new columns. It appears that if newly added columns have not been changed from their default value  then when a transaction which sets new values for these columns is rolled back the new columns are not restored to their previous values.Attached is an ij script with fairly minimal steps to reproduce the problem on Derby ... and ... Win x  Sun bit JRE ...). Expected and observed output also attached.Would appreciate any suggestions as to a workaround for this issue. Running SYSCS_UTIL.SYSCS_COMPRESS_TABLE on the table after adding the columns seems to avoid the problem but may be just masking the issue.   
0;When a foreign key constraint on a table is dropped  the associated statistics row for the conglomerate is not removed   ;If you drop the foreign key constraint for a table  the statistics row does not get removed. This affects the indexStat daemon because it now finds these statistics row which always appear as out of date  causing an update to be scheduled.Here is how to get it to happenset schema app CREATE TABLE TEST_TAB_ ID INTEGER PRIMARY KEY NOT NULL) CREATE TABLE TEST_TAB_ ID INTEGER PRIMARY KEY NOT NULL) ALTER TABLE TEST_TAB_ADD CONSTRAINT TEST_TAB__FK_FOREIGN KEY ID) REFERENCES TEST_TAB_ID) insert into app.TEST_TAB_ values ) insert into test_tab_ values) call syscs_util.syscs_update_statisticsAPP  TEST_TAB_  null) selectc.TABLEID c.CONGLOMERATENUMBER c.CONGLOMERATENAME c.ISINDEX c.ISCONSTRAINT c.CONGLOMERATEID t.TABLEID t.TABLENAME t.TABLETYPE s.STATID s.REFERENCEID s.TABLEID s.CREATIONTIMESTAMP s.TYPE s.VALID s.COLCOUNT CASTSTATISTICS AS VARCHAR)) as STATISTICSfrom sys.SYSCONGLOMERATES c join sys.SYSTABLES t on c.TABLEID  t.TABLEID join sys.SYSSTATISTICS s on s.TABLEID  t.TABLEIDwhere t.TABLENAME  TEST_TAB_ and c.ISINDEX  false   At this point there are two statistic rowsTABLEID CONGLOMERATENUMBER CONGLOMERATENAME ISINDEX ISCONSTRAINT CONGLOMERATEID TABLEID TABLENAME TABLETYPE STATID REFERENCEID TABLEID CREATIONTIMESTAMP TYPE VALID COLCOUNT STATISTICScbf  cbf false false cccbacbf cbf TEST_TAB_ T edbccbf cbf cbf  . I true  numunique  numrows cbf  cbf false false cccbacbf cbf TEST_TAB_ T cbf cbf cbf  . I true  numunique  numrows   Now drop the constraintalter table TEST_TAB_drop constraint TEST_TAB__FK_ selectc.TABLEID c.CONGLOMERATENUMBER c.CONGLOMERATENAME c.ISINDEX c.ISCONSTRAINT c.CONGLOMERATEID t.TABLEID t.TABLENAME t.TABLETYPE s.STATID s.REFERENCEID s.TABLEID s.CREATIONTIMESTAMP s.TYPE s.VALID s.COLCOUNT CASTSTATISTICS AS VARCHAR)) as STATISTICSfrom sys.SYSCONGLOMERATES c join sys.SYSTABLES t on c.TABLEID  t.TABLEID join sys.SYSSTATISTICS s on s.TABLEID  t.TABLEIDwhere t.TABLENAME  TEST_TAB_ and c.ISINDEX  false   There are still two statistic rowsTABLEID CONGLOMERATENUMBER CONGLOMERATENAME ISINDEX ISCONSTRAINT CONGLOMERATEID TABLEID TABLENAME TABLETYPE STATID REFERENCEID TABLEID CREATIONTIMESTAMP TYPE VALID COLCOUNT STATISTICScbf  cbf false false cccbacbf cbf TEST_TAB_ T edbccbf cbf cbf  . I true  numunique  numrows cbf  cbf false false cccbacbf cbf TEST_TAB_ T cbf cbf cbf  . I true  numunique  numrows   Add another rowinsert into app.TEST_TAB_ values ) insert into test_tab_ values)   Update the statisticscall syscs_util.syscs_update_statisticsAPP  TEST_TAB_  null) selectc.TABLEID c.CONGLOMERATENUMBER c.CONGLOMERATENAME c.ISINDEX c.ISCONSTRAINT c.CONGLOMERATEID t.TABLEID t.TABLENAME t.TABLETYPE s.STATID s.REFERENCEID s.TABLEID s.CREATIONTIMESTAMP s.TYPE s.VALID s.COLCOUNT CASTSTATISTICS AS VARCHAR)) as STATISTICSfrom sys.SYSCONGLOMERATES c join sys.SYSTABLES t on c.TABLEID  t.TABLEID join sys.SYSSTATISTICS s on s.TABLEID  t.TABLEIDwhere t.TABLENAME  TEST_TAB_ and c.ISINDEX  false   There are still two rows but now one show  row and one shows  rowsTABLEID CONGLOMERATENUMBER CONGLOMERATENAME ISINDEX ISCONSTRAINT CONGLOMERATEID TABLEID TABLENAME TABLETYPE STATID REFERENCEID TABLEID CREATIONTIMESTAMP TYPE VALID COLCOUNT STATISTICScbf  cbf false false cccbacbf cbf TEST_TAB_ T edbccbf cbf cbf  . I true  numunique  numrows cbf  cbf false false cccbacbf cbf TEST_TAB_ T cbf cbf cbf  . I true  numunique  numrows   Add the constraint back onALTER TABLE TEST_TAB_ADD CONSTRAINT TEST_TAB__FK_FOREIGN KEY ID) REFERENCES TEST_TAB_ID)   Insert another rowinsert into app.TEST_TAB_ values ) insert into test_tab_ values)   Update the statisticscall syscs_util.syscs_update_statisticsAPP  TEST_TAB_  null) selectc.TABLEID c.CONGLOMERATENUMBER c.CONGLOMERATENAME c.ISINDEX c.ISCONSTRAINT c.CONGLOMERATEID t.TABLEID t.TABLENAME t.TABLETYPE s.STATID s.REFERENCEID s.TABLEID s.CREATIONTIMESTAMP s.TYPE s.VALID s.COLCOUNT CASTSTATISTICS AS VARCHAR)) as STATISTICSfrom sys.SYSCONGLOMERATES c join sys.SYSTABLES t on c.TABLEID  t.TABLEID join sys.SYSSTATISTICS s on s.TABLEID  t.TABLEIDwhere t.TABLENAME  TEST_TAB_ and c.ISINDEX  false   Now there are  rowsTABLEID CONGLOMERATENUMBER CONGLOMERATENAME ISINDEX ISCONSTRAINT CONGLOMERATEID TABLEID TABLENAME TABLETYPE STATID REFERENCEID TABLEID CREATIONTIMESTAMP TYPE VALID COLCOUNT STATISTICScbf  cbf false false cccbacbf cbf TEST_TAB_ T edbccbf cbf cbf  . I true  numunique  numrows cbf  cbf false false cccbacbf cbf TEST_TAB_ T ebecbf cbf cbf  . I true  numunique  numrows cbf  cbf false false cccbacbf cbf TEST_TAB_ T eaecbf abcbf cbf  . I true  numunique  numrows Note that dropping that recreating the constraint or compressing the table does not fix the problem.   
0;Back out the concurrency improvements for identity columns introduced by derby   ;DERBY attempted to improve the concurrency of identity columns by using SYSSEQUENCEstyle sequence generators. These improvements caused NsTest to behave differently than it used to and they disclosed a problem in clearing the identity cache. The community lost confidence in this solution and it was backed out of the . branch under issue DERBY. This new issue is filed to back the improvements out of the . trunk. Further useful discussion about how to improve the concurrency and correctness of identity columns has been taking place on DERBY and DERBY.For the . release  identity columns will return to their old behavior of being illsuited for high concurrency applications. Applications which need higher concurrency should be recoded to use sequences rather than identity columns.   
0;intermittent test failure in storetestsst_derby.java   ;I am seeing an irregularly occurring failure with ibm .. on one machine  which happens to be the only  CPU machine and the only one running Windows ...And Ive got . nightly tests running on it.I have not seen this with other jvms on the same machine.Its possible this would also happen on trunk  but we stopped supporting .. with trunk and so I do not run tests against trunk with ibm) ...When the test passes  the output contains  identical lines Got a Deadlock.The test failures are of  kinds  or more?) of the Got a Deadlock lines is missing we get a XL error timeout) instead of a deadlock.As the second situation seems to match what DERBY was about  I thought it worthwhile reporting as a separate JIRA. We should check its not somehow a regression.   
0;Authorization decorators dont null out connections when done   ;Some decorators used to test authorization dont close and null out references to Connection objects when they have completed. Since these tests often createboot singleuse databases  and the Connection objects have references to the database instance and  directly or indirectly  many of its modules  this prevents much garbage from being removed from the heap after the tests have completed and shut down their singleuse databases. We should close the default connection and clear the reference to it when tearing down these decorators  so the space is released for subsequent tests to use.This problem affects decorators returned by the following methodsDatabasePropertyTestSetup.builtinAuthenticationNoTeardown)TestConfiguration.sqlAuthorizationDecorator)TestConfiguration.sqlAuthorizationDecoratorSingleUse)These methods return modified versions of DatabasePropertyTestSetup where the tearDown) method is a noop.   
0;Clean up statements in CreateTableFromQueryTest   ;CreateTableFromQueryTest has a Statement field that it closes  but doesnt null out  in tearDown). Since the field isnt nulled out  it cannot be garbage collected  and one Statement per test case will be left on the heap after completion.   
0;ResultSetFromPreparedStatementTest keeps references to nondefault connections   ;ResultSetFromPreparedStatementTest keeps references to nondefault connections in the fields c and c. c is closed and nulled out in tearDown). c is only closed. It should be nulled out too in order to allow gc of resources after test completion.   
0;BigDataTest.tearDown) doesnt call super.tearDown)   ;BigDataTests tearDown) method doesnt call super.tearDown)  causing it to leave statements and connections open and not eligible for gc.   
0;CheckConstraintTest holds on to resources after completion   ;CheckConstraintTest keeps connections  statements and result sets in instance variables  but never clears the variables  so they are kept forever.   
0;ColumnDefaultsTest holds on to resources after completion   ;ColumnDefaultsTest keeps connections  statements and result sets in instance variables  but never clears the variables  so they are kept forever.   
0;InbetweenTest holds on to resources after completion   ;InbetweenTest keeps connections  statements and result sets in instance variables  but never clears the variables  so they are kept forever.   
0;TimestampArithTest keeps references to statements after completion   ;TimestampArithTest keeps references to statements in static fields  but never closes them or clears the fields.   
0;TableFunctionTest keeps reference to connection after completion   ;The test cases in TableFunctionTest store a DatabaseMetaData instance in an instance variable. The DatabaseMetaData instance references the default connection  and the connection can therefore not be gced after the test has completed.   
0;UngroupedAggregatesNegativeTest doesnt call super.tearDown)   ;public void tearDown throws SQLException  dropTablet  dropTablet  }Should call super.tearDown to close and release connection and statements.   
0;ParameterMappingTest lacks call to super.tearDown)   ;ParameterMappingTest.tearDown) should call super.tearDown) to release connectionsstatements.   
0;InternationalConnectTest forgets to call super.tearDown)   ;Its tearDown) method should call super.tearDown) to free resources.   
0;EncryptionKeyTest sometimes keeps reference to connection   ;EncryptionKeyTest has this code to clean up the connection if con  null amp amp  con.isClosed  con.rollback  con.close  con  null  }If the connection is already closed  it wont null out the reference. It should set con to null unconditionally.   
0;Replication tests keep references to connections after completion   ;The base class for the replication tests  ReplicationRun  keeps references to connections used during the test also after the test has completed. The connections are referenced from these fields masterConn slaveConn startSlaveException which references a connection indirectly via client.am.SqlException gt  client.am.Sqlca)   
0;ProtocolTest doesnt clean up its test resources   ;ProtocolTest doesnt clean up its test resources. A tearDown method should be added to make the referenced instances eligable for garbage collection. The test class instances currenlty retain more than  MB on the heap.   
0;NullPointerException in GenericTriggerExecutor.executeSPS) caused by OutOfMemoryError   ;If I run TriggerTest with the flags server and XmxM passed to the JVM  I fairly consistently see a NPE being thrownjava.lang.NullPointerException at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java at org.apache.derby.impl.sql.execute.RowTriggerExecutor.fireTriggerRowTriggerExecutor.java at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java at org.apache.derby.impl.sql.execute.UpdateResultSet.fireAfterTriggersUpdateResultSet.java at org.apache.derby.impl.sql.execute.UpdateResultSet.openUpdateResultSet.java at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtGenericPreparedStatement.java at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeEmbedPreparedStatement.java at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.testBlobInTriggerTableTriggerTest.java at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.testBlobInTriggerTableTriggerTest.java at sun.reflect.NativeMethodAccessorImpl.invokeNative Method at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java at java.lang.reflect.Method.invokeMethod.java at junit.framework.TestCase.runTestTestCase.java at junit.framework.TestCase.runBareTestCase.java at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java at junit.framework.TestResult.protectTestResult.java at junit.framework.TestResult.runProtectedTestResult.java at junit.framework.TestResult.runTestResult.java at junit.framework.TestCase.runTestCase.java at junit.framework.TestSuite.runTestTestSuite.java at junit.framework.TestSuite.runTestSuite.java at junit.extensions.TestDecorator.basicRunTestDecorator.java at junit.extensions.TestSetup.protectTestSetup.java at junit.framework.TestResult.runProtectedTestResult.java at junit.extensions.TestSetup.runTestSetup.java at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java at junit.textui.TestRunner.doRunTestRunner.java at junit.textui.TestRunner.startTestRunner.java at junit.textui.TestRunner.mainTestRunner.javaIn derby.log  there is an OOME right before the NPEjava.lang.OutOfMemoryError Java heap space at org.apache.derby.impl.jdbc.LOBStreamControl.updateDataLOBStreamControl.java at org.apache.derby.impl.jdbc.LOBStreamControl.writeLOBStreamControl.java at org.apache.derby.impl.jdbc.LOBStreamControl.lt initgt LOBStreamControl.java at org.apache.derby.impl.jdbc.EmbedBlob.lt initgt EmbedBlob.java at org.apache.derby.impl.jdbc.EmbedResultSet.getBlobEmbedResultSet.java at org.apache.derby.impl.jdbc.EmbedResultSet.getObjectEmbedResultSet.java at org.apache.derby.exe.acbbxxdxdxffbf.eUnknown Source at org.apache.derby.impl.services.reflect.DirectCall.invokeReflectGeneratedClass.java at org.apache.derby.impl.sql.execute.RowResultSet.getNextRowCoreRowResultSet.java at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCoreDMLWriteResultSet.java at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtGenericPreparedStatement.java at org.apache.derby.impl.sql.GenericPreparedStatement.executeSubStatementGenericPreparedStatement.java at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java at org.apache.derby.impl.sql.execute.RowTriggerExecutor.fireTriggerRowTriggerExecutor.java...The code that fails with NPE  is this call to cleanupOnError in a catch block in GenericTriggerExecutor.executeSPS * retrieve the current active SC * StatementContext sc  lcc.getStatementContext  * make sure that the cleanup is on the new SC * if active_sc  sc   sc.cleanupOnErrore  }   
0;Remove unsued code in AlterTableConstantaction.columnDroppedAndTriggerDependencies   ;The following code is executed  but the results are not used CollectNodesVisitor visitor  new CollectNodesVisitorColumnReference.class)  stmtnode.acceptvisitor)  Vector refs  visitor.getList)  lt  never usedI plan to remove the code  but just want to record it here in case there are sideeffects by using the visitor.   
1;Native user authentication improve wording of error message   ;This error message no longer has a correct string XCYquote from English locale)Invalid setting of the derby.authentication.provider property. This property cannot be set to NATIVELOCAL unless credentials for the database owner have been stored in the database using the SYSCS_UTIL.SYSCS_CREATE_USER procedure.This property should no longer ever need to be set to NATIVELOCAL it is done automatically when the first user is created via SYSCS_UTIL.SYSCS_CREATE_USER.The wording should be adjusted. Note Now  the property should never be set manually for native authentication via SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY  this is only meaningful for LOCAL credentials db  but this is done automatically since version  of the spec.   
0;Sending an empty string as table name to compress table procedure or empty string as index name to update statistics procedure makes the parser throw an exception.   ;When empty string is passed for the index name to the update statistics procedure  it throws following exceptionpassing an empty string for table to compress table procedure also gives simiar exception). The new stored procedure being created through DERBY for dropping the statistics also gave similar exceptionjava Dij.exceptionTracetrue org.apache.derby.tools.ijconnect jdbcderbydb createtrue  create table tc int  statistics int not null) call syscs_util.SYSCS_UPDATE_STATISTICS APP  T   ) ERROR  The exception java.sql.SQLException Syntax error Encountered  at line   column . was thrown while evaluating an expression.java.sql.SQLException The exception java.sql.SQLException Syntax error Encountered  at line   column . was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.tools.ij.ij.executeImmediateij.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)Caused by java.sql.SQLException The exception java.sql.SQLException Syntax error Encountered  at line   column . was thrown while evaluating an expression. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  moreCaused by java.sql.SQLException Syntax error Encountered  at line   column . at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementDriver.java) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java) at org.apache.derby.catalog.SystemProcedures.SYSCS_UPDATE_STATISTICSSystemProcedures.java) at org.apache.derby.exe.acacecaxxfxccxe.gUnknown Source) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeReflectMethod.java) at org.apache.derby.impl.sql.execute.CallStatementResultSet.openCallStatementResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtGenericPreparedStatement.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) ...  moreCaused by ERROR X Syntax error Encountered  at line   column . at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.sql.compile.ParserImpl.parseStatementParserImpl.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) ...  moreERROR X Syntax error Encountered  at line   column .java.sql.SQLSyntaxErrorException Syntax error Encountered  at line   column . at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.generateCsSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementDriver.java) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementEmbedConnection.java) at org.apache.derby.catalog.SystemProcedures.SYSCS_UPDATE_STATISTICSSystemProcedures.java) at org.apache.derby.exe.acacecaxxfxccxe.gUnknown Source) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeReflectMethod.java) at org.apache.derby.impl.sql.execute.CallStatementResultSet.openCallStatementResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtGenericPreparedStatement.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.tools.ij.ij.executeImmediateij.java) at org.apache.derby.impl.tools.ij.utilMain.doCatchutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsutilMain.java) at org.apache.derby.impl.tools.ij.utilMain.goutilMain.java) at org.apache.derby.impl.tools.ij.Main.goMain.java) at org.apache.derby.impl.tools.ij.Main.mainCoreMain.java) at org.apache.derby.impl.tools.ij.Main.mainMain.java) at org.apache.derby.tools.ij.mainij.java)Caused by java.sql.SQLException Syntax error Encountered  at line   column . at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) ...  moreCaused by ERROR X Syntax error Encountered  at line   column . at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.sql.compile.ParserImpl.parseStatementParserImpl.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareGenericStatement.java) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementGenericLanguageConnectionContext.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt EmbedPreparedStatement.java) ...  moreIssue the help command for general information on IJ command syntax.Any unrecognized commands are treated as potential SQL commands and executed directly.Consult your DBMS server reference documentation for details of the SQL syntax supported by your server.ijgt    
0;Missing argument in some XJ errors   ;EmbedBlob and EmbedClob some times wrap IOExceptions in an SQLException with SQLState XJ SQLState.SET_STREAM_FAILURE  but they dont always specify the message argument  so the error message ends up like thisjava.sql.SQLException Unable to set stream }.The detailed error message does appear in a chained exception  so its not a very big problem  but it looks a bit odd.I dont know of a way to expose these exceptions in a test. I just noticed it when I added some manual asserts to force a failure when investigating another issue.The fix should be simple Use the helper method Util.setStreamFailure that sets the message argument automatically.   
0;Use TestNullOutputStream where possible   ;Derbys test framework provides a stream class  TestNullOutputStream  that discards all data written to it. UtfCcsidManagerClientTests constructor and BaseJDBCTestCase.runScript) create their own anonymous classes that provide the same functionality. They should be changed to reuse TestNullOutputStream.   
0;Upgrade tests should  print full IOException stack trace when it fails to access old versions   ;When the Upgrade tests fail to access the oldVersions due to an IOException the message is not very clear as to what the IOException was. e g. can output ALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runALARM IOException msg svn.apache.org. Upgrade tests can NOT be runTime .OK  testsThe code in OldVersions.getVersions } } catch IOException ioe  alarmError reading from file   oldVersionsPath  ioe.getMessage  }should print the exception stack trace or possibly even fail on IOException.   
0;Table functions should only accept arguments which are constant in their query block.   ;Derby lets you invoke a table function in the FROM list of a query  passing in arguments built out of columns in other tables in the FROM list. This syntax is illegal and the resulting queries have no meaning under the SQL Standard. See the discussion on DERBY. We should forbid this syntax. Similar syntax involving correlated subqueries in the FROM list is already forbidden. Fixing this will create a backward incompatibility which requires a release note.   
0;Remove duplicated code for starting remote processes in replication tests   ;ReplicationRun has two copies of each of the methods runUserCommand)  runUserCommandRemotely) and processOutput). One variant takes an id parameter used only in debug output)  and one doesnt. It would be sufficient to have one copy of each of these methods.   
0;Replication tests should use BaseTestCase.execJavaCmd) to run local commands   ;The replication tests invoke Runtime.exec) directly in order to spawn processes. The subprocesses that run on the same host as the main test process  should instead be started with the helper method BaseTestCase.execJavaCmd). Having all the tests use the helper method would make it easier if we for example want to pass specific flags to all subprocesses created in a test run.Note that the replication tests also have code for starting processes on a remote host via ssh. BaseTestCase.execJavaCmd) cannot do that  so only local processes can be started with the helper method. When the replication tests run as part of suites.All  all the spawned processes run locally.   
1;Make it possible to turn off encryption on an already encrypted database.   ;Currently  you can encrypt an unencrypted database and you can change the encryption key on an already encrypted database. However  Derby does not expose a way to turn off unencrypt) an already encrypted database.   
0;Documentation in release doesnt include stylesheets   ;The documentation that is bundled with the Derby releases does not include the three .css stylesheets that are copied into the outlt manualnamegt  directory by the Ant task that builds the HTML files. These need to be included in the docshtmllt manualnamegt  directories for the releases.I believe this problem has existed from the beginning   it certainly goes back several releases.   
0;Remove unused methods in client.am.DateTime   ;The DateTime class contains two unused methods timestampToDateBytes) and timestampToTimeBytes). These methods also contain calls to deprecated methods in the java.util.Date class  so it would be good to get rid of them.   
0;AssertionFailedError in functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness   ;I noticed a test failure in UpdateStatisticsTest.testDisposableStatsEagerness.The link is httppeople.apache.org~myrnavlderby_test_resultsmainwindowstestlogibmsuites.All_diff.txtThe stack trace testDisposableStatsEagernessorg.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest)junit.framework.AssertionFailedError at org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagernessUpdateStatisticsTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)   
0;Disable inJapanCodeConversion.sql on platforms that dont support EUC_JP or SJIS   ;I ran derbyall on Java SE for Embedded   which doesnt support the EUC_JP or SJIS encodings. inJapanCodeConversion.sql failed because of this                 Diff file derbyallinTestJapanCodeConversion.diff             Start JapanCodeConversion jdk.._ea derbyallinTest   *** dellt   rows insertedupdateddeleteda gt  ERROR  The exception java.sql.SQLException The exception java.lang.reflect.InvocationTargetException was thrown while evaluating an expression. was thrown while evaluating an expression.gt  ERROR  The exception java.lang.reflect.InvocationTargetException was thrown while evaluating an expression.gt  ERROR XJ Java exception  java.lang.reflect.InvocationTargetException.gt  ERROR XJ Java exception java.io.UnsupportedEncodingException EUC_JP. d...)    We should skip the test on platforms that dont support these encodings.   
0;Remove unused class ExecProcUtil   ;The class living in javatestingorgapachederbyTestingfunctionTestsutilExecProcUtil.java isnt used and can be removed.   
0;Add replicationTests.ReplicationSuite to junitcore ant target   ;The replication tests arent run as part of the junitcore ant target nor in any of the other relevant targets).I suggest adding the suite such that is is run as part of the toplevel ant targets for testing Derby.Note that it would have been simpler to simply run suites.All  but the special logic for JDBC  code may still be relevant for some platforms JSR). It is also nice to get some more feedback as the test cycle proceeds. The downside of not using suites.All is that we may forget adding new suites to the ant targets)  but were adding so few new suites that it shouldnt be much of a problem.   
1;testOSReadOnly fails with k.AssertionFailedError expected an error indicating the db is readonly on HP java .   ;This failure was reported running suites.All on HP. Read only database is apparently not read only.) testOSReadOnlyorg.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest)junit.framework.AssertionFailedError expected an error indicating the db is readonly at org.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest.assertExpectedInsertBehaviourOSReadOnlyTest.java) at org.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest.testOSReadOnlyOSReadOnlyTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testOSReadOnlyorg.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest)junit.framework.AssertionFailedError Failed to copy directory from localderbytesttestsystemsingleUseoneuseb to localderbytesttestsystemsingleUsereadOnly at org.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest.copyDatabaseOnOSOSReadOnlyTest.java) at org.apache.derbyTesting.functionTests.tests.store.OSReadOnlyTest.testOSReadOnlyOSReadOnlyTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)FAILURESTests run   Failures   Errors bash.   
0;Make DoubleProperties.propertyNames) threadsafe   ;As discussed in DERBY  DoubleProperties.propertyNames) may throw a NullPointerException if properties are removed by another thread while the method is executing. Since DoubleProperties is a subclass of  and used as a dropin replacement for  java.util.Properties  it should be threadsafe just like the propertyNames) method in the parent class.   
0;By using syscs_set_database_property  you can set the database version to a garbage string which prevents you from booting the database.   ;The following script shows this problemconnect jdbcderbydb createtrue values  syscs_util.syscs_get_database_property DataDictionaryVersion ) ) call syscs_util.syscs_set_database_property DataDictionaryVersion  foobar ) values  syscs_util.syscs_get_database_property DataDictionaryVersion ) ) connect jdbcderbydb shutdowntrue   fails to bootconnect jdbcderbydb    
0;Clean up IDE warnings in DRDAConnThread   ;When I open DRDAConnThread in NetBeans  I see  warnings. Most of them are harmless like static fields accessed via an instance  suggestions about using StringBuilder instead of StringBuffer  or using System.arraycopy) instead of for loops). Others indicate real problems  like the use of  to compare SQL states in writeSQLDIAGGRP).We should clean up the warnings so that its easier to notice new warnings about potential problems.   
0;Remove unused methods in DDMReader and DDMWriter   ;Many of the methods in DDMReader and DDMWriter are not used anymore. Those methods could be removed.   
0;Remove JDBC  constants from client.am.Statement   ;org.apache.derby.client.am.Statement defines three constants  CLOSE_CURRENT_RESULT  KEEP_CURRENT_RESULT and CLOSE_ALL_RESULTS  that are also defined in java.sql.Statement. Since client.am.Statement implements java.sql.Statement  we could remove those constants and let it inherit them instead. The only reason why these constants are defined in client.am.Statement  is to make the client compile on JDKs predating JDBC  that is  Java . and earlier). Since we dont support those JDKs anymore  the constants can be removed now.   
0;Prune the brokered class tree   ;The brokered class tree still separates between the JDBC . functionality and JDBC .. This leads to unnecessarily many levels of classes for example  BrokeredPreparedStatement gt  BrokeredPreparedStatement gt  BrokeredStatement). Another consequence is that BrokeredCallableStatement and BrokeredPreparedStatement dont have a common base class that could hold shared JDBC . methods their common base class is BrokeredPreparedStatement  which is JDBC .)  and therefore new JDBC . PreparedStatement methods are duplicated in the two classes.We should fold the JDBC . classes into the JDBC . classes so that we can reduce the number of classes and the duplication of code in the brokered statement subtree.   
0;Add message argument names  as comments  to English message file produced by MessageBuilder.   ;The MessageBuilder program turns messages.xml into two output files) The DITA source for the Reference Guide section on error messages.) The messages_en.properties file of engine messages.All of the translators I have dealt with want to use ) as the English input for their translations. I believe this is because translators have written their own tools and those tools expect to work on properties files.Messages may have arguments. Those arguments appear as subelements of the messages in messages.xml. The arguments turn up in ) but are thrown away when MessageBuilder produces ). We can help translators do a better job by also writing the arguments as comments in ).   
0;Simplify JSR implementation class tree   ;The JSR interface is a subset of JDBC .  but still the JDBC . implementation classes do not extend the JSR implementation classes. Instead  the JSR and JDBC . implementation classes extend a common base class. The reason for this structure  is that the JSR compile targets used to be optional  so the JDBC . classes could not depend on them.For example  the class javadoc comment for EmbedResultSet says ResultSet implementation for JSR. Adds no functionality to its abstract) parent class. If Derby could be compiled against JSR that the parent class could be the concrete class for the environment. Just like for the JDBC . specific classes. Until that is possible ie. easily downloadable JMECDCFoundationJSR jar files  this class is required and is only compiled by an optional target.Since the JSR code is no longer optional  we should do as the comment suggests  and use the base class directly instead. This would allow us to simplify the class tree.   
0;The order of argument names in messages.xml is sometimes wrong when the arguments occur in the message out of sequence.   ;In most Derby messages  arguments appear in ascending order. That is  } occurs in the message first  then }  then }  and so on. Sometimes  however  arguments occur out of sequence. When this happens  the names in the lt arggt  subelements may not agree with the order that the arguments actually occur in the message. This causes MessageBuilder to garble the dita source for the Reference Guide page titled SQL error messages and exceptions.For instance  here is the messages.xml element for SQLState  lt msggt  lt namegt lt namegt  lt textgt The start position for LOCATE is invalid  it must be a positive integer. The index to start the search from is }. The string to search for is }. The string to search from is }. lt textgt  lt arggt startIndexlt arggt  lt arggt searchStringlt arggt  lt arggt fromStringlt arggt  lt msggt This gives rise to the following garbled text in the generated reference guide pageThe start position for LOCATE is invalid  it must be a positive integer. The index to start the search from is lt fromStringgt . The string to search for is lt startIndexgt . The string to search from is lt searchStringgt . We should reorder the lt arggt  subelements so that the first lt arggt  sublement corresponds to }  the second lt arggt  subelement corresponds to }  and so on.   
0;Broken handling of paths with special characters in compatibilityVersionCombinationConfigurator   ;Some of the code handling paths in compatibilityVersionCombinationConfigurator is broken.The issue is that the location of a given class is given as a URL. This means the path will be URL encoded  and  for instance  spaces will be encoded as .This bug typically shows itself as an NPE when invoking compatibility._Suite.   
0;add ibm class to functionTests.harness   ;The old test harness  in package java.org.apache.derbyTesting.functionTests.harness  needs an ibm class  similar to ibm. I dont plan to run tests with this jvm against branches older than .  but it will need to be backported to . and ..   
0;Incorrect list of compatible JRE versions in client trace    ;The list of compatible JRE versions is out of sync again. It currently says .  .  and ..For trunk I believe we must remove .  and we should add ..For .  if we want to change it  I think we can keep .? And . was out and supported before we released .  right?This issue was logged as DERBY the previous time it was out of sync.   
0;Add utility methods to query state of URL attributes in EmbedConnection   ;Add utility methods to determine whether URL attributes are set or have the value true.The motivation for the change is improved readabilityformatting of the code.   
0;Missing method exception raised when using Clobs with territory based collation   ;When using territorybased collation with Clobs  Derby raises an error trying to invoke a missing method. The following script shows this problemconnect jdbcderbymemorydb createtrue collationTERRITORY_BASED create function makeClob contents varchar  ) ) returns cloblanguage java parameter style java no sql deterministicexternal name org.apache.derbyTesting.functionTests.tests.lang.UserDefinedAggregatesTest.makeClob create table clobTable a clob )   fails with a java.lang.NoSuchMethodError exceptioninsert into clobTable a ) values  makeClob a ) ) connect jdbcderbymemorydb createtrue create function makeClob contents varchar  ) ) returns cloblanguage java parameter style java no sql deterministicexternal name org.apache.derbyTesting.functionTests.tests.lang.UserDefinedAggregatesTest.makeClob create table clobTable a clob )   succeedsinsert into clobTable a ) values  makeClob a ) ) Here is the errorERROR  The exception java.lang.NoSuchMethodError org.apache.derby.iapi.types.DataValueFactory.getClobDataValueLjavasqlClob LorgapachederbyiapitypesStringDataValue I)LorgapachederbyiapitypesStringDataValue  was thrown while evaluating an expression.ERROR XJ Java exception org.apache.derby.iapi.types.DataValueFactory.getClobDataValueLjavasqlClob LorgapachederbyiapitypesStringDataValue I)LorgapachederbyiapitypesStringDataValue  java.lang.NoSuchMethodError....and here is the stack traceTue Oct   PDT  Thread main  main  XID  )  SESSIONID  )  DATABASE  memorydb)  DRDAID  null)  Failed Statement is   fails with a java.lang.NoSuchMethodError exceptioninsert into clobTable a ) values  makeClob a ) )ERROR  The exception java.lang.NoSuchMethodError org.apache.derby.iapi.types.DataValueFactory.getClobDataValueLjavasqlClob LorgapachederbyiapitypesStringDataValue I)LorgapachederbyiapitypesStringDataValue  was thrown while evaluating an expression. at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.iapi.error.StandardException.unexpectedUserExceptionUnknown Source) at org.apache.derby.impl.services.reflect.DirectCall.invokeUnknown Source) at org.apache.derby.impl.sql.execute.RowResultSet.getNextRowCoreUnknown Source) at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCoreUnknown Source) at org.apache.derby.impl.sql.execute.InsertResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.executeImmediateUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.doCatchUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source)Caused by java.lang.NoSuchMethodError org.apache.derby.iapi.types.DataValueFactory.getClobDataValueLjavasqlClob LorgapachederbyiapitypesStringDataValue I)LorgapachederbyiapitypesStringDataValue  at org.apache.derby.exe.acedaxaxafxbbxed.eUnknown Source) ...  more   
0;NPE in SELECT involving subselects and windows functions   ;A user reports and I have verified an NPE on the following SELECTconnect jdbcderbymemorydb createtrue create table blah  a int ) insert into blah values )  )  )  )  )  )  ) SELECT rn  SELECT rn FROM SELECT row_number) over) rn FROM blah ) as Twhere T.rn  T.rn) rnFROM SELECT row_number) over) rn from blah) as T    
0;Timestamp comparison failure in AutomaticIndexStatisticsTest.testStatisticsCorrectness   ;httpdbtg.foundry.sun.comderbytestDailyjvm.testingtestloglinsuitesAll_diff.txt) testStatisticsCorrectnessorg.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest)junit.framework.AssertionFailedError at org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testStatisticsCorrectnessAutomaticIndexStatisticsTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)The failure is caused by this assert assertTrues.created.beforenow)) It might be a coincidence  but it happened the same night as Europe was switching from DST.It may also be related to DERBY  where a similar assert failed because poor clock resolution made the two timestamps equal.   
1;Encryption  reencryption  and unencryption silently fail if the database is already booted.   ;If the database is already booted  then the DBOs attempt to reencrypt or unencrypt the database will silently fail. It will appear to the DBO that the reun)encryption succeeded but in fact the database will not be changed. Derby should raise an error if the database is already booted when the DBO attempts reun)encryption.   
0;Grammar doesnt accept OR operator without parentheses   ;The grammar doesnt accept the OR operator without parentheses in some constructs.For example  in a select listijgt  create table tb boolean  b boolean)  rows insertedupdateddeletedijgt  select b or b from t ERROR X Syntax error Encountered or at line   column . errorCode  )Issue the help command for general information on IJ command syntax.Any unrecognized commands are treated as potential SQL commands and executed directly.Consult your DBMS server reference documentation for details of the SQL syntax supported by your server.However  it does not fail if OR is replaced by AND  or if parentheses are used around the OR expressionijgt  select b or b) from t   rows selectedijgt  select b and b from t   rows selectedSimilar behaviour is seen in VALUES statementsijgt  values true or false ERROR X Syntax error Encountered or at line   column . errorCode  )Issue the help command for general information on IJ command syntax.Any unrecognized commands are treated as potential SQL commands and executed directly.Consult your DBMS server reference documentation for details of the SQL syntax supported by your server.ijgt  values true or false)  true  row selectedijgt  values true and false  false row selected   
0;Stop producing byte code for nonexistent qualifiers   ;For all result set nodes that have predicate lists  Derbys compiler lays out byte code for fields to hold qualifiers  and also code to reinitialize the values in those fields on every execution. It does this even if there are no qualifiers. See PredicateList.generateQualifiers. That method does actually check whether there are qualifiers  and it skips some of the code generation if there are none. It should be changed so that it skips all the code generation if there are no qualifiers.For an example  see the decompiled generated class for a natural join attached to DERBY httpsissues.apache.orgjirasecureattachmentnaturaljoinaftera.txtThat class contains three Qualifier[][] fields private Qualifier[][] e  private Qualifier[][] e  private Qualifier[][] e Only one of them e is ever set to a nonnull value. Still  the reinit method  which is called on every execution  has code for each of the fields protected void reinit throws StandardException  BaseActivation.reinitializeQualifierse  BaseActivation.reinitializeQualifierse  BaseActivation.reinitializeQualifierse  }   
0;Use BaseTestCase.execJavaCmd) to start process from NetworkServerTestSetup   ;NetworkServerTestSetup invokes Runtime.execString[]) manually when it needs to start a subprocess. It should use BaseTestCase.execJavaCmd). In addition to reducing the amount of code  it would make the server processes pick up the flags they need to work well with EMMA and JaCoCo.   
0;Replication tests fail on CDC platforms without optional JSSE package   ;The replication code uses the javax.net.ServerSocketFactory class  which is not part of the core API defined by Foundation Profile .. It is however part of an optional security package JSSE) defined by the same specification  so it may or may not be available on the CDC platforms that Derby runs on.Running the replication tests on phoneME without said optional package  results in NoClassDefFoundErrorCaused by java.lang.NoClassDefFoundError javax.net.SocketFactory at org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit.runUnknown Source) at java.security.AccessController.doPrivilegedUnknown Source) at java.security.AccessController.doPrivilegedUnknown Source) at org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit.initConnectionUnknown Source) at org.apache.derby.impl.store.replication.master.MasterController.setupConnectionUnknown Source) at org.apache.derby.impl.store.replication.master.MasterController.startMasterUnknown Source) at org.apache.derby.impl.store.raw.RawStore.startReplicationMasterUnknown Source) at org.apache.derby.impl.store.access.RAMAccessManager.startReplicationMasterUnknown Source) at org.apache.derby.impl.db.BasicDatabase.startReplicationMasterUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleStartReplicationMasterUnknown Source)We might fix this by rewriting the replication code so that its not dependent on optional packages on CDC. However  there have not been any user requests for this functionality on platforms without that package  as far as Im aware  so I suggest we just skip the replication tests for now if that package is missing.The tests Ive run on Oracle Java Micro Edition Embedded Client . OJEC) have not revealed this problem  as OJEC comes with the optional JSSE package its version output lists JSSE JSR under the components section). And since the reports from the weme . test runs dont show this failure  I think its included there as well.   
0;ErrorMessageTest assert failure Only one of the waiters should be aborted   ;I occasionally see this test failure on some ARM devicesjunit.framework.AssertionFailedError Only one of the waiters should be aborted at org.apache.derbyTesting.functionTests.tests.lang.ErrorMessageTest.testDeadlockTimeoutErrorMessageTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Its probably timingdependent  since the failing test case runs two threads  and the devices where its seen are slow compared to most other test servers.   
0;NullPointerException in INSERT INTO ... SELECT FROM ... ORDER BY   ;A NullPointerException was reported by HarmJan Zwinderman on derbyuserhttpmailarchives.apache.orgmod_mboxdbderbyuser.mboxCB.gmail.comEIve managed to reproduce it on ... like thisij version .ijgt  connect jdbcderbymemorydb createtrue ijgt  create table tx double)  rows insertedupdateddeletedijgt  insert into t values )  row insertedupdateddeletedijgt  prepare ps as insert into t select  from t order by x ijgt  execute ps  row insertedupdateddeletedijgt  execute ps  rows insertedupdateddeletedijgt  execute ps  rows insertedupdateddeletedijgt  execute ps ERROR XJ Java exception  java.lang.NullPointerException.Full stack tracejava.lang.NullPointerException at org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil.createFormatIdsUnknown Source) at org.apache.derby.impl.store.access.heap.Heap.createUnknown Source) at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.createConglomerateUnknown Source) at org.apache.derby.impl.store.access.RAMTransaction.createConglomerateUnknown Source) at org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.insertUnknown Source) at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCoreUnknown Source) at org.apache.derby.impl.sql.execute.InsertResultSet.openUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtUnknown Source) at org.apache.derby.impl.sql.GenericPreparedStatement.executeUnknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUnknown Source) at org.apache.derby.impl.tools.ij.ij.ExecuteStatementUnknown Source) at org.apache.derby.impl.tools.ij.ij.ijStatementUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source) at org.apache.derby.iapi.tools.run.mainUnknown Source)   
0;IN lists with mixed types may return wrong results   ;Given this tableijgt  connect jdbcderbymemorydb createtrue ijgt  create table tx bigint)  rows insertedupdateddeletedijgt  insert into t values       rows insertedupdateddeletedA query that uses an IN list that contains all the three values actually stored in the table  returns all three rows as expectedijgt  select * from t where x in     ) X     rows selectedHowever  if we add a value whose type precedence is higher  like a DOUBLE value  and that value happens to be equal to the approximation of the other values in the IN list when they are cast from BIGINT to DOUBLE  only one row is returnedijgt  select * from t where x in       .E) X   row selectedI believe this query should return all three rows too.   
0;Lift the arbitrary limit on the number of routine parameters.   ;The number of parameters to a Derby routine is arbitrarily limited to . This limit is causing difficulties for users see httpapachedatabase..n.nabble.comnumberofparameterstd.html). It ought to be safe to lift this limit. Changes need to be made to CreateAliasNode and to the corresponding dbManagerLimits.testMostParametersInStoredProcedures) test.   
0;in list multiprobe by primary key not chosen on tables with > rows   ;I have a table with a long integer primary key field and  million rows. I seem to be unable to load large chunks of rows via id in a reasonably efficient manner. . If I do individual lookups via the primary key  then a fast indexed lookup occurs. However  if I do large numbers of such queries  then the time is overwhelmed by roundtrip overhead which makes everything incredibly slow. . If I use a single query with a disjunction of the primary keys of interest  then a table scan is performed even if the clause only contains  items  which walks over  million rows...incredibly inefficient. . If I use an IN clause  then a table scan is performed even if the clause only contains  items  which walks over  million rows...incredibly inefficient.Im guessing that this might have something to do with the fact that Im using large integers and really big numbers that dont start anywhere at or about  for my keys. Could this possibly be confusing the optimizer?Here are the unlimited query plans for the  cases that I enumerated********************************************************************************************* EL Fine   .ServerSessionConnectionThreadThread quot Initial Lisp Listenerquot   SubL Thread Group SELECT TERM_ID  ARG  ARG  ARG  ARG  FORMULA_HASH  FORMULA_LENGTH  FORMULA_TYPE  KB_STATUS FROM KB.FORMULA_TERM WHERE TERM_ID  ? bind gt    Thu Jan   CST  Thread quot Initial Lisp Listenerquot   SubL Thread Group  XID    SESSIONID    SELECT TERM_ID  ARG  ARG  ARG  ARG  FORMULA_HASH  FORMULA_LENGTH  FORMULA_TYPE  KB_STATUS FROM KB.FORMULA_TERM WHERE TERM_ID  ? ******* ProjectRestrict ResultSet Number of opens  Rows seen  Rows filtered  restriction  falseprojection  true constructor time milliseconds   open time milliseconds   next time milliseconds   close time milliseconds   restriction time milliseconds   projection time milliseconds   optimizer estimated row count . optimizer estimated cost .Source result set Index Row to Base Row ResultSet for FORMULA_TERM Number of opens   Rows seen   Columns accessed from heap                } constructor time milliseconds   open time milliseconds   next time milliseconds   close time milliseconds   optimizer estimated row count . optimizer estimated cost . Index Scan ResultSet for FORMULA_TERM using constraint KB_FORMULA_TERM_TERM_ID_PK at read committed isolation level using share row locking chosen by the optimizer Number of opens   Rows seen   Rows filtered   Fetch Size   constructor time milliseconds   open time milliseconds   next time milliseconds   close time milliseconds   next time in millisecondsrow   scan information Bit set of columns fetchedAll Number of columns fetched Number of deleted rows visited Number of pages visited Number of rows qualified Number of rows visited Scan typebtree Tree height start position gt  on first  columns. Ordered null semantics on the following columns  stop position gt  on first  columns. Ordered null semantics on the following columns  qualifiers None optimizer estimated row count . optimizer estimated cost . EL Fine   .ServerSessionConnectionThreadThread quot Initial Lisp Listenerquot   SubL Thread Group SELECT TERM_ID  ARG  ARG  ARG  ARG  FORMULA_HASH  FORMULA_LENGTH  FORMULA_TYPE  KB_STATUS FROM KB.FORMULA_TERM WHERE TERM_ID  ? OR TERM_ID  ? OR TERM_ID  ? bind gt        Thu Jan   CST  Thread quot Initial Lisp Listenerquot   SubL Thread Group  XID    SESSIONID    SELECT TERM_ID  ARG  ARG  ARG  ARG  FORMULA_HASH  FORMULA_LENGTH  FORMULA_TYPE  KB_STATUS FROM KB.FORMULA_TERM WHERE TERM_ID  ? OR TERM_ID  ? OR TERM_ID  ? ******* ProjectRestrict ResultSet Number of opens  Rows seen  Rows filtered  restriction  falseprojection  true constructor time milliseconds   open time milliseconds   next time milliseconds   close time milliseconds   restriction time milliseconds   projection time milliseconds   optimizer estimated row count . optimizer estimated cost .Source result set ProjectRestrict ResultSet  Number of opens   Rows seen   Rows filtered   restriction  true projection  false constructor time milliseconds   open time milliseconds   next time milliseconds   close time milliseconds   restriction time milliseconds   projection time milliseconds   optimizer estimated row count . optimizer estimated cost . Source result set Table Scan ResultSet for FORMULA_TERM at read committed isolation level using instantaneous share row locking chosen by the optimizer Number of opens   Rows seen   Rows filtered   Fetch Size   constructor time milliseconds   open time milliseconds   next time milliseconds   close time milliseconds   next time in millisecondsrow   scan information Bit set of columns fetchedAll Number of columns fetched Number of pages visited Number of rows qualified Number of rows visited Scan typeheap start position null stop position null qualifiers None optimizer estimated row count . optimizer estimated cost . EL Fine   .ServerSessionConnectionThreadThread quot Initial Lisp Listenerquot   SubL Thread Group SELECT TERM_ID  ARG  ARG  ARG  ARG  FORMULA_HASH  FORMULA_LENGTH  FORMULA_TYPE  KB_STATUS FROM KB.FORMULA_TERM WHERE TERM_ID IN ? ? ? bind gt        Thu Jan   CST  Thread quot Initial Lisp Listenerquot   SubL Thread Group  XID    SESSIONID    SELECT TERM_ID  ARG  ARG  ARG  ARG  FORMULA_HASH  FORMULA_LENGTH  FORMULA_TYPE  KB_STATUS FROM KB.FORMULA_TERM WHERE TERM_ID IN ? ? ? ******* ProjectRestrict ResultSet Number of opens  Rows seen  Rows filtered  restriction  falseprojection  true constructor time milliseconds   open time milliseconds   next time milliseconds   close time milliseconds   restriction time milliseconds   projection time milliseconds   optimizer estimated row count . optimizer estimated cost .Source result set ProjectRestrict ResultSet  Number of opens   Rows seen   Rows filtered   restriction  true projection  false constructor time milliseconds   open time milliseconds   next time milliseconds   close time milliseconds   restriction time milliseconds   projection time milliseconds   optimizer estimated row count . optimizer estimated cost . Source result set Table Scan ResultSet for FORMULA_TERM at read committed isolation level using instantaneous share row locking chosen by the optimizer Number of opens   Rows seen   Rows filtered   Fetch Size   constructor time milliseconds   open time milliseconds   next time milliseconds   close time milliseconds   next time in millisecondsrow   scan information Bit set of columns fetchedAll Number of columns fetched Number of pages visited Number of rows qualified Number of rows visited Scan typeheap start position null stop position null qualifiers None optimizer estimated row count . optimizer estimated cost .   
0;Failures in upgradeTests.Changes_ related to index cardinality statistics   ;The upgrade test fails when run with ... The reason is that a fix has been backported to ..  and older branches back to .  and this fix invalidates assumptions made in some of the tests in Changes_.Example of failureshttpsbuilds.apache.orgjobDerby.suites.AlltestReportAs a side note  Im wondering if we dont have good enough routines to make sure we run the upgrade tests with maintenance releases on older branches before releasing them. I dont know if we can avoid this situation in general  that would at least require very careful consideration on how to write the upgrade test.   
0;s of errors in nightly test run on weme after jacoco propertypriviledges checkin   ;s of errors in nightly test  all seem to be a null pointer while processing policy files during setup. problem is in jvm code  and it seems specific to the weme. jvm.The only change being tested in this run was  For instance) testAllorg.apache.derbyTesting.functionTests.tests.lang.NativeAuthenticationServiceTest)java.lang.NullPointerException at com.ibm.oti.util.DefaultPolicy.addGrantDefaultPolicy.java) at com.ibm.oti.util.DefaultPolicy.readPolicyDefaultPolicy.java) at com.ibm.oti.util.DefaultPolicy.getSystemPolicyDefaultPolicy.java) at com.ibm.oti.util.DefaultPolicy.getPermissionsImplDefaultPolicy.java) at com.ibm.oti.util.DefaultPolicy.runDefaultPolicy.java) at java.security.AccessController.doPrivilegedAccessController.java) at com.ibm.oti.util.DefaultPolicy.privateGetPermissionsDefaultPolicy.java) at com.ibm.oti.util.DefaultPolicy.getPermissionsDefaultPolicy.java) at java.security.Policy.getPermissionsPolicy.java) at java.security.ProtectionDomain.impliesProtectionDomain.java) at java.security.AccessController.checkPermissionAccessController.java) at java.lang.SecurityManager.checkPermissionSecurityManager.java) at java.lang.SecurityManager.checkPropertyAccessSecurityManager.java) at java.lang.System.getPropertySystem.java) at java.lang.System.getPropertySystem.java) at org.apache.derbyTesting.junit.BaseTestCase.runBaseTestCase.java) at java.security.AccessController.doPrivilegedAccessController.java) at org.apache.derbyTesting.junit.BaseTestCase.getSystemPropertyBaseTestCase.java) at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabaseDropDatabaseSetup.java) at org.apache.derbyTesting.junit.TestConfiguration.tearDownTestConfiguration.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)Here is link to all errorshttppeople.apache.org~myrnavlderby_test_resultsmainwindowstestlogweme.suites.All_diff.txthttppeople.apache.org~myrnavlderby_test_resultsmainwindowstestlogweme.derbyall_diff.txt   
0;Package javadoc publishedapijdbcindex.html out of date   ;Quote  Derby runs on any JSE .. or higher virtual machine and supports Java MECDCFoundation. Derbys database format is platform independent allowing databases to be copied to any machine type. I think we have dropped ..  so we could omit that  but also include JDK  Profile  here  since we do mention CDC.   
0;testPositionAgressiveorg.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClobBlobTest)j fails with  The handle is invalid. java.io.IOException.   ;There was  errorhttppeople.apache.org~myrnavlderby_test_resultsmainwindowstestlogibmsuites.All_diff.txt) testPositionAgressiveorg.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClobBlobTest)java.sql.SQLException Java exception The handle is invalid. java.io.IOException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUnknown Source) at org.apache.derby.impl.jdbc.Util.javaExceptionUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.clearLOBMappingUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.commitUnknown Source) at org.apache.derbyTesting.junit.BaseJDBCTestCase.commitBaseJDBCTestCase.java) at org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClobBlobTest.testPositionAgressiveBlobClobBlobTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by java.io.IOException The handle is invalid. at java.io.RandomAccessFile.closeNative Method) at java.io.RandomAccessFile.closeRandomAccessFile.java) at org.apache.derby.impl.jdbc.LOBFile.closeUnknown Source) at org.apache.derby.impl.jdbc.EncryptedLOBFile.closeUnknown Source) ...  more   
0;Upgrade tests fail on compact   ;The upgrade tests fail on the compact profile because they use data sources to create databases with old Derby versions  and to shut down the old engines after the test. The data sources in Derby versions before . require JNDI to be present. Since JNDI is not present on compact  the attempts to obtain data sources fail) ... Upgrade Phase CREATE java.lang.NoClassDefFoundError javaxnamingReferenceable at java.lang.ClassLoader.defineClassNative Method) at java.lang.ClassLoader.defineClassUnknown Source) at java.security.SecureClassLoader.defineClassUnknown Source) at java.net.URLClassLoader.defineClassUnknown Source) at java.net.URLClassLoader.accessUnknown Source) at java.net.URLClassLoader.runUnknown Source) at java.net.URLClassLoader.runUnknown Source) at java.security.AccessController.doPrivilegedNative Method) at java.net.URLClassLoader.findClassUnknown Source) at java.lang.ClassLoader.loadClassUnknown Source) at java.lang.ClassLoader.loadClassUnknown Source) at java.lang.ClassLoader.defineClassNative Method) at java.lang.ClassLoader.defineClassUnknown Source) at java.security.SecureClassLoader.defineClassUnknown Source) at java.net.URLClassLoader.defineClassUnknown Source) at java.net.URLClassLoader.accessUnknown Source) at java.net.URLClassLoader.runUnknown Source) at java.net.URLClassLoader.runUnknown Source) at java.security.AccessController.doPrivilegedNative Method) at java.net.URLClassLoader.findClassUnknown Source) at java.lang.ClassLoader.loadClassUnknown Source) at java.lang.ClassLoader.loadClassUnknown Source) at java.lang.ClassLoader.loadClassUnknown Source) at java.lang.Class.forNameNative Method) at java.lang.Class.forNameUnknown Source) at org.apache.derbyTesting.junit.JDBCDataSource.getDataSourceObjectJDBCDataSource.java) at org.apache.derbyTesting.junit.JDBCDataSource.getDataSourceJDBCDataSource.java) at org.apache.derbyTesting.junit.JDBCDataSource.getDataSourceJDBCDataSource.java) at org.apache.derbyTesting.junit.JDBCDataSource.getDataSourceJDBCDataSource.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.PhaseChanger.setUpPhaseChanger.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by java.lang.ClassNotFoundException javax.naming.Referenceable at java.net.URLClassLoader.runUnknown Source) at java.net.URLClassLoader.runUnknown Source) at java.security.AccessController.doPrivilegedNative Method) at java.net.URLClassLoader.findClassUnknown Source) at java.lang.ClassLoader.loadClassUnknown Source) at java.lang.ClassLoader.loadClassUnknown Source) ...  more   
1;Investigate why setting a login timeout causes NativeAuthenticationServiceTest to fail when run in a suite   ;See DERBY for the details of this problem.   
1;SSL Test and network server )  can hang if serverSocket.accept) fails for something other than an IOException   ;In starting a server with SSL as in SSLTest if serverSocket.accept fails for some reason other than an IOException it may just print the error to console and hang. In this case it wasjava.security.AccessControlException Access denied java.util.PropertyPermissionI saw this when debugging a java issue in serverSocket.accept but I think it could be simulated by adding an unwrapped System.getProperty of some sort before serverSocket.accept to force a permission error. e.g.  System.getPropertyderby.system.home  return serverSocket.accept  } catch IOException acceptE I have not verified that would work.   
0;Marshalling error in JDBCDriverTest as part of CompatibilityTest   ;Internal Oracle testing of RC  testing of . Tendril Request  Tendril Task  )                 Diff file derbyallderbynetclientmatsDerbyNetClientencodingTestsTestEnc.diff             Start TestEnc jdk.. DerbyNetClient derbynetclientmatsencodingTests   ***derbyTesting.encoding can only be used with jdk  skipping test End TestEnc jdk.. DerbyNetClient derbynetclientmatsencodingTests   ***            Diff file derbyallderbynetclientmatsDerbyNetClientderbynetclientmatsCompatibilityTest.diff             Start CompatibilityTest jdk.. DerbyNetClient derbynetclientmatsderbynetclientmats   *** addgt  .E.gt  There was  errorgt  ) testJDBCDriverorg.apache.derbyTesting.functionTests.tests.junitTests.compatibility.JDBCDriverTest)java.sql.SQLException Error marshalling or unmarshalling a user defined type org.apache.derbyTesting.functionTests.tests.lang.Price  local class incompatible stream classdesc serialVersionUID    local class serialVersionUID  gt  Caused by org.apache.derby.client.am.SqlException Error marshalling or unmarshalling a user defined type org.apache.derbyTesting.functionTests.tests.lang.Price  local class incompatible stream classdesc serialVersionUID    local class serialVersionUID  gt  ...  moregt  Caused by java.io.InvalidClassException org.apache.derbyTesting.functionTests.tests.lang.Price  local class incompatible stream classdesc serialVersionUID    local class serialVersionUID  gt  ...  moregt  FAILURESgt  Tests run   Failures   Errors Test Failed. End CompatibilityTest jdk.. DerbyNetClient derbynetclientmatsderbynetclientmats   ***    Looking at the Price class I see it doesnt have an explicit serialVersionUID.   
0;select from view with upper and in list throws a ClassCastException   ;the issue can be reproduced. create table myTbl name varchar)) . create table myTbl name varchar)) . create view myView name) as select t.name from myTbl t union all select t.name from myTbl t . select name from myView where uppername) in AA  BB)  failed with org.apache.derby.impl.sql.compile.SimpleStringOperatorNode incompatible with org.apache.derby.impl.sql.compile.ColumnReference java.lang.ClassCastExceptionIf the view is created as create myView name) as select t.name from myTbl t  the query worked fine.   
0;nightly regression test failure  intermittent error  testStatisticsCorrectnessorg.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest)junit.framework.AssertionFailedError   ;failure in nightly regression test  candidate . branch  ibmmay be related to daylight savings time change  there were similar resolved bugs that were marked fixed so reporting new one in case this is different.httppeople.apache.org~myrnavlderby_test_resultsv_windowstestlogibmsuites.All_diff.txtThere was  failure) testStatisticsCorrectnessorg.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest)junit.framework.AssertionFailedError at org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testStatisticsCorrectnessAutomaticIndexStatisticsTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)   
0;nightly regression test failure testMultipleLastKeyWaitsInMaxScanorg.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest)junit.framework.AssertionFailedError Column value mismatch @ column     ;httppeople.apache.org~myrnavlderby_test_resultsv_windowstestlogibmsuites.All_diff.txt) testMultipleLastKeyWaitsInMaxScanorg.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest)junit.framework.AssertionFailedError Column value mismatch @ column   row  Expected gt lt  Found gt lt  at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinionJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertSingleValueResultSetJDBC.java) at org.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest.testMultipleLastKeyWaitsInMaxScanIndexSplitDeadlockTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)FAILURESTests run   Failures   Errors    
0;Add automatic cleanup of connections opened with openDefaultConnection)   ;In JDBCBaseTestCase  the default connection is automatically rolled back and closed but connections opened with openDefaultConnection) can stay open and hold locks and affect other tests if the database can not be cleaned because locks are held. It would be good to clean up all the connections in tearDown).   
0;Derby does not report warnings raised by table functions   ;If a table function raises warnings as the user loops through ResultSet.next)  those warnings are silently thrown away by Derby. Derby should return those warnings when the user calls ResultSet.getWarnings).   
1;Simplify code that handles LOB files   ;When investigating DERBY  I found some code that could be simplifiedcleaned up. Will make those changes here.   
0;Interrupt restarts clock for login timeout   ;If a login takes time  and the thread thats blocked in Driver.timeLogin) is interrupted  it will call Future.get) again with the same timeout value. This means that interrupting a getConnection) call will not make it terminate faster  as one might expect. Instead  it restarts the timeout clock and makes it terminate later than if it had not been interrupted.   
0;Clean up registered format ids   ;RegisteredFormatIds and StoredFormatIds contain identifiers for classes that implement the Formatable interfaces and are used when serializingdeserializing instances of those classes.Many of the classes referenced there do however not implement Formatable. The references to them could be removed. Ive seen that many classes in the impl.sql.execute.rts package are there  none of which implement Formatable. There may be more.   
0;AutoloadTest does not proprogate original jvm D flags to spawned JVM  leading to LAB regression test failures   ;IBM lab nightly regression testing is seeing numerious intermittent errors while running theAutoloadTest. This regression testing often runs multiple runs of Suites.all on the same machine atthe same time and uses the Dderby.tests.basePort option to the tests to insure networkserver is created on different ports and dont intefere.I think the following code in this test that spawn a process is not going pass that port info onto the networkserver startup and then lead to problems ** Run @code AutoloadTest} in a separate JVM. * public void spawnProcess throws Exception  String[] cmd   junit.textui.TestRunner  spawnedTestClass.getName }  SpawnedProcess proc  new SpawnedProcessexecJavaCmdcmd  spawnedTestClass.getName  if proc.complete    failproc.getFailMessageTest process failed  } }   
0;Cleanup suspect coding practices in org.apache.derby.iapi.error package   ;Similar to DERBY.   
0;Query against view  with where name LIKE Col ESCAPE   failed   ;The error can be reproduced ) create table mytbl name clobK)) ) create table mytbl name clobK)) ) create view myview name) as select t.name from mytbl t union all select t.name from mytbl t ) select name from myview where name LIKE Col ESCAPE  ) failed with error message ERROR  Comparisons between CLOB UCS_BASIC) and CHAR UCS_BASIC) are not supported. Types must be comparable. String types must also have matching collation. If collation does not match  a possible solution is to cast operands to force them to the default collation e.g. SELECT tablename FROM sys.systables WHERE CASTtablename AS VARCHAR))  T) at org.apache.derby.iapi.error.StandardException.newExceptionUnknown Source) at org.apache.derby.impl.sql.compile.BinaryComparisonOperatorNode.bindComparisonOperatorUnknown Source) at org.apache.derby.impl.sql.compile.PredicateList.pushExpressionsIntoSelectUnknown Source) at org.apache.derby.impl.sql.compile.UnionNode.pushExpressionsUnknown Source) at org.apache.derby.impl.sql.compile.UnionNode.pushExpressionsUnknown Source) at org.apache.derby.impl.sql.compile.ProjectRestrictNode.pushExpressionsUnknown Source) at org.apache.derby.impl.sql.compile.FromList.pushPredicatesUnknown Source) at org.apache.derby.impl.sql.compile.SelectNode.preprocessUnknown Source) at org.apache.derby.impl.sql.compile.DMLStatementNode.optimizeStatementUnknown Source) at org.apache.derby.impl.sql.compile.CursorNode.optimizeStatementUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementUnknown Source) ...  more   
0;Cleanup suspect coding practices in org.apache.derby.iapi.services.io package   ;Similar to DERBY.   
0;Cleanup suspect coding practices in the org.apache.derby.impl.tools.planexporter package   ;Similar to DERBY.   
0;Cleanup suspect coding practices in the org.apache.derby.iapi.types package   ;Similar to DERBY.   
0;Cleanup suspect coding practices in the org.apache.derby.iapi.sql.dictionary package   ;Similar to DERBY.   
0;Cleanup suspect coding practices in misc Derby packages   ;Similar to DERBY.   
0;Make Optimizer trace logic pluggable.   ;Right now the trace logic in the optimizer is hardcoded to produce a stream of diagnostics. It would be good to be able to plug alternative trace logic into the optimizer. This would make the following possible) Plug in trace logic which produces formats which are easier to study and which can be analyzed mechanically. E.g.  xml formatted output.) Plug in trace logic which can be used during unit testing to verify that the optimizer has picked the right plan. Over time this might make it easier to migrate canonbased tests to assertionbased tests.   
0;NullPointerException when calling a procedure with subquery as argument   ;ij version .ijgt  connect jdbcderbymemorydb createtrue ijgt  call syscs_util.syscs_set_database_propertyabc  values def)) ERROR XJ Java exception  java.lang.NullPointerException. errorCode  )The query should either compile and execute just fine  or it should raise a proper exception. It should not fail with a NullPointerException.   
1;Issues with latest JDK  EA build because of missing SQLPermission   ;With the latest EA build of JDK  build ..eab)  I see many failures in suites.All. For example) testStartNetworkServerFalseorg.apache.derbyTesting.functionTests.tests.derbynet.DerbyNetAutoStartTest)java.security.AccessControlException access denied java.sql.SQLPermission deregisterDriver) at java.security.AccessControlContext.checkPermissionAccessControlContext.java) at java.security.AccessController.checkPermissionAccessController.java) at java.lang.SecurityManager.checkPermissionSecurityManager.java) at java.sql.DriverManager.deregisterDriverDriverManager.java) at org.apache.derby.jdbc.AutoloadedDriver.unregisterDriverModuleAutoloadedDriver.java) at org.apache.derby.jdbc.Driver.stopDriver.java) at org.apache.derby.impl.services.monitor.TopService.stopTopService.java) at org.apache.derby.impl.services.monitor.TopService.shutdownTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.shutdownBaseMonitor.java) at org.apache.derby.impl.services.monitor.FileMonitor.shutdownFileMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.shutdownBaseMonitor.java) at org.apache.derby.impl.services.monitor.FileMonitor.shutdownFileMonitor.java) at org.apache.derby.jdbc.InternalDriver.connectInternalDriver.java) at org.apache.derby.jdbc.Driver.connectDriver.java) at org.apache.derby.jdbc.AutoloadedDriver.connectAutoloadedDriver.java) at java.sql.DriverManager.getConnectionDriverManager.java) at java.sql.DriverManager.getConnectionDriverManager.java) at org.apache.derbyTesting.junit.DriverManagerConnector.getConnectionByAttributesDriverManagerConnector.java) at org.apache.derbyTesting.junit.DriverManagerConnector.shutEngineDriverManagerConnector.java) at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngineTestConfiguration.java) at org.apache.derbyTesting.functionTests.tests.derbynet.DerbyNetAutoStartTest.setUpDerbyNetAutoStartTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java)Whats new in EA build  is that DriverManager.deregisterDriver) now requires an SQLPermission when running under a security manager. Most of suites.All runs under a security manager  and Derbys engine shutdown code calls deregisterDriver)  so this problem probably affects all tests that shut down the engine.   
1;SecureServerTest assertion error on contents of stdout from subprocess   ;   
0;Use the JVMs cache of Number instances in ReuseFactory   ;ReuseFactory has a cache of Byte  Short  Integer and Long instances to avoid excessive allocation of such instances.As of Java   the JVM has a cache of its own  available through static valueOf) methods in these classes.The JVMs cache is guaranteed to have at least all values in the range     . ReuseFactory currently caches Integer instances in the range      plus a few special values  and Byte  Short and Long instances in the range     .If we change ReuseFactory so that it uses the JVMs cache  the number of cache misses will be lower  and the code will become shorter.   
0;Remove unnecessary checks for UnsupportedEncodingException in the client   ;Many methods in the client need handling of UnsupportedEncodingException  typically because they call String methods that take the name of the encoding as argument. Most of these methods have overloads that take a Charset instead of a String to describe the encoding  and those methods dont throw UnsupportedEncodingException as the encoding is known to be supported once we have a Charset instance for it. We should use the methods that take a Charset and simplify the exception handling.   
0;XMLBindingTest fails on latest JDK  EA   ;java.sql.SQLDataException Invalid XML Document External DTD Failed to read external DTD personal.dtd  because file access is not allowed. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.seeNextExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.EmbedConnection.handleExceptionEmbedConnection.java) at org.apache.derby.impl.jdbc.ConnectionChild.handleExceptionConnectionChild.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatementEmbedPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeEmbedPreparedStatement.java) at org.apache.derbyTesting.junit.XML.insertDocWithDTDXML.java) at org.apache.derbyTesting.functionTests.tests.lang.XMLBindingTestXBindTestSetup.setUpXMLBindingTest.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)Caused by java.sql.SQLException Invalid XML Document External DTD Failed to read external DTD personal.dtd  because file access is not allowed. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java)Caused by java.sql.SQLException Java exception External DTD Failed to read external DTD personal.dtd  because file access is not allowed. org.xml.sax.SAXException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDASQLExceptionFactory.java) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLExceptionSQLExceptionFactory.java) at org.apache.derby.impl.jdbc.Util.newEmbedSQLExceptionUtil.java) at org.apache.derby.impl.jdbc.Util.javaExceptionUtil.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLExceptionTransactionResourceImpl.java)Caused by org.xml.sax.SAXException External DTD Failed to read external DTD personal.dtd  because file access is not allowed.org.xml.sax.SAXParseException  lineNumber   columnNumber   External DTD Failed to read external DTD personal.dtd  because file access is not allowed. at org.apache.derby.iapi.types.SqlXmlUtilXMLErrorHandler.fatalErrorSqlXmlUtil.java) at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalErrorErrorHandlerWrapper.java) at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportErrorXMLErrorReporter.java) at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportErrorXMLErrorReporter.java) at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalErrorXMLScanner.java) at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImplDTDDriver.dispatchXMLDocumentScannerImpl.java) at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImplDTDDriver.nextXMLDocumentScannerImpl.java) at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImplPrologDriver.nextXMLDocumentScannerImpl.java) at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.nextXMLDocumentScannerImpl.java) at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.nextXMLNSDocumentScannerImpl.java) at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocumentXMLDocumentFragmentScannerImpl.java) at com.sun.org.apache.xerces.internal.parsers.XMLConfiguration.parseXMLConfiguration.java) at com.sun.org.apache.xerces.internal.parsers.XMLConfiguration.parseXMLConfiguration.java) at com.sun.org.apache.xerces.internal.parsers.XMLParser.parseXMLParser.java) at com.sun.org.apache.xerces.internal.parsers.DOMParser.parseDOMParser.java) at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parseDocumentBuilderImpl.java) at org.apache.derby.iapi.types.SqlXmlUtil.runSqlXmlUtil.java) at org.apache.derby.iapi.types.SqlXmlUtil.runSqlXmlUtil.java) at java.security.AccessController.doPrivilegedNative Method) at org.apache.derby.iapi.types.SqlXmlUtil.serializeToStringSqlXmlUtil.java) at org.apache.derby.iapi.types.XML.XMLParseXML.java) at org.apache.derby.exe.acbfccaadxexeffxffxcfc.eUnknown Source) at org.apache.derby.impl.services.reflect.DirectCall.invokeReflectGeneratedClass.java) at org.apache.derby.impl.sql.execute.RowResultSet.getNextRowCoreRowResultSet.java) at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCoreNormalizeResultSet.java) at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCoreDMLWriteResultSet.java) at org.apache.derby.impl.sql.execute.InsertResultSet.openInsertResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtGenericPreparedStatement.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java)Caused by org.xml.sax.SAXParseException  lineNumber   columnNumber   External DTD Failed to read external DTD personal.dtd  because file access is not allowed. at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseExceptionErrorHandlerWrapper.java) at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalErrorErrorHandlerWrapper.java)   
0;updatelocksJDBC test failing in nightly regression tests   ;updatelocksJDBC test failed intermittently in nightly regression tests  trunk  ibmhttppeople.apache.org~myrnavlderby_test_resultsmainwindowstestlogibmderbyall_diff.txt                 Diff file derbyallencryptionAllstorematsstorematsupdatelocksJDBC.diff             Start updatelocksJDBC jdk.. storematsstoremats   ***dlt  APP |UserTransaction|ROW | |U |A | ) |GRANT|ACTIVE agt  APP |UserTransaction|ROW | |U |A | ) |GRANT|ACTIVE dlt  APP |UserTransaction|ROW | |U |A | ) |GRANT|ACTIVE agt  APP |UserTransaction|ROW | |U |A | ) |GRANT|ACTIVE dlt  APP |UserTransaction|ROW | |U |A | ) |GRANT|ACTIVE agt  APP |UserTransaction|ROW | |U |A | ) |GRANT|ACTIVE Test Failed. End updatelocksJDBC jdk.. storematsstoremats   ***   
0;Add ability to print a Derby execution ResultSet as xml.   ;Add a method for printing an org.apache.derby.iapi.sql.ResultSet as xml. The idea is to get a quick snapshot of a plan shape without all of the overhead of PlanExporter and runtimestatistics. This method could be used by our tests to verify plan shapes.   
0;Add ability to compactly specify a complete query plan in an optimizer override.   ;It would be nice to be able to override the optimizers choice and specify a complete query plan using the compact summary syntax output by XMLOptTrace. Given how the optimizer handles a statement  this would require binding a query plan at the query block level. Two obvious candidates for such a feature are) Extend the use of DERBYPROPERTIES in the comments of a query.) Add an extra clause to query blocks. The clause would have to be a clearly marked Derby extension.) might look like this here we add a new fullQueryPlan property)select tablename from sys.systables t  sys.syscolumns c  sys.sysaliases awhere t.tablename  c.columnname and c.columnname  a.alias  DERBYPROPERTIES fullQueryPlan  SYSCOLUMNS_HEAP  SYSALIASES_INDEX)  SYSTABLES_INDEXunion allselect tablename from sys.systables t  sys.syscolumns c  sys.sysaliases a  sys.syssequences swhere t.tablename  c.columnname and c.columnname  a.alias and a.alias  s.sequencename  DERBYPROPERTIES fullQueryPlan  SYSCOLUMNS_HEAP  SYSTABLES_INDEX)  SYSALIASES_INDEX)  SYSSEQUENCES_INDEX ) might look like this here we add a new using derby join order clause)select tablename from sys.systables t  sys.syscolumns c  sys.sysaliases awhere t.tablename  c.columnname and c.columnname  a.aliasusing derby join order SYSCOLUMNS_HEAP  SYSALIASES_INDEX)  SYSTABLES_INDEXunion allselect tablename from sys.systables t  sys.syscolumns c  sys.sysaliases a  sys.syssequences swhere t.tablename  c.columnname and c.columnname  a.alias and a.alias  s.sequencenameusing derby join order SYSCOLUMNS_HEAP  SYSTABLES_INDEX)  SYSALIASES_INDEX)  SYSSEQUENCES_INDEX Heres a comparison of these approaches) Portability the same query text can be used against different RDBMSes. Parsing of DERBYPROPERTIES happens outside the grammer.) Parsing happens in the parser. Not portable.I slightly prefer approach ). If I pursue that approach  I would like to see if I can move the parsing into the parser.I am interested in other opinions about how to address this feature. Thanks.   
0;NullPointerException when using more than one parameter in COALESCE   ;Calls to COALESCE fail with NullPointerExceptions if there are multiple ? parametersij version .ijgt  connect jdbcderbymemorydb createtrue ijgt  prepare ps as values coalesce? ? ) ERROR XJ Java exception  java.lang.NullPointerException. errorCode  )java.lang.NullPointerException at org.apache.derby.impl.sql.compile.ParameterNode.generateExpressionUnknown Source) at org.apache.derby.impl.sql.compile.CoalesceFunctionNode.generateExpressionUnknown Source) at org.apache.derby.impl.sql.compile.ResultColumn.generateExpressionUnknown Source) at org.apache.derby.impl.sql.compile.ResultColumnList.generateCoreUnknown Source) at org.apache.derby.impl.sql.compile.ResultColumnList.generateUnknown Source) at org.apache.derby.impl.sql.compile.RowResultSetNode.generateUnknown Source) at org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode.generateUnknown Source) at org.apache.derby.impl.sql.compile.CursorNode.generateUnknown Source) at org.apache.derby.impl.sql.compile.StatementNode.generateUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinionUnknown Source) at org.apache.derby.impl.sql.GenericStatement.prepareUnknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.impl.jdbc.EmbedPreparedStatement.lt initgt Unknown Source) at org.apache.derby.jdbc.Driver.newEmbedPreparedStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatementUnknown Source) at org.apache.derby.impl.tools.ij.ij.PrepareStatementUnknown Source) at org.apache.derby.impl.tools.ij.ij.ijStatementUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.runScriptGutsUnknown Source) at org.apache.derby.impl.tools.ij.utilMain.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.goUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainCoreUnknown Source) at org.apache.derby.impl.tools.ij.Main.mainUnknown Source) at org.apache.derby.tools.ij.mainUnknown Source)   
0;Use Arrays.copyOf) in FormatableArrayHolder.getArray)   ;FormatableArrayHolder.getArray) creates an array of the correct type using reflection and copies it manually. Java  introduced a copyOf) method in java.util.Arrays that could do all of this automatically. Now that Java  is the minimum level on trunk  we could take advantage of the library method and simplify the code.   
0;Allow tests to show detailed error when spawning new process fails   ;In recent versions of Java  Runtime.exec will hide the underlying exception unless the code base is granted read permission on the executable file.ExampleThese two failures probably have the same causehttpdownload.java.netjavadesktopderbyjavadbreportjavadbtask.htmlhttpdownload.java.netjavadesktopderbyjavadbreportjavadbtask.htmlThe former  running on an older JVM  shows the real causejava.io.IOException Cannot run program localhometendril.workinstallsunjdkufcsbinbjdk_jdk.._jrebinjava error  Not enough spaceCaused by java.io.IOException error  Not enough spaceThe latter  running on a more recent JVM  hides the real failure behind an AccessControlExceptionjava.io.IOException Cannot run program localhometendril.workinstallsunjdkeabinbjdkjdk..jrebinjavaCaused by java.security.AccessControlException access denied java.io.FilePermission localhometendril.workinstallsunjdkeabinbjdkjdk..jrebinjava readWe should consider changing the following grant in derby_tests.policy to include read in order to make it easier to see why a test is failing  Tests need to be able to exec a java program. permission java.io.FilePermission java.home}}  execute    
0;Simplify PropertyUtil using Properties.stringPropertyNames)   ;PropertyUtil should use Properties.stringPropertyNames) new method in Java ) instead of Properties.propertyNames) since a Setlt Stringgt  view of the property names is easier to work with than an Enumerationlt ?gt . The Setlt Stringgt  view can be used with foreach loops and many of the helper methods in the standard library.   
0;Intermittent failures in XplainStatisticsTest.testSimpleXplainOnly   ;XplainStatisticsTest.testSimpleXplainOnly fails intermittently.Exampleshttpdownload.java.netjavadesktopderbyjavadbreportjavadbtask.html junit.framework.AssertionFailedError Column value mismatch @ column   row  Expected gt lt  Found gt lt  at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinionJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertSingleValueResultSetJDBC.java) at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.testSimpleXplainOnlyXplainStatisticsTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)httpdownload.java.netjavadesktopderbyjavadbreportjavadbtask.html junit.framework.AssertionFailedError Column value mismatch @ column   row  Expected gt lt  Found gt lt  at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinionJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertSingleValueResultSetJDBC.java) at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.testSimpleXplainOnlyXplainStatisticsTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)   
0;XplainStatisticsTest.testSimpleQuery BEGIN_COMP_TIME unexpectedly NULL   ;Seen on two platforms in nightly testing of trunk revision httpdownload.java.netjavadesktopderbyrequest_javadbtask.htmlhttpdownload.java.netjavadesktopderbyrequest_javadbtask.htmljunit.framework.AssertionFailedError BEGIN_COMP_TIME unexpectedly NULL at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.getNonNullTimestampXplainStatisticsTest.java) at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.verifySensibleStatementTimingsXplainStatisticsTest.java) at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.testSimpleQueryXplainStatisticsTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)   
0;Log a page dump to derby.log if ERROR nospc nospc.U  is returned to the user   ;ERROR nospc nospc.U should only be an internal error that is caught and handled. If returned to the user  it is likely a bug. It would be useful if this occurs to have a page dump printed to derby.log. Care should be taken to only do this if the error is returned to the user and not for the internal variety.   
0;Fix incorrect @throws and @exception tags in javadoc   ;Many javadoc comments have @throws or @exception tags that either misspell the name of the exception class or name an exception that is not actually thrown from the method. We should fix those references.   
0;DatabaseMetaData.getJDBCMinorVersion) should return  now that weve implemented JDBC .   ;Now that the work on DERBY is done  DatabaseMetaData.getJDBCMinorVersion) should return  rather than . The following script shows that were still returning connect jdbcderbymemorydb createtrue call syscs_util.syscs_register_tool databaseMetaData  true ) values getJDBCMajorVersion) values getJDBCMinorVersion) call syscs_util.syscs_register_tool databaseMetaData  false )    
0;Simplify StringBuffer use  as they are mutable   ;code cleanup where code reasssigns StringBuffers for no reason. remove for easier code reading.   
0;Remove Profile attribute from jar file manifests   ;DERBY added a Profile attribute to the jar file manifests. Starting with JDK  b  the attribute has no effect and can be removed.See here httpbugs.sun.combugdatabaseview_bug.do?bug_id   
0;failure in testConstraintDropsorg.apache.derbyTesting.functionTests.lang.ConglomerateSharingTest)junit.framework.AssertionFailedError Error  should have been caused by indexconstraint...   ;Dont think this failure has been reported before.The url for failure is httppeople.apache.org~myrnavlderby_test_resultsv_windowstestlogweme.suites.All_diff.txt) testConstraintDropsorg.apache.derbyTesting.functionTests.tests.lang.ConglomerateSharingTest)junit.framework.AssertionFailedError Error  should have been caused by indexconstraint DROPC_UIX but DROPC_UIX did not appear in the following error message The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by DROPC_UC defined on DROPC_T. at org.apache.derbyTesting.functionTests.tests.lang.ConglomerateSharingTest.checkStatementErrorConglomerateSharingTest.java) at org.apache.derbyTesting.functionTests.tests.lang.ConglomerateSharingTest.testConstraintDropsConglomerateSharingTest.java) at java.lang.reflect.AccessibleObject.invokeVAccessibleObject.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)   
1;java.security.AccessControlException in in.LocalizedDisplayScriptTest   ;Seeing more test failures because of an intentional security change in TimeZone.setDefault). Therefore need to wrap Timezone.setDefault in a priv block in the test. ) LocalizedDisplayorg.apache.derbyTesting.functionTests.tests.in.LocalizedDisplayScriptTest)java.security.AccessControlException Access denied java.util.PropertyPermission user.timezone write) at java.security.AccessController.throwACEAccessController.java) at java.security.AccessController.checkPermissionAccessController.java) at java.lang.SecurityManager.checkPermissionSecurityManager.java) at java.util.TimeZone.hasPermissionTimeZone.java) at java.util.TimeZone.setDefaultTimeZone.java) at org.apache.derbyTesting.functionTests.tests.in.LocalizedDisplayScriptTest.setUpLocalizedDisplayScriptTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)and) LocalizedDisplayorg.apache.derbyTesting.functionTests.tests.in.LocalizedDisplayScriptTest)java.security.AccessControlException Access denied java.util.PropertyPermission user.timezone write) at java.security.AccessController.throwACEAccessController.java) at java.security.AccessController.checkPermissionAccessController.java) at java.lang.SecurityManager.checkPermissionSecurityManager.java) at java.util.TimeZone.hasPermissionTimeZone.java) at java.util.TimeZone.setDefaultTimeZone.java) at org.apache.derbyTesting.functionTests.tests.in.LocalizedDisplayScriptTest.setUpLocalizedDisplayScriptTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)   
0;CREATE TRIGGER doesnt detect all illegal references to SESSION schema   ;The reference manuals section on the DECLARE GLOBAL TEMPORARY TABLE statement says Temporary tables cannot be referenced in a triggeredSQLstatementIt detects most cases and reportsERROR XCL The requested function can not reference tables in SESSION schema.However  some references are not detected if they are in a subquery. For exampleij version .ijgt  connect jdbcderbymemorydb createtrue ijgt  declare global temporary table temptablex int) not logged  rows insertedupdateddeletedijgt  create table tx int)  rows insertedupdateddeletedijgt  create table tb boolean)  rows insertedupdateddeletedijgt  create trigger tr after insert on t insert into t values existsselect * from session.temptable)  rows insertedupdateddeletedThis CREATE TRIGGER statement should have raised an error.   
0;Errors in jdbc.LobStreamTest if derbyclient.jar is first in the classpath   ;I see the following errors in jdbc.LobStreamTest if derbyclient.jar is before derby.jar on trunk . Rev There were  errors) testWriteWithInvalidParameterValuesorg.apache.derbyTesting.functionTests.tests.jdbc.LobStreamTest)java.lang.NoClassDefFoundError orgapachederbyiapierrorExceptionUtil at org.apache.derby.impl.jdbc.LOBStreamControl.writeLOBStreamControl.java) at org.apache.derby.impl.jdbc.LOBOutputStream.writeLOBOutputStream.java) at org.apache.derbyTesting.functionTests.tests.jdbc.LobStreamTest.testWriteWithInvalidParameterValuesLobStreamTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)) testReadWithInvalidParameterValuesorg.apache.derbyTesting.functionTests.tests.jdbc.LobStreamTest)java.lang.NoClassDefFoundError orgapachederbyiapierrorExceptionUtil at org.apache.derby.impl.jdbc.LOBInputStream.readLOBInputStream.java) at org.apache.derbyTesting.functionTests.tests.jdbc.LobStreamTest.testReadWithInvalidParameterValuesLobStreamTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)There were  failures) testWriteWithInvalidParameterValuesorg.apache.derbyTesting.functionTests.tests.jdbc.LobStreamTest)junit.framework.AssertionFailedError Expected IndexOutOfBoundException at org.apache.derbyTesting.functionTests.tests.jdbc.LobStreamTest.testWriteWithInvalidParameterValuesLobStreamTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java)) testReadWithInvalidParameterValuesorg.apache.derbyTesting.functionTests.tests.jdbc.LobStreamTest)junit.framework.AssertionFailedError Expected IndexOutOfBoundException at org.apache.derbyTesting.functionTests.tests.jdbc.LobStreamTest.testReadWithInvalidParameterValuesLobStreamTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java)I notice derbyclient.jar contains Mon Oct   PDT  orgapachederbyiapierrorExceptionUtil.classMon Oct   PDT  orgapachederbyiapierrorExceptionUtil.classwhich I think is only supposed to be in derby.jar   
0;NullPointerException in DirFile   ;We got a NullPointerException trying to start a Derby database in embedded mode  the stacktrace indicated it happened in org.apache.derby.impl.io.DirFile.deleteAll)  that method got called from org.apache.derby.impl.io.BaseStorageFactory.createTempDir).After investigating  it appears that the deleteAll) method calls super.list)  which according to the java.io.File specifications  can return null. But the deleteAll) method doesnt handle that case gracefully.   
0;ClassCastException when launching derby from windows subst drive   ;When launching derby bundled with glassfish on a substed drive derby fails to startup and logs the following into the derby.logFri Nov   CET   Sicherheitsmanager mit einfacher ServerSicherheitsrichtlinie installiert.java.lang.reflect.InvocationTargetException at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeUnknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invokeUnknown Source) at java.lang.reflect.Method.invokeUnknown Source) at com.sun.enterprise.admin.cli.optional.DerbyControl.invokeNetworkServerControlDerbyControl.java) at com.sun.enterprise.admin.cli.optional.DerbyControl.mainDerbyControl.java)Caused by java.lang.ExceptionInInitializerError at java.lang.Class.forNameNative Method) at java.lang.Class.forNameUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.startNetworkServerUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.blockingStartUnknown Source) at org.apache.derby.impl.drda.NetworkServerControlImpl.executeWorkUnknown Source) at org.apache.derby.drda.NetworkServerControl.mainUnknown Source) ...  moreCaused by java.lang.ClassCastException java.nio.file.FileSystemException cannot be cast to java.lang.RuntimeException at org.apache.derby.iapi.services.io.FileUtil.limitAccessToOwnerViaACLsUnknown Source) at org.apache.derby.iapi.services.io.FileUtil.limitAccessToOwnerUnknown Source) at org.apache.derby.impl.services.stream.SingleStream.PBmakeFileHPWUnknown Source) at org.apache.derby.impl.services.stream.SingleStream.runUnknown Source) at java.security.AccessController.doPrivilegedNative Method) at org.apache.derby.impl.services.stream.SingleStream.makeFileHPWUnknown Source) at org.apache.derby.impl.services.stream.SingleStream.createDefaultStreamUnknown Source) at org.apache.derby.impl.services.stream.SingleStream.makeStreamUnknown Source) at org.apache.derby.impl.services.stream.SingleStream.bootUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.bootUnknown Source) at org.apache.derby.impl.services.monitor.TopService.bootModuleUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleUnknown Source) at org.apache.derby.iapi.services.monitor.Monitor.startSystemModuleUnknown Source) at org.apache.derby.impl.services.monitor.BaseMonitor.runWithStateUnknown Source) at org.apache.derby.impl.services.monitor.FileMonitor.lt initgt Unknown Source) at org.apache.derby.iapi.services.monitor.Monitor.startMonitorUnknown Source) at org.apache.derby.iapi.jdbc.JDBCBoot.bootUnknown Source) at org.apache.derby.jdbc.EmbeddedDriver.bootUnknown Source) at org.apache.derby.jdbc.EmbeddedDriver.lt clinitgt Unknown Source) ...  moreDerby was started via the glassfish command asadmin startdatabaseThe asadmin command only fails if it is launched from a substed windows drive. The substed drive was created with the following command subst d cdWhen derby is started from drive C everything is fine.   
1;Minimal select privilege should be checked in subqueries   ;DERBY added checks for minimal select privilege in cases where a SELECT query didnt access any actual column in the base table  such as SELECT COUNT FROM USER.T and SELECT  FROM USER.T. That privilege checking is only done for toplevel SELECT statements. It should also be done for subqueries.Examples of queries where Derby does not currently check for minimal select privileges on the accessed tables performed as USER  which has no privileges on any of USERs tables)SELECT * FROM SELECT COUNT FROM USER.T) SSELECT  FROM USER.T UNION SELECT  FROM USER.TINSERT INTO USER.T SELECT  FROM USER.TI believe that the above statements should have failed  but currently they succeed.   
0;Incorrect handling when using an UPDATE to SET an identity column to DEFAULT   ;Derby violates the SQL Standard when an UPDATE statement SETs an identity column to the value DEFAULT. Derby does the right thing for INSERTs  however.For INSERTs  the  Standard defines the meaning of DEFAULT in part   section . Effect of inserting tables into base tables  general rule . For INSERTs  the DEFAULT value is the next value of the sequence generator which defines the identity column.For UPDATEs  the  Standard defines the meaning of DEFAULT in part   section . Effect of replacing rows in base tables  general rule . For UPDATEs  the DEFAULT value is also the next value of the sequence generator which defines the identity column.Note also that the  Standard says that a GENERATED ALWAYS identity column can be SET to DEFAULT. Furthermore  that is the only explicit value accepted. See the  Standard  part   section . set clause list  syntax rule If lt set clausegt  SC specifies an lt object columngt  that references a column of which some underlying column is either a generated column or an identity column whose descriptor indicates that values are always generated  then the lt update sourcegt  specified in SC shall consist of a lt default specificationgt .}What Derby actually does for UPDATEs is the following If the column was declared GENERATED ALWAYS  then Derby raises a compiletime error saying that the value of an identity column cant be overridden. If the column was declared GENERATED BY DEFAULT  then Derby raises an execution timeerror when trying to stuff a null into the column.Correcting this bug would result in backwardly incompatible behavior. However  I think that the incompatibility is minor it would mean the successful run of statements which previously raised errors.I tripped across this problem while implementing the UPDATE action of the MERGE statement DERBY. If we decide to fix this bug  we will want to make sure that the UPDATE actions of MERGE statements also correctly handle DEFAULT values for identity columns.The following script shows this problemconnect jdbcderbymemorydb createtrue create table t a int generated always as identity  b int  create table t a int generated by default as identity  b int  insert into t a  b  values  default    insert into t a  b  values  default    update t set a  default update t set a  default select * from t select * from t    
1;Incorrect privileges may be required for INSERT and DELETE statements.   ;This issue is a place to address problems with INSERT and DELETE statements similar to the problems affecting UPDATE statements recorded on DERBY. In particular  DERBY and DERBY list some of the problems with INSERT statements.   
0;Connections opened by ForeignTableVTI never get released   ;I noticed during a run of suites.All that one database instance never got garbage collected  even after it had been shut down. It turned out it could not get garbage collected because it was still referenced from the static HashMap _connections in ForeignTableVTI. Looking closer at ForeignTableVTI  it looks as if it only calls put) and get) on the HashMap  never remove)  so its memory footprint will keep increasing as it is used.It would be good to have some way preferably automatic) of releasing the resources held by ForeignTableVTI when they are no longer needed.   
0;ArrayIndexOutOfBoundsException when calling function from trigger   ;Im having problems will calling functions from within a trigger.The problem seems to be with the outer function call FLOOR) in this case  but it also happens with other functions). It works fine in the SELECT statement  but when used in the trigger it throws a ArrayIndexOutOfBoundsException.Remove the FLOOR) part from the trigger and it works fine. create source table and some dataCREATE TABLE foo name VARCHAR)  val DOUBLE) INSERT INTO foo name  val) VALUES A  )  A  )  B  )  C  )  calling the function works fine hereSELECT name  FLOORAVGLOGval)))  COUNT*)FROM fooGROUP BY name  create target table for triggerCREATE TABLE summary name VARCHAR)  aver DOUBLE  size INT)  create the triggerCREATE TRIGGER trg_foo AFTER INSERT ON fooREFERENCING NEW TABLE AS changed FOR EACH STATEMENT MODE DBSQLINSERT INTO summary name  aver  size)SELECT name  FLOORAVGLOGval)))  COUNT*)FROM changedGROUP BY name  insert rows to cause trigger to fireINSERT INTO foo name  val) VALUES A  )  A  )  B  )  C  ) SELECT * FROM foo SELECT * FROM summary    
0;Infinite loop in NetworkServerControlImpl.ensureDataInBuffer   ;NetworkServerControlImpl.ensureDataInBuffer missing check for return  EOF from clientIs.read. When read returns  thread consumes  CPU. Method NetworkServerControlImpl.fillReplyBuffer correctly throw exception.Fix add two lines private void ensureDataInBufferint minimumBytesNeeded throws Exception   make sure the buffer is large enough while replyBufferCount  replyBufferPos lt  minimumBytesNeeded  try  int bytesRead  clientIs.readreplyBuffer  replyBufferCount  replyBuffer.length  replyBufferCount  if bytesRead   consolePropertyMessageDRDA_InvalidReplyTooShort.S  true  replyBufferCount  bytesRead  } catch IOException e  clientSocketErrore  } } }StackTrace java.lang.Thread.State RUNNABLE at java.net.SocketInputStream.readUnknown Source at org.apache.derby.impl.drda.NetworkServerControlImpl.ensureDataInBufferUnknown Source at org.apache.derby.impl.drda.NetworkServerControlImpl.readLDStringUnknown Source at org.apache.derby.impl.drda.NetworkServerControlImpl.readStringReplyUnknown Source at org.apache.derby.impl.drda.NetworkServerControlImpl.runtimeInfoUnknown Source at org.apache.derby.drda.NetworkServerControl.getRuntimeInfoUnknown Source at com.crcdata.dbadmin.server.DerbyEngine.getRuntimeInfoDerbyEngine.java at com.crcdata.dbadmin.server.DerbyEngineDerbyServerMonitorTask.runDerbyEngine.java at java.util.concurrent.ExecutorsRunnableAdapter.callUnknown Source at java.util.concurrent.FutureTaskSync.innerRunUnknown Source at java.util.concurrent.FutureTask.runUnknown Source at java.util.concurrent.ThreadPoolExecutor.runWorkerUnknown Source at java.util.concurrent.ThreadPoolExecutorWorker.runUnknown Source at java.lang.Thread.runUnknown Source   
0;NetworkServerControl API breaks when username or password contains nonascii characters   ;If you pass a nonascii usernamepassword combination to a NetworkServerControl API command  such as java jar derbynet.jar shutdown user Bjﾃｸrn password Dﾃｦhlieit will hang forever.The reason is that NetworkServerControlImpl.writeLDString) writes the length of the string in characters  whereas NetworkServerControlImpl.readLDString) expects the length to be in number of bytes.   
0;Create a regression test which will fail if classes from one Derby jar file leak into another jar file   ;We should write a test so that we find out early on when a checkin breaks the separation between Derby jar files.   
0;Revamp the vti demo to look and behave more like the other demos.   ;The VTI demo began as a set of classes which could not be compiled by the normal build because they used Java  features. We hooked these classes into the ordinary build later on see DERBY). But the VTI demo still sticks out like a sore thumb. We ought to be able to make the VTI demo behave like the other demos now.   
0;Include SQLState in client exception messages   ;When the embedded driver raises an SQLException  it is linked to a iapi.error.StandardException whose toString) method adds the SQLState to the error message. An SQLException raised by the client driver is linked to a client.am.SqlException  which does not add the SQLState. Because of this  printStackTrace) gives more information when called on an embedded exception. You have to call getSQLState) on the client exception in order to see the SQLState.We should change client.am.SqlExceptions toString) method to work the same way as StandardException.toString).See also the discussion in DERBY.   
0;Optional tool registration may fail because the CompilerContext is not always available at execution time.   ;For reasons which elude me  the CompilerContext is sometimes available at execution time and sometimes not. When the CompilerContext is not available at execution time  optional tool loading fails on an NPECaused by java.lang.NullPointerException at org.apache.derby.catalog.JavaSystemProcedures.SYSCS_REGISTER_TOOLJavaSystemProcedures.java) at org.apache.derby.exe.acdaxxadxxffffedaae.gUnknown Source) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derby.impl.services.reflect.ReflectMethod.invokeReflectMethod.java) at org.apache.derby.impl.sql.execute.CallStatementResultSet.openCallStatementResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtGenericPreparedStatement.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java)   
0;intermittent error in nightly regression tests AutoIncrementTest   ;junit.framework.AssertionFailedError Column value mismatch @ column COLUMNNAME  row  Expected gt A_ZEROlt  Found gt A_ONElt  at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinionJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.functionTests.tests.lang.AutoIncrementTest.testderbyIncrementTestAutoIncrementTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java)   
0;Starting network server on a network drive fails with JDK  on Windows   ;Starting a network server on a network drive with JDK  on Windows fails. The reported exception is a ClassCastException  but the underlying exception is the followingjava.nio.file.AccessDeniedException hostpathderby.log at sun.nio.fs.WindowsException.translateToIOExceptionWindowsException.java) at sun.nio.fs.WindowsException.rethrowAsIOExceptionWindowsException.java) at sun.nio.fs.WindowsException.rethrowAsIOExceptionWindowsException.java) at sun.nio.fs.WindowsAclFileAttributeView.setAclWindowsAclFileAttributeView.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at org.apache.derby.iapi.services.io.FileUtil.limitAccessToOwnerViaACLsFileUtil.java) at org.apache.derby.iapi.services.io.FileUtil.limitAccessToOwnerFileUtil.java) at org.apache.derby.impl.services.stream.SingleStream.PBmakeFileHPWSingleStream.java) at org.apache.derby.impl.services.stream.SingleStream.runSingleStream.java) at org.apache.derby.impl.services.stream.SingleStream.runSingleStream.java) at java.security.AccessController.doPrivilegedNative Method) at org.apache.derby.impl.services.stream.SingleStream.makeFileHPWSingleStream.java) at org.apache.derby.impl.services.stream.SingleStream.createDefaultStreamSingleStream.java) at org.apache.derby.impl.services.stream.SingleStream.makeStreamSingleStream.java) at org.apache.derby.impl.services.stream.SingleStream.bootSingleStream.java) at org.apache.derby.impl.services.monitor.BaseMonitor.bootBaseMonitor.java) at org.apache.derby.impl.services.monitor.TopService.bootModuleTopService.java) at org.apache.derby.impl.services.monitor.BaseMonitor.startModuleBaseMonitor.java) at org.apache.derby.impl.services.monitor.FileMonitor.startModuleFileMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.startSystemModuleMonitor.java) at org.apache.derby.impl.services.monitor.BaseMonitor.runWithStateBaseMonitor.java) at org.apache.derby.impl.services.monitor.FileMonitor.lt initgt FileMonitor.java) at org.apache.derby.iapi.services.monitor.Monitor.startMonitorMonitor.java) at org.apache.derby.iapi.jdbc.JDBCBoot.bootJDBCBoot.java) at org.apache.derby.jdbc.EmbeddedDriver.bootEmbeddedDriver.java) at org.apache.derby.jdbc.EmbeddedDriver.lt clinitgt EmbeddedDriver.java) at java.lang.Class.forNameNative Method) at java.lang.Class.forNameClass.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.startNetworkServerNetworkServerControlImpl.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.blockingStartNetworkServerControlImpl.java) at org.apache.derby.impl.drda.NetworkServerControlImpl.executeWorkNetworkServerControlImpl.java) at org.apache.derby.drda.NetworkServerControl.mainNetworkServerControl.java)   
0;java.lang.NoSuchMethodError chaining a function and procedure   ;java.lang.NoSuchMethodError is raised when calling a procedure which takes an Integer argument and passing it the result of a function which returns an int. The error is raised in generated code.   
0;Remove StorageFile.getURL) and its implementations   ;StorageFile.getURL) is only called from CPFile  which is an implementation of StorageFile. The getURL) method could therefore be removed from the StorageFile interface and all its implementation classes except for CPFile  and it could be made private in CPFile.   
0;Remove storageFactory field from subclasses of InputStreamFile   ;The InputStreamFile class has a field called storageFactory which holds the BaseStorageFactory instance that created it. This field is accessible by all subclasses of InputStream. Still  each subclass has its own storageFactory field which shadows the field in the parent class and holds a reference to the exact same factory instance as the parent.Id like to remove the extra fields in the subclasses in order to simply the code and silence IDE warnings about the shadowing.   
0;Syntax error when reference to transition variable has whitespace around it   ;If a trigger action references a transition variable and has whitespace around the period sign that separates the transition variable name from the column name  it fails with a syntax error.For exampleijgt  create table tx int)  rows insertedupdateddeletedijgt  create table tx int)  rows insertedupdateddeletedijgt  failscreate trigger tr after insert on t referencing new as newfor each row insert into t select x from t where x  new . x ERROR X Syntax error Encountered x at line   column .Issue the help command for general information on IJ command syntax.Any unrecognized commands are treated as potential SQL commands and executed directly.Consult your DBMS server reference documentation for details of the SQL syntax supported by your server.ijgt  succeedscreate trigger tr after insert on t referencing new as newfor each row insert into t select x from t where x  new.x  rows insertedupdateddeletedThe only difference between the failing trigger definition and the successful one  is that the former says new . x and the latter new.x.Both should succeed.   
0;Nonenglish locale flunks LuceneSupportTest   ;The following error surfaced in the nightly tests on a windows machine with a Swedish locale. See httpdownload.java.netjavadesktopderbyrequest_ junit.framework.AssertionFailedError Column value mismatch @ column   row  Expected gt enlt  Found gt svlt  at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertRowInResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinionJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.junit.JDBC.assertFullResultSetJDBC.java) at org.apache.derbyTesting.functionTests.tests.lang.LuceneSupportTest.testCreateAndQueryIndexLuceneSupportTest.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)   
0;testDERBYNumRowsInSydependsForTrigger fails when the starting version of the upgrade trajectory is ...   ;When I run the upgrade tests with ... as the starting point  I see the following error. I dont see this error when the starting point is .... This may suggest that ... has not been added as a starting point for the upgrade tests in the nightlycontinuousintegration test runs.) testDERBYNumRowsInSydependsForTriggerorg.apache.derbyTesting.functionTests.tests.upgradeTests.BasicSetup)junit.framework.AssertionFailedError Expected errors)   but no error was thrown. at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementErrorMinionBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementErrorBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementErrorBaseJDBCTestCase.java) at org.apache.derbyTesting.functionTests.tests.upgradeTests.BasicSetup.testDERBYNumRowsInSydependsForTriggerBasicSetup.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at org.apache.derbyTesting.junit.BaseTestSetup.runBaseTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.extensions.TestSetup.runTestSetup.java)   
0;Sequence generator makes CREATE TRIGGER fail with internal error   ;Im seeing this on trunkij version .ijgt  connect jdbcderbymemorydb createtrue ijgt  create table tx int  y int  z int)  rows insertedupdateddeletedijgt  create table tx int  y int  z int)  rows insertedupdateddeletedijgt  create sequence seq  rows insertedupdateddeletedijgt  values next value for seq   row selectedijgt  create trigger tr after insert on t insert into tx) values next value for seq) ERROR XT An internal error was identified by RawStore module. Internal state detail from the transaction is as follows savedEndStatus  needSync  falsejustCreated  falsemyGlobalId  nullmyId  nullstate  inComplete  nullseenUpdates  falseinPostCommitProcessing  falselogStart  nulllogLast  nullrecoveryTransaction  falsepostCompleteMode  falsesanityCheck_xaclosed  falsetransName  UserTransactionreadOnly  falseflush_log_on_xact_end  truebackupBlocked  falsedontWaitForLocks  false   
0;NOT elimination for CASE expressions is broken   ;NOT elimination for CASE expressions seems to be broken. Take this exampleijgt  select * from sysibm.sysdummy where not  case when ibmreqd  Y then true else true end ) IBMamp Y  row selectedBoth branches of the CASE expression evaluate to TRUE  so one would expect the predicate not  case ... ) to evaluate to FALSE  and the query should return an empty result.   
0;ROW_NUMBER function throws NullPointerException in UPDATE statement   ;A NullPointerException is raised with this possibly illegal?) UPDATE statementij version .ijgt  connect jdbcderbymemorydb createtrue ijgt  create table tx int)  rows insertedupdateddeletedijgt  insert into t values   row insertedupdateddeletedijgt  update t set x  row_number) over ) ERROR XJ Java exception  java.lang.NullPointerException.   
0;Simplify handling of untyped nulls in CASE and NULLIF expressions   ;The parser translates both CASE and NULLIF expressions into ConditionalNodes  but it represents untyped NULLs differently in the two cases.In a CASE expression  any branch that is an untyped NULL  is translated into an UntypedNullConstantNode thats wrapped in a CastNode that casts the value to CHAR). The CastNode is replaced with a cast to the correct type during the bind phase.A NULLIF expression is turned into a CASE expression that has a THEN NULL clause. The parser simply creates an UntypedNullConstantNode for that clause  without wrapping it in a CastNode. A CastNode is instead added during the bind phase.This slight difference in how NULLs are represented by the parser in the two cases  means that ConditionalNode needs to handle the two cases differently during the bind phase. It would be better if the parser generated NULLs in the same way for the two cases  so that ConditionalNode didnt need to know if it was generated for a CASE expression or a NULLIF expression.   
0;Incorrect nullability for CASE expression with parameter   ;This JUnit test code fails because it detects that the query returns null even though the result column is reported as not nullable PreparedStatement ps  prepareStatement values case when false then  else ? end)  ps.setNull  Types.INTEGER)  JDBC.assertSingleValueResultSetps.executeQuery)  null)    
0;add HoldForConnection ij command to match NoHoldForConnection   ;DERBY was created to document the NoHoldForConnection ij command  which was used in some of Derbys sql style tests.In subsequent comments  it was felt there should be a matching HoldForConnection ij command to set the value back to the default ResultSet.HOLD_CURSORS_OVER_COMMIT).   
0;CheckToursDBTest failed while updating sequence value on disk   ;I saw a failure in CheckToursDBTest while running the demo test suite on trunk. It was reported as an ArrayIndexOutOfBoundsException. The ArrayIndexOutOfBoundsException happened during cleanup and shadowed the original exception. The original exception in derby.log looked like thisERROR XSTA A transaction was already active  when attempt was made to make another transaction active. at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.iapi.error.StandardException.newExceptionStandardException.java) at org.apache.derby.impl.store.raw.xact.XactFactory.pushTransactionContextXactFactory.java) at org.apache.derby.impl.store.raw.xact.XactFactory.startCommonTransactionXactFactory.java) at org.apache.derby.impl.store.raw.xact.XactFactory.startNestedUpdateUserTransactionXactFactory.java) at org.apache.derby.impl.store.raw.RawStore.startNestedUpdateUserTransactionRawStore.java) at org.apache.derby.impl.store.access.RAMTransaction.startNestedUserTransactionRAMTransaction.java) at org.apache.derby.impl.sql.catalog.SequenceUpdater.updateCurrentValueOnDiskSequenceUpdater.java) at org.apache.derby.impl.sql.catalog.SequenceUpdater.cleanSequenceUpdater.java) at org.apache.derby.impl.sql.catalog.SequenceUpdater.clearIdentitySequenceUpdater.java) at org.apache.derby.impl.services.cache.ConcurrentCache.removeEntryConcurrentCache.java) at org.apache.derby.impl.services.cache.ConcurrentCache.ageOutConcurrentCache.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.clearSequenceCachesDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.clearCachesDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.clearCachesDataDictionaryImpl.java) at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.doneReadingDataDictionaryImpl.java) at org.apache.derby.impl.sql.GenericStatement.prepMinionGenericStatement.java) at org.apache.derby.impl.sql.GenericStatement.prepareStorableGenericStatement.java) at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.compileStatementSPSDescriptor.java) at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.prepareAndReleaseSPSDescriptor.java) at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.getPreparedStatementSPSDescriptor.java) at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.getPreparedStatementSPSDescriptor.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPSGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeWhenClauseAndActionGenericTriggerExecutor.java) at org.apache.derby.impl.sql.execute.RowTriggerExecutor.fireTriggerRowTriggerExecutor.java) at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEventTriggerEventActivator.java) at org.apache.derby.impl.sql.execute.UpdateResultSet.fireAfterTriggersUpdateResultSet.java) at org.apache.derby.impl.sql.execute.UpdateResultSet.openUpdateResultSet.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmtGenericPreparedStatement.java) at org.apache.derby.impl.sql.GenericPreparedStatement.executeGenericPreparedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeStatementEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derby.impl.jdbc.EmbedStatement.executeEmbedStatement.java) at org.apache.derbyTesting.functionTests.tests.demo.CheckToursDBTest.doUpdateCheckToursDBTest.java) at org.apache.derbyTesting.functionTests.tests.demo.CheckToursDBTest.testToursDBCheckToursDBTest.java) at sun.reflect.NativeMethodAccessorImpl.invokeNative Method) at sun.reflect.NativeMethodAccessorImpl.invokeNativeMethodAccessorImpl.java) at sun.reflect.DelegatingMethodAccessorImpl.invokeDelegatingMethodAccessorImpl.java) at java.lang.reflect.Method.invokeMethod.java) at junit.framework.TestCase.runTestTestCase.java) at junit.framework.TestCase.runBareTestCase.java) at org.apache.derbyTesting.junit.BaseTestCase.runBareBaseTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridableBaseJDBCTestCase.java) at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareBaseJDBCTestCase.java) at junit.framework.TestResult.protectTestResult.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.framework.TestResult.runTestResult.java) at junit.framework.TestCase.runTestCase.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.extensions.TestDecorator.basicRunTestDecorator.java) at junit.extensions.TestSetup.protectTestSetup.java) at junit.framework.TestResult.runProtectedTestResult.java) at junit.extensions.TestSetup.runTestSetup.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at junit.framework.TestSuite.runTestTestSuite.java) at junit.framework.TestSuite.runTestSuite.java) at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.runJUnitTestRunner.java) at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launchJUnitTestRunner.java) at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.mainJUnitTestRunner.java)   
0;Broken link in API docs to derby.drda.keepAlive documentation   ;In the javadoc for NetworkServerMBeangetDrdaKeepAlive  there is a@see link which is broken. It points tohttpdb.apache.orgderbydocsdevadminguideradmindrdakeepalive.html   
1;User procedures can call system procedures  circumventing SQL authorization.   ;System procedures are implemented as public static methods in org.apache.derby.catalog.SystemProcedures. These methods can be called by code in userwritten procedures. This allows a userwritten procedure to circumvent the SQL authorization checks which are supposed to limit some procedures to being called only by the DBO. I will attach a repro.   
0;Use javax.xml.xpath interfaces for XPath support   ;Currently  Derby uses the interfaces in the org.wc.dom.xpath package to implement XPath support. That package is not part of the Java SE specification. Even though the package is included as an internal API in some of the major Java runtimes  using the standard javax.xml.xpath package instead would be better. It would be more portable  and less likely to break in the future if JVM vendors remove the internal API.   
1;Check type of usersupplied modules before creating instances   ;Derby allows users to specify names of classes to use for various pluggable modules.In some cases  it verifies that the class implements the expected interface before it creates an instance of the class. For example in SpecificAuthenticactionServiceImpl Class sasClass  Class.forNamespecificAuthenticationScheme  if UserAuthenticator.class.isAssignableFromsasClass  throw StandardException.newExceptionSQLState.AUTHENTICATION_NOT_IMPLEMENTED  specificAuthenticationScheme  org.apache.derby.authentication.UserAuthenticator  } UserAuthenticator aScheme  UserAuthenticator sasClass.newInstance In other cases  it creates an instance without checking  and instead fails with a ClassCastException or some other exception when trying to use the instance of the incorrect type. Examples JavaSystemProcedures SYSCS_REGISTER_TOOL  JCECipherFactory  SequenceUpdater.makePreallocator.I think it would be good to have similar checks in these other cases too. Thatll give clearer error messages which explain what the problem is  and it will be safer because it limits which constructors the users can force the Derby engine to invoke.   
0;Support standard syntax for altering column nullability   ;Derby supports altering the nullability of a column via an ALTER TABLE statement  but the supported syntax is different from what the SQL standard defines. We should add support for the standard syntax as well.The standard syntax is ALTER TABLE t ALTER COLUMN c SET NOT NULL ALTER TABLE t ALTER COLUMN c DROP NOT NULL   
0;Compilation error using a view as the source data set for a MERGE statement   ;Mamta found the following problem when using a view as the source data set of a MERGE statementconnect jdbcderbymemorydb createtrue CREATE TABLE employee employee_id int first_name VARCHAR) last_name VARCHAR) dept_no int salary int) create view vemployee as select * from employee CREATE TABLE bonuses employee_id int  bonus int DEFAULT ) create view vbonuses as select * from bonuses  compiles without the viewMERGE INTO bonuses BUSING employee EON B.employee_id  E.employee_idWHEN MATCHED AND E.dept_no THEN UPDATE SET B.bonus  E.salary * .WHEN NOT MATCHED AND dept_no THEN INSERT employee_id  bonus) VALUES E.employee_id  E.salary * .)  compilation error with the viewMERGE INTO bonuses BUSING vemployee EON B.employee_id  E.employee_idWHEN MATCHED AND E.dept_no THEN UPDATE SET B.bonus  E.salary * .WHEN NOT MATCHED AND dept_no THEN INSERT employee_id  bonus) VALUES E.employee_id  E.salary * .)    
0;Rollback to savepoint allows violation of deferrable constraints   ;The bug is illustrated by the following code snippet Connection c  DriverManager.getConnectionjdbcderbymemorydb createtrue  c.setAutoCommitfalse  Statement s  c.createStatement  s.executecreate table tx int primary key initially deferred  s.executeinsert into t values      Savepoint sp  c.setSavepoint  s.executedrop table t  c.rollbacksp   Since there are four identical rows in T  this call should have  failed because the primary key was violated. c.commit   Instead  it succeeds  and all four rows are committed  as can  be seen here ResultSet rs  s.executeQueryselect * from t  while rs.next  System.out.printlnrs.getInt  }  Insert yet another row  so that we have five identical rows ... s.executeinsert into t values    ... and now commit complains ... c.commit With autocommit off  add duplicates into a deferred primary key. Then set a savepoint  drop the table  and roll back to the savepoint.Apparently  when you drop the table  information about any constraint violations seen on that table is lost  and that information is not restored when the drop table operation is undone by the rollback to savepoint.So when you commit the transaction after having rolled back the drop operation  no deferred checking of constraints happens  and the duplicates you have inserted are committed.   
0;Allow Derby to rename tables referenced by foreign keys   ;Hi  Im on the Apache Roller team and we use database migration scripts to update databases between Roller releases. We have a common template httpsvn.apache.orgviewvcrollertrunkappsrcmainresourcessqltomigration.vm?viewco) that is run through Velocity to create specific scripts for the several databases that we support.) One handicap with Derby that were not seeing with other databases is its inability to rename tables that have FKs on them. Renaming one of our tables returns this error from Derbyrename table website to weblog Error Operation RENAME cannot be performed on object SQL because CONSTRAINT WP_WEBSITEID_FK is dependent on that object.SQLState XYErrorCode Error Operation RENAME cannot be performed on object SQL because CONSTRAINT WE_WEBSITEID_FK is dependent on that object.SQLState XYErrorCode Error Operation RENAME cannot be performed on object SQL because CONSTRAINT WC_WEBSITEID_FK is dependent on that object.SQLState XYErrorCode Error Operation RENAME cannot be performed on object SQL because CONSTRAINT FO_WEBSITEID_FK is dependent on that object.SQLState XYErrorCode Error Operation RENAME cannot be performed on object SQL because CONSTRAINT MF_WEBSITEID_FK is dependent on that object.SQLState XYErrorCode Error Operation RENAME cannot be performed on object SQL because CONSTRAINT NF_WEBSITEID_FK is dependent on that object.SQLState XYErrorCode Error Operation RENAME cannot be performed on object SQL because CONSTRAINT AP_WEBSITEID_FK is dependent on that object.SQLState XYErrorCode This results in the migration scripts needing to be messy  first dropping all constraints before recreating them  for the one RDBMS that requires it. It would be great if a future release of Derby could be coded to support table renames regardless of the constraints defined on it. Thanks   
1;Permission problems when running JUnit tests with Ant ..   ;I saw many permission problems when I set up a build job for the . branch. See for example this log httpsbuilds.apache.orgjobDerby.suites.AllconsoleFirst stack trace [junit] Running org.apache.derby.PackagePrivateTestSuite [junit] Tests run   Failures   Errors   Skipped   Time elapsed . sec [junit] Exception in thread main java.security.AccessControlException access denied java.io.FilePermission homejenkinsjenkinsslaveworkspaceDerby.suites.All.headjunit__TESTorg.apache.derby.PackagePrivateTestSuite.xml write) [junit] at java.security.AccessControlContext.checkPermissionAccessControlContext.java) [junit] at java.security.AccessController.checkPermissionAccessController.java) [junit] at java.lang.SecurityManager.checkPermissionSecurityManager.java) [junit] at java.lang.SecurityManager.checkWriteSecurityManager.java) [junit] at java.io.FileOutputStream.lt initgt FileOutputStream.java) [junit] at java.io.FileOutputStream.lt initgt FileOutputStream.java) [junit] at org.apache.tools.ant.taskdefs.optional.junit.FormatterElementDelayedFileOutputStream.writeFormatterElement.java) [junit] at java.io.OutputStream.writeOutputStream.java) [junit] at sun.nio.cs.StreamEncoder.writeBytesStreamEncoder.java) [junit] at sun.nio.cs.StreamEncoder.implFlushBufferStreamEncoder.java) [junit] at sun.nio.cs.StreamEncoder.implFlushStreamEncoder.java) [junit] at sun.nio.cs.StreamEncoder.flushStreamEncoder.java) [junit] at java.io.OutputStreamWriter.flushOutputStreamWriter.java) [junit] at java.io.BufferedWriter.flushBufferedWriter.java) [junit] at org.apache.tools.ant.util.DOMElementWriter.openElementDOMElementWriter.java) [junit] at org.apache.tools.ant.util.DOMElementWriter.writeDOMElementWriter.java) [junit] at org.apache.tools.ant.util.DOMElementWriter.writeDOMElementWriter.java) [junit] at org.apache.tools.ant.util.DOMElementWriter.writeDOMElementWriter.java) [junit] at org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.endTestSuiteXMLJUnitResultFormatter.java) [junit] at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.fireEndTestSuiteJUnitTestRunner.java) [junit] at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.runJUnitTestRunner.java) [junit] at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launchJUnitTestRunner.java) [junit] at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.mainJUnitTestRunner.java) [junit] Running org.apache.derby.PackagePrivateTestSuite [junit] Tests run   Failures   Errors   Skipped   Time elapsed  sec [junit] Test org.apache.derby.PackagePrivateTestSuite FAILED crashed)I can reproduce these failures in my environment by running the junitsingle target with Ant ... For exampleant Dderby.junit.testclassorg.apache.derbyTesting.unitTests.junit.FormatableBitSetTest junitsingleIf I use an older Ant version Ive tried .. and ..) it does not fail.   
0;ROW_NUMBER should not be allowed as argument in a procedure call   ;Fails with assertNPE instead of proper errorijgt  call syscs_util.syscs_compress_table(APP  T  row_number() over ()) ERROR XJ Java exception ASSERT FAILED cannot get interface without operand org.apache.derby.shared.common.sanity.AssertFailure.   
0;Assert failureArrayIndexOutOfBoundsException when using COUNT in MERGE matching clause   ;This (meaningless) statement gives NPE in insane builds andassert failure in sane buildss.execute(create table t(x int)) s.execute(create table t(x int)) s.execute(insert into t values  ) s.executeUpdate(merge into t using t on (t.xt.x)   when not matched then insert values (count(*))) I see it also applies to other aggregates  e.g. MAX.stack trace (insane)Exception in thread main java.sql.SQLException Java exception  java.lang.ArrayIndexOutOfBoundsException. at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source) at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source) at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source) at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeLargeUpdate(Unknown Source) at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(Unknown Source) at derby.Derby.main(Derby.java)Caused by ERROR XJ Java exception  java.lang.ArrayIndexOutOfBoundsException. at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ...  moreCaused by java.lang.ArrayIndexOutOfBoundsException  at org.apache.derby.impl.services.bytecode.BCMethod.popStack(Unknown Source) at org.apache.derby.impl.services.bytecode.BCMethod.callMethod(Unknown Source) at org.apache.derby.impl.sql.compile.ResultColumnList.generateEvaluatedRow(Unknown Source) at org.apache.derby.impl.sql.compile.MatchingClauseNode.generateInsertUpdateRow(Unknown Source) at org.apache.derby.impl.sql.compile.MatchingClauseNode.generate(Unknown Source) at org.apache.derby.impl.sql.compile.MergeNode.generate(Unknown Source) at org.apache.derby.impl.sql.compile.StatementNode.generate(Unknown Source) at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source) at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source) at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source) ...  more   
0;OOME when running ConstraintCharacteristicsTest with smaller heap   ;When I ran suites.All on a device with little memory  so that I needed to reduce the heap (XmxM)  it stopped and failed with an OOME when it came to ConstraintCharacteristicsTest.That test uses a memory database in order to speed it up. One of the test cases (testManySimilarDuplicates) has such a big data set that the database doesnt fit in the heap. It would be good if we could reduce the memory requirements of the test so that it passes on smaller devices to. Alternatively  we could add a switch that makes it easy to disable test cases that are known to have high memory requirements.   
0;Add derbyoptionaltools.jar to the class paths of the scripts in the bin directory   ;The derbyoptionaltools.jar should be added to the class paths constructed by all of the scripts in the bin distros which include derby.jar. Otherwise  the Lucene plugin (and future features which we put in derbyoptionaltools.jar) wont be available when you use the scripts to run ij  the network server  and sysinfo.For instance  you will see information on this jar file if you run sysinfo this way...java jar derbyrun.jar sysinfo窶ｦbut not if you run the sysinfo script in the bin directory of a Derby installation.   
0;Add derbyoptionaltools.jar to the maven artifacts we publish   ;The new derbyoptionaltools.jar is not published to the maven repositories along with the other Derby jar files.   
0;Cannot create a Lucene index if a key columns name is casesensitive   ;The workaround is to create a view which gives the columns caseinsensitive names. The following script shows this problemconnect jdbcderbymemorydb createtrue call syscs_util.syscs_register_tool( luceneSupport  true ) create schema s create table s.t( passageID int  text varchar(  ))  fails because the trailing key id is casesensitivecall luceneSupport.createIndex( s  t  text  null  passageID) create view s.t_view ( passageID  text ) as select * from s.t  succeeds on a view with caseinsensitive identifierscall luceneSupport.createIndex( s  t_view  text  null  passageID)    
1;The jacocojunit target fails to store coverage data for some subsuites   ;The console log for the code coverage test runs at httpsbuilds.apache.orgjobDerbyJaCoCo shows that JaCoCo fails to write coverage data for the following test suiteslangjdbcapistoreengineencryptionIt is caused by the following permissionsrelated exception [junit] java.security.AccessControlException access denied (java.io.FilePermission homejenkinsjenkinsslaveworkspaceDerbyJaCoCotrunkjunit__jacoco.exec write) [junit] at java.security.AccessControlContext.checkPermission(AccessControlContext.java) [junit] at java.security.AccessController.checkPermission(AccessController.java) [junit] at java.lang.SecurityManager.checkPermission(SecurityManager.java) [junit] at java.lang.SecurityManager.checkWrite(SecurityManager.java) [junit] at java.io.FileOutputStream.lt initgt (FileOutputStream.java) [junit] at org.jacoco.agent.rt.internal_dd.output.FileOutput.openFile(FileOutput.java) [junit] at org.jacoco.agent.rt.internal_dd.output.FileOutput.writeExecutionData(FileOutput.java) [junit] at org.jacoco.agent.rt.internal_dd.Agent.shutdown(Agent.java) [junit] at org.jacoco.agent.rt.internal_dd.Agent.run(Agent.java)The result of this is that the coverage report shows lower coverage than whats actually covered by the tests.   
0;For update statement  collect generated keys if Statement.RETURN_GENERATED_KEYS flag is supplied to the JDBC call.   ;DERBY is providing SQL support to update identity columns using DEFAULT keyword. This jira will look into collecting generated keys if Statement.RETURN_GENERATED_KEYS flag is supplied to the JDBC call for an UPDATE sql.   
0;Remove need for dbjcc.jar for executing ij or upload it on ibiblio   ;Im trying to automate loading DDL files with MavenMaven and all the derby are available on ibiblio except dbjcc.jar...Thanks   
0;Fix hardcoded JDBC . type constants   ;The JDBC . driver has hardcoded type constants in JDBCTranslation. Some of these were changed in build  of jdk. and should be updated. The nightly tests on jdk. are failing because of this  see for instance httpwww.multinet.no~solbergpublicApacheDerbyJDKtestlogJDKJvm.SunOS._ipcijdbc_diff.txt.   
0;In suites.All  certain test orders cause AccessControlException   ;While working on DERBY  order of tests in suitesAllPackages.java causedjava.security.AccessControlException. For related derbydev discussion please seehttpwww.nabble.comforumViewPost.jtp?postamp framedy   
0;Utilize JQL to fetch JIRA issue list for release notes generation   ;DERBY made it possible to use the JIRA SOAP API to fetch a list of issues fixed in a release. However  the release manager have to manually create a JIRA filter and feed the filter id to the tool.Now that the Apache JIRA instance has been updated to .x  we can use the JIRA Query Language (JQL) to avoid that manual step.   
0;Remove unused parameter in splitmessages   ;splitmessages requires three parameters  but it only uses two of them. A comment in the class describing the parameters  only describe the first two of them ** arg   is the destination directory arg   is the source file. *The third  unused parameter should be removed.   