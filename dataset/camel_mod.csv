Security;summary   ;description   
0;FileConfigureTest can't pass in Windows box   ;Because of the File separator is different between the unix and windows system  So the test can't pass in windows box I just attached a patch for it  Please have a look at it  I tested it in windows box    
0;Throw Useful Exception on No TypeConverter Available   ;When there is no type converter available an NPE is thrown that requires tracing through sources to find root of problem   
0;Most recent snapshot requires ActiveMQ   ;This may be moot given the projects' relationship  but it's a recently introduced side effect  Before the most recent snapshot  I was able to use Camel without any ActiveMQ jar's floating around so long as I never tried to use any 'activemq  queue  foo' URI's  Now with the most recent snapshot  the first time I do something that uses AnnotationTypeCoverterLoader  ActiveMQConverter gets loaded  and then causes a NoClassDefFoundError for ActiveMQDestination    
0;JMSXGroupID is not copied across ActiveMQ endpoints   ;See thread   http  www nabble comMethodNameinheaderisignoredbybeanReftfs htmla   
0;enable polling via the http component   ;   
0;XPath namespaces configuration not possible through xml   ;Xpath xml element offers no way to define namespace mappings    
0;URL link broken in org apache camel Processor API doc   ;Message Transformer' link is broken    
0;org apache camel processor UnitOfWorkWithAsyncFlowTest failure   ;Running org apache camel processor UnitOfWorkWithAsyncFlowTestTests run     Failures     Errors     Skipped     Time elapsed     sec lt lt lt  FAILURE!This prevents developer from building camel under Linux platform  Thanks!   
0;New converter    Node > Source   ;Currently  there is no converter from Node gt  Source It is required when using Camel's splitter   functionality inside ServiceMix  from 'jbi  service  urn  eu  java  smx  fleetintegrator  camel'   splitter xpath 'tracestrace'    to 'jbi  endpoint  urn  eu  java  smx  fleetintegrator  jms  mq'     
0;exception clause doesn't proceed with pipeline   ;Problem is very similar to CAMEL but this time with exception clause As exceptions are not cleared pipeline doesn't proceed    
0;the    release didnt' seem to include the javadocs or doc directory  or manual !   ;I wondered if this was due to your machine Hiram having some dodgy maven plugin around or something?   
0;Headers lost after XSLT processing   ;After xslt processing the message headers are lost  See attached unit test  this test fails since revision  http  svn apache orgviewvc?view revamp revision    
0;Fix performance counters   ;   
0;Upgrade geronimospecs version to     ;from     
0;Add getter method for routeCollection property in RouteBuilder class   ;I need to stop a RouteBuilder  A solution for this issue could be access to routeCollection property in RouteBuilder class    
0;cxf camel transport should support to register itself to the cxf bus automatically   ;when cxf bus init  all tranports module on the classpath should register itself to the bus automatically cxf machenism for this is just add a spring bean to describe the transport id and transport factory class mapping per as belowlt beans xmlns 'http  www springframework orgschemabeans' xmlns  xsi 'http  www w orgXMLSchemainstance' xmlns  foo 'http  cxf apache orgconfigurationfoo' xsi  schemaLocation ' http  www springframework orgschemabeans http  www springframework orgschemabeansspringbeans xsd'gt  lt bean class 'org apache camel component cxf transport CamelTransportFactory' lazyinit 'true'gt  lt property name 'bus' ref 'cxf'gt  lt property name 'transportIds'gt  lt listgt  lt valuegt http  cxf apache orgtransportscamellt valuegt  lt listgt  lt propertygt  lt beangt lt beansgt    
0;[Spring integration] TheadType is missing in orgapachecamelmodeljaxb index   ;TheadType is missing in orgapachecamelmodeljaxb index  gt  JAXB don't know how to unmarshall thread Bug description found in Camel Users forum    http  www nabble comProcessorthreadpooltds html   
0;[Spring integration] Bad urls in METAINFspring schemas   ;http  activemq apache orgcamelschemaspringcamelspring  xsd becomes http  activemq apache orgcamelschemaspringcamelspring   xsdhttp  activemq apache orgcamelschemaspringcamelspring  xsd becomes http  activemq apache orgcamelschemaspringcamelspring   xsdThere's no camelspring  xsd and camelspring  xsd under http  activemq apache orgcamelschemaspring   
0;DeadLetterChannel  logging improvements when exchange handled by dead letter   ;The submitted patch have these improvements to the logger in deadletterchannel for delivery attempts outputs exchange id so we can correlate the lines in the log files  now also logs when the exchange could not be delivered and was handled by the failure processer  usually a deadletterchannel  minor issues with existing debug logging when sleeping  now also output millis  to be in line with other similar log lines in CamelI have not outputted the exchange itself  exchange toString    when the delivery could not be delivered successfully since there could be sensitive data in the exchange  e g  an invoice input message  that we do not want to be logged in our log But I think the logging of the exchange id is a good improvement and that they are aligned in the same position in the logline so it's easier to grepfind in the logs when you investigate and incident    
0;NullPointerException in CXF routes when there is an endpoint between router and service CXF endpoints   ;When an endpoint is added between a cxf router and a cxf service endpoint the message exchange is interrupted by a NullPointerException Example code  JAVABEGINThis code worksfrom StringUtils join cxfRouterURI   to StringUtils join cxfServiceURI     This code crashes  same problem with seda and log endpoints String anyEndpoint   'activemq  someQueue' JAVAENDfrom StringUtils join cxfRouterURI   to anyEndpoint  to StringUtils join cxfServiceURI    EXCEPTIONBEGIN      org apache cxf phase PhaseInterceptorChain doInterceptINFO   Interceptor has thrown exception  unwinding noworg apache cxf interceptor Fault at org apache camel component cxf interceptors RawMessageContentRedirectInterceptor handleMessage RawMessageContentRedirectInterceptor java    at org apache cxf phase PhaseInterceptorChain doIntercept PhaseInterceptorChain java    at org apache camel component cxf invoker CxfClient invokeWithMessageStream CxfClient java    at org apache camel component cxf invoker CxfClient dispatch CxfClient java    at org apache camel component cxf CxfProducer process CxfProducer java    at org apache camel component cxf CxfProducer process CxfProducer java    at org apache camel impl converter AsyncProcessorTypeConverter$ProcessorToAsynProcessorBridge process AsyncProcessorTypeConverter java    at org apache camel processor SendProcessor process SendProcessor java    at org apache camel processor DeadLetterChannel process DeadLetterChannel java    at org apache camel processor DeadLetterChannel process DeadLetterChannel java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel component cxf CamelInvoker invoke CamelInvoker java    at org apache camel component cxf interceptors AbstractInvokerInterceptor handleMessage AbstractInvokerInterceptor java    at org apache cxf phase PhaseInterceptorChain doIntercept PhaseInterceptorChain java    at org apache camel component cxf CxfMessageObserver onMessage CxfMessageObserver java    at org apache cxf transport http_jetty JettyHTTPDestination serviceRequest JettyHTTPDestination java    at org apache cxf transport http_jetty JettyHTTPDestination doService JettyHTTPDestination java    at org apache cxf transport http_jetty JettyHTTPHandler handle JettyHTTPHandler java    at org mortbay jetty handler ContextHandler handle ContextHandler java    at org mortbay jetty handler ContextHandlerCollection handle ContextHandlerCollection java    at org mortbay jetty handler HandlerWrapper handle HandlerWrapper java    at org mortbay jetty Server handle Server java    at org mortbay jetty HttpConnection handleRequest HttpConnection java    at org mortbay jetty HttpConnection$RequestHandler content HttpConnection java    at org mortbay jetty HttpParser parseNext HttpParser java    at org mortbay jetty HttpParser parseAvailable HttpParser java    at org mortbay jetty HttpConnection handle HttpConnection java    at org mortbay io nio SelectChannelEndPoint run SelectChannelEndPoint java    at org mortbay thread BoundedThreadPool$PoolThread run BoundedThreadPool java   Caused by   java lang NullPointerException at org apache commons io IOUtils copyLarge IOUtils java    at org apache commons io IOUtils copy IOUtils java    at org apache camel component cxf interceptors RawMessageContentRedirectInterceptor handleMessage RawMessageContentRedirectInterceptor java         more EXCEPTIONENDKnown workaround  Change the code like this  JAVABEGIN String anyEndpoint   'activemq  someQueue'  from StringUtils join cxfRouterURI   process new Processor    public void process Exchange exchange  throws Exception   exchange setOut exchange getIn          to anyEndpoint  to StringUtils join cxfServiceURI   JAVAEND   
0;support to set the aggregation stragey of multicastProcessor   ;I have a use case   the router configuration could like this from 'direct  a'  multicast   to 'direct  x'  'direct  y'  'direct  z'    from 'direct  x'  process new AppendingProcessor 'x'   to 'direct  aggregater'   from 'direct  y'  process new AppendingProcessor 'y'   to 'direct  aggregater'   from 'direct  z'  process new AppendingProcessor 'z'   to 'direct  aggregater'   from 'direct  aggregater'  aggregator header 'cheese'   new BodyAggregatingStrategy     completedPredicate header 'aggregated'  isEqualTo    to 'mock  result'  Now I send the message to endpoint 'direct  a' and I want to get the final result of the processors And this requirement is much like the CAMEL    
0;MulticastRecipientList  recipient list that uses multicast processor   ;Probably it would be useful to have recipientList that in InOut mode doesn't work as a pipeline  I faced that problem  however InOnly is ok  It seems in InOut it reminds of RoutingSlip  Optionally we could use MulticastProcessor to process 'recipients'  If you think it makes sense  attached patch enhances camelcore with such feature    
0;Remove tangle between impl and impl converter   ;Currently impl and impl converter reference each other  If possible such cycles should be avoided When I looked into it I found that impl converter references only a single class CachingInjector  No other class in camelcore seems to use this class  So my suggestion is to move CachingInjector to impl converter  So the cycle i removed  As far as I can see this should cause no ther issues    
0;Multithreaded HTTP invocations doesn't work   ;Description of the bug  http  www nabble comMultithreadedhttpendpointtos htmla   
0;DefaultParameterMappingStrategy doesn't load its defaults   ;This is preventing BeanProcessor from using bean methods with a Message parameter  or bean methods not named 'process' that have an Exchange as their parameter  For example  to map to a Message the it tries using the ParameterExpression bodyAs Message class  instead of inmessageExpression      
0;spring   jar is twice in the camel distro   ;I downloaded the latest snapshot apachecamel   zip fromhttp  people apache orgrepomsnapshotrepositoryorgapachecamelapachecamel SNAPSHOTThe  zip file contains spring   jar twicecamellibcamelliboptionalIs Spring both mandatory and optional?And btw it includes an old version of commonslogging   jar  v  of commons logging is out    
0;bad content length header value in http response   ;By default HttpBinding class copies all request header attributes from the request to the response including 'ContentLength'  So the consequence is that the response is declaring the same size as the request which can lead to serious truncation problems! the workaround is simply to add the line  out removeHeader 'ContentLength'   in the writeResponse method of the httpbinding class allowing jetty to set the right value    
0;Mail component is missing some configuration possibilities   ;It should be possible to configure the behaviour of the mail component  see thread   http  www nabble comProblemwithCamelMailComponentinRoutetds htmla   
0;Mina TCP does not support InOut pattern   ;See this thread  http  www nabble comcamelminaTCPInOutexchangetds htmlThis builder does not support InOut when a client send a textline to localhost   The client never receives a response url   'mina  tcp  localhost  ?textline true' from uri  process new Processor     public void process Exchange e    String in   e getIn   getBody String class    append newline at end to denote end of data for textline codec e getOut   setBody 'Hello ' + in + 'n'        Attached is a patch that fixes this by introducing a new parameter to the URL for fluent builder sync true  ie is there a better name? Using this url instead and the patch then Camel will send a response back to the client  mina  tcp  localhost  ?textline trueamp sync true   
0;Synchronous mode should handle exceptions being thrown from MINA   ;Camel MINA in synchronous mode  InOut exchange pattern  does not handle exception thrown from MINA  Currently MINA intercepts this and logs the exception at WARN level We should override the proper method in Mina and handle it so the end user can deal with it Also it has been raisen on the forum that it does not propogate header and other properties  This should be raised in another ticket In the weekend I will work on a patch for Camel to fix this problem    
0;camelmina   allowing the lazy creation of a connection   ;In the current implementation with a mina component producer if the server is not up when we start Camel it fails  This is because the mina session creation is in the doStart method which is called when Camel starts A simple solution is to optionally allow to lazily create the session just before sending the exchange in the Producer's process method    
0;camelcxf component can't deal with the exception message in MESSAGE dataFormat   ;From   Willem JiangTo   cameluser@activemq apache orgSubject   Re   camelcxf throwing a faultDate   Wed   Mar       +ReplyTo   cameluser@activemq apache orgHi Marc It looks like camelcxf component's issue which can't deal with the exception message in MESSAGE dataFormat Could you fill a JIRA for it ? I will fix it later this week As usual  you just need throw the exception from the processor   CXF will try to marshal it into a soap fault Regards WillemMarc Giger wrote  gt  Hi gt gt  I'm trying to get the following camel route working where thegt  dataformat is MESSAGE gt gt  lt from uri 'cxf  bean  routerEndpoint?dataFormat MESSAGE'gt  gt  lt process ref 'decryptProcessor'gt  gt  lt choicegt gt  lt whengt  gt  lt methodCall bean 'endpointSelector' method 'matches'gt gt  lt to uri 'cxf  bean  serviceEndpoint?dataFormat MESSAGE'gt  gt  lt whengt gt  lt otherwisegt  gt  lt to uri 'cxf  bean  localEndpoint?dataFormat MESSAGE'gt  gt  lt otherwisegt gt  lt choicegt  gt gt  if the endpointSelector bean returns true the request is redirected togt  a remote webservice gt  otherwise the request is forwarded to a local cxf service  withgt  localtransport gt gt  Now  if I invoke the routerEndpoint and somewhere in the pipelinegt  happens an exception  in my case in the decryptProcessor   I get thegt  following Exception in the outFault chain  gt gt  Mar         PM org apache cxf phase PhaseInterceptorChaingt  doIntercept INFO   Interceptor has thrown exception  unwinding nowgt  org apache cxf interceptor Faultgt  atgt  org apache camel component cxf interceptors RawMessageContentRedirectInterceptor handleMessage RawMessageContentRedirectInterceptor java   gt  atgt  org apache cxf phase PhaseInterceptorChain doIntercept PhaseInterceptorChain java   gt  atgt  org apache cxf interceptor OutgoingChainInterceptor handleMessage OutgoingChainInterceptor java   gt  atgt  org apache cxf phase PhaseInterceptorChain doIntercept PhaseInterceptorChain java   gt  atgt  org apache cxf transport ChainInitiationObserver onMessage ChainInitiationObserver java   gt  atgt  org apache cxf transport servlet ServletDestination doMessage ServletDestination java   gt  atgt  org apache cxf transport servlet ServletController invokeDestination ServletController java   gt  atgt  org apache cxf transport servlet ServletController invoke ServletController java   gt  atgt  org apache cxf transport servlet AbstractCXFServlet invoke AbstractCXFServlet java   gt  atgt  org apache cxf transport servlet AbstractCXFServlet doPost AbstractCXFServlet java   gt  at javax servlet http HttpServlet service HttpServlet java    atgt  javax servlet http HttpServlet service HttpServlet java    atgt  org mortbay jetty servlet ServletHolder handle ServletHolder java   gt  atgt  org mortbay jetty servlet ServletHandler handle ServletHandler java   gt  atgt  org mortbay jetty security SecurityHandler handle SecurityHandler java   gt  atgt  org mortbay jetty servlet SessionHandler handle SessionHandler java   gt  atgt  org mortbay jetty handler ContextHandler handle ContextHandler java   gt  atgt  org mortbay jetty webapp WebAppContext handle WebAppContext java   gt  atgt  org mortbay jetty handler ContextHandlerCollection handle ContextHandlerCollection java   gt  atgt  org mortbay jetty handler HandlerCollection handle HandlerCollection java   gt  atgt  org mortbay jetty handler HandlerWrapper handle HandlerWrapper java   gt  at org mortbay jetty Server handle Server java    atgt  org mortbay jetty HttpConnection handleRequest HttpConnection java   gt  atgt  org mortbay jetty HttpConnection$RequestHandler content HttpConnection java   gt  at org mortbay jetty HttpParser parseNext HttpParser java    atgt  org mortbay jetty HttpParser parseAvailable HttpParser java    atgt  org mortbay jetty HttpConnection handle HttpConnection java    atgt  org mortbay io nio SelectChannelEndPoint run SelectChannelEndPoint java   gt  atgt  org mortbay thread BoundedThreadPool$PoolThread run BoundedThreadPool java   gt  Caused by   java lang NullPointerException atgt  org apache commons io IOUtils copyLarge IOUtils java    atgt  org apache commons io IOUtils copy IOUtils java    atgt  org apache camel component cxf interceptors RawMessageContentRedirectInterceptor handleMessage RawMessageContentRedirectInterceptor java       gt   moregt gt  This is because the InputStream is null ingt  RawMessageContentRedirectInterceptor  gt gt  public void handleMessage Message message  throws Fault  gt gt  InputStream is   message getContent InputStream class  gt  OutputStream os   message getContent OutputStream class  gt  gt  try   gt  IOUtils copy is  os  gt  is close   gt  os flush   gt    catch  Exception e   gt  throw new Fault e  gt   gt   gt gt  How can I return a custom soapfault in a processorfilter?gt gt  Thanks gt gt  Marcgt gt    
0;SftpConsumer is not connecting and retrieving remote files   ;SftpConsumer does not connect to server due to patch for CAMEL  The SftpConsumer also checks remote file modification timestamp against last poll timestamp but incorrectly converts seconds to milliseconds using integer math so the resulting conversion is always negative and will never retrieve file  I will attach the fixes to this issue    
0;Mina Producer should have configurable timeout   ;Currently the camel mina producer  MinaProducer  defaults to have a  sec timeout This is currently not possible to configured eg from the URL parameters etc Also we should documented on the wiki that  sec  is default    
0;HttpBinding writeResponse doesn't set the response status code  i e  it's always     ;When writing out an Http response  the HttpBinding should check for the existing of the header HttpProducer HTTP_RESPONSE_CODE and set it in the response if it's there  This allows requests made via the http component to be output with the correct status code info  If also allows processors in the flow to control the status code by setting the header themselves    
0;camelmina improvements   ;This ticket holds reference to the various camelmina improvments and bugfixes lately    
0;Support for a full customized soapfault incl  faultcode and detail   ;Don't wrap a Fault in a Fault    
0;Parallel processing route   ;Adding the support of this user story CXF Consumer gt  Route gt  parallelly send messages and recieve responsesgt  aggregate response gt  further process gt  returnHere is more information about this story   http  www nabble comParallelprocessingroutetd htmla   
0;Improve logging for camelmina   ;Currently camelmina does not log using similar log classnames for a MinaProducer and MinaConsumer  This can be a bit misleading in the log files MinaConsumer uses an anonymous inner class to do the IoHandler where as MinaProducer does not  This renders the loglines such asMinaConsumer$  XXXMinaProducer$RecieveHandler  XXXMinaConsumer should use a non anonymous inner classes so logging is the same  MinaConsumer$RecieveHandler  XXXMinaProducer$ResponseHandler  XXX   
0;MinaProducer waits for MINA worker thread to timeout when stopping JVM from standalone client   ;I was working on a camelminaexample sample that starts a MinaProducer to send data to a TCP server  When my sample terminates the JVM it waits  seconds until the MINA worker threads times out  default  sec  As a workaround using System exit   will terminate my client JVM immediately  And running my client as a JUnit tests will also in fact terminate the JVM immediately The code below demonstrates this   Running as JUnit runs within a few seconds  Run it as a standard java main app and it terminates after + secondsThe code is a test I am working on for the patch to fix it   I got it fixed but I want a better unit test public class MinaProducerTest extends ContextTestSupport   public static void main String[] args  throws Exception   MinaProducerTest test   new MinaProducerTest    test producerRunningFromMain      private void producerRunningFromMain   throws Exception   long start   System currentTimeMillis    System out println '+++ start +++'   context   new DefaultCamelContext    context addRoutes createRouteBuilder     context start    testProducer    context stop    System out println '+++ stop +++'   long end   System currentTimeMillis    assertTrue 'Should stop within  seconds'  end  start lt      TODO   add shutdown hook to verify that its stopped before  seconds  or mocks    private static final String uri   'mina  tcp  localhost  ?textline true'  protected RouteBuilder createRouteBuilder     return new RouteBuilder     public void configure     from uri  to 'mock  result'          public void testProducer   throws Exception   MockEndpoint mock   getMockEndpoint 'mock  result'   mock expectedBodiesReceived 'Hello World'   Endpoint endpoint   context getEndpoint uri   Producer producer   endpoint createProducer    Exchange exchange   endpoint createExchange    exchange getIn   setBody 'Hello World'   producer start    producer process exchange   producer stop    assertMockEndpointsSatisifed       TODO   Test using mocks requires many codelines to mock all the producer  endpoints etc     
0;Javadoc warnings   ;Get the javadoc warnings reported by the javadoc generator fixed    
0;Exception handling of the ErrorHandlerSupport class   ;When you configure your route builder and say you want to configure two exceptions lets say   NullPointer and Exception  Now say the bean you call as your end point throws a NullPointer  wouldn't you think the NullPointer policy would handle that exception? Well I'm seeing sometimes it does and sometimes it doesn't due to the map not keeping the exceptions in any particular order  Is there anyway this could be changed to a LinkedHashMap or a List?Issue with class   org apache camel processor ErrorHandlerSupport   
0;Improve FTP component wiki documentation   ;The wiki documentation for FTP usage could be improved with   java code examples  snippets in unit test classes  that you need the convertTo String class  for ASCII file transfer The FTP component is an extension of the File component so it inherits behaviour  features and options from file  State precise witch options a FTPProducer and FTPConsuer can use  Consuming using FTP there are special header keyvalues for the remote filename etc  that could be of interest for the end users  Maybe for the producer as well    
0;splitter   should have the same parallel processing functionality that multicast   has   ;Ability to havefrom 'direct  parallel'  splitter body   tokenize ' '   true  to 'mock  result'  where true parameter to splitter should behave like in multicast     processing is done in separate threads for each 'part'    
0;Improve File component wiki   ;I have added two missings options and then I discovered a few more missing so I am created this ticket so we get this done The File Component has several options we haven't documented on the wiki yet Also its javadoc should be improved And we should provide some better java samples on the wiki    
0;Upgraded to OpenJPA      ;OpenJPA in release   and onwards requires a change in the ant build in the pom xmlIt now requires a persistance xml file to use    
0;Invalid jar in binary distribution   ;The apachecamel jar in the binary distribution misses a lot of files  including class and schema files  k in size compared to the  M released jar     
0;Camel should raise an exception if parsing of xslt file fails   ;Consider a Camel route that involves an xslt component  When Camel sets up the route  the XsltBuilder ignores any errors coming from the xerces xml parser and continues constructing the route even though the xslt transformer is not initialized  Later when the route is executed Camel correctly checks if the transformer is initialized and raises an error if not  java lang IllegalArgumentException   No transformer configured!However in case of a parse error in the xslt file  the whole route becomes unusable and the setup routine that constructs the route should fail with an appropriate error message  A sanity check needs to be added in methodorg apache camel builder xml XsltBuilder setTransformerSource javax xml transform Source     
0;file endpoint with noop true does not detect old files moved into a directory   ;   
0;camelcore does not compile on HPUX   ;camelcoresrcmainjavaorgapachecamelmodelProcessorType java      inconvertible types found    org apache camel model ProcessorTypelt Typegt  required   org apache camel model InterceptTypecamelcoresrcmainjavaorgapachecamelmodelProcessorType java      inconvertible types found    org apache camel model ProcessorTypelt Typegt  required   org apache camel model InterceptTypecamelcoresrcmainjavaorgapachecamelmodelProcessorType java      inconvertible types found    org apache camel model ProcessorTypelt Typegt  required   org apache camel model InterceptTypecamelcoresrcmainjavaorgapachecamelmodelProcessorType java      inconvertible types found    org apache camel model ProcessorTypelt Typegt  required   org apache camel model InterceptType   
0;make it easier to create Endpoint instances nicely via Spring XML   ;right now its a bit tricky creating Endpoint instances in a spring XML using the lt beangt lt propertygt  mechanism It'd be nice to be able to configure them more easily as   lt bean id 'foo' class 'org apache camel component file FileEndpoint'gt  lt property name 'foo' value 'bar'gt     type stuff and have folks Spring IDE's smart complete stuff etc   
0;JMX Connector is not closed by InstrumentationAgentImpl doStop     ;   
0;Document  File component when its using file or directory names   ;Yes I think we need to document it much better how Camel handles this filefolder stuff when its consuming files producing filesIt's a bit confusing when Camel uses the unique message id for filename instead of the path from the URI    
0;Javadoc  improve summaries etc   ;The javadoc could use to be polished for eg  summaries statis the Apache license instead of a short brief summary what the classpackage does etc It's all the javadoc also for the components    
0;IntrumentationProcessor does properly record processing time   ;The InstrumentationLifeCycleStrategy inserts an InstrumentationProcessor interceptor at the end of a route which is intercepted after the processing has been done  The InstrumentationProcessor does not actually record the time spent on the route  It is fixed by inserting InstrumentationProcessor at the beginning of the route and wrapping all the outputs There two MBeans  ManagedRoute and PerformanceCounter  registered for each route eventhough ManagedRoute already extends PerformanceCounter  We probably only need to expose one MBean  The ManagedRoute MBean shows performance attributes and operations  since it extends PerformanceCoutner  but these performance related stuffs don't really work  This is fixed by registering only the ManagedRoute MBean and making the performance related attributes and operations functional This patch supports exposing all processors within a route as PerformanceCounter MBeans so that users are possible to monitor performance at the processor's level With this patch  the org apache camel spi package no longer depends CamelNamingStrategy of the org apache camel management management package  It follows the suggestion mentioned in https  issues apache orgactivemqbrowseCAMEL Another update is to following the JMX spec convention of including a 'type' property in the ObjectName  replacing the current 'groups' property   This patch also simplify the ManagedRoute's ObjectName a bit by removing builder and group properties  If for some reasons  they need to be in the ObjectName  please add them back    
0;camelcxf component not propagating context data   ;For POJO data formats the CxfProducer currently invokes the following method to invoke on a target serverresult   client invoke operation  parameters toArray    This fails to setup the Request and Response contexts for the out  request  message and in  response  message  It should instead be copying the relevant data from the consumer and invoking the following operation on the Client interfaceObject[] invoke BindingOperationInfo oi  Object[] params  Maplt String  Objectgt  context  throws Exception Likewise the PAYLOAD and MESSAGE data formats are not setting up their contexts before they call the dispatch operation  In fact there is comments in the current codebase     invoke the message prepare the context Maplt String  Objectgt  context   new HashMaplt String  Objectgt     Maplt String  Objectgt  requestContext   new HashMaplt String  Objectgt     Maplt String  Objectgt  responseContext   new HashMaplt String  Objectgt      TODO Get the requestContext from the CamelExchange context put CxfClient REQUEST_CONTEXT  requestContext   context put CxfClient RESPONSE_CONTEXT  responseContext  The fix should also include a fix for all three data format types   
0;XsltBuilder synchronizes on process method making performance bad on XSLTs   ;In heavy load environment XSLT transformations have very bad performance I propose to use javax xml transform Templates object to produce separate Transformers for every execution    
0;The spi package should not depend on the processor package   ;I have found one other problem in RouteContext  The method intercept uses the class Interceptor from processor  I think Interceptor should be an interface that should reside in spi or camel  So we could avoid referencing the processor package from spi When I look into the current Interceptor implementation I think the two main methods that need to be in the interface are process and proceed  Process can be inherited from Processor but proceed is only declared in the implementation class DelegateProcessor  So I think the clean way to handle this would be to create an interface DelegateProcessor and a spearate DefaultDelegateProcessor public interface DelegateProcessor extends Processor   ** * Proceed with the underlying delegated processor * public abstract void proceed Exchange exchange  throws Exception   and an interface Interceptorpublic interface Interceptor extends DelegateProcessor   public abstract void process Exchange exchange  throws Exception  public abstract Processor getInterceptorLogic    public abstract void setInterceptorLogic Processor interceptorLogic    When we put these to spi and use them instead of the implementations where possible the spi would not depend on processor anymore    
0;NPE from came  run with below route codes   ;With the following route   from 'timer  tutorial?fixedRate trueamp period '   setBody  constant 'lt ?xml version ' ' encoding 'UTF'?gt lt greetMegt Hello Worldlt greetMegt '    setHeader 'CBR'  constant 'No'   choice   when  header 'CBR'  isEqualTo 'Yes'   setHeader  'CreditcardValidation'  constant 'Yes'   to  'log  CBRBean?level INFO'  to 'log  XSLT for provider?level INFO'   when header 'CBR'  isEqualTo 'No'   setHeader  'CreditcardValidation'  constant 'No'   to  'log  XSLT for provider?level INFO'  end   choice    when header 'CreditcardValidation'  isEqualTo 'Yes'    to 'log  CCVBean?level INFO'  to 'log  XSLT for consumer?level INFO'  when  header 'CreditcardValidation'  isEqualTo 'No'    to 'log  XSLT for consumer?level INFO'  otherwise    to 'log  test?level INFO'  end   running mvn camel  run I get the following stack trace  java lang NullPointerException at org apache camel view NodeData lt initgt  NodeData java    at org apache camel view GraphGeneratorSupport getNodeData GraphGeneratorSupport java    at org apache camel view RouteDotGenerator printNode RouteDotGenerator java    at org apache camel view RouteDotGenerator printNode RouteDotGenerator java    at org apache camel view RouteDotGenerator printRoute RouteDotGenerator java    at org apache camel view RouteDotGenerator printRoutes RouteDotGenerator java    at org apache camel view RouteDotGenerator printRoutes RouteDotGenerator java    at org apache camel view RouteDotGenerator generateFile RouteDotGenerator java    at org apache camel view GraphGeneratorSupport generateFile GraphGeneratorSupport java    at org apache camel view GraphGeneratorSupport drawRoutes GraphGeneratorSupport java    at org apache camel spring Main generateDot Main java    at org apache camel spring Main postProcessContext Main java    at org apache camel spring Main doStart Main java    at org apache camel impl ServiceSupport start ServiceSupport java    at org apache camel spring Main run Main java    at org apache camel spring Main run Main java    at org apache camel spring Main main Main java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org apache camel maven RunMojo$ run RunMojo java    at java lang Thread run Thread java   the error seems related to the maven camel plugin failing generating the dot file for the route    
0;File component  noop does not lock the file during processing   ;The noop true option does not lock the file during processing as it states in its class javadoc  The parameter is false  It should be true instead  public NoOpFileProcessStrategy     super false       
0;camelspring is dependent on springaop   ;lt dependencygt  lt groupIdgt org springframeworklt groupIdgt  lt artifactIdgt springaoplt artifactIdgt  lt versiongt $ springversion lt versiongt  lt dependencygt is needed in pom xml for camelspring as its needed to let camelspring component work outofthebox  Without it the camelexamplespring does not work and blows up with a ClassNotFoundException when you use camel  run   
0;Multicast default excecutor do not create the enough thread for parallel processing   ;When I added the loan broker example CAMEL  I found there is no performance improvement when using the parallelly mulitcast After digging into to code  I found we should create the enough thread for the parallel processing    
0;CamelTemplate should clear endpoint cache when stopping   ;Only the producer cache is stopped and cleared  start and stop in camel template protected void doStart   throws Exception   producerCache start      protected void doStop   throws Exception   producerCache stop       stop in producer cache protected void doStop   throws Exception   ServiceHelper stopServices producers values     producers clear        
0;JMX Instrumentation  PerformanceCounter  total processed   ;William Tam  this one is for you The total processed time is not exposed to as a managed attribute  And it should be changed from double to long    
0;[patch] Make sure streams get closed   ;a couple places streams are opened and are not closed  patch fixes this    
0;Missing compile step in example readmes   ;I noticed that some examples that are run via mvn exec  java require that the example be compiled first  I've updated the readmes to include this step      
0;[patch] postpone creating browsing strategy until and only if its needed   ;code creates queue browsing strategy even if not needed  patch pushes creation down to relevant branch    
0;Change the JMX default connetor's URL to avoid the confilict with the ActiveMQ or ServiceMix JMX default connector   ;Since the Camel default JMX connector's URL is same with ActiveMQ and ServiceMix default JMX Connector URL  we need to change it to avoid the conflict    
0;Headers should be modifiable using velocity templates   ;See context at  http  www nabble comExchangeheadersinvelocitytds html   
0;ResequencerType createProcessor could throw NPE as stream config does not get initialized    ;java lang NullPointerException at org apache camel model ResequencerType createStreamResequencer ResequencerType java    at org apache camel model ResequencerType createProcessor ResequencerType java    at org apache camel model ProcessorType createOutputsProcessor ProcessorType java    at org apache camel model ProcessorType createOutputsProcessor ProcessorType java    at org apache camel model InterceptorRef createProcessor InterceptorRef java    at org apache camel model ProcessorType makeProcessor ProcessorType java    at org apache camel model ProcessorType addRoutes ProcessorType java    at org apache camel model RouteType addRoutes RouteType java    at org apache camel model RouteType addRoutes RouteType java    at org apache camel impl DefaultCamelContext startRouteDefinitions DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStart DefaultCamelContext java    at org apache camel impl ServiceSupport start ServiceSupport java    at org apache camel ContextTestSupport startCamelContext ContextTestSupport java    at org apache camel ContextTestSupport setUp ContextTestSupport java    at org apache camel processor ResequencerTest setUp ResequencerTest java    at junit framework TestCase runBare TestCase java    at junit framework TestResult$ protect TestResult java    at junit framework TestResult runProtected TestResult java    at junit framework TestResult run TestResult java    at junit framework TestCase run TestCase java    at junit framework TestSuite runTest TestSuite java    at junit framework TestSuite run TestSuite java    at org eclipse jdt internal junit runner junit JUnitTestReference run JUnitTestReference java    at org eclipse jdt internal junit runner TestExecution run TestExecution java    at org eclipse jdt internal junit runner RemoteTestRunner runTests RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner runTests RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner run RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner main RemoteTestRunner java      
0;File component  file rename pattern to support patterns such as date time etc    ;A very common use case is to copy received messages into files stored in a backup folder with sub folders named with the date pattern etc    
0;JMX Instrumentation  PerformanceCounter  last processed timestamp when failed   ;I thought about another real life use case we have at work once in a while a  when was the last time the integration worked?b  when was the last time the integration was invoked?We do have option a covered now with lastExchangeCompletionTime However I would like another timestamp for lastExchangeTime that is just a record the last time it was processed  even if it failed  PS   At work we do have to grep through logfiles in our legacy EIP platform    
0;DeadLetterChannel default redelivery policy eclipsed expected transactional behaviour in a transacted route   ;Camel routes get a DLC processor with a redelivery policy  which defaults to redeliverying a message to a destination processor up to  times  In case of a transacted route it is preferable that DLC's delivery policy be reset to a single attempt  so that a fanout transacted route would not hold tx locks on destinations for too long  The DLC's default redelivery policy has also made transactional tests not really testing tx behavior of Camel Components backed runtimes  jms brokers  etc   rather DLC would catch the exception and try to redeliver the message to destination processor and not letting the components to rollback native transactions initiated by components backed runtimes  jms  db The attached patch installs a property into Camel Exchange that indicates weather a route is transacted  This is done in org apache camel spring spi TransactionInterceptor javaDLC then checks if the flow is transacted and sets its redelivery policy to With this change JMS transactions are actually rolled back and messages are put back into the queue and then consumed again  verifying that brokers support transactions and can redeliver messages into Camel routes that were previously rolled back    
0;ResolverUtil can't resolve converter annotations in WebSphere     ;I have a simple hello world file based ESB that scans a folder for files  invoke a POJO and store the output as a file in another folder Deployed as a WAR file in WebSphere it seems as if Camel  SNAPSHOT can not load the converters needed to converter to String to InputStream for the FileProducer when it is about to store the file The logging output where the ResolverUtil can't find the annotated converters in camel jar itself[     ] DEBUG ResolverUtil [Thread    org apache camel component file FileComponent@adeade]   Searching for annotations of org apache camel Converter in packages   [org apache camel spring converter  org apache camel converter][     ] DEBUG ResolverUtil [Thread    org apache camel component file FileComponent@adeade]   Found   []And the stacktrace  org apache camel InvalidPayloadException   No in body available of type   java io InputStream but has value   This is important worktempcamelinREADME txtDone by me  of type   java lang String on   Message   This is important worktempcamelinREADME txtDone by me  on the exchange   Exchange[Message   This is important worktempcamelinREADME txtDone by me ] at org apache camel util ExchangeHelper getMandatoryInBody ExchangeHelper java    at org apache camel component file FileProducer process FileProducer java    at org apache camel component file FileProducer process FileProducer java    at org apache camel impl converter AsyncProcessorTypeConverter$ProcessorToAsyncProcessorBridge process AsyncProcessorTypeConverter java    at org apache camel processor SendProcessor process SendProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel processor DeadLetterChannel process DeadLetterChannel java      
0;jms aggregation does not work   ;I found this issue when I test Camel    RC kit  I just add a test case to show the error https  svn apache orgreposasfactivemqcameltrunkcomponentscameljmssrctestjavaorgapachecamelcomponentjmsAggregratedJmsRouteTest javaYou can reproduce the error if you remove the x character from xtestJmsMulticastAndAggregration   method BTW the test case works with the Camel    RC    
0;camelcxf example build xml is out of date   ;Need to update the build xml of examplecamelcxf to support run the examples of camel transport and web service provider API    
0;Bean method lost when sending a message from one JMS queue to another   ;I noticed a problem in JmsBinding java  If Camel has read a JMS message from a queue and that message has a bean method specified in the header  'org apache camel MethodName'   the method header will removed if that message is written to another queue  Here's the offending code    protected boolean shouldOutputHeader org apache camel Message camelMessage  String headerName   Object headerValue    return headerValue !  null amp amp  !getIgnoreJmsHeaders   contains headerName  amp amp  ObjectHelper isJavaIdentifier headerName     'org apache camel MethodName' fails the check isJavaIdentifier and is excluded from the headers written to the new message  I'm not sure the purpose of this check  but this might be an unintended side effect  The call chain is something like this   JmsProducer process JmsBinding makeJmsMessage JmsBinding appendJmsProperties JmsBinding shouldOutputHeader Update   Experimenting later with WebLogic's JMS  I noticed that WebLogic     does not allow this header name  Maybe this was the original motivation for this check  In order to be compatible with WebLogic  perhaps the method header name should changed to something like 'CamelMethod'  I believe this would correct both problems    
0;Component documentation  needs overhaul  check for missing options  add more samples javaspring  etc   ;Our extensive list of components needs to be checked for its state of current documentation standard in the wiki The should be checked for options headers they useset pitfalls samples both java and spring XML see also etcAnd whats the difference  relation to similar component  the http ones  the sql ones etc     
0;create a TransactionErrorHandler so you can easily  use a transaction  rollback on a route  with redeliveryDelay to just fail the route if it can't be processed   ;   
0;Transactional Client  Setting Spring Policy is a bit cumbersome in the XML   ;Currently you have to setup the transaction demarcation in the spring xml file as   lt bean id 'PROPAGATION_REQUIRED' class 'org apache camel spring spi SpringTransactionPolicy'gt  lt constructorarggt  lt bean class 'org springframework transaction support TransactionTemplate'gt  lt property name 'transactionManager' ref 'jmsTransactionManager'gt  lt beangt  lt constructorarggt  lt beangt to be able to use the policy from XML directly in the tag   lt camel  policy ref 'PROPAGATION_REQUIRED'gt We should support a neater syntax without the nested bean and constructor args    
0;Upgrade Geronimo specs to    when available   ;We should upgrade to the    version of the different Geronimo specs jar   they include the necessary OSGi metadata    
0;CXF  Feedback from Eduard on problems with CXF over JMS   ;See user forum  http  www nabble comFwdAUsingApacheCamelasTransportforApacheCXFwithSOAPoverJMStds html   
0;process method of should check ExchnagePAttern before setting out   ;   
0;ProducerTemplate doenst honor exchange pattern when it extracts the result   ;The code the extracts the result that is returned when you use the sendXXX  requestXXX methods on the producer template doens't honor the exchange pattern  protected Object extractResultBody E result    Object answer   null  if  result !  null    Message out   result getOut false   if  out !  null    answer   out getBody      else   answer   result getIn   getBody        return answer   It defaults to preferring out messages all the time  But in some circumstances the out body could be set to null but the real response is in the in body Setting the exchange pattern to InOnly doesn't honor this Maybe this ticket is a symptom of the MEP problem that we have in Camel  See the discussion on the dev forum    
0;transform   doesnt propogate headers   ;The new transform   DSL doesn't propogate headers so you can not do   from 'direct  four'   transform   constant 'London'   to 'mock  result'  And expect that any headers on the exchange at direct  four is received after the transform   
0;JMX Instrumentation  Nodeid can be null   ;The processors that is registered in JMX can have null in their id  So the JMX path is processor gt  null gt   Either we should replace null with unknown as we do for endpoints  Or try to fix that the id is generated    
0;CXF  Easier use for enduser to retreive POJO data   ;I am working on a web app example that uses CXF to expose a webservice During the process I thought that getting my POJO object  InputReportIncident  was a bit clumsy as I had to do  MessageContentsList list   exchange getIn   getBody MessageContentsList class   InputReportIncident in    InputReportIncident  list get   So I have created a patch that improves the getBody to be more enduser friendly You can now do  as you always do in Camel   InputReportIncident in   exchange getIn   getBody InputReportIncident class  Just cast it to what you expect and want to work with InputReportIncident is a POJO object generated by the CXF wsdljava generator Willem could you take a look? Maybe I have misunderstood the CXF and there is a easier way already  But I don't like the need to get the List and then get    to get my POJO Sending the response is already supported nicely    the response OutputReportIncident out   new OutputReportIncident    out setCode 'Bye Claus'   exchange getOut   setBody out     
0;FileProducer  consumes file instead of producing!   ;The strange code in the FileProducer that if the exchange is out capable it will poll the file instead bites us big time James must have had a beer and a fancy moment when he created the code  Something with a dynamic receipentlist where the endpoints should be polled from a file but the expression uses a Producer when the endpoints is created  For the file it should consume instead but it doesn't  Any basically it should consume instead It also bites us when we send an InOut exchange to the FileProducer it will not produce the file but consume it and there is no file so nothing happens This codepublic class FileBackupTest extends ContextTestSupport   public void testMailGeneration   throws Exception   MockEndpoint mock   getMockEndpoint 'mock  result'   mock expectedMessageCount    template requestBody 'seda  mails'  'Hello World'   mock assertIsSatisfied      protected RouteBuilder createRouteBuilder   throws Exception   return new RouteBuilder     public void configure   throws Exception   from 'seda  mails'   to 'file  targetmails'   to 'mock  result'         Would not create a file in targetmails folder as we are using template request that is an InOut MEP I will fix it by removing the strange consumer code in the FileProducer and change the fancy dynamic recepientlist test  SimulatorTest   to not use file based endpoints It could be a blocker for the   release and we should consider creating a new RC!   
0;Change default DeadLetterChannel strategy in Camel   ;The current DLC strategy in Camel is to retry  times with  sec delay  If still failed it will be moved to a log WARN This default behavior is not feasible for most endusers  in fact none  We should have a better default strategy in Camel Also we should force endusers to setup a strategy from the start And we should improve this in the documentation so endusers is aware of this    
0;Log component should use ExchangeFormatter for formatting log output   ;Currently log component only logs the payload  We have a nice ExchangeFormatter that can format an exchange with all kind of options The options could be enabled on the log component so you can customize your logging  Also there should be a multiline option to the exchange formatter so it can log all the stuff on multi lines if for instance there are many options  they get very long    
0;CXF  wrapperunwrapper  camelcxf should be smarter   ;Willem knows what this is  See chat log on the july Basically getBody   should be smart in what kind of situation you are using CXF    
0;Exception on using WSAddressing with Apache Camel as Transport   ;Not sure if this is a bug in CXF or Camel  Please see attached sample project INFO   Interceptor has thrown exception  unwinding noworg apache cxf binding soap SoapFault   A header representing a Message Addressing Property is not valid and the message cannot be processed at org apache cxf ws addressing MAPAggregator mediate MAPAggregator java    at org apache cxf ws addressing MAPAggregator handleMessage MAPAggregator java    at org apache cxf phase PhaseInterceptorChain doIntercept PhaseInterceptorChain java    at org apache cxf transport ChainInitiationObserver onMessage ChainInitiationObserver java    at org apache camel component cxf transport CamelDestination incoming CamelDestination java    at org apache camel component cxf transport CamelDestination$ConsumerProcessor process CamelDestination java    at org apache camel impl converter AsyncProcessorTypeConverter$ProcessorToAsyncProcessorBridge process AsyncProcessorTypeConverter java    at org apache camel component direct DirectProducer process DirectProducer java    at org apache camel processor SendProcessor process SendProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel processor DeadLetterChannel process DeadLetterChannel java    at org apache camel processor DeadLetterChannel process DeadLetterChannel java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel component jms EndpointMessageListener onMessage EndpointMessageListener java    at org springframework jms listener AbstractMessageListenerContainer doInvokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer invokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer doExecuteListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer doReceiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer receiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker invokeListener DefaultMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker run DefaultMessageListenerContainer java    at java lang Thread run Thread java      
0;Propagated CXF header's value should not include quotes   ;CAMEL fixed the issue of not propagating transport headers  e g  SOAPAction  but it looks like we added quotes around the value  i e  getCustomer becomes 'getCustomer'   I updated the CustomerServicesTest to illustrate the problem  Also  I cleaned up the clientserverapplication xml    
0;JMX Instrumentation  check for already registered before registering   ;Camel does not check for already registered mbeans  There can be shared endpoints in the camel routes etc We used to have an instance count and everything but at the end a jms endpoint such as 'activemq  topic  orders' can be reused in several routes and we should in fact only register it once    
0;When getContext   addInterceptorStrategy new Tracer      is added in a RouteBuilder class  then the timer component does not work   ;When getContext   addInterceptorStrategy new Tracer    is added in a RouteBuilder Class  then the timer component does not start e g  public class RouteBuilder extends RouteBuilder   getContext   addInterceptorStrategy new Tracer     public void configure     from 'timer  export'   to 'bean  myBean'        
0;After the downloading process  the layout of the remote file system doesn't match the local's one   ;When downloading a directory with a complex layout  mutli level directory   the downloaded files do not reflect the local onemore info here http  www nabble comFTPcomponentAPossiblebugtds html   
0;Camel transport should set the content type property into the camel message header   ;Eduard Hildebrandt logged a JIRA   in CXF  it is actually a camel transport issue https  issues apache orgjirabrowseCXF   
0;CamelConduit's should check the TargetReference when create its instance   ;CAMEL shows a wsaddress error when using Camel transport for CXF After running the code   I found there is no To address tag generated in the soap header  It was caused by the CamelConduit can set right targe reference    
0;xpath expression with $header and the header doesnt exist on the in message results in NPE   ;Using the $headerkey shorthand for xpath expression throws a NPE if the headerkey doesn't exists on the in message We should try to find a better workaround for key doesn't exists  The NPE is thrown by SUN in their xpath engine Check nabble  http  www nabble comCamelXPathandnovariablesfoundinMessageVariableResolverWhatshouldCameldotds html   
0;AMQP Tests are disabled   ;The AMQP tests are currently disabled  Adding an older version of MINA  than Camel uses  amp  commons lang to the classpath got the tests passing except for ObjectMessage type test Sending a TextMessage and BytesMessage work fine so I'm opening up a separate JIRA for the ObjectMessage issue    
0;CamelContext's setErrorHandler is not effect when the jmx agent is disabled   ;The example applications from Camel   source distribution work correctly on my machine  After comparing the sample Spring XML configuration and my Spring configuration  I noticed there is no jmxAgent element in the sample XML where my configuration has this element  The problem I noticed was that when the disabled attribute of the jmxAgent element is set to true  the redelivery policy does not work  http  www nabble comDeadLetterChannelConfigurationCamel tds htmla   
0;InstrumentationProcessor should catch Throwable   ;The InstrumentationProcessor currently only catches exception and sets it in the exception  Runtime errors and throwables can be thrown all the way out of the DeadLetterChannel's process method  out of the reach of exception policy    
0;Pipeline with thread   processor also redelivers following the default policy independently from the preset  errorhadling   ;When using the thread processor in a simple pipeline  the exchange will be redelivered  times  default policy  along with the preset errorhandler settings  The code below will redeliver  times to the default DeadLetterChannel and once to the log  errorTester  errorHandler deadLetterChannel 'log  errorTester?level ERROR'  maximumRedeliveries     from 'seda  whatEver'   thread    process new Processor     public void process Exchange exchange  throws Exception   System out println ' Exchg    ' + exchange getExchangeId     throw new Exception 'Kaboom !'           
0;MinaConsumerTest failure   ;The test fails with the following error  junit framework ComparisonFailure   expected  lt  Bye World gt  but was  lt []gt  at junit framework Assert assertEquals Assert java    at junit framework Assert assertEquals Assert java    at org apache camel component mina MinaConsumerTest testSendTextlineSyncText MinaConsumerTest java      One test sends sync the text 'World' and the should receive 'Bye World' in response        DEBUG MinaProducer  Message received   Bye World        DEBUG MinaProducer  Message received          DEBUG MinaProducer  Message received   Bye        DEBUG MinaProducer  Message received   There are actually not one  but two messages received which causes the reply to be overridden by the second message  The problem is with the test itself that actually returns 'Bye ' + body + 'n'! Because the test uses the 'textline' mina codec  the encoder actually adds another 'n'  With the textline codec there's one message per line  so the extra n makes it two lines and hence the extra message  The decoder at the other end suppresses the LineDelimiter  n   so the extra message is actually an empty string Removing the extra n in the message fixes the test  but the notes above should be considered when camelmina is used with the textline codec    
0;HttpProducer premature out message creation   ;I believe there is incorrect flow in the HttpProducer which can subvert error handling in the route  in Camel    in HttpProducer on line  a 'blank' out message is set on the exchange  Message out   exchange getOut true   try   int responseCode   httpClient executeMethod method       If an IO error occurs on connect  the out message will be passed to the error handling code and if the originating endpoint was a JmsMessage it will cause an NPE when JmsMessage getMessageId   is called  It also obscures the offending message I believe   A similar situation will happen if the HTTP service returned an error code  the out message will contain a reply message even though the processing resulted in an error  e g  HTTP Status     Also  shouldn't this code test whether the exchange expects an 'out' altogether  and if not  perhaps  put just put the return HTTP status into the 'in' message header Bill   
0;delayer pattern doesn't work in Spring DSL   ;You can't configure the delayer pattern properly in the Spring DSL currently  I will be attaching a patch for this shortly    
0;support to set the loadBalancerStrategy before the outputs   ;Current Camel only support the set the LoadBalancer Strategy after the outputs like this lt camelContext id 'camel' xmlns 'http  activemq apache orgcamelschemaspring'gt  lt routegt  lt from uri 'direct  start'gt  lt loadBalancegt  lt to uri 'mock  x'gt  lt to uri 'mock  y'gt  lt to uri 'mock  z'gt  lt roundRobingt  lt loadBalancegt  lt routegt  lt camelContextgt It should be much better with the below configuration filelt camelContext id 'camel' xmlns 'http  activemq apache orgcamelschemaspring'gt  lt routegt  lt from uri 'direct  start'gt  lt loadBalancegt  lt roundRobingt  lt to uri 'mock  x'gt  lt to uri 'mock  y'gt  lt to uri 'mock  z'gt  lt loadBalancegt  lt routegt  lt camelContextgt    
0;Should preserve the exchange type in the routing slip   ;Currently  the routing slip will create a new InOut exchange for each target based on the target endpoint type  This means that someone calling from a jbi endpoint  or other endpoint with custom exchange  into the routing slip will have their exchange type changed  to mostly likely DefaultExchange   I will be including a patch to fix this issue shortly    
0;File component  write to temp file and rename to real name startegy   ;When producing files an idea is to write to a temp file that has a name pattern that will be skipped by consumers  such as starting with a dot  and then after the write rename the file to the correct name Then the consumers wont need to use exotic locking to get exclusive read access to the file  Works on all file systems There is a nabble discussion on this issue somewhere    
0;Trailing slash missing in SftpConsumer   ;When this route  lt camel  routegt  lt camel  from uri 'sftp  someuser@hostnamepathtodirectory?password secretamp amp directory trueamp amp binary trueamp amp consumer useFixedDelay falseamp amp consumer setNames trueamp amp consumer recursive false' gt  lt camel  to uri 'file  C  cameloutput' gt  lt camel  routegt is configured the files in the remote directory are download  but subsequent calls of the method 'pollDir' result in this exception  [ Thread    RemoteFileComponent] SftpConsumer WARN Caught SftpException     No such file[ Thread    RemoteFileComponent] SftpConsumer WARN Doing nothing for now  need to determine an appropriate action[ Thread    RemoteFileComponent] ScheduledPollConsumer WARN An exception occured while polling   Endpoint[sftp  someuser@hostnamepathtodirectory?password secretamp amp directory trueamp amp binary trueamp amp consumer useFixedDelay falseamp amp consumer setNames trueamp amp consumer recursive false]   No such file    No such fileAs you can see the slash is definitely in the configured route  If I check for the missing slash and add it to the dir variable  line  in SftpConsumer  then the consumer works   if !dir startsWith ''     dir   '' + dir   Didn't have the time to have a closer look  The root cause of the missing slash is somewhere else    
0;Type Converter  if not possible to convert LOG a WARN   ;An enduser had a route that didn't work and had trouble figure out the problem  Could be the fact that the type converted failed for some reason and no trace in his log We should add some DEBUG logging to the type converter stuff what it does  especially in cases where it cant convert http  www nabble comMarshalingjdbcoutputwithxstreamtds htmlNotice we have another ticket about type converters should fail instead of returning null etc    
0;mina should be exchange pattern agnostic   ;Currently the camelmina component silently ignores exchanges that is not out capable even though its configured for sync true  InOut What it does now is setting the sync option itself depending on the exchange type    
0;Current mina component can't tansfer the exchange fault message body   ;I just found MinaTransferExchangeOptionTest don't show how to set fault message and the fault message is not a part of MinaPayloadHolder You can't set the exception on the exchange in the processor   sine the camel DeadLetterChannel will try to redeliver the message So we just need to support put the exception which need to send back to the camel client into the fault message body    
0;splitter   should support batch for processing large files   ;See nabble  http  www nabble comSplitterforbigfilestds htmlSomekind of batch size  parameter to the splitter   DSL so we can process the exchanges in batches instead of all in one go    
0;Access HttpRequest Params from exchange in header   ;Currently  you can only get the http request parameters by using a getHttpRequest   on the HttpExchange and thus you need java code and can't do it from the Spring XML configuration using simple expression language  e g  if the request is http  localhost  test?x   then the following route should result in  being returned in the body of the html response  lt routegt  lt from uri 'jetty  http  localhost  test' gt  lt setBodygt  lt simplegt lt htmlgt lt bodygt $ in header x lt bodygt lt htmlgt lt simplegt  lt setBodygt  lt to uri 'mock  end'gt lt routegt    
0;camelmina  codec options should fail if not possible to find i registry   ;If you configure the codec option on camelmina and you eg make a spelling mistake camel will default to Mina default protocol if not found  We should throw an exception instead so end user knows about this and can fix his spelling mistake    
1;SftpEndpoint ignores custom ssh port   ;SftpEndpoint ignores custom ssh port  It works only if server runs on port     
0;element should not require contextPath attribute   ;In the Java DSL  you can say from 'foo'  marshal   jaxb   to 'bar' In XML I think it would look like this  lt from uri '   ' gt lt marshalgt  lt jaxb gt lt marshalgt lt to uri '   ' gt The problem is that you can't use the lt jaxb gt  element without the contextPath attribute  which the XSD says is required    
0;The should throw the exception if there is some thing wrong with  type attribute   ;If you specify an invalided class name in the convertBodyTo@type  you will get a NPE error  but no detail log information for the type attribute We need to throw the exception for user to locate the error    
0;JmsProducer  option requestTimeout isn't configured properly   ;When sending a JMS message to a destination using cameljms  JMSProducer  I can't get it to use my requestTimeout option in the endpoint configuration  It always default to  template requestBody 'activemq  queue  slow?requestTimeout '  'Hello World'  This doesn't work as expected with a timeout of only  sec    
0;camelcxf component is not passing request context through correctly   ;CxfProducer process   is not setting up the request context correctly during createCxfMessage  so later in that method propagateContext has no request data to propagate  Also  we need the exchange properties to be added to the request context  so that noncamel components can pass properties into the cxf request context I have coded a fix for this  along with a unit test of course  I'll attach the patch to this JIRA    
0;file component consumer regexPattern does not work as expected  matching is applied not only to file  but also to directory    ;file component consumer regexPattern does not work as expectedexample    from 'file  d  the_input_dir?consumer regexPattern  * xml$' to whatever  should match only files  that has extention  xml the result of the above regexPattern is  that no file will be proccessed  regardless if an existing filename matches the pattern FileConsumer pollFileOrDirectory   applies the regexPattern on the starting directory  the_input_dir  which will not match    
0;Remove deps on persistenceapi jar  non compliant with the spec   ;I mentioned a while ago a warning I couldn't explain in eclipse related to the use of @UniqueConstraint in cameljpa It turned out to be due to the fact that cameljpa has a dependency on persistence api  but used for testing openjpa that has a dependency on geronimojpa_ _spec  So cameljpa pulls in two different implementation of the same spec  So far so good  It also turns out that the definition of the @UniqueConstraint annotation is different in the two jars  the persistenceapi  and the cameljpa code as implemented  being non spec compliant  I found other inconsistencies in the persistenceapi impl and it seems to be based on an older version of the spec  More precisely persistence api annotates the @interface UniqueConstraint with @Target  TYPE   whereas the spec and the geronimo impl use   @Target     My recommendation is to replace the dependency on persistenceapi with the geronimo version  I will commit a change for this in the next hour or so  but leave this issue open  If anybody has any objections please shout and I will revert the change    
0;tracer  option to disable interceptors   ;Currently the tracer also outputs interceptors such as delegation to the DLC that is wrapped in the pipeline Would be nice with an option to enabledisable this  disabled by default  so all the interceptors isn't logged and confuses endusers    
0;Manage nonsingleton endpoints in the CamelContext   ;So that we can manages JMS endpoint for instance  that are not singletons    
0;camelspringrest does not build on HPUX   ;I'm getting the following error from camelspring on the HPUX platform  I should be able to reuse a fix I made to a similar problem in CAMEL          ERROR  FATAL ERROR          INFO            INFO  comsunmirroraptAnnotationProcessorFactory          INFO            INFO  Trace         java lang NoClassDefFoundError   comsunmirroraptAnnotationProcessorFactory         at com sun tools jxc maven SchemaGenMojo execute SchemaGenMojo java            at org apache maven plugin DefaultPluginManager executeMojo DefaultPluginManager java      
0;Inconsistency in recipient list documentation?   ;The mail thread at http  tinyurl combqre seems to contradict the documentation at http  activemq apache orgcamelrecipientlist html   not sure if this is a doc issue  or a camel behavioural issue    
0;JMS InOut operations should default to non transacted even if the JMS component or endpoint defaults to transacted  as typically RPCs over JMS are not transacted   ;currently there is no automatic transaction commit inside the send of the request when doing InOut with JMS  so the transaction won't commit if the componentendpoint is transacted  then the message won't reach the request and things will time out This will be confusing to users So if things are transacted  lets default to using nontransacted for InOut  and force a new property  transactedInOut to allow that to be transacted if folks really want that  which they usually won't I'd have thought     
0;loggingErrorHandler should default to ERROR and LoggingErrorHandlerBuilder should operate as a builder   ;Please see attached patch which changes the default level created by the LoggingErrorHandlerBuilder to ERROR instead of INFO Also some of the methods on this builder to not return 'this'  This breaks the chain when attempting to use the builder resulting in  LoggingErrorHandlerBuilder errorBuilder   loggingErrorHandler 'my logger name'  errorBuilder setLevel LoggingLevel ERROR  errorHandler errorBuilder  instead of  errorHandler loggingErrorHandler 'mylogger name'  level LoggingLevel ERROR   I have added on builder methods for 'level' and for 'log'  I have left the properties that currently exist as following the pattern on DeadLetterChannelBuilder the builder method names should not include 'set'  Whoever applies the patch may wish to remove the getters and setters  depending how they feel this will affect existing users    
0;CamelContext setRoutes   documentation is misleading   ;The javaDoc for CamelContext setRoutes   states  'Sets the routes for this context  replacing any current routes'Yet when used  and the context started  startRouteDefinitions   is used first  causing any existing routes created through the definitions  such as those from RouteBuilders  to be recreated and started before the new routes provided to setRoutes   are started    
0;createConnector attribute for CamelJMXAgentType should default to 'true'   ;   
0;TypeConverter Exception is thrown in the latest build of camel   ;I have upgraded to the latest of Camel and when I attempt to use the content based router pattern  its now throwing an error The contents of the Message passed is a StringSource object and from debugging camel  the BodyType is a StringSource but it is attempting to convert from a StreamCache to a StringSource  I will try and put a testcase together but if anyone has any ideas of its cause in the meantime ?The error it throws it below thanks  Edell No type converter available to convert from type   class org apache servicemix camel JbiMessage to the required type   org wc dom Document with value JbiMessage   org apache servicemix jbi runtime impl NormalizedMessageImpl@dbborg apache camel NoTypeConversionAvailableException   No type converter available to convert from type   class org apache servicemix camel JbiMessage to the required type   org wc dom Document with value JbiMessage   org apache servicemix jbi runtime impl NormalizedMessageImpl@dbb at org apache camel impl converter DefaultTypeConverter convertTo DefaultTypeConverter java    at org apache camel impl converter DefaultTypeConverter convertTo DefaultTypeConverter java    at org apache camel impl MessageSupport getBody MessageSupport java    at org apache camel impl MessageSupport getBody MessageSupport java    at org apache camel builder xml XPathBuilder getDocument XPathBuilder java    at org apache camel builder xml XPathBuilder evaluateAs XPathBuilder java    at org apache camel builder xml XPathBuilder matches XPathBuilder java    at org apache camel builder xml XPathBuilder matches XPathBuilder java    at org apache camel processor ChoiceProcessor process ChoiceProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel processor DeadLetterChannel process DeadLetterChannel java    at org apache camel processor DeadLetterChannel process DeadLetterChannel java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache servicemix camel CamelProviderEndpoint handleActiveProviderExchange CamelProviderEndpoint java    at org apache servicemix camel CamelProviderEndpoint process CamelProviderEndpoint java    at org apache servicemix common AsyncBaseLifeCycle doProcess AsyncBaseLifeCycle java    at org apache servicemix common AsyncBaseLifeCycle processExchange AsyncBaseLifeCycle java    at org apache servicemix common AsyncBaseLifeCycle processExchangeInTx AsyncBaseLifeCycle java    at org apache servicemix common AsyncBaseLifeCycle$ run AsyncBaseLifeCycle java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java      
0;camelmail  type converter to InputStream   ;camelmail need a type converter to InputStream Currently we have type converters to StringSee nabble  http  www nabble comProcessMailAttachmentInvalidPayloadExceptionCamel  tds html   
0;FileLanguage  to support constant expressions   ;Currently the simple language does not support constant expressions  that actually is useable in the file component that uses simple language to set file namesSo if an enduser want to produce a file with a fixed name  then its not possibleexpression MyBigFile txt Is not possible But this is  expression MyBigFile$ header foo  txt is as there is a $   placeholder and then the simple language can evaluate it    
0;BeanInfo  should consider overridden methods when selecting method from operations list   ;See nabble  http  www nabble comBeanInfo chooseMethodWithMatchingBodythrowsanAmbiguousMethodCallExceptionwhentheresnoambiguitytds html   
0;bean binding  annotation to get the exception from exchange   ;If you are doing error handling using POJO beans to do some error handling code and using bean binding annoations to get the stuff from the exchange  we are missing an annotation to get the caused exceptionSuch as a @Exception or @Fault if that is a better nameSee nabble  http  www nabble comErrorHandlerandOutHeaderstds htmljstrachan using @Exception or @Fault or whatever on a bean method call to pull out the Exchange's faultexception right?    jstrachan if so definitely!   
0;Maven goal camel  dot should use overridden  when specified   ;Maven goal camel  dot should use overridden lt mainClassgt  when used as in pom xml   lt buildgt  lt pluginsgt  lt ! Allows the routes to be run via 'mvn camel  run' gt  lt plugingt  lt groupIdgt org apache camellt groupIdgt  lt artifactIdgt camelmavenpluginlt artifactIdgt  lt versiongt $ pom version lt versiongt  lt ! optional  default value   org apache camel spring Main gt  lt configurationgt  lt mainClassgt mypackage boot camel CamelStartuplt mainClassgt  lt configurationgt  lt plugingt  lt pluginsgt  lt buildgt    
0;Component spring 'event' is not auto registered by Camel  Add a Event file in the folder METAINFservicesorgapachecamelcompoment of camelspring   ;Component spring 'event' is not auto registered by Camel  Add a Event file in the folder METAINFservicesorgapachecamelcompoment of camelspring    
0;Http producer should be smarter to select correct GET or POST method   ;The code in HttpProducer should be smarter to select the correct method to use Algorithm    if the method is provided in a header  GET if a querystring is provided in a header  GET if endpoint is configured with a query string  POST if there is data to send  GET fallback to getAlso the HttpOperationFailedException is missing a message  so you get the error code and description in the stacktrace   
0;Quartz support should allow stateful jobs   ;See http  www nabble comClusteredQuartztds htmlCurrently Quartz only has CamelJob which implements Quartz's Job interface  There is no option to use an implemenation of StatefulJob  This causes problems when you may want to use a JDBC JobStore and have Quartz running on multiple machines  as you may end up with multiple jobs running together  StatefulJob in effect allows for a blocking singleton style job on one machine Attached is a patch which adds a new URI parameter named 'stateful'  which defaults to false  When set to true it uses StatefulCamelJob One significant change to the QuartzComponent is that a reference to the CamelContext is now stored in the Quartz Scheduler  This idea is taken from Spring's SchedulerFactoryBean which stores a reference to a Spring ApplicationContext  This is needed as when using stateful jobs the URI of the Endpoint is stored instead of a reference to the endpoint  This is to allow for the use of JDBC JobStore as the URI can be serialised and shared beteen participating schedulers Current Faults  Still has no notion of volatilityDifference in operation between CamelJob and StatefulCamelJob is not strictly needed  It may be less confusing if both versions simply store the URI instead of an endpoint reference You need to use stateful if you want to use clustering at all due to the reason above  This is mixing together clustering support and blocking functionality In Camel  we may want to try rewriting this Component as it is becoming a little messy  It would be nice to try and harness the power of Spring's SchedulerFactoryBean    
0;camel http Uri from the message header   ;Imagine a use case when the target systems  where http messages have to be sent to  are maintained in a database  In that case the http uri is cannot be set in the camelcontext but it should come from the header of the message So the http client should check first if there is an uri in the header and if not than use the one given in the camelcontext  like for querystring     
0;camel  dot  pipeline is drawn as a multicast   ;And it has a few other areas as well that could be polished    
0;Add ability to configure log level on exceptions from DLC retry mechanism   ;Right now  when Camel tries to redeliver an message a number of times  using the DLC   the exceptions are logged as ERROR  Sometimes though  these retries may be considered part of normal operation  I'm going to put in DSL options to configure this log level  Something like this will be possible  onException AException class  maximumRedeliveries    retriesExhaustedLogLevel LoggingLevel DEBUG   retryAttemptedLogLevel LoggingLevel DEBUG   process new MyExceptionProcessor 'I got an Exception '      
0;Add support to tracer for logging out messages   ;   
0;Passive mode   ;There should be an option to enable passive mode in the ftp endpoint  If not  when deploying the camel rules on a host with a firewall the default active mode is useless    
0;spring integration xsd change breaks component   ;Thread is here http  www nabble comHEADSUPcamelspringintegrationissuetds html   
0;XQuery creates an empty out message that makes it impossible to chain more processors behind it   ;When using XQuery the getOut   function is called on the message so if it is not used at a place where the out is filled an empty out message will be created  With this xquery cannot be used for example in setBody  setHeader    and anywhere where the out is not filled An example where this causes real trouble  lt choicegt  lt whengt  lt xquerygt    lt xquerygt  lt to uri 'direct  follow' gt  lt whengt lt choicegt    lt from uri 'direct  follow'gt lt to    gt lt to    gt In the patch the out property in the xquery context is filled only if it is not null  With it all of my pipelines seem to work well for me    
0;PipelineConcurrentTest java fails randomly   ;The test fails with an IllegalStateException   Queue full  I believe the reason for this is that there are  messages sent  but the default queue size is   On a fast machine  the queue fills up before the consumer gets a chance to pop the messages from the queue    
0;org apache camel Message  hasAttachments is buggy   ;I must use if  exchange getIn   getAttachments   size   gt     Instead of if  exchange getIn   hasAttachments     As the latter always returns false  Or at least returns false even though the size is gt     
0; unmarshal new JaxbDataFormat 'com foo bar'   returning JAXBElement   ;using  unmarshal new JaxbDataFormat 'com foo bar'  is returning a JAXBElement instead of the desired object that was generated by xjc    
0;Remove specialized Exchange and make DefaultExchange final to pave the road for optimization by reducing exchange copies   ;The code in DefaultEndpoint createExchange Exchange exchange   calls on getExchangeType   to figure out if a new copy of Exchange needs be created  The code relies though on the generic argument of the Endpoint type to figure out the actual Exchange type  With the generics removed part of CAMEL  getExchangeType   always returns null  forcing a copy every time There is no real need to extend Exchange  so the proposal for this to make the Exchange final and move the component specific bits  if any  in the Message    
0;Can't get the soap header when the camelcxf endpoint working in the PAYLOAD data fromat   ;When I added a unit test to show how to get the SOAP header from a PAYLOAD camelcxf endpoint   I found the soap header stuff is not working    
0;ThroughputLogger incorrectly reports duration    ;from the apachecamelload test          mponent@dd  INFO aset  myDataSet?produceDelay   Sent    messages so far  Last group took    millis which is     messages per second  average    The ThroughputLogger used by DataSet resets the duration before reporting it    
1;jetty endpoints ignore host specified in URI and expose an endpoint on all interfaces   ;http  www nabble comJettyandMinaAhowtobindtoanylocalAKAwildcardaddresstpsp html   
0;cameljetty  Exchange failures should not be returned as    ;The code below   protected RouteBuilder createRouteBuilder   throws Exception   return new RouteBuilder     public void configure   throws Exception   errorHandler noErrorHandler     from 'jetty  http  localhost  myappmyservice'  process new MyBookService            public class MyBookService implements Processor   public void process Exchange exchange  throws Exception   throw new IllegalArgumentException 'Damm'      Will return http response code   We should let end users easily set what response code they want and in case of route failures we should probably return  and return the stracktrace in the body   
0;Delayer not working as expected    ;The delayer expression is not evaluated in my route builder  from waitQueueName  delayer header HEADER_EXECUTION_TIME   bean routerBean  recipientList header HEADER_TARGET_ROUTE   While the recipientList expression is working the header expression is always ignored  I stepped through the code and saw that in DelayerType createAbsoluteTimeDelayExpression   'expr getLanguage  ' is always null   private Expression createAbsoluteTimeDelayExpression RouteContext routeContext    ExpressionType expr   getExpression    if  expr !  null    if  ObjectHelper isNotNullAndNonEmpty expr getLanguage       return expr createExpression routeContext       return null   I have seen that this was changed in     http  issues apache orgactivemqbrowseCAMEL     
0;Spring DSL  redeliveryPolicy element should have ref attribute   ;I'd like to be able to create reusable RedeliveryPolicy's in Spring and refer to them in Camel's Spring DSL  This is to achieve two goals   I can use the Spring PropertyPlaceholderConfigurer to enable us to tune timeouts and redelivery in production  we cannot do that with Camel's Spring DSL  I can have several routes sharing the same RedeliveryPolicy  but possibly with different exceptions  There doesn't seem to be a way to share RedeliveyPolicy's between onException elements  meaning it needs to be duplicated  at least not that I could find in the docco For example  I'd like to do something like this   lt bean id 'redeliveryPolicy' class 'org apache camel processor RedeliveryPolicy'gt  lt property name '   ' value $ property placeholder gt  lt beangt  lt camelContextgt  lt routegt  lt from uri 'somewhere'gt  lt onExceptiongt  lt exceptiongt ExceptionAlt exceptiongt  lt redeliveryPolicy ref 'redeliveryPolicy'gt  lt to uri 'deadLetter'gt  lt onExceptiongt  lt to uri 'unreliableEndpoint'gt  lt routegt  lt routegt  lt from uri 'xyz'gt  lt onExceptiongt  lt exceptiongt ExceptionAlt exceptiongt  lt redeliveryPolicy ref 'differentRedeliveryPolicy'gt  lt to uri 'differentDeadLetter'gt  lt onExceptiongt  lt to uri 'unreliableEndpoint'gt  lt routegt  lt routegt  lt from uri 'somewhereElse'gt  lt onExceptiongt  lt exceptiongt ExceptionBlt exceptiongt  lt redeliveryPolicy ref 'redeliveryPolicy'gt  lt to uri 'deadLetter'gt  lt onExceptiongt  lt to uri 'anotherUnreliableEndpoint'gt  lt routegt  lt camelContextgt Thanks!   
0;camelhttp  does not remove httpClient xxx URI options   ;When using the options to configure httpClient using URI option  they should be removed from the uri that is left over to the HTTPProducer http  someserver?httpClient soTimeOut should remove the httpClient xxx so it'shttp  someserver   
0;ParallelProcessing and executor flags are ignored in Multicast processor   ;The parallelProcessing and executor arguments are ignored in the constructor of MulticastProcessor  Here is a call that MulticastType makesorg apache camel model MulticastType java return new MulticastProcessor list  aggregationStrategy  isParallelProcessing    threadPoolExecutor  MulticastProcessor ignores parallelProcessing and executor arguments and invokes a chain constructor with '   false  null   'org apache camel processor MulticastProcessor java public MulticastProcessor Collectionlt Processorgt  processors  AggregationStrategy aggregationStrategy  boolean parallelProcessing  ThreadPoolExecutor executor    this processors  aggregationStrategy  false  null  false     public MulticastProcessor Collectionlt Processorgt  processors  AggregationStrategy aggregationStrategy  boolean parallelProcessing  ThreadPoolExecutor executor  boolean streaming    notNull processors  'processors'   this processors   processors  this aggregationStrategy   aggregationStrategy  this isParallelProcessing   parallelProcessing  if  isParallelProcessing    if  executor !  null    this executor   executor    else    setup default Executor this executor   new ThreadPoolExecutor processors size    processors size      TimeUnit MILLISECONDS  new ArrayBlockingQueuelt Runnablegt  processors size          this streaming   streaming   Attached a patch but have not tested it  Also need a unit test for this    
0;Camel should propagate exception cause in InOnly scenarios   ;In the case an exception is handled by the DeadLetterChannel  Camel will currently set the exception to null and add an exchange property containing the exception  We should also add this as a message header so that it will be propagated to external services  like a JBI service    
0;CxfExchange does not copy unit of work and thus its null and thus NPE is thrown   ;William could you check this error reported by end userSee nabble  http  www nabble comUnitOfWorktds html   
0;camelmina adds two versions of slfj on the classpath   ;One version comes from camelmina  version     and one from minacore  version      This causes problems as seen when trying to use camelmina at runtime or in my case deploying to ServiceMix  This is the error I getorg apache xbean kernel ServiceRegistrationException   java lang NoSuchFieldError   name at org apache xbean kernel standard ServiceManagerRegistry registerService ServiceManagerRegistry java    at org apache xbean kernel standard StandardKernel registerService StandardKernel java    at org apache xbean server spring loader SpringLoader load SpringLoader java    at org apache servicemix common xbean AbstractXBeanDeployer deploy AbstractXBeanDeployer java    at org apache servicemix camel CamelSpringDeployer deploy CamelSpringDeployer java    at org apache servicemix common BaseServiceUnitManager doDeploy BaseServiceUnitManager java    at org apache servicemix common BaseServiceUnitManager deploy BaseServiceUnitManager java    at org apache servicemix jbi framework DeploymentService deployServiceAssembly DeploymentService java    at org apache servicemix jbi framework AutoDeploymentService checkPendingSAs AutoDeploymentService java    at org apache servicemix jbi framework AutoDeploymentService checkPendingComponents AutoDeploymentService java    at org apache servicemix jbi framework AutoDeploymentService updateSharedLibrary AutoDeploymentService java    at org apache servicemix jbi framework AutoDeploymentService updateArchive AutoDeploymentService java    at org apache servicemix jbi framework AutoDeploymentService monitorDirectory AutoDeploymentService java    at org apache servicemix jbi framework AutoDeploymentService access$ AutoDeploymentService java    at org apache servicemix jbi framework AutoDeploymentService$ run AutoDeploymentService java    at java util TimerThread mainLoop Timer java    at java util TimerThread run Timer java   Caused by   java lang NoSuchFieldError   name at org slfj impl SimpleLogger lt initgt  SimpleLogger java    at org slfj impl SimpleLoggerFactory getLogger SimpleLoggerFactory java    at org slfj LoggerFactory getLogger LoggerFactory java    at org apache mina util NamePreservingRunnable lt initgt  NamePreservingRunnable java    at org apache mina transport socket nio SocketAcceptor startupWorker SocketAcceptor java    at org apache mina transport socket nio SocketAcceptor bind SocketAcceptor java    at org apache camel component mina MinaConsumer doStart MinaConsumer java    at org apache camel impl ServiceSupport start ServiceSupport java    at org apache camel impl DefaultCamelContext addService DefaultCamelContext java    at org apache camel impl DefaultCamelContext startRoutes DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStart DefaultCamelContext java    at org apache camel spring SpringCamelContext maybeDoStart SpringCamelContext java    at org apache camel spring SpringCamelContext doStart SpringCamelContext java    at org apache camel impl ServiceSupport start ServiceSupport java    at org apache camel spring SpringCamelContext maybeStart SpringCamelContext java    at org apache camel spring SpringCamelContext onApplicationEvent SpringCamelContext java    at org springframework context event SimpleApplicationEventMulticaster$ run SimpleApplicationEventMulticaster java    at org springframework core task SyncTaskExecutor execute SyncTaskExecutor java    at org springframework context event SimpleApplicationEventMulticaster multicastEvent SimpleApplicationEventMulticaster java    at org springframework context support AbstractApplicationContext publishEvent AbstractApplicationContext java    at org springframework context support AbstractApplicationContext finishRefresh AbstractApplicationContext java    at org springframework context support AbstractApplicationContext refresh AbstractApplicationContext java    at org apache xbean server spring configuration SpringConfiguration lt initgt  SpringConfiguration java    at org apache xbean server spring configuration SpringConfigurationServiceFactory createService SpringConfigurationServiceFactory java    at org apache xbean kernel standard ServiceManager start ServiceManager java    at org apache xbean kernel standard ServiceManager initialize ServiceManager java    at org apache xbean kernel standard RegistryFutureTask$RegisterCallable call RegistryFutureTask java    at java util concurrent FutureTask$Sync innerRun FutureTask java    at java util concurrent FutureTask run FutureTask java    at org apache xbean kernel standard ServiceManagerRegistry registerService ServiceManagerRegistry java      
0;The Mina VM protocol is not recognising codec and other options   ;Use of the vm protocol appears to ignore any codec options  There could be other options that are missed also Using the same URI but for tcp works fine    
0;camelvelocity  logj is needed at runtime   ;See nabble  http  www nabble comvelocityACouldntfindclassorg apache velocity runtime log SimpleLogJLogSystemtds htmlJon do you mind taking a look at this  you are are good at maven pom's   
0;File component  exclusive read lock strategy using renaming   ;See CAMELBut an end user has problem with this  the read lock can not be granted and a IOException is thrown We should support the same strategy as the FTP consumer does with a try to rename the file Also we should allow some nice URI options to select the strategy nio locks renaming   
0;MockEndpoint  sleep for empty test doesnt work   ;See nabble  http  www nabble comMockEndpointsleepforemptytestsisflawedtds html   
0;Throttler appears to 'throttle' per thread instead of throttling across multiple threads   ;   
0;#NAVN?;I was messing with camelspring and routes using spring DSLI had this part of unit test code @EndpointInject name   'myFileEndpoint'  protected Endpoint inputFile To lookup an endppoint with the given name myFileEndpointBut if I define it directly then it cannot be found lt routegt  lt from id 'myFileEndpoint' uri 'file  targetantpathmatcher?consumer recursive trueamp amp filter myFilter'gt  lt to uri 'mock  result'gt  lt routegt So I have to define it as a loose endpoint as   lt endpoint id 'myFileEndpoint' uri 'file  targetantpathmatcher?consumer recursive trueamp amp filter myFilter'gt  lt routegt  lt from ref 'myFileEndpoint'gt  lt to uri 'mock  result'gt  lt routegt    
0;ConcurrentModificationException when stop the camelosgi bundle   ;ERROR   Error stopping mvn  org apache camelcamelosgi    org osgi framework BundleException   Activator stop error  java util ConcurrentModificationException at java util HashMap$HashIterator nextEntry HashMap java    at java util HashMap$ValueIterator next HashMap java    at org apache camel osgi Activator mayBeRemoveComponentFor Activator java    at org apache camel osgi Activator stop Activator java    at org apache felix framework util SecureAction stopActivator SecureAction java    at org apache felix framework Felix _stopBundle Felix java    at org apache felix framework Felix stopBundle Felix java    at org apache felix framework Felix setFrameworkStartLevel Felix java    at org apache felix framework StartLevelImpl run StartLevelImpl java    at java lang Thread run Thread java      
0;camelxmpp to work with google chat   ;See blog entryhttp  www andrejkoelewijn comwpusinggoogletalkfromjavaexampleThere is a solution that works with plain java  Could be used to identify what needs to be fixed in Camel to get it working with Google chat as well Notice I haven't verified if it doesn't already work with google chat  Just created this ticket to not forget it    
1;camelrestlet security extension   ;Now we have basic http auth  Quick shot is adding digest as it is supported by Restlet  but I have something more in mind  As I'm using token based auth and for me http auth is not suitable  pushing credentials back and forth all the time etc   How about a pattern where from one endpoint you can consume a tickettokensessionId and you can use it as a header to authenticate? As now the realm is to keep login and pass and it could be something like a bean that can validate the token  Of course that data would not be static so it is more about a callback  eg  getTokens    than a static maplist  And finally as we have the uri we can resolve an 'operation' and do authorization  so uri+method is the target   I mean in my project I have processor that does stuff like that and it would be cool to have all those things in one place in consumer  and provide only data and have skeletal logic under the hood  Now the question is if my idea makes sense and if so what are your suggestions on how to implement that wo reinventing the wheel  and not using ACEGI  Btw  Claus  William  logs about attachingdetaching restlets are at info level and it's kind of spamming if there are say  endpoints    Maybe it should be at debug?   
0;Improve JMS header name endocingdecoding strategy   ;We have a scenario where we need to perform the following style of integration  HTTP gt  JMS gt  HTTPThe final HTTP endpoint needs to receive the headers as they were in the original HTTP request  However  I am finding that the HTTP headers that contain a hyphen  such as ContentType  ContentLength etc  are being omitted when the messages go onto the queue  JmsBinding has two static methods to perform some basic header manipulation to 'encode' and 'decode' headers that are not valid Java identifiers  However  the strategy employed does not handle hyphens or other illegal characters  only periods  Secondly  as static methods they cannot be overridden by my own extension of JmsBinding  And finally  JmsHeaderFilterStrategy has a static link back to these methods in JmsBinding so that makes it hard to replace To me  it would be more appropriate that HeaderFilterStrategy implementations should actually contain the code to Advise if a header needs to be encodeddecoded  which it already does  but in addition  Actually perform that encodingdecoding in it's own implementationspecific wayThis affects    but it's also in the trunk like this I have a workaround which is a little messy but it works Thanks Jason   
0;Pipeline could change the MEP unintended   ;When exchanges is processed from pipeline they result is copyed as input to the next exchange  However during this copy Camel could potentially change the MEP to InOut  It should respect the original MEP The flaw is in ExchangeHelpercopyResultsFixing this also forces end users to use the correct sendrequest method on ProducerTemplate  Now Camel will keep the MEP So if you are using send then its inOnly and then you the there is no result  Use request for InOut MEP's This breaks a few of our own unit testing that was using the wrong method    
0;Tracer  allow configuration of fixed size of leading breadcrum or let it be variable sized   ;The TraceFormatter fixes the breadcrum to  chars  If you output the exchange id and its based on the computer name it can be long  and thus cut important parts such as the destination Allow it to be wider and add option to configure the length or let it be variable breadcrumLength     Setting it to  will let it be flexible  Maybe bump the  to  to let it be bigger from the start    
0;file consumer  support expression for setting the folderfile to consume   ;Would be nice to support the file language to set dynamic patterns for the starting folderfile to consume See nabble  http  www nabble comMegamegaVFSfilehandlertos html   
0;SFTP    Polling  Cannot list directory Error   ;http  www nabble comSFTPAPollingCannotlistdirectorytos html   
0;camelcxf   URI option for serviceClass does not support lookup in registry   ;Having an endpoint such as   String cxfEndpoint   'cxf  http  localhost  partfivewebservicesincident' + '?serviceClass org apache camel example reportincident ReportIncidentEndpoint' + 'amp wsdlURL report_incident wsdl' The serviceClass option currently only supports defining a FQN for the class  I think we need to support Registry lookup as well using the  notation  So you can do   String cxfEndpoint   'cxf  http  localhost  partfivewebservicesincident' + '?serviceClass reportService' + 'amp wsdlURL report_incident wsdl' And then have it defined in Spring XML  lt bean id 'reportService' class '   'gt The  notation is already supported if you use the cxf Spring XML configuration  We need this in the Java DSL as well Sorry if it already exists  But I got a hint from a Camel end user that it didn't   
0;Starting Camel using Main from camel  run or Main class  countdown latch is hanging   ;The countdown latch in MainSupport is not completed when Main is stopping Then we have a hanging thread  Can bee seen using ctrl +    
0;Can only interact with servicemixhttp if logging is at DEBUG   ;Given the following camel DSL  from 'activemq  queue testJms in'    to 'jbi  service  urn  oms  testHttp?mep inout'    to 'activemq  queue testJms out'   and the following xbean xml for the smx     SU  lt http  endpoint  service 'oms  testHttp'  endpoint 'testHttp'  role 'provider'  locationURI 'http  localhost  testP'gt  lt http  endpointgt  then Camel operates correctly  or at least as desired  only if DEBUG logging is enabled in the org apache servicemix http package  This seems to be because a DOMSource is returned  which Camel can convert   If the log level is reduced  say to WARN  then a StreamSource object is returned instead which Camel appears unable to convert  This results in stack traces such as  ERROR  DeadLetterChannel  Failed delivery for exchangeId   IDdavisondlaptop  On delivery attempt    caught   org apache camel RuntimeCamelException   javax xml transform TransformerException   java io IOException   Attempted read on closed stream  org apache camel RuntimeCamelException   javax xml transform TransformerException   java io IOException   Attempted read on closed stream   at org apache camel util ObjectHelper invokeMethod ObjectHelper java     at org apache camel impl converter InstanceMethodTypeConverter convertTo InstanceMethodTypeCo+nverter java      
0;Jetty HTTP SelectChannelConnector is not closed when CamelContext is stopped   ;When the cameljetty component is shut down  it leaves Jetty SelectChannelConnector instances active    
0;Apache camel example reportincident dependency removed from pom xml   ;Hi Someone has removed the following dependency from the camel pom xml file    lt dependencygt  lt groupIdgt org apache camellt groupIdgt  lt artifactIdgt camelexamplereportincidentlt artifactIdgt  lt versiongt $ project version lt versiongt  lt dependencygt    
0;SQL component doesn't handle wrong number of parameters   ;NPE thrown when null body sent to to SQL endpoint  When to many parameters are set then exception is thrown but nothing wrong happens when to less parameters are set It should be possible to set null as a body as there might be parameterless statement to execute  There should be consistent Exception thrown when wrong number of parameters is set    
0;camelftp    uri set on endpoint has stripped all parameters  that is wrong as they should be there as well   ;See nabblehttp  www nabble comCamelRemoteFileProducerRecipientListPasswordIssuetds htmlThe bug is introduced with CAMEL   
0;Seda component should configure its executor   ;Currently SEDA endpoint processes only using  thread so it is impossible to easily configure few concurrent processings on  seda endpoint  I believe SEDA endpoint could be configured with some executor andor thread number that we would like to use to process given flows    
0;Two more NullPointerExceptions when context classloader is null   ;When I applied the CAMEL fix  thanks Claus  I hit two more NullPointerExceptions caused by code that assumes that the context classloader will never be null Here's the relevant part of one stack trace  java lang NullPointerException at org apache camel impl converter AnnotationTypeConverterLoader findPackages AnnotationTypeConverterLoader java    at org apache camel impl converter AnnotationTypeConverterLoader findPackageNames AnnotationTypeConverterLoader java   And the other  java lang NullPointerException at org apache camel util ResolverUtil getResources ResolverUtil java    at org apache camel util ResolverUtil find ResolverUtil java    at org apache camel util ResolverUtil find ResolverUtil java   A patch is attached    
0;The xpath expression evaluations should rest the cached stream   ;lt routegt  lt from uri 'jetty  http  localhost  servicessimpleService'gt  lt choicegt  lt whengt  lt xpathgt sim  GetCapabilitiesRequestlt xpathgt  lt whengt  lt whengt  lt xpathgt sim  GetMetadataRequestlt xpathgt  lt whengt  lt choicegt lt routegt A messages that matches the first when statement  I tested with both the route above and a version where I swapped the two xpath statements to make sure it was not dependent on the actual message  throws no errors and a call that matches the second when statement throws the Premature end of file error    
0;Add regexReplaceAll to builder support   ;    so we can do things likefrom 'direct  start'  setBody regexReplaceAll body    'Foo'  'Bar'     which essentially is equivalent to sed 'sFooBarg' on the body    
0;EndpointMessageListener should respect ExchangePattern   ;In all current releases  org apache camel component jms EndpointMessageListener onMessage   has the following logic  line  in    code    send the replyif  rce    null amp amp  body !  null amp amp  !disableReplyTo    sendReply replyDestination  message  exchange  body   This logic should also respect ExchangePattern of the exchange  so I propose a change to   send the replyif  rce    null amp amp  body !  null amp amp  exchange isOutCapable      sendReply replyDestination  message  exchange  body   This change allows a processing pattern where the route may change the ExchangePattern using methods like RouteBuilder inOnly   to switch the MEP at will so that the reply is send at a later time  true asynchronous exchange   This processing pattern is particularly useful for integrating long running services  For example  Java DSLfrom 'activemq  my_queue?exchangePattern InOnly'  to 'predict_weather  ?reply_later true'   orfrom 'activemq  my_queue'  inOnly   to 'predict_weather  ?reply_later true'  The flaw of the current logic makes it impossible to do true asynchronous exchange  because   it does not respect the ExchangePattern    if property 'disableReplyTo' is used  the 'org apache camel jms replyDestination' property will not be set  see method createExchange in the same file   thus downstream cannot find the reply destination The proposed change can also deprecate the disableReplyTo property and put the MEP concept into good use    
0;#NAVN?;Doing this bean binding   public Listlt Stringgt  route @XPath 'customerid'  String customerId  @Header 'Location'  String location  Document body   The @Header does not have a default value  so you have to do this to get it to work   public Listlt Stringgt  route @XPath 'customerid'  String customerId  @Header name   'Location'  String location  Document body   So we should support you do not have to set the name attribute    
1;ExchangeHelper should respect ExchangePattern InOptionalOut   ;The utility method org apache camel util ExchangeHelper copyResults   is use by many core classes  However  this method does not properly support MEP InOptionalOut Assuming in an InOptionalOut exchange  having no out message means just that   no out message should be sent  then the following lines in this method Message out   source getOut false   if  out !  null    result getOut true  copyFrom out     else    no results so lets copy the last inputshould be changed to   Message out   source getOut false   if  out !  null    result getOut true  copyFrom out     else if  result getPattern      ExchangePattern InOptionalOut    result setOut null     else    no results so lets copy the last input   
0;JaxbDataFormat is not threadsafe   ;JaxbDataFormat reuses the MarshallerUnmarshaller instances However  according to the https  jaxb dev java netfaqindex htmlthreadSafety  MarshallerUnmarshaller instances are NOT thread safe  so you can't use them from separate threads at the same time Due to this we are getting exceptions from the JAXB implementation  like ClassCastException or 'org xml sax SAXException   FWK parse may not be called while parsing '   Everything works nice with our custom JaxbDataFormat that creates new UnmarshallerMarshaller instance on every request Also  lazycreating instances  like JAXBContext  in getter methods is not threadsafe as well  because explicit synchronization is required     
0;Camelquartz  improve setting of cron expression to be more cron like   ;See nabble  http  www nabble comReACamelquartztd html   
0;File component  better support for absolute path   ;See nabble  http  www nabble comFileAusingabsolutefilepathswithmoveExpressionstd html   
0;CamelContext  Add ClassResolver to be used when you need to load a class instead of ObjectHelper loadClass to work in OSGi environments   ;Add the skeleton and let Willem add the stuff in camelosgi   
0;Can not load the QueueBrowserStrategy in OSGI environment   ;Here is the mail thread which discusses about it http  www nabble comClassloadingandOSGIto htmla   
0;JMSMessage vanishes attachments   ;When using this kind of routelt from uri 'activemq  queue  test'gt lt camel  process ref 'mailProcessor' gt lt to uri 'smtp  localhost  ?to user@localhost' gt and trying to enrich the message in the mailProcessor withexchange getIn   addAttachment 'attachement txt'  new DataHandler 'Hello world'  'textplain'   The received mail doesn't contains any attachment If the input 'from' is a 'direct' instead of activemq  it works fine Inspecting source code  MessageSupport copyFrom Message that  doesgetAttachments   putAll that getAttachments    but the child class JmsMessage doesn't    
0;StreamCache causes to many type converters not possible   ;Since StreamCache is default turned on it cause to many convters attempt that fails in MessageSupport No type converter available to convert from type   java lang Integer to the required type   org apache camel StreamCache with value It hurts performance to much  See nabble  http  www nabble comPerformanceandMessageSupport getBody  tds html   
0;Bean component  improve method selection logic for overloaded methods   ;If end users have overloaded methods with different types as method parameter Camel should try to find the method with exact type match from the payload See nabble  http  www nabble comIsitpossibletooverloadabeanmethodtds html   
0;unmarshaling of data always send the last occurence of the stream   ;The unmarshaling method of BindyDataFormat  CSV or Key Value Pair  does not create a new model object for each new line of the stream readed   
0;Unable to resolve scripting languages in OSGi environment   ;The OsgiLanguageResolver java created since CAMEL does not resolve scripting languages by using the default resolver declared in camelscript  The DefaultLanguageResolver  however in the nonosgi context  handles it properly This leads to NullPointerException while launching a route in an OSGi container using a scripting language  e g  javascript Exception in thread 'SpringOsgiExtenderThread' java lang NullPointerException at org apache camel model language ExpressionType createPredicate ExpressionType java    at org apache camel model ExpressionNode createFilterProcessor ExpressionNode java    at org apache camel model WhenType createProcessor WhenType java    at org apache camel model ChoiceType createProcessor ChoiceType java         
0;IdempotentConsumer  should only add to repository after processing  so we know the processing was a success   ;Just as the file component does with its build in support for idempotent  It should add to it last  eg after processing See nabble  http  www nabble comProblemwithIdempotentConsumertds html   
0;A request route with a topic node incurs a  second wait and refers to the wrong MEP    ;If a route contains a node that publishes to a topic  the route is incorrectly suspended for a default  seconds at the topic node  Further  JmsProducer java checks the MEP of the original request Exchange and not the endpoint of the topic For example  say I have a route built like this  from 'activemq  queue  request'   to 'generate_news'   to 'activemq  topic  news'   to 'do_something_else'  The original request is expecting a reply  However  after the 'news' is pumped into the news topic  there is a default  second wait  requestTimeout   This wait always results in the exception   'The OUT message was not received within    millis on the exchange   ' After reading the JmsProducer code  I changed the route to the following  from 'activemq  queue  request'   to 'generate_news'   to 'activemq  topic  news?exchangePattern InOnly'   to 'do_something_else'  This reveals the root of the bug  which is in the first few lines of method org apache camel component jms JmsProducer process Exchange    public void process final Exchange exchange    final org apache camel Message in   exchange getIn    if  exchange getPattern   isOutCapable     The above if statement checks the MEP of the original request's Exchange and not the new endpoint of the news topic  This makes the above '?exchangePattern InOnly' configuration useless  because the original request MEP is InOut  The result is that after that  second timeout  the temporary queue for the original request has expired  so the whole request failed  Note that the next node 'do_something_else' is never reached due to the timeout exception    
0;JMX instrumentation  will add DeadLetterChannel even if you have defined to use NoErrorHandler   ;See nabble  http  www nabble comStreamCachinginCamel tds htmlI will add an unit test that demonstrates this  org apache camel processor ChoiceNoErrorHandlerTestThe route should at all time not contain any error handler at all  regardless wether JMX is enabled or not    
0;Added a Spring configuration in the camelexamplereportincident   ;We should provide the Spring configuration which equals to the Java DSL route rule in camelexamplereportincident  as some user prefer to use Spring    
0;JMS  Sending a message with jmsTemplate true fails   ;See nabble  http  www nabble comApacheCamel Mjava lang ClassCastExceptionAorg apache camel component jms JmsConfigurationCamelJmsTeemplatetds htmlThe ClassCastException is because of the old JMS API is used Camel should test whether the template is   or    and cast to correct type    
0;Allow parementer append for jms bindings with no endpoint   ;See test failures in https  issues apache orgactivemqbrowseAMQ   
0;JmsPollingConsumer  receive does not work   ;The timeout values to set on Spring JmsTemplate is wrong  We should uses the provided constants on JmsTemplate for this ** * Timeout value indicating that a receive operation should * check if a message is immediately available without blocking  * public static final long RECEIVE_TIMEOUT_NO_WAIT     ** * Timeout value indicating a blocking receive without timeout  * public static final long RECEIVE_TIMEOUT_INDEFINITE_WAIT    Is the correct values  Looks like the values was reverted in the cameljms code   
0;Bean component should propagate headers   ;When doing a route an you invoke a bean that sets a response on the OUT body it does not propagate the headers from the IN body    
0;javax xml transform Source and StreamSource wrapped should be easier to route with JMS   ;See SMWhat end users need to do is to use  convertBodyTo String class  before sending to a JMS queue with Camel when the payload is XML based  eg the javax xml transform Source class that can be wrapped in a StreamCache as well It should be able to route out of the box by converting to byte[] in the JMS producer   
1;HTTP_URI and HTTP_PATH message headers not concatenated when sending messages to http endpoint   ;When a message is sent to an http endpoint  the path specified in the HTTP_PATH header is ignored In the HttpProducer createMethod   of the camelhttp component  the URI is taken from the HTTP_URI header or the endpoint  but the HTTP_PATH header is not concatenated  See also the discussion on the mailing list   http  www nabble comSettingapathinmessageheaderwithCamelhttp Mtd html   
0;deploy the CamelContext with velocity endpoint into the Servicemix   will get the  NoClassDefFoundError   ; trace  *******************************************************************  debug  Starting Apache Velocity v   compiled           trace  RuntimeInstance initializing   debug  Default Properties File   orgapachevelocityruntimedefaultsvelocity properties  debug  Trying to use logger class org apache velocity runtime log LogJLogChute  debug  Couldn't find class org apache velocity runtime log LogJLogChute or necessary supporting classes in classpath orgapachelogjLayoutjava lang NoClassDefFoundError   orgapachelogjLayout at java lang Class forName Native Method  at java lang Class forName Class java    at org apache velocity util ClassUtils getClass ClassUtils java    at org apache velocity util ClassUtils getNewInstance ClassUtils java    at org apache velocity runtime log LogManager createLogChute LogManager java   We can get around this issue by replacing the org apache velocity runtime log LogJLogChute withorg apache velocity runtime log LogJLogChute  and also need to update the Servicemix Velocity bundle to      
0;Recursively scan multipart nodes of an email for attachments  not just top level nodes   ;The current code will only scan the top level of a multipart message  This misses any attachments that are under another node All unit tests still run for me after applying this patch    
0;Allow sending multipartalternative MIME messages with both a plaintext and texthtml body  and allow sending images inline   ;To send a multipartalternative email you have to follow a pretty specific course This adds a property  which is poorly named in this patch  to the MailConfiguration that names the header that contains the plaintext version of the email  and adds a property where you can embed images inline  If an attachment has a filename starting with 'cid  ' then this will add the 'ContentID' header to that multipart body  which will allow the email client to put the image in the appropriate place when it is viewed   i e  the html email has something like lt image src 'cid  ' gt  and the attachment is named 'cid  '  when it sees an inline attachment with 'ContentID   ' it will put it in the right spot    
0;http component  allow failed responses to be returned on the exchange instead of HttpOperationsFailedException   ;It can be a bit cumbersome to eg handled  error codes if it gets thrown back as an exception  Sometimes you want to handle any response from the http producer in the exchange itself    
0;Upgrade camelhttp to use httpclient     ;Upgrading httpclient from   to   requires changes in the camelhttp code as the API has change quite a lot    
1;Apply removeHeader also to the underying JMS message delegate   ;In case of a JMS message  header information is redundantly stored in org apache camel component jms JmsMessage  here CamelMessage  and in its javax jms Message jmsMessage delegate  here JMSMessage   Currently you cannot remove effectively any header from the CamelMessage instance as in the next processing step those removed headers resurrect from the underlying JMSMessage Please provide any means to remove or or at least mask out those headers from the underlying JMSMessage    
0;ErrorHandler to be wrapped at every node incl children   ;   
0;Converting from streamreader to string changes line breaks other than 'n'   ;The IOConvertertoString ReaderStream  copies the input data line by line  A line is considered to be terminated by any one of a line feed  'n'   a carriage return  'r'   or a carriage return followed immediately by a linefeed  Unfortunately  the lines are always concatenated with 'n'  so that HL messages  which use 'r'  become unusable after conversion Also see http  www nabble comHLmessagesbecomeunusableafterconvertBodyToString classtd html   
0;ClassCastException when using camelcxf and cameljms in the InOut same flow   ;As per thread on FUSE forum http  fusesource comforumsthread jspa?threadID amp tstart   [[I have a camel route that listens on a CXFEndpoint  for MESSAGE data as DOMSource  and routes the message to a JMS queue  Something like  lt routegt lt from uri 'cxf  bean  passportRequestWS?dataFormat MESSAGE'gt lt to uri 'soapProcessor'gt lt convertBodyTo type 'java lang String'gt lt to uri 'activemq  queue  blah'gt lt convertBodyTo type 'javax xml transform dom DOMSource'gt lt routegt My understanding is that the JMS producer will realize that the exchange is InOut  create a temporary queue for the response  and then wait for the response to arrive on the temporary queue before sending the original CXFExchange on along the pipeline  Indeed  this is what I observe! However  I?ve discovered a little nasty When the JMSProducer gets in the incoming message  it sets the Out message of the original CXFExchange to a JmsMessage  Then  the pipeline processor calls exchange getOut on the CXFExchange and BANG! we get a classcast exception  Turns out that the CXFExchange getOut   method always casts the message to a CxfMessage  Ouch  Surely this means then that camelcxf can?t talk to any producer that does not produce a CXFMessage  very limiting ]]The response on the form from davsclaus was  [[Well spotted If just the damn Exchange was final so we had one implementation of it  But I guess we have to thank Java generics for that so the first API had generics for per component Could you create a ticket in JIRA for this?As a workaround you can add a processor where you have full access to the Exchange so you can set a CxfMessage as the payload ]]   
0;SFTP GenericFileProducer createFileName produces OS normalized file name  that doesn't work with SFTP   ;The use of File separator and FileUtil normalizePath in GenericFileProducer createFileName produce a OS normalized file name  that doesn't work with SFTPe g  outboundout___ACC txt which will not work produce a file called outboundout___ACC txtThe proper name should be outboundout___ACC txt   
0;camelcxf producer loses the contenttype   ;camelcxf doesn't put the ProtocolHeader into the camel message header  so we lost the contenttype message Here is the mail thread for the discussion http  www nabble comcamelcxfcontenttyperesponseheadertt html   
0;Clean up  the CamelTransportConstants CONTENT_TYPE   ;Here is the mail thread about it http  www nabble comReAsvncommitArincameltrunkcomponentscamelcxfsrcAmainjavaorgapachecamelcomponentcxfCxfHeaderFilterStrategy javatestjavaorgapachecamelcomponentcxfCxfRawMessageRouterTest javatt html   
0;Warning 'Disabling JMSReplyTo as this Exchange is not OUT capable' on false positives in JBossAS   ;see   http  www nabble comDisablingJMSReplyToasthisExchangeisnotOUTcapabletds html   
0;Race condition in IdempotentConsumer   ;A possible possible race condition exists in the IdempotentConsumer implementation  The code first checks in the MessageIdRepository if the message was already processed  If not then it processes the message andafterwards adds the id to the repository   See also http  issues apache orgactivemqbrowseCAMEL   There is no lockingbetween the check with 'contains' and the insert with 'add'  So if multiple threadsinstances try this in parallel for the same id  thenit might happen that more than one finds the id not yet contained in the repository and the same message is processed multipletimes I enclose an extended version of IdempotentConsumerTest which illustrates the problem It is important to note that even if the test demonstrates the issue with an MemoryIdempotentRepository a solution should alsoaddress the case of a database based respository in a clustered environment  So this might imply that some locking mechanism on thedatabase is required    
0;Clean up the CamelNamespaceHandler   ;Since we use the JAXB to parse the Routes definitions so we can get ride of the unnecessary bean parser registry code    
0;CAMELHTTP should copy system proxy settings   ;By standard  Java uses some properties for configuring proxies  Details are on http  java sun comjavasedocstechnotesguidesnetproxies html but in short the properties http proxyHost and http proxyPort are used for setting a global HTTP proxy CAMELHTTP doesn't reuse this  I guess many would expect it to    
0;Enrich DSL  Add fluent builder for using default aggregation strategy   ;The fluent builder is missing the enrich uri  method that uses the default agg strategy  That is to copy the result from the resource as input This is also very useable In Spring DSL this is already possible as you do not have to provide the strategyRef attribute    
0;JMSHeaders are ignored in Producer   ;Camel jms producer ignores some JMSHeaders  For example the header JMSPriority is ignored  due to the comment in the code  because it is set by the producer  But it should not only be set by the produer due to the received message  it should also be possible to set a priority using the JMSPriority header on the consumer   See also the option preserveMessageQos on the jms endpoint  if every JMSHeader is ignored by the producer it is impossible to set QosProperties on the message  The reason for the bug is in org apache camel component jms JmsBindingappendJmsProperty  The follwoing JMS message headers are useful for sending messages and therefore should be copied to the jms message   JMSDestination JMSDeliveryMode JMSExpiration JMSPriority JMSMessageID JMSTimestamp   
0;Java DSL for multicast  split  aggregate does not use block explicit   ;When using one of the EIP that uses a nested route for sub processing  typically EIPs that does some sort of aggregation such as multicast  for aggregating a response  split aggregateAnd maybe a few othersThey should use pushBlock so the end   DSL to indicate end of sub route works correctly in Java DSL    
1;DefaultErrorHandler  add support for redelivery   ;The new default error handler does currently not support redelivery  The error handling codebase has stabilized and we should allow this error handler to leverage the redelivery features we have in DeadLetterChannel    
0;Simple language support for AND  OR to concat multiple expressions fails if string constants are enclosed in single quotation marks   ;The current implementation for CAMEL fails if the string constants in the two expressions are enclosed in single quotation marks as given in the following example $ in header foo     'abc' and $ in header bar     ''This is due to an issue with the GROUP_PATTERN regular expression in SimpleLanguageSupport java  The matching pattern in between the single quotes is greedy and thus does not match correctly    
0;Remove cycle between model and util   ;Currently util and model reference each other what makes them difficult to understand separately  When you look closely at the references you see that model only needs one class ProcessorDefinitionHelper  As this class only needs other classes from model I think it should belong to model  As this class is only needed from model I think it does not need to be public  So it is also clear that the class does not belong to the camel model classes users should access    
0;bean component should thrown NoTypeConverterException when bean parameter binding cannot convert to method signature type   ;See nabble  http  www nabble comErrornotraisedbyCameliftheHeadertypedefineinabeanisnotcorrecttds html   
0;Better logging at startup if Camel uses camelosgi or not   ;We should at least once at INFO level log whether OSGi was detected or not And in the camelosgi we should have more DEBUG  TRACE logging as well    
0;camelexampleetl  bug in sample about type converter   ;   
0;camelcxf defaultHeaderFilterStrategy doesn't filter the Camel releates headers   ;Here is the mailing thread   which discuss this issue    http  www nabble comcamelcxfStrippingheaderstd html   
0;ScheduledPollConsumer  Should not throw polled exception on stop   ;See CAMELAnd nabble  http  www nabble comBuginScheduledPollingConsumertds htmlIf an exception occured during a poll Camel will handle it by a ExceptionHandler you can set on the DefaultConsumer  The default impl will log it at WARN level But the ScheduledPollingConsumer will remember this and when it does a doStop in case of shutdown or the likes it will throw the first exception occurred during a poll This will indicate in an ERROR when doing a shtudown and its not really related as the poll error could have happened like  months ago We should not do this  But only handle the poll exception when it occurred  End users can configure their own ExceptionHandler if they want to do something differently than logging    
0;Validator component to use SaxSource internally   ;ValidatingProcessor uses DOMSource internally while SaxSource could perform better    
0;SpringCamelContext will get into endless loop of calling start method if the route service calling the ApplicationContext refresh method in it's initial method   ;Here is the mail thread which discusses this issue http  www nabble comStackOverFlowerrorwithCamel  tpp html   
0;Failover load balancer  should prepare exchange before failover   ;When the failover load balancer does a fail over it only clears the exception When you use dead letter channel or default error handler with redeliveries enabled they will have such information This should also be cleared before failover  So we have a clean and fresh start    
0;Unable to read post params from request   ;If consuming messsages from jetty endpoint there is no way to read post parameters from HttpServletRequest  In example getting HttpServletRequest from body   HttpServletRequest req   exchange getIn   getBody HttpServletRequest class  req getParameterMap   returns allways empty mapThe problem is that jetty Request extractParameters   method is trying to read post parameters from Request getInputStream    But unfortunately someone strips the input stream before and req getInputStream   returns allways  bytesThe workaround for me is to extend DefaultHttpBinding as described in   http  camel apache orgjetty htmlMyHttpBinding  javapublic class MyHttpBinding extends DefaultHttpBinding   public void readRequest HttpServletRequest request  HttpMessage message    request getParameterMap    super readRequest request message     calling request getParameterMap   will cache parameters inside jetty Request and it's possible to query params later  without having inputStream   
0;Camel builds should not use platform specific encoding   ;The builds on my Mac use the platform specific encoding thus leading to the following warngin  [WARNING] Using platform encoding  MacRoman actually  to copy filtered resources  i e  build is platform dependent!We should use the lt project build sourceEncodinggt  property to specify a project specific encoding  UTF     
1;License for OneJAR classes not included in camelexamplespring onejar artifact  Also apache legal files missing   ;The license for the comsimontuffsonejar files is at http  onejar sourceforge netindex php?page documentsamp file license When I build camelexamplespring neither this license nor the apache license nor apache notice file is in the onejar jar artifact I'd suggest disabling the onejar plugin until someone can figure out how to include these files    
0;Upgrade maven build to use apache  pom and related features    ;Geronimo recently has had some problems due to unversioned snapshots of camel  Since nexus automatically cleans up old snapshots it's preferred to use unique timestamped snapshots when publishing to apache nexus There are some other nice standard featrues of the apache  pom and related work such as automatic source archive creation  I'm attaching a patch that updates to apache  pom and cleans up a few other things Since the build fails for me before the changes I can't be very sure that these changes break nothing    
0;camelfile  consumer  starting directory should validate that its configured properly eg not containing dynamic expressions etc   ;You cannot use $    in the start path of fileftp consumers  Use the fileName option for that  We should validate and thrown an exception about this so end users notices this immediately and can fix it    
0;cameljms  allow a header like JMSDestination to override the destination to send to   ;We cannot use JMSDestination as it would not work when you do a route from jms A  to  jms B  as it will go into round about as when received from jms A the header will contain JMSDestination   queue  A and thus Camel will send it back to itself So we should a different nameCamelJmsDestination   
0;camelirc parsing of channel name and parameters is incorrect   ;If you try and pass some parameters to camelirc it turns out that camel joins a different IRC channel than expected  for example a URI like  irc  camelcon@irc codehaus org  cameltest?nickname camelconcauses camel to join cameltest?nickname camelcon and not cameltest with a nickname of camelcon  Will attach a patch that addresses this and updates the unit test    
0;CustomerServicesWsAddressingTest hangs sometimes   ;Sometimes I get the following error         Running org apache camel itest customerrelations CustomerServicesWsAddressingTest         Exception in thread 'DefaultMessageListenerContainer' java lang NullPointerException         at java lang String indexOf String java            at java lang String indexOf String java            at org springframework jms support JmsUtils buildExceptionMessage JmsUtils java            at org springframework jms listener DefaultMessageListenerContainer handleListenerSetupFailure DefaultMessageListenerContainer java            at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker run DefaultMessageListenerContainer java            at java lang Thread run Thread java       which then causes a hang  Its a known issue in springjms     http  jira springframework orgbrowseSPR   Happens when we try to do a shutdown of the context  Reverting back to    fixes this issue  but we probably don't want to do that   
0;cameljms  wrong defaults causes message listener to use new thread when receiving a message   ;JmsConfiguratiuon have a bad defaultmaxMessagesPerTask It should be  as we do not want to strict the DefaultMessageListenerContainer to only handle  message per thread    
0;EventDrivenConsumer  Wait starting them until all other processors  routes have been started   ;We should wait starting the input to the CamelContext until all child processors and other services have been started Then at the end we should open the gates by starting all the input consumers That should also help unit testing on slower boxes where these consumers might start a bit early and the remaining work starting the other processors is slow and thus the consumer is too fast    
0;FTP component  add option to specify retry login attempts   ;When ftp component attempts login it does that once  We should add option to configure how many attempts should be done before giving up For instance try  times with  sec apart    
0;file component  markerFile read lock  do not use nio FileLock   ;In some situations in OSGi platforms the file lock can be kept and then you need to shutdown the JVM to clear the JDK FileLock So better to not use them as we can just create the file and Camel will still back off reading the file as it can see the lock file exists    
0;Cleanup unnecessary copy related methods in Exchange   ;There are currently  apis related to copying exchanges that overlap for the most part  are confusing and unnecessary  The consensus is to replace   Exchange newInstance    Exchange copy    Exchange newCopy boolean handoverOnCompletion   void copyFrom Exchange source  with   Exchange copy    Exchange copy boolean handoverOnCompletion  newInstance   does not bring much value copyFrom   is semantically equivalent to copy  newCopy   will be just renamed to copy boolean  See nabble thread  http  www nabble comDISCUSSExchangecopyapicleanuptd html   
0;jaxb prettyPrint does not work   ;Here is the mail thread with discuss about it  http  www nabble comJAXBprettyprintmarshalingtd html   
0;camelftp  Recover from lost connection issue   ;See nabblehttp  www nabble comFTPComponentNetworkFailureRecoveryProblemtd html   
0;camelweb can't process the endpoint with '  ' schema  like endpointsmock  results   ;After improving the endpoint URI schema on http  issues apache orgactivemqbrowseCAMEL  camelweb's endpoint request URL is changed from http  localhost  endpointsmock  results into http  localhost  endpointsmock  results while '' is a separator for URL  so camelweb will use only the 'mock  ' to get the expected endpoint  which will throw an exception  org apache camel ResolveEndpointFailedException   Failed to resolve endpoint   mock   due to   Expected schemespecific part at index    mock   at org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java    at org apache camel web resources EndpointsResource getEndpoint EndpointsResource java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at com sun jersey server impl uri rules SubLocatorRule invokeSubLocator SubLocatorRule java    at com sun jersey server impl uri rules SubLocatorRule accept SubLocatorRule java    at com sun jersey server impl uri rules RightHandPathRule accept RightHandPathRule java    at com sun jersey server impl uri rules SubLocatorRule accept SubLocatorRule java    at com sun jersey server impl uri rules RightHandPathRule accept RightHandPathRule java    at com sun jersey server impl uri rules ResourceClassRule accept ResourceClassRule java    at com sun jersey server impl uri rules RightHandPathRule accept RightHandPathRule java    at com sun jersey server impl uri rules RootResourceClassesRule accept RootResourceClassesRule java    at com sun jersey server impl application WebApplicationImpl _handleRequest WebApplicationImpl java    at com sun jersey server impl application WebApplicationImpl handleRequest WebApplicationImpl java    at com sun jersey server impl application WebApplicationImpl handleRequest WebApplicationImpl java    at com sun jersey spi container servlet WebComponent service WebComponent java    at com sun jersey spi container servlet ServletContainer service ServletContainer java    at com sun jersey spi container servlet ServletContainer doFilter ServletContainer java    at com sun jersey spi container servlet ServletContainer doFilter ServletContainer java    at org mortbay jetty servlet ServletHandler$CachedChain doFilter ServletHandler java    at com opensymphony module sitemesh filter PageFilter parsePage PageFilter java    at com opensymphony module sitemesh filter PageFilter doFilter PageFilter java    at org mortbay jetty servlet ServletHandler$CachedChain doFilter ServletHandler java    at org mortbay jetty servlet ServletHandler handle ServletHandler java    at org mortbay jetty security SecurityHandler handle SecurityHandler java    at org mortbay jetty servlet SessionHandler handle SessionHandler java    at org mortbay jetty handler ContextHandler handle ContextHandler java    at org mortbay jetty webapp WebAppContext handle WebAppContext java    at org mortbay jetty handler HandlerCollection handle HandlerCollection java    at org mortbay jetty handler HandlerWrapper handle HandlerWrapper java    at org mortbay jetty Server handle Server java    at org mortbay jetty HttpConnection handleRequest HttpConnection java    at org mortbay jetty HttpConnection$RequestHandler headerComplete HttpConnection java    at org mortbay jetty HttpParser parseNext HttpParser java    at org mortbay jetty HttpParser parseAvailable HttpParser java    at org mortbay jetty HttpConnection handle HttpConnection java    at org mortbay io nio SelectChannelEndPoint run SelectChannelEndPoint java    at org mortbay thread QueuedThreadPool$PoolThread run QueuedThreadPool java   Caused by   java net URISyntaxException   Expected schemespecific part at index    mock   at java net URI$Parser fail URI java    at java net URI$Parser failExpecting URI java    at java net URI$Parser parse URI java    at java net URI lt initgt  URI java    at org apache camel util URISupport normalizeUri URISupport java    at org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java         more   
0;CachedOutputStream not cleaning up tmp files when using file based caching   ;A recent feature of Camel's CachedOutputStream is to serialize any messages over k to disk  In some cases the *tmp message files are not being cleaned up    
0;Route JMX attributes not being updated   ;Some routes are not getting instrumented using JMX and we get the following WARN for those on startup InstrumentationLifecycleStrategy   Route has not been instrumented for endpoint      It turns out that its only those routes that have an onException handler as the first processor in the route  e g lt route id 'permsgroute' errorHandlerRef 'RouteErrorHandler'gt  lt from uri 'jms  MSG_IN'gt  lt onExceptiongt  lt exceptiongt can retry Exceptionlt exceptiongt  lt redeliveryPolicy ref 'UnlimitedRedeliveryPolicyConfig'gt  lt handledgt lt constantgt truelt constantgt lt handledgt  lt onExceptiongt  lt bean ref 'Formatter' method 'formatInput'gt    lt     More info and proposed fix at http  www nabble comRoutesJMXattributesnotupdatedin Mtd htmla   
0;Provide a flag to avoid mapping a JMS message to it's actual type   ;CAMEL adds the ability to use a custom Spring MessageConverter to map an incoming  or outgoing  JMS Message  and also makes it easier to do a pass through route where Camel does not try and deserialize a serialized object message  This improvement is to add a simple flag that achieves a similar effect but without having to supply a MessageConverter implementation    
0;camelcxf bundle doesn't specify any ImportPackage version   ;The camelcxf component is currently generated against CXF version    As a result  the camelcxf module as well as the camelcxf bundle require CXF    More importantly  that bundle does not work correctly with CXF    note that this is an expected behavior  CXF has had API changes with its   version  Now  the trouble is that the camelcxf JAR's MANIFEST has an ImportPackage on org apache cxf * components without specifying any version! As a result  when it looks for CXF and both CXF   and   are present on the platform  it sometimes chooses the wrong one To solve this issue  version specifiers should be added to the ImportPackage declarations of the camelcxf bundle  I guess an import on version   would be enough  we don't need to specify    explicitely  CheersS  Ali Tokmenhttp  ali tokmen com   
0;NPE thrown when DEBUG logging on   ;Stack trace org apache camel language bean RuntimeBeanExpressionException   Failed to invoke method   doSplit on MySplitter due to   java lang NullPointerException at org apache camel language bean BeanExpression evaluate BeanExpression java    at org apache camel language bean BeanExpression evaluate BeanExpression java    at org apache camel processor Splitter createProcessorExchangePairs Splitter java      Caused by   java lang NullPointerException at org apache camel util MessageHelper extractBodyForLogging MessageHelper java    at org apache camel impl DefaultMessage toString DefaultMessage java    at java lang String valueOf String java    at java lang StringBuilder append StringBuilder java    at java util AbstractCollection toString AbstractCollection java    at java lang String valueOf String java    at java lang StringBuilder append StringBuilder java    at org apache camel component bean BeanProcessor process BeanProcessor java   Steps to reproduce   Create simple route with splitter pattern  e g lt routegt  lt from uri 'jms  IN_QUEUE'gt  lt splitgt lt method bean 'MySplitter' method 'doSplit'gt  lt to uri 'log  route log'gt  lt splitgt lt routegt   Set DEBUG logging on for org apache camel classes  e g logj logger org apache camel DEBUG  Fire message into route  message fails with NPE inside Camel   
0;JmsKeyFormatStrategy not used consistently and JmsMessage getHeader   not returning correct value   ;On entry to a route from a JMS endpoint configured with PassthroughJmsKeyFormatStrategy the headers with underscores  _  are passed through correctly However  when any header value in the message is then changed  the original headers are added back into the message using the DefaultJmsKeyFormatStrategy  For example  sending a JMS message with headers HEADER_ VALUE_HEADER_ VALUE_we do see just these two headers in the message received into the route However  if we then set a header value in the route  say HEADER_ VALUE_  we now see the headers HEADER  VALUE_HEADER  VALUE_HEADER_ VALUE_HEADER_ VALUE_For some reason in the set header process the original message headers and values get added into the message after being passed through the DefaultJmsKeyFormatStrategy  This has the implication of unnecessary duplication of the headers Also  when a message header is accessed using the getHeader key  method it also goes through the DefaultJmsKeyFormatStrategy to decode the key that is passed  In the example above  if after we have updated 'HEADER_' to 'VALUE_'  we do message getHeader 'HEADER_'  this goes through the DefaultJmsKeyFormatStrategy and actually gets executed as message getHeader 'HEADER '  which returns VALUE_  wrong!  Note   if instead we lookup the header through message getHeaders   which returns the all headers in a Map  we can correctly access the 'HEADER_' key   Why is getHeader key  even going through the KeyFormatStrategy anyway if setHeader   isn't?    
0;camelmail  Add option to ignore unsupported charset and fallback to platform default instead   ;See nabble  http  www nabble comCamelMailissuewithunsupportedcharsettd html   
0;cameljms  DefaultJmsKeyFormatStrategy should replace   with _DOT_ to avoid conflicting with end user using _   ;If an end user sends a JMS property asMY_KEYThen it should be preserved when Camel route it  so the receiver side using Camel as well will see it as   MY_KEY and not MY KEY The code should be   String answer   key replace ' '  '_DOT_'   answer   answer replace '_DOT_'  ' '     
0;template   consumerTemplate  service  proxy can't be set with right camel context if there are more than one camel context in the spring application context   ;Current camel support to define a producer template OUTSIDE a camel context  I think it works well just like the autowire function which is provided in Spring If there more than two Camel context in the Spring Application context   the user should specify the camel context which the template should use But I have a concern that even we put the template INSIDE the camel context  the template will not be set with a right version of camel context  since we use a CamelPostProcessor to inject CamelContext So I did a quick test on the current Camel code and found there is a bug if there are more one CamelContext   CamelPostProcessor will inject the last create camel context into the CamelContextAware object  Since it is not easy to add the camelContext referece id into the template element attribute  we'd better just support to parser these elements inside the camel context    
0;Bean component  invokes onMessage from javax jms MessageListener even though a specific method name have been provided   ;This is only an issue when your bean implements javax jms MessageListener and then specify a specific method to use  then Camel will still prefer to use the onMessage method    
0;camelirc consumer only listens to messages on a channel and ignores direct messages   ;While camelirc listens to events on a channel very nicely  if you send a camelirc consumer a message directly it ignores it    
0;XMPP producer and consumer don't share the same connection and Chat objects   ;It's actually not possible to produce and consume messages from the same XMPP endpoint  i e  something like  from 'xmpp  irc jabber org   '  to 'direct  out'  from 'direct  in'  to 'xmpp  irc jabber org   '  typically what I see happen is that the consumer will work until the XMPP producer sends a message  at that point the consumer stops receiving messages  What's happening is that producers and consumers created from the endpoint also create their own connection object and then also create their own Chat object  The attached patch ties the XMPP connection to the endpoint  making a producer or consumer share this connection  If a consumer creates the Chat first the producer will look it up and connect to the existing Chat  If the producer creates the Chat then the consumer will attach itself as a listener to this Chat I notice that the tests are turned off as they require a local Jabber server instance to run  Is it worth creating some accounts on jabber org to run the test with? Currently I've been testing this patch using my own Google talk accounts  this is all working towards an IRC to Jabber bridge that I might submit later on as a more complicated demo      
0;camelfile  Consume and pollEnrich another file should work transparent   ;See nabblehttp  www nabble comProblemwithFileConsumerandpollEnrichtd html   
0;Xmpp consumer stops consuming after some time   ;Noticed after creating some more complicated routes that my xmpp consumers would stop receiving messages  This patch sorts that out  I also improved some of the logging in the producer and consumer classes and tweaked the XmppRouteChatTest to work properly    
0;Unit test failures on Windows in    release   ; failures in camelcore that do not seem to occur on linux and mac Failure Details testCannotDeleteFile junit framework AssertionFailedError   Should have thrown an exceptionorg apache camel component file strategy GenericFileDeleteProcessStrategyTest   testCacheStreamToFileAndNotCloseStream junit framework AssertionFailedError   we should have no temp file expected  lt gt  but was  lt gt org apache camel converter stream CachedOutputStreamTest   testRouteIsCorrectAtRuntime junit framework AssertionFailedError   expected  lt gt  but was  lt gt org apache camel processor ChoiceWithEndTest     
0;HTTP component throwing IllegalArgumentException in M release while bridging between jetty and http   ;The CamelHttpUri header is not set to the right value while routing between jetty and http components  Because of which the construction of the HttpMethod in the http component fails and throws up an IllegalArgumentException Detailed discussion regarding this issue can be found in this following thread http  www nabble comHTTPcomponentthrowingIllegalArgumentExceptioninMrelease tt htmla   
0;XmppBinding will add nonserializeable header values to the outgoing xmpp message   ;I started using velocity in my project which seems to add some headers to the message exchange  the values of which are apparently not serializeable  As a result when a message in my route gets to the camelxmpp component it fails in XmppBinding with an IllegalArgumentException as the binding tries to add the bad header  This patch that by not inserting any headers into the xmpp message that don't have serializeable values    
0;Unit test failure in Windows for StreamCache  Temp file is not deleted   ;The temporary file is not deleted  I think the file is still open in some other stream  The problem is I have no idea how to find this place  Like in issue CAMEL this only happens on windows as on unix you can delete a file even if there are open streams testStreamCacheToFileShouldBeDeletedInCaseOfException java lang AssertionError   There should be no files expected  lt gt  but was  lt gt org apache camel component jetty HttpStreamCacheFileTest     
0;Revamped IRC component event adapter logging   ;Currently only the camelirc producer installs an event listener on the IRC connection to log incoming messages from the IRC server  This patch revamps the logging so that the component installs an event adapter to do logging before the connection is even established so it's easier to debug various issues that could be occurring with the connection to the IRC server    
0;ServiceSupport  incorrect state after restart   ;This hampers restart of services by example the overhauled JMX in CAMEL When a service was restarted it had the following incorrect state   started   true starting   false stopped   true stopping   falseThe stopped should have been changed to false as its started    
0;Add server name to logging event adapter   ;When connected to multiple IRC servers it's a bit difficult to figure out what server incoming log messages from the event adapter are from  This patch adds the IRC server responsible for a given log message from the event adapter    
0;cameljms consumer endpoint should allow properties such as maxConcurrentConsumers and concurrentConsumers to be managed via JMX   ;   
0;Exchange  getIn and getOut with expected type parameter   ;It would be nice with a getIn type  method so you can avoid ugly type cast and let Camel do type casting instead CxfMessage cxf   exchange getIn CxfMessage class  And the same for a getOut as well    
0;camelirc should handle onReply callbacks   ;Currently it's not possible to receive the response from commands like WHO as irclib invokes onReply when it gets a response from the IRC server  which the IrcConsumer doesn't implement  This patch adds that and also turns on debug logging for the IRC component in the tests    
0;Graceful shutdown problem   ;While running camelexamplespringjms in  M  I've noticed that GracefulShutdownService can't stop Camel  It calls Main getInstance   stop   but this call blocks and never returns  With enabled debug logging for org springframework jms  console outputs aultMessageListenerContainer  efaultMessageListenerContainer DEBUG Waiting for shutdown of message listener invokers aultMessageListenerContainer  efaultMessageListenerContainer DEBUG Still waiting for shutdown of  message listener invokersRelated forum thread  http  www nabble comGarcefulshutdownbugin Mtd htmlDado   
0;Restarting JmsConsumer should pickup configuration changes   ;You should be able to using JMX to manage JMS endpoints and change configuration such as number of concurrent consumers Then when restarting the jms consumers they should pickup any configuration changes done on the jms endpoint    
0;Better OSGi metadata to allow deploying multiple camel versions in the same OSGi framework   ;   
0;Spring DSL  errorHandlerRef should only be support on camel context or route   ;It just makes it to confusing you can set it on a processor definition in the middle of a route Only these  xml tags should support it camelContext route   
0;cameljpa exports the org apache camel processor interceptor which leads to a split package   ;The package is already exported by camelcore  so the class in this package needs to be moved to another package    
0;NPE when the bundle is camelosgi bundle is inactive   ;The stack trace  java lang NullPointerException atorg apache camel osgi OsgiFactoryFinder getResource OsgiFactoryFinder java    atorg apache camel osgi OsgiFactoryFinder findClass OsgiFactoryFinder java    atorg apache camel component file GenericFileEndpoint createGenericFileStrategy GenericFileEndpoint java    atorg apache camel component file GenericFileEndpoint getGenericFileProcessStrategy GenericFileEndpoint java    atorg apache camel component file GenericFileConsumer processExchange GenericFileConsumer java    atorg apache camel component file GenericFileConsumer processBatch GenericFileConsumer java    atorg apache camel component file GenericFileConsumer poll GenericFileConsumer java    atorg apache camel impl ScheduledPollConsumer run ScheduledPollConsumer java    at java util concurrent Executors$RunnableAdapter call Executors java    atjava util concurrent FutureTask$Sync innerRunAndReset FutureTask java    at java util concurrent FutureTask runAndReset FutureTask java    atjava util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask access$ ScheduledThreadPoolExecutor java    atjava util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask runPeriodic ScheduledThreadPoolExecutor java    atjava util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask run ScheduledThreadPoolExecutor java    atjava util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    atjava util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java   Here is the mail thread   which discusses about this issue   http  www nabble comErrorusingcamelfilewithwindowstt htmla   
0;DataSet  Add initial delay with a default of  sec   ;To avoid data set consumers starting spitting out messages before other routes have properly started    
0;XmppMessages don't get converted to strings   ;This has been bugging me for awhile  when you have a route using XMPP you get instances of XmppMessage in your route rather than just a string containing the body of the XmppMessage  Tracked that down and took out the work arounds I had previously put in my contributed xmpp tests    
0;Improper configuration of MINA connector and acceptor instances  Better producer   ;A sample scenario where both MINA producer s  and consumer s  are used in the same route  e g  some kind of dispatching or proxying   from 'mina  tcp  localhost  ?lazySessionCreation trueamp sync true'   to 'mina  tcp  localhost  ?lazySessionCreation trueamp sync true'  from 'mina  tcp  localhost  ?lazySessionCreation trueamp sync true'   process prepare answer  Due to improper configuration of MINA acceptor and connector instances in MinaComponentcreateSocketEndpoint    no more than  incoming threads can be served at port    the producer becomes unable to open an outgoing session  This is actually an issue of MINA  not of Camel   a test application written using 'raw' MINA shows the same behaviour A solution is to apply configuration rules described  e g   at http  mina apache orgconfiguringthreadmodel html  as done in the attached patch Moreover  the standard CamelMINA producer is not threadsafe   actually a wellknown point  A second attached file contains a thread poolbased reentrant version  which can be efficiently used for TCP endpoints with both parameters 'lazySessionCreation' and 'sync' set to true    
0;Camel Bean component should not remember the last called method name if the bean's method name is not explicitly specified    ;Here is the mail thread which discuses this issue  http  www nabble comBeanendpointinarouteisholdingreferencetothelastusedmethodNameanddoesnotinvokeCamelsBeanbindingtpp html   
0;DeadLetterChannel  Should pre check the endpointUri is valid and report failure on startup   ;If you misconfigure the DLC endpoint URI it will get created on demand and if case of a problem its logged  We should pre check this on route startup so we know the DLC queue works    
0;Redundant interceptions when using interceptSendToEndpoint   ;See http  www nabble comIssuewithinterceptSendToEndpointtos html   
0;Dynamic Recipient List  Comma is always delimiter even if custom specified   ;See nabblehttp  www nabble comDynamicRecipientListdelimeterissuetd html   
0;camelmail  extracting mails with headers using multi values inserts duplicates   ;Sending a message with headers that contains  values such a String[] with  values will result on the other side when consuming that mail message to contain a header with  entries  There should only be  entry with the  values    
0;cameljpa  JpaProducer should mandate body instead of creating a new empty instance   ;If you send an empty body to a JpaProducer it will create a new empty instance of that type which then gets inserted Camel should thrown an exception indicate a body is missing   
0;http polling consumer does not support timeout   ;When using the consumer template to receive from a remote http service using camelhttp the method receive   that uses a  sec timeout does not work as expected Camel does not use the  value    
0;velocity endpoint should not remember the last used template uri   ;If there are two velocity endpoint linked with the pipeline  you will find the last velocity will not effect anymore    
0;CamelContext should support autoStartup   ;We now have option autoStartup on routes  Lets also have this on the camel context itself so it replaces the shouldStartContext option that is a bit confusing  lt camelContext id 'myCamel' xmlns 'http  camel apache orgschemaspring' autoStartup 'false'gt  lt routegt  lt from uri 'direct  start'gt  lt to uri 'mock  result'gt  lt routegt  lt camelContextgt For example the code above will not start Camel on startup  You can then later start camel manually by SpringCamelContext camel    SpringCamelContext  ac getBean 'myCamel'   camel start   And then all runs This also means that we will remove the option shouldStartContext! so if you use this option you must migrate to the autoStartup instead    
0;Support Issue   Routing a TextMessage from a  to a JMS queue   ;I did not find any example or documentation for using the lt camel  proxygt  with a simple send String textMessage  method and a route sending the textMessage String as body to a JMS queue  for example  The thing is that lt camel  proxygt  creates a messages with body of type BeanInvocation  I would expect that Camel provides some builtin transformerconverter to change the body to the String argument  so that the message on the queue is of type TextMessage Did I miss something?   
0;#NAVN?;Its a bit more trivial for end users to know how to set bean name and method if having two attributes Otherwise they have to know about you can use dot to separate the ben name for the method name    
0;cameljms  Sending Object message should fail if payload cannot be converted to serializable   ;If not a null message is created and send See nabble  http  old nabble comJPAACouldnotpassObjectfromjpatojmsto html   
0;The converter's MandatoryConvert method doesn't throw the exception when the value is null   ;   
0;Some methods of SftpOperations create streams that are never closed   ;Where SftpOperations creates streams for storing or retrieving files via ChannelSftp  these streams are not always closed  For example  the retrieveFileToStreamInBody method creates an OutputStream object  but never closes it    
0;Type converter  Should respect Future ExecutionException as not failed to convert but some other error   ;   
0;RSS Component  parameter filtering not working   ;I have tried to sort RRS feeds or to split the entries as described in the documentation  The problem is that the parameters that are to be consumed by Camel are passed through to the endpoint  who does not understand the parameters Here is my code   from 'rss  ' + feedLocation+ '?sortEntries trueamp feedHeader true'  marshal   rss     where feedLocation   'http  www iafrica complscmsgrapevine xml'It results in  java io FileNotFoundException   http  www iafrica complscmsgrapevine xml?feedHeader trueamp sortEntries true at sun net www protocol http HttpURLConnection getInputStream HttpURLConnection java    at java net URL openStream URL java    at org apache camel component rss RssUtils createFeed RssUtils java    at org apache camel component rss RssEntryPollingConsumer createFeed RssEntryPollingConsumer java    at org apache camel component feed FeedEntryPollingConsumer poll FeedEntryPollingConsumer java    at org apache camel impl ScheduledPollConsumer run ScheduledPollConsumer java    at java util concurrent Executors$RunnableAdapter call Executors java    at java util concurrent FutureTask$Sync innerRunAndReset FutureTask java    at java util concurrent FutureTask runAndReset FutureTask java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask access$ ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask runPeriodic ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask run ScheduledThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java      
0;Workaround for UnsupportedEncodingException   ;Reference this discussion   http  old nabble comCamelMailissuewithunsupportedcharsettd htmlCamelmail fails to process a message with an unsupported charset in the ContentType  It throws an exception and can never get past that message   subsequent messages in the inbox never get processed Claus and I came up with a fix  where we make a copy of the MimeMessage object and modify the ContentType header  stripping the unrecognized charset    
1;FTP Component issue with tempPrefix or tempFileName   ;using FTP component to push files via FTP I am facing issues pushing a file on subfolder when using tempPrefix or tempFileName  route sample   from 'direct  start'  to 'ftp  username@ipaddress?password mypassamp fileName  cameltestmessage txtamp tempFileName $ file  name noext  tmp'  no errors are raised if the final destination file doesn't exists  if it exists following error is raised   Exception in thread 'main' org apache camel CamelExecutionException   Exception occurred during execution on the exchange   Exchange Message   Message content   at org apache camel util ObjectHelper wrapCamelExecutionException ObjectHelper java     at org apache camel util ExchangeHelper extractResultBody ExchangeHelper java     at org apache camel impl DefaultProducerTemplate extractResultBody DefaultProducerTemplate java     at org apache camel impl DefaultProducerTemplate extractResultBody DefaultProducerTemplate java     at org apache camel impl DefaultProducerTemplate sendBody DefaultProducerTemplate java     at org apache camel impl DefaultProducerTemplate sendBody DefaultProducerTemplate java     at com opta camel test FTPTester main FTPTester java    Caused by   java lang NullPointerException  at org apache camel component file remote FtpOperations existsFile FtpOperations java    at org apache camel component file GenericFileProducer processExchange GenericFileProducer java     at org apache camel component file remote RemoteFileProducer process RemoteFileProducer java     at org apache camel processor SendProcessor$ doInProducer SendProcessor java     at org apache camel processor SendProcessor$ doInProducer SendProcessor java     at org apache camel impl ProducerCache doInProducer ProducerCache java     at org apache camel processor SendProcessor process SendProcessor java     at org apache camel management InstrumentationProcessor process InstrumentationProcessor java     at org apache camel processor DelegateProcessor processNext DelegateProcessor java     at org apache camel processor DelegateProcessor proceed DelegateProcessor java     at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java     at org apache camel management InstrumentationProcessor process InstrumentationProcessor java     at org apache camel processor RedeliveryErrorHandler processExchange RedeliveryErrorHandler java     at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java     at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java     at org apache camel processor DefaultErrorHandler process DefaultErrorHandler java     at org apache camel processor DefaultChannel process DefaultChannel java     at org apache camel processor UnitOfWorkProcessor processNext UnitOfWorkProcessor java     at org apache camel processor DelegateProcessor process DelegateProcessor java     at org apache camel management InstrumentationProcessor process InstrumentationProcessor java     at org apache camel component direct DirectProducer process DirectProducer java     at org apache camel impl ProducerCache$ doInProducer ProducerCache java     at org apache camel impl ProducerCache$ doInProducer ProducerCache java     at org apache camel impl ProducerCache doInProducer ProducerCache java     at org apache camel impl ProducerCache sendExchange ProducerCache java     at org apache camel impl ProducerCache send ProducerCache java     at org apache camel impl DefaultProducerTemplate send DefaultProducerTemplate java     at org apache camel impl DefaultProducerTemplate sendBody DefaultProducerTemplate java          more   
0;ActivityMonitorEngine uses ? parameters in JPAQL  which don't work with  at least  the hibernate JPA provider    ;Trying to just replace my RouteBuilder with a ProcessBuilder to start moving towards using BAM  I converted everything over to JPA  to make bam happy  but then found that it still explodes   Full stack trace below Line  of ActivityMonitorEngine has this JPAQL  Listlt ActivityStategt  list   template find 'select x from ' + ActivityState class getName   + ' x where x timeOverdue lt  ?'  timeNow  The ? namednumbered parameter seems to not be supported by hibernate's JPA provider I can't find much of any documentation on this  could this just be made a normal positional? I can't even try out the BAM module without this        ERROR  org apache camel bam processor ActivityMonitorEngine  ActivityMonitorEngine   lt Caught   org springframework dao InvalidDataAccessApiUsageException   org hibernate QueryParameterException   could not locate named parameter     nested exception is java lang IllegalArgumentException   org hibernate QueryParameterException   could not locate named parameter   gt org springframework dao InvalidDataAccessApiUsageException   org hibernate QueryParameterException   could not locate named parameter     nested exception is java lang IllegalArgumentException   org hibernate QueryParameterException   could not locate named parameter    at org springframework orm jpa EntityManagerFactoryUtils convertJpaAccessExceptionIfPossible EntityManagerFactoryUtils java    at org springframework orm jpa vendor HibernateJpaDialect translateExceptionIfPossible HibernateJpaDialect java    at org springframework dao support DataAccessUtils translateIfNecessary DataAccessUtils java    at org springframework orm jpa JpaAccessor translateIfNecessary JpaAccessor java    at org springframework orm jpa JpaTemplate execute JpaTemplate java    at org springframework orm jpa JpaTemplate executeFind JpaTemplate java    at org springframework orm jpa JpaTemplate find JpaTemplate java    at org apache camel bam processor ActivityMonitorEngine$ doInTransactionWithoutResult ActivityMonitorEngine java    at org springframework transaction support TransactionCallbackWithoutResult doInTransaction TransactionCallbackWithoutResult java    at org springframework transaction support TransactionTemplate execute TransactionTemplate java    at org apache camel bam processor ActivityMonitorEngine run ActivityMonitorEngine java    at java lang Thread run Thread java   Caused by   java lang IllegalArgumentException   org hibernate QueryParameterException   could not locate named parameter    at org hibernate ejb QueryImpl setParameter QueryImpl java    at org hibernate ejb QueryImpl setParameter QueryImpl java    at org springframework orm jpa JpaTemplate$ doInJpa JpaTemplate java    at org springframework orm jpa JpaTemplate execute JpaTemplate java         moreCaused by   org hibernate QueryParameterException   could not locate named parameter    at org hibernate engine query ParameterMetadata getNamedParameterDescriptor ParameterMetadata java    at org hibernate engine query ParameterMetadata getNamedParameterExpectedType ParameterMetadata java    at org hibernate impl AbstractQueryImpl determineType AbstractQueryImpl java    at org hibernate impl AbstractQueryImpl setParameter AbstractQueryImpl java    at org hibernate ejb QueryImpl setParameter QueryImpl java         moreLine    
0;ftp uploads can fail   File operation failed    Connection closed without indication   Code      ;Looks like something that was fixed for CAMEL didn't make it into  ?On     this is not a warning  this is a fatal SEVERE   Exception occured during execution on the exchange   Exchange Message   XXXXXX org apache camel CamelExecutionException   Exception occured during execution on the exchange   Exchange Message   XXXXX  at org apache camel util ObjectHelper wrapCamelExecutionException ObjectHelper java    at org apache camel util ExchangeHelper extractResultBody ExchangeHelper java    at org apache camel impl DefaultProducerTemplate extractResultBody DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate sendBody DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate sendBody DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate requestBody DefaultProducerTemplate java    at    into my code here   Caused by   org apache camel component file GenericFileOperationFailedException   File operation failed   Connection closed without indication   Code    at org apache camel component file remote FtpOperations disconnect FtpOperations java    at org apache camel component file remote RemoteFileProducer disconnect RemoteFileProducer java    at org apache camel component file remote RemoteFileProducer handleFailedWrite RemoteFileProducer java    at org apache camel component file GenericFileProducer processExchange GenericFileProducer java    at org apache camel component file remote RemoteFileProducer process RemoteFileProducer java    at org apache camel processor SendProcessor$ doInProducer SendProcessor java    at org apache camel processor SendProcessor$ doInProducer SendProcessor java    at org apache camel impl ProducerCache doInProducer ProducerCache java    at org apache camel processor SendProcessor process SendProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel processor RedeliveryErrorHandler processExchange RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor DefaultErrorHandler process DefaultErrorHandler java    at org apache camel processor DefaultChannel process DefaultChannel java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor UnitOfWorkProcessor processNext UnitOfWorkProcessor java    at org apache camel processor DelegateProcessor process DelegateProcessor java    at org apache camel component direct DirectProducer process DirectProducer java    at org apache camel impl ProducerCache$ doInProducer ProducerCache java    at org apache camel impl ProducerCache$ doInProducer ProducerCache java    at org apache camel impl ProducerCache doInProducer ProducerCache java    at org apache camel impl ProducerCache sendExchange ProducerCache java    at org apache camel impl ProducerCache send ProducerCache java    at org apache camel impl DefaultProducerTemplate send DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate sendBody DefaultProducerTemplate java         moreCaused by   org apache commons net ftp FTPConnectionClosedException   Connection closed without indication  at org apache commons net ftp FTP __getReply FTP java   This is 'not what I want' and there doesn't seem to be any keep alive or other option on the ftp component    
0;Logger logs INFO level messages at DEBUG level   ;The Camel logger logs INFO level messages at the DEBUG level  CAMEL fixed the problem in one of two cases  logging without an exception   but it is still broken for logging with an exception  Patch to fix this is attached    
0;UnitOfWorkProcessor  Should wrap more EIPs such as Aggregator  Splitter  RecipientList on their child routes   ;This ensures these exchanges have an UoW when they are routed  which allows for synchronization tasks to run on completion   
0;Remove dependency on spring core in PatternBasedPackageScanFilter   ;The dependency scan is using Springs ANT path matcher but the java code is in camelcore We should moved that code to camelspring so camel does not have any dep on spring code at all   except for JMX annotations  which you is optional to use at runtime    
0;TryProcessor  Do not use local copy Exchange in doCatch   ;There is no need to use a local copy when processing in doCatch See nabblehttp  old nabble comToRomanAboutTryProcessortos html   
0;camelcxf  Empty body causes http error  even for GET when using cxfbean   ;CxfSoapBinding has a bug that it mandates a body to exist  But when you send a GET then there is of course no body The code below fixed this in the method getCxfInMessage  body can be empty in case of GET etc  InputStream body   message getBody InputStream class   if  body !  null    answer setContent InputStream class  body     else if  message getBody   !  null     fallback and set the body as what it is answer setContent Object class  body    Willem Tam can you review if that is okay? Maybe the code can be more finer to check the HTTP method and in cases of GET etc  it allows no body I will commit my fix to get the unit tests passing    
0;JcrProducer node creation throws javax jcr PathNotFoundException when using exchange ID as node name   ;To reproduce  use the cameljcr component without specifying a node name in the message properties  JcrProducer will attempt to use the exchange ID as the node name  but in ServiceMix   this ID contains path separator characters  which results in a PathNotFound exception when the producer attempts to create the node  IMHO  the producer should attempt to create parent nodes as needed when the value of either the exchange ID or the property named JcrConstants JCR_NODE_NAME contain path separators    
0;Improvment in example archtypes   ;Made changes to improve application context xml to improve schema usage  Also replaced logj properties fles with logj xml files    
0;RestletProducer should support native async requestresponse semantics   ;RestletProducer should support native async requestresponse semantics like the recent changes made to the cameljetty producer    
0;camelcxf  CxfProducer should check parameters more strictly to ensure we have the number of parameters required   ;The method getParams in CxfProducer does not check for correct number of parameters and that we have data when its mandatory    
0;RedeliveryPolicy  Setting delay > maxDelay should should also set max value   ;See nabblehttp  old nabble commaximumRedeliveryDelayappliesevenifyouarenotusingexponentialbackoffto html   
0;When the 'from' endpoint is improperly set  it can be very hard to work out whywhere   ;I have static routes configured using the java DSL  but use bean properties on my route builder to provide custom endpoints for different environments  like so    from sourceUriProperty   to 'bean  fileParser'   beanRef 'conanCore'  'updateOperationFailure'   If you forget to set the from URI property  the exception you get at application startup just says   'java lang IllegalArgumentException   Either 'uri' or 'ref' must be specified on   org apache camel impl DefaultRouteContext@dad'  Full stack trace below      but probably not really important    note that it never once mentions any of my own classes It would be nice if throw could be somewhere like in   RouteDefinition java public Listlt RouteContextgt  addRoutes CamelContext context  Collectionlt Routegt  routes  throws Exception    other parts snipped    for  FromDefinition fromType    inputs     Throwing here would be nice  fromType description already has 'no uri or ref!' so it already knows it's broken  RouteContext routeContext   addRoutes routes  fromType   answer add routeContext     The RouteDefinition at that stage already contains things like     this    org apache camel model RouteDefinition@ 'Route[[From no uri or ref supplied! ] gt  [To bean  fileParser   Bean ref  conanCore method   updateOperationFailure ]]'  So if we can explode there  you can clearly see what route you've screwed up Caused by   org apache camel RuntimeCamelException   java lang IllegalArgumentException   Either 'uri' or 'ref' must be specified on   org apache camel impl DefaultRouteContext@dad at org apache camel util ObjectHelper wrapRuntimeCamelException ObjectHelper java    at org apache camel spring SpringCamelContext onApplicationEvent SpringCamelContext java    at org apache camel spring CamelContextFactoryBean onApplicationEvent CamelContextFactoryBean java    at org springframework context event SimpleApplicationEventMulticaster$ run SimpleApplicationEventMulticaster java    at org springframework core task SyncTaskExecutor execute SyncTaskExecutor java    at org springframework context event SimpleApplicationEventMulticaster multicastEvent SimpleApplicationEventMulticaster java    at org springframework context support AbstractApplicationContext publishEvent AbstractApplicationContext java    at org springframework context support AbstractApplicationContext finishRefresh AbstractApplicationContext java    at org springframework context support AbstractApplicationContext refresh AbstractApplicationContext java    at org springframework test context support AbstractGenericContextLoader loadContext AbstractGenericContextLoader java    at org springframework test context support AbstractGenericContextLoader loadContext AbstractGenericContextLoader java    at org springframework test context TestContext loadApplicationContext TestContext java    at org springframework test context TestContext getApplicationContext TestContext java         moreCaused by   java lang IllegalArgumentException   Either 'uri' or 'ref' must be specified on   org apache camel impl DefaultRouteContext@dad at org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java    at org apache camel model FromDefinition resolveEndpoint FromDefinition java    at org apache camel impl DefaultRouteContext getEndpoint DefaultRouteContext java    at org apache camel model RouteDefinition addRoutes RouteDefinition java    at org apache camel model RouteDefinition addRoutes RouteDefinition java    at org apache camel impl DefaultCamelContext startRoute DefaultCamelContext java    at org apache camel impl DefaultCamelContext startRouteDefinitions DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStart DefaultCamelContext java    at org apache camel spring SpringCamelContext maybeDoStart SpringCamelContext java    at org apache camel spring SpringCamelContext doStart SpringCamelContext java    at org apache camel impl ServiceSupport start ServiceSupport java    at org apache camel impl DefaultCamelContext start DefaultCamelContext java    at org apache camel spring SpringCamelContext maybeStart SpringCamelContext java    at org apache camel spring SpringCamelContext onApplicationEvent SpringCamelContext java         more   
0;CaseInsensitiveMap should be serializable   ;CaseInsensitiveMap should be fully serializableSee nabblehttp  old nabble comDataSetheaderBCamelDataSetIndexDDcausesfailureto html   
0;cameljdbc  Allow properties to be set on Statement such as fetchSize  maxRows etc   ;Just like the SQL component offers a template  to set any property on the Spring JdbcTemplate we should do the same for this component for its Statement class    
0;camelbean  Classes enhanced by CGLIB should skip cglib methods   ;See nabblehttp  old nabble comAmbiguousMethodCallExceptionontransactionalspringbeanto html   
0;Mock component  expectedBodiesReceived List  does not work as expected   ;Java chooses the varargs methods always instead of the List method    
0;Exception during mail connection requires folder to be reset   ;I think that this problem may still be around with  SNAPSHOT  http  fusesource comforumsthread jspa?threadID amp tstart I noticed that I had a pop server outage and then subsequently had a similar problem i e  IllegalStateException  folder not open Here's when the outage started        [   MailComponent] WARN ultPollingConsumerPollStrategy  Consumer Consumer[pop     ] could not poll endpoint   pop      caused by   Connect failedjavax mail MessagingException   Connect failed  nested exception is   java net NoRouteToHostException   No route to host at com sun mail pop POPStore protocolConnect POPStore java    at javax mail Service connect Service java    at org apache camel component mail MailConsumer ensureIsConnected MailConsumer java    at org apache camel component mail MailConsumer poll MailConsumer java    at org apache camel impl ScheduledPollConsumer run ScheduledPollConsumer java    at java util concurrent Executors$RunnableAdapter call Executors java    at java util concurrent FutureTask$Sync innerRunAndReset FutureTask java    at java util concurrent FutureTask runAndReset FutureTask java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask access$ ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask runPeriodic ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask run ScheduledThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java   Caused by   java net NoRouteToHostException   No route to host at java net PlainSocketImpl socketConnect Native Method  at java net PlainSocketImpl doConnect PlainSocketImpl java    at java net PlainSocketImpl connectToAddress PlainSocketImpl java    at java net PlainSocketImpl connect PlainSocketImpl java    at java net SocksSocketImpl connect SocksSocketImpl java    at java net Socket connect Socket java    at java net Socket connect Socket java    at com sun mail util SocketFetcher createSocket SocketFetcher java    at com sun mail util SocketFetcher getSocket SocketFetcher java    at com sun mail pop Protocol lt initgt  Protocol java    at com sun mail pop POPStore getPort POPStore java    at com sun mail pop POPStore protocolConnect POPStore java         moreThis went on for about a minute or so and there was no more in the log file until several hours later  in fact when an email appeared in the INBOX  I know this because my personal email account was copied on the email and so I have the timestamp I then get the following message every time I poll the server and have to restart my application to get over it         [   MailComponent] ERROR MailConsumer  Folder not openjava lang IllegalStateException   Folder not open at javax mail Folder getMessages Folder java    at javax mail Folder search Folder java    at org apache camel component mail MailConsumer poll MailConsumer java    at org apache camel impl ScheduledPollConsumer run ScheduledPollConsumer java    at java util concurrent Executors$RunnableAdapter call Executors java    at java util concurrent FutureTask$Sync innerRunAndReset FutureTask java    at java util concurrent FutureTask runAndReset FutureTask java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask access$ ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask runPeriodic ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask run ScheduledThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java   I took a look at MailConsumer java and note the following code   if  !connected    if  LOG isDebugEnabled      LOG debug 'Connecting to MailStore   ' + endpoint getConfiguration   getMailStoreLogInformation       store   sender getSession   getStore config getProtocol     store connect config getHost    config getPort    config getUsername    config getPassword      If you're not connected then how is it possible to have a folder? Following this logic my recommendation is to insert the following at line    store connect config getHost    config getPort    config getUsername    config getPassword     folder   null      
0;file producer  NIO transferTo gb bug in jdk   ;It appears that the JDK have a limitation that transferTo with large files http     thread jspa?threadID amp messageID See nabblehttp  old nabble comcamelcastsexceptionwhenthereisnothingtofetchfromtheftpendpointto htmlThe code should be in a loop and transfer in chunks    
0;Improper ordering of MINA filters   ;When we want to use SSL on the consumer side  MINA's SSLFilter must be inserted as the very first filter into the chain  or  at least  as the second one after an ExecutorFilter   but it is currently not possible  because MinaComponentcreateSocketEndpoint   always inserts a ProtocolCodecFilter at the very beginning by calling configureCodecFactory   A proposed workaround is to introduce an additional URL parameter noDefaultCodec which prohibits the installation of the default protocol codec filter  The protocol codec must be then configured manually  e g  using Spring  lt bean id 'sslFilter' class 'org apache mina filter SSLFilter'gt  lt constructorarggt  lt bean class 'javax net ssl SSLContext' factorymethod 'getDefault' gt  lt constructorarggt lt beangt lt bean id 'codecFilter' class 'org apache mina filter codec ProtocolCodecFilter'gt  lt constructorarg ref 'hlcodec' gt lt beangt lt bean id 'hlcodec' class 'org apache camel component hl HLMLLPCodec' gt lt bean id 'minaFilters' class 'java util ArrayList'gt  lt constructorarggt  lt list valuetype 'org apache mina common IoFilter'gt  lt ref bean 'sslFilter' gt   lt ref bean 'codecFilter' gt   lt listgt  lt constructorarggt lt beangt After that  the consumer endpoint URL can look likefrom 'mina  tcp       ?sync trueamp lazySessionCreation trueamp noDefaultCodec trueamp filters minaFilters'  I am not sure whether this approach is optimal  therefore I call it 'workaround' and not 'solution'  The corresponding patch is attached    
0;Ridiculously long release time due to the javadoc plugin   ;   
0;Routing slip does not stop when Exchange is failed   ;   
0;camelexampleetl throw error when running it    ;Here is the stack trace [ Camel thread    JpaComponent] JuelExpression DEBUG Noimpl class for juel ExpressionFactory defined in'METAINFservicesorgapachecamelcomponentel'org apache camel NoFactoryAvailableException   Could not find factory classfor resource   METAINFservicesorgapachecamelcomponentjuel atorg apache camel impl DefaultFactoryFinder doFindFactoryProperties DefaultFactoryFinder java    atorg apache camel impl DefaultFactoryFinder findClass DefaultFactoryFinder java    atorg apache camel language juel JuelExpression getExpressionFactory JuelExpression java    atorg apache camel language juel JuelExpression evaluate JuelExpression java    atorg apache camel builder ProcessorBuilder$ process ProcessorBuilder java    atorg apache camel management InstrumentationProcessor process InstrumentationProcessor java    atorg apache camel processor DelegateProcessor processNext DelegateProcessor java    atorg apache camel processor DelegateProcessor proceed DelegateProcessor java    atorg apache camel processor interceptor TraceInterceptor process TraceInterceptor java    atorg apache camel management InstrumentationProcessor process InstrumentationProcessor java    atorg apache camel processor RedeliveryErrorHandler processExchange RedeliveryErrorHandler java    atorg apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    atorg apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    atorg apache camel processor DefaultErrorHandler process DefaultErrorHandler java    atorg apache camel processor DefaultChannel process DefaultChannel java    at org apache camel processor Pipeline process Pipeline java    atorg apache camel processor UnitOfWorkProcessor processNext UnitOfWorkProcessor java    atorg apache camel processor DelegateProcessor process DelegateProcessor java    atorg apache camel management InstrumentationProcessor process InstrumentationProcessor java    atorg apache camel component jpa JpaConsumer processBatch JpaConsumer java    atorg apache camel component jpa JpaConsumer$ doInJpa JpaConsumer java    atorg apache camel component jpa JpaTemplateTransactionStrategy$$ doInJpa JpaTemplateTransactionStrategy java    atorg springframework orm jpa JpaTemplate execute JpaTemplate java    atorg springframework orm jpa JpaTemplate execute JpaTemplate java    atorg apache camel component jpa JpaTemplateTransactionStrategy$ doInTransaction JpaTemplateTransactionStrategy java    atorg springframework transaction support TransactionTemplate execute TransactionTemplate java    atorg apache camel component jpa JpaTemplateTransactionStrategy execute JpaTemplateTransactionStrategy java    atorg apache camel component jpa JpaConsumer poll JpaConsumer java    atorg apache camel impl ScheduledPollConsumer run ScheduledPollConsumer java    atjava util concurrent Executors$RunnableAdapter call Executors java    atjava util concurrent FutureTask$Sync innerRunAndReset FutureTask java    at java util concurrent FutureTask runAndReset FutureTask java    atjava util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask access$ ScheduledThreadPoolExecutor java    atjava util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask runPeriodic ScheduledThreadPoolExecutor java    atjava util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask run ScheduledThreadPoolExecutor java    atjava util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    atjava util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java      
0;doCatch    Without any exception given should report that as a problem   ;Code like this  doTry    to 'mock  b'   throwException new IllegalArgumentException 'Damn'    doCatch    to 'mock  catch'   end   Should report a failure in the route as doCatch must have at least  exception as parameter It should correctly be  doCatch Exception class We could also consider using Excpetion class as default but in Java you must also provide the exception to catch and thus its more intuitive if its  like Java   
0;seda component  Support no timeout for task to complete using timeout  or negative   ;See nabblehttp  old nabble comSEDATimeoutts html   
0;RejectedExecutionException after restarting camel context   ;User reported over the camel channel the following exception trying to send a message after the context was stopped and restarted 'Failed to create Producer for endpoint  '  Thats the exception I'm gettingReason   java util concurrent RejectedExecutionExceptionException in thread 'core' org apache camel FailedToCreateProducerException   Failed to create Producer for endpoint   Endpoint[activemq  queue  request lavaOrderProducer powerTraderServer]  Reason   java util concurrent RejectedExecutionException at org apache camel component jms JmsProducer testAndSetRequestor JmsProducer java    at org apache camel component jms JmsProducer processInOut JmsProducer java    at org apache camel component jms JmsProducer process JmsProducer java    at org apache camel impl ProducerCache$ doInProducer ProducerCache java    at org apache camel impl ProducerCache$ doInProducer ProducerCache java    at org apache camel impl ProducerCache doInProducer ProducerCache java    at org apache camel impl ProducerCache sendExchange ProducerCache java    at org apache camel impl ProducerCache send ProducerCache java    at org apache camel impl DefaultProducerTemplate send DefaultProducerTemplate java    at com wjb producer lavaData dispatcher ServerRequestDispatcher requestSymbolSectorArray ServerRequestDispatcher java    at com wjb producer core LavaDataManager initialize LavaDataManager java    at com wjb producer core ProducerCore run ProducerCore java    at java lang Thread run Thread java   Caused by   java util concurrent RejectedExecutionException at java util concurrent ThreadPoolExecutor$AbortPolicy rejectedExecution ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor reject ThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor delayedExecute ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor schedule ScheduledThreadPoolExecutor java    at org apache camel util DefaultTimeoutMap schedulePoll DefaultTimeoutMap java    at org apache camel util DefaultTimeoutMap lt initgt  DefaultTimeoutMap java    at org apache camel component jms requestor Requestor lt initgt  Requestor java    at org apache camel component jms JmsProducer testAndSetRequestor JmsProducer java   The following unit tests seems to reproduce the problem  ublic final class StartStopTest   private final GenericApplicationContext applicationContext   new GenericApplicationContext    private final int testCount     @Test public void test   throws Exception   Initialize final File propertiesFile   new File Constants RESOURCE_DIRECTORY_NAME  Constants PROPERTIES_FILE_NAME   PropertyConfigurator configure propertiesFile getPath     final File applicationContextFile   new File Constants RESOURCE_DIRECTORY_NAME  Constants CONTEXT_FILE_NAME   final Resource applicationContextResource   new FileSystemResource applicationContextFile   final AbstractBeanDefinitionReader beanDefinitionReader   new XmlBeanDefinitionReader this applicationContext   beanDefinitionReader loadBeanDefinitions applicationContextResource   this applicationContext refresh    Begin Testing for  int i     i lt  this testCount  i++    this startSendStop    Thread sleep        private void startSendStop   throws Exception   final SpringCamelContext springCamelContext    SpringCamelContext this applicationContext getBean Constants CAMEL_CONTEXT_NAME   final ProducerTemplate producerTemplate  final Endpoint serverRequestQueue  springCamelContext start    producerTemplate   springCamelContext createProducerTemplate    serverRequestQueue   springCamelContext getEndpoint 'serverRequestQueue'   final Exchange exchange   producerTemplate send serverRequestQueue  new Processor     public void process final Exchange exchange  throws Exception   exchange setPattern ExchangePattern InOut   exchange getIn   setHeader ServerJmsServices REQUEST  ServerJmsServices GET_SYMBOL_INFO   exchange getIn   setBody ''         final String responseString    String exchange getOut   getBody    Assert assertTrue responseString length   gt     springCamelContext stop      lt ?xml version ' ' encoding 'UTF'?gt lt beans xmlns 'http  www springframework orgschemabeans'  xmlns  xsi 'http  www w orgXMLSchemainstance' xmlns  camel 'http  camel apache orgschemaspring' xsi  schemaLocation 'http  www springframework orgschemabeans http  www springframework orgschemabeansspringbeans  xsd http  camel apache orgschemaspring http  camel apache orgschemaspringcamelspring xsd'gt  lt ! ActiveMQ component for Camel to use gt  lt bean id 'activemq' class 'org apache activemq camel component ActiveMQComponent' gt  lt property name 'connectionFactory'gt  lt bean class 'org apache activemq ActiveMQConnectionFactory'gt  lt property name 'brokerURL' value 'tcp       ?daemon true' gt  lt beangt  lt propertygt  lt beangt  lt ! Camel Context gt  lt camelContext id 'camelContext' xmlns 'http  camel apache orgschemaspring' autoStartup 'false'gt   lt camel  endpoint id 'serverRequestQueue' uri 'activemq  queue  request lavaOrderProducer powerTraderServer' gt  lt camelContextgt lt beansgt    
0;ExceptionHandler  Let it be able to log additional information such as a custom message or current exchange   ;This will output better exceptions in the logs when using the default exception handler which just logs it The ExceptionHandler is used in consumers  polling  event driven  which cant send the exception back to a client and thus must handle it somehowand best shot is to log it  but you can plugin your own handler if you like   
0;GroupedExchange in Aggregator is not working correctly   ;See nabblehttp  old nabble comHelporg apache camel impl GroupedExchangedoesnotexistinthelatestdownloadts html   
0;StrictHostKeyChecking Url Option   ;Camel users will appreciate a new url option that sets JSch Session StrictHostKeyChecking to 'no'   Preferably  this new option will work just like URI Options knownHosts  This improvement will facilitate bypass sftpssh key authentication    
0;UnitOfWork  Must be done in finally to ensure even when java lang Error is thrown fore reliable shutdown   ;This helps to keep in flight registry uptodate even when java lang Error is thrown  such as when people use JUnit assertions    
0;camelbindy dataformat KeyValue DSL can't work   ;When you set the bindy dataformat with below DSL   you will get the error that camel can't find the DataFormat    public void configure     from 'direct  start'  marshal    bindy BindyType KeyValue  'org apache camel dataformat bindy model fix simple'   to 'mock  result'       
0;camelcache  Missing some classes in  jar   ;See nabblehttp  old nabble comCamelCacheAProcessorsnotreleasedts html   
0;JDBC component doesn't preserve headers   ;JDBC component doesn't preserve any of the headers that are sent into it   
0;The NP check of the remote service is wrong in CamelServiceExporter   ;We should check the export service instead of the camelContext   componentscamelspringsrcmainjavaorgapachecamelspringremotingCamelServiceExporter jav revision  +++ componentscamelspringsrcmainjavaorgapachecamelspringremotingCamelServiceExporter jav working copy @@   +  @@   Endpoint endpoint   CamelContextHelper getMandatoryEndpoint camelContext  uri   notNull camelContext  'service'  + notNull getService    'service'   Object proxy   getProxyForService    consumer   endpoint createConsumer new BeanProcessor proxy  camelContext      
0;The  in Spring XML should support using serviceRef to lookup a reference for an endpoint   ;Even though people can use the ref component  but that is hardly technique So you can do using serviceRef to refer to the endpoint lt ! create a proxy that will route to the direct  start endpoint when invoked gt  lt proxy id 'myProxySender' serviceInterface 'org apache camel spring config MyProxySender' serviceRef 'cool'gt  lt ! define the endpoint we want to proxy gt  lt endpoint id 'cool' uri 'direct  start'gt    
0;package will log WARN that you should use packageScan instead  We should keep both options so remove the WARN   ;         serverdm org apache camel spring CamelContextFactoryBean unknown W Using a packages element to specify packages to search has been deprecated  Please use a packageScan element instead    
0;MailConsumer should log exception in processRollback   ;The MailConsumer logs in the rollback case the exchange  line  in revision   but the exchange contains  usually ?  an exception which is not logged In my case the exception is thrown from a custom Expression which splits a mail message Only a rollback warning which contains the headers of the mail message is logged which makes finding the actual cause difficult    
0;EventNotifier  Make it easy to ignore unwanted event categories   ;The current EventNotifier is a bit sparse  It should have a bunch of ignoreXXX events to filter by category  In case you do not want certain types etc Also it can be used to configure it to only report failures which is interesting if you want to alert that to a monitoring system    
0;cameljdbc  Add option to select between JDBC  or  column label  name semantics   ;JDBC drivers is often a pain when it comes to compliance If you use SQL SELECT with aliases then you may have issues with cameljdbc as it retrieves the column name use ResultSetMetaData which behaves different according to the JDBC spec See more at  http  fusesource comforumsthread jspa?messageID amp Introduce a new option useJDBCColumnNameAndLabelSemantics where you can configure which option to use  Will by default use JDBC    
0;Keep the lastModified timestamp when writing a file   ;gt gt  I do the following  gt gt gt  'ftp  tata@   ftp input?amp recursive trueamp binary trueamp consumer delay ' gt   to 'file  M  FTP INPUT'  gt gt  I would like to have my file in transfered and keeping theirgt  lastModifiedTime  I wonder if a flag is available for that ? Anothergt  solution would be to get it from the Message and do it programmatically gt      show rest of quote HiGood idea  Notice that the timestamp from the FTP library is often not accurate down to the seconds Could you create a ticket in JIRA for this feature request?http  issues apache orgactivemqbrowseCAMEL   
0;Remove sample caches from Camel Cache component   ;Camel Cache has sample caches created by the component via its ehCache settings These should not be created in order to avoid unnecessary taking up of ports by the sample caches    
0;Bean Expression for Non Registry beans can't reference an instance   ;The documentation at the bottom of this page   http  camel apache orgbeanlanguage html says that I can use the bean expression DSL to work with beans that are not in the registry in two different ways   M+   Specify Classmethod and Camel will create a new instance of the bean and call the method  Specify instancemethod and Camel will use the the specified instance and call the method In fact  the doc shows examples of both  Method   from 'activemq  topic  OrdersTopic'   filter   expression bean MyBean class  'isGoldCustomer'    to 'activemq  BigSpendersQueue'  Method   private MyBean my  from 'activemq  topic  OrdersTopic'   filter   expression bean my  'isGoldCustomer'    to 'activemq  BigSpendersQueue'  I am unable to do the latter    as the methods are not defined  I'm using Camel    but I've tried    as well  So either the doc is wrong or the methods are missingnot visible  My code specifically is  private Object list    from  getErrorEndpoint     recipientList list  'getRecipients'  Yes  there are easy ways to avoid this  But I prefer not to have to create more XML andor specify a Class name here Finally  is there a good reason ' recipientList  ' isn't overloaded to take an Endpoint[] instead of only an Expression? The @RecipientList annotation seems to anticipate this form but there doesn't seem to be a good way to plug the @RecipientList annotated bean into the route definition  Even if the bean is in the registry it looks as if you still have to supply the method name anyway despite that its already annotated  unless you also annotate with @Handler which might be undesirable   Ideally  I could have   Object list   new Object     @RecipientList public Collectionlt Endpointgt  getRecipents Object body            from  endpoint  recipientList lt any instance annotated with @RecipientListgt  or even Look for method 'errors' then look for annotation @RecipientList 'errors' from  endpoint  recipientList  bean  'errors'  Is this making any sense?  I'm still very wet behind the ears    
0;Let ExpressionClause be reusable by other builders which are not route based   ;Allows you to use all the expressions from ExpressionClause which has many  on other builders which are not tied to the route models For example at mock  notify builder and elsewhere   
0;camelbean  CGLIB proxied classed having trouble using annotated bean bindings   ;Header value  and body  is not bound in pojo method  Route definiton   camel  route trace 'true' id 'RapNotificationRoute'gt  lt camel  from uri 'oracleQueue  queue  FURTHERELEMENTS_TEST?jmsMessageType Text'gt  lt camel  transacted ref 'PROPAGATION_REQUIRED'gt  lt camel  wireTap uri 'seda  audit'gt  lt camel  to uri 'mock  result'gt  lt camel  routegt  lt camel  route id 'AuditRoute'gt  lt camel  from uri 'seda  audit'gt  lt camel  bean ref 'auditMessageDAO' method 'audit'gt  lt camel  routegt auditMessageDAO interface   public void audit @Body String body  @Header value 'JMSMessageID' String jmsMessageId Trace from log when running    Camel thread    seda  audit   jan          INFO org apache camel processor interceptor Tracer[abafcfcb gt gt gt   AuditRoute  from seda  audit  gt  ref  auditMessageDAO method   audit lt lt lt  Pattern  InOnly  Headers   JMSDestination PLAYLISTE FURTHERELEMENTS_TEST  JMS_OracleDelay   JMSDeliveryMode   JMSRedelivered true  JMS_OracleTimestamp   JMSType null  JMSCorrelationID null  JMSXRecvTimestamp   JMSXState   JMSXDeliveryCount   JMSMessageID ID  DCBEBCAAEAAAC  JMSTimestamp   JMSPriority   JMSXGroupID null  JMS_OracleDeliveryMode   JMSXUserID playliste  JMSExpiration   JMSReplyTo null   BodyType  byte[]  Body  lt ?xml version ' ' encoding 'UTF' standalone 'yes'?gt lt Publicationgt hiddenlt Publicationgt ]The exchange gets send  Evenen when using Oracle AQ   to the seda  audit endpoint and the auditMessageDAO gets called  Body is bound to correct payload but the header element JMSMessageID is null  If i change the parameter to include @Headers Map the parameter is still null Current workaround is to use the Message  or Exchange as parameter  but then my pojo will have dependencies on Camel  ok for now See thread    http  old nabble comwiretapgettingheadervaluets html for further details    
0;Remove some dependencies   ;While checking the dependencies of camelcxf I found that some dependencies are at least not necessary to compile the project I have attached a patch with the removed dependencies  The dependencies are  camelspringcxfrttransportshttpjetty   
0;DefaultTypeConverterRegistry  Let it load upfront   ;This allows it to pre load all type converters on startup instead on demand  This also removes the need for synchronization at runtime as the converters are loaded up front    
0;file component  Using fileName option should better detect constant vs dynamic name   ;eg using fileName header txt makes Camel think its header with the name txt you want to use    
0;DefaultCamelContext starts route services out of order   ;org apache camel impl DefaultCamelContext uses HashMap to hold route servicesIn start   method it uses routeServices values   to list route services It does not work for Esper Camelextra Esper demo example for Esper  http  code google compcamelextrawikiEsperDemo  creates  routes     Route[[From activemq  EventStreamQueue ] gt  [To esper  feed ]]   Route[[From esper  feed?eql insert into TicksPerSecond select feed  count *  as cnt from com iona ps demos MarketDataEvent win  time_batch  sec  group by feed ] gt  [To esper  feed ]]   Route[[From esper  feed?eql select feed  avg cnt  from TicksPerSecond win  time  sec  group by feed + having cnt lt  avg cnt  *   ] gt  [To esper  feed   process com iona ps demos MyRouteBuilder$@ ]]rd route depends on nd route  it uses TicksPerSecond event type that gets created in route  DefaultCamelContext starts rd route before nd route  as a result Esper fails to resolve event type  com espertech esper epl expression ExprValidationException   Failed to resolve event type   Event type or class named 'TicksPerSecond' was not found at com espertech esper epl spec FilterStreamSpecRaw resolveType FilterStreamSpecRaw java    at com espertech esper epl spec FilterStreamSpecRaw compile FilterStreamSpecRaw java    at com espertech esper core StatementLifecycleSvcImpl compile StatementLifecycleSvcImpl java    at com espertech esper core StatementLifecycleSvcImpl createStopped StatementLifecycleSvcImpl java        As a workaround  it is possible to change startup order by assigning custom ids to routes  so routeServices HashMap would return values in different order  Please  be advise that rd route's From URI   'esper  feed?eql select feed  avg cnt  from TicksPerSecond win  time  sec  group by feed + having cnt lt  avg cnt  *  ' is modified original From URI from svn  'esper  feed?eql select feed  avg cnt  as avgCnt  cnt as feedCnt from TicksPerSecond win  time  sec  group by feed + having cnt lt  avg avgCnt  *  ' It was done to resolve Esper compiling issue with avgCnt and feedCnt and has no impact on this reported Camel issue     
0;Mock component  expected header and property should output the name that fails   ;So you know the name of the header which failed  Currently it just say   Header of message bla bla   
0;BeanProcessor  Should differentiate between void and method returning null values   ;When invoking a bean method it should better detect whether the bean is a void or has a return type And if it returns null it should be regarded as a valid response and set as body See nabblehttp  old nabble comfilteringmessagests html   
0;cxfbean should  propagate CONTENT_TYPE for other camel component to use   ;There is no 'contenttype' header return from the below route lt routegt  lt from uri 'jetty  http  localhost  employeesBase?matchOnUriPrefix true'gt  lt to uri 'cxfbean  EmployeesPOJO'gt  lt routegt    
0;HttpHeaderFilterStrategy dosn't filters out 'CacheControl'  'Connection'  'Pragma'  'Trailer'  'TransferEncoding'  'Upgrade'  'Via' and 'Warning' in method applyFilterToCamelHeaders   ;HttpHeaderFilterStrategy uses the HTTP headers with upper case characters on the beginning  e  g  'TransferEncoding' instead of 'transferencoding'     
0;WARNING log of JmsTemporaryTopicEndpoint   JmsTemporaryQueueEndpoint don't have the ManagedResource annotation   ;Here is the mail thread which discusses about this issue http  old nabble comAttemptosendmessagetoactivemqtemporaryqueueusingproducerTemplateAInvalidMetadataExceptiontpp html   
0;HttpHeaderFilterStrategy should filter the HTTP 'Date' header when applyFilterToCamelHeaders is called   ;See rfc    
0;seda endpoint  Let it be easily to configure size option to use an unbounded queue   ;Instead of having  as the default size we should let it be unbounded by default and let people set a size if they really want that   
0;Camel Velocity   change the case of all fields properties Header   ;Using the velocity component doesn't respect the case matching of all fields of the header For example   the exchange of properties CorrelationID change the case matching  after using velocity component  it puts the property in lowercase correlationid    
0;Camel Freemarker   change the case of all fields properties Header   ;Using the Freemarker component doesn't respect the case matching of all fields of the header For example   the exchange of properties CorrelationID change the case matching  after using Freemarker component  it puts the property in lowercase correlationid    
0;NotifyBuilder  add reset method   ;Add a reset   method   
0;DefaultCamelContext throws NPE in start   for route with no destination   ;Not easy to track down when you have a lot of routes  This might be new with the introduction of StartupRouteHolder  I think that was introduced in    right? public class TriggerNPETest extends CamelTestSupport   @Override protected RouteBuilder createRouteBuilder   throws Exception   return new RouteBuilder     public void configure      This will generate an NPE on DefaultCamelContext start    line    If this is an invalid route a proper message should be given far before   this andor NPE should be tested on line  from 'direct  psd nowhere'          @Test public void testme   throws Exception   Thread sleep      java lang NullPointerException at org apache camel impl DefaultCamelContext start DefaultCamelContext java    at org apache camel test junit CamelTestSupport startCamelContext CamelTestSupport java    at org apache camel test junit CamelTestSupport setUp CamelTestSupport java     now start the inputs for all the route services as we have prepared Camel  yeah open the floods so messages can start flow into Camel for  Map Entrylt Integer  StartupRouteHoldergt  entry    inputs entrySet      Integer order   entry getKey    Route route   entry getValue   getRoute     lt lt lt  Right here    
0;PollingConsumerPollStrategy  Should support boolean on begin to support skipping polling   ;See nabblehttp  old nabble comFileConsumerwithdynamiclistoffilestopollts htmlAnd wiki pagehttp  camel apache orgpollingconsumer html   
0;karaf features xml  should use servicemix commonspool bundle   ;as commonspoolcommonspool   osgi manifest header isn't correct  which shouldn't import org apache commons pool package SMX   create servicemix wrapper bundle to fix this issue  so the karaf features xml should use servicemix wrapper bundle  https  issues apache orgactivemqbrowseSMX   
0;SedaConsumer  Add check to limit the concurrentConsumer to <  to prevent mistypes   ;If you enter concurrentConsumers  then Camel creates a lot of threads for concurrent consumers on the SEDA queue We should validate the size is a reasonable value  at least lt    Maybe limit to lt     
0;should use servicemix jaxws   spec bundle but not the geronimo one   ;otherwise will see the exception like javax xml ws spi FactoryFinder$ConfigurationError   Provider org apache axis jaxws spi Provider not foundat javax xml ws spi FactoryFinder$ run FactoryFinder java   at javax xml ws spi FactoryFinder doPrivileged FactoryFinder java   at javax xml ws spi FactoryFinder newInstance FactoryFinder java   at javax xml ws spi FactoryFinder access$ FactoryFinder java   at javax xml ws spi FactoryFinder$ run FactoryFinder java   at javax xml ws spi FactoryFinder doPrivileged FactoryFinder java   at javax xml ws spi FactoryFinder find FactoryFinder java   at javax xml ws spi Provider provider Provider java   at javax xml ws Service lt initgt  Service java      
0;ConsumerTemplate don't support the jms uri with selector   ;This unit test can shows the issue that selector option don't work for ConsumerTemplate@Test public void testConsumerTemplate   throws Exception   template sendBodyAndHeader 'activemq  queue  consumer'  'Message'  'SIZE_NUMBER'     template sendBodyAndHeader 'activemq  queue  consumer'  'Message'  'SIZE_NUMBER'     template sendBodyAndHeader 'activemq  queue  consumer'  'Message'  'SIZE_NUMBER'      process every exchange which is ready  If no exchange is left break  the loop while  true    Exchange ex   consumer receiveNoWait 'activemq  queue  consumer?selector SIZE_NUMBERlt '   if  ex !  null    Message message   ex getIn    int size   message getHeader 'SIZE_NUMBER'  int class   assertTrue 'The message header SIZE_NUMBER should be less than '  size lt     assertEquals 'The message body is wrong'  'Message'  message getBody       else   break       And here is mail thread which discusses about it    
0;Batch Resequencer issues with JMSPriority   ;My project uses ActiveMQ and we have a requirement to support priority queues for one or more of our configured queues  One of the suggestions under the ActiveMQ FAQ is to use a Resequencer  so I followed the link and applied the lt resequencegt  element to my XMLbased route  While testing this functionality we uncovered a couple issues that seem like they should be addressed in a future release of camelcore  The JMSPriority header is not a unique field and internally the Resequencer class uses java util Set to collect messages into a batch  This means that a given batch cannot contain multiple messages with the same JMSPriority  For example  if I use the default batch config and submit five messages with JMSPriority  to the queue within a second  only one of those message is delivered to the configured endpoint  According to the JMS API  priority has ten values where  is the lowest and  is the highest  This means that messages with higher priorities should be processed before messages with lower priorities  When I configure my resequencer with lt headergt JMSPrioritylt headergt   however  it by default orders the messages within the batch in ascending order which means that messages with lower priorities are processed first If there are any known workarounds to these issues please document them  because the current Resequencer documentation that uses JMSPriority as an example is misleading    
0;async route not working with Mina   ;here is my route   from 'mina  tcp  localhost  ?textline trueamp sync true'  process new Processor     public void process Exchange exchange  throws Exception   String body   exchange getIn   getBody String class   Thread sleep    exchange getOut   setBody 'Bye ' + body         from 'file  testtestresponse'   convertBodyTo String class  threads    toAsync 'mina  tcp  localhost  ?sync trueamp textline true'    to 'log  +++ reply++++'   here is the output  you can see all reply logs have a same message body and async process is releasing all threads at the first response  this is probably Mina component bug in the context of aync route         Camel thread    FileComponent  FileConsumer DEBUG Total  files to consume        Camel thread    FileComponent  FileConsumer DEBUG About to process file   GenericFile C  testtestresponseCopy    of New Text Document    txt  using exchange   Exchange[GenericFileMessage with file   GenericFile C  testtestresponseCopy    of New Text Document    txt ]        Camel thread    FileComponent  DefaultManagementAgent DEBUG Registered MBean with objectname   org apache camel  context tamlftspjcameltest type producers name MinaProducer xec         Camel thread    FileComponent  MinaProducer DEBUG Starting producer   Producer mina  tcp  localhost  ?sync trueamp textline true         Camel thread    FileComponent  ProducerCache DEBUG Adding to producer service pool with key   Endpoint mina  tcp  localhost  ?sync trueamp textline true  for producer   Producer mina  tcp  localhost  ?sync trueamp textline true            SendAsyncProcessorProducer  MinaProducer DEBUG Creating connector to address   localhost      using connector   org apache mina transport socket nio SocketConnector@cefa timeout    millis         Camel thread    FileComponent  FileConsumer DEBUG About to process file   GenericFile C  testtestresponseCopy of New Text Document    txt  using exchange   Exchange[GenericFileMessage with file   GenericFile C  testtestresponseCopy of New Text Document    txt ]           SendAsyncProcessorProducer  MinaProducer DEBUG Creating connector to address   localhost      using connector   org apache mina transport socket nio SocketConnector@cefa timeout    millis         Camel thread    FileComponent  FileConsumer DEBUG About to process file   GenericFile C  testtestresponseNew Text Document    txt  using exchange   Exchange[GenericFileMessage with file   GenericFile C  testtestresponseNew Text Document    txt ]           SendAsyncProcessorProducer  MinaProducer DEBUG Creating connector to address   localhost      using connector   org apache mina transport socket nio SocketConnector@cefa timeout    millis         SocketConnectorIoProcessor   ExecutorFilter DEBUG Launching thread for localhost            [ SocketAcceptorIoProcessor ] ExecutorFilter DEBUG Launching thread for             [ SocketAcceptorIoProcessor ] ExecutorFilter DEBUG Launching thread for              SocketConnectorIoProcessor   ExecutorFilter DEBUG Launching thread for localhost            [ SocketAcceptorIoProcessor ] ExecutorFilter DEBUG Launching thread for              SocketConnectorIoProcessor   ExecutorFilter DEBUG Launching thread for localhost             amel thread    MinaThreadPool  ExecutorFilter DEBUG Exiting since queue is empty for              amel thread    MinaThreadPool  ExecutorFilter DEBUG Exiting since queue is empty for              amel thread    MinaThreadPool  ExecutorFilter DEBUG Exiting since queue is empty for localhost                SendAsyncProcessorProducer  MinaProducer DEBUG Writing body    hello           SendAsyncProcessorProducer  MinaProducer DEBUG Writing body    hello        amel thread    MinaThreadPool  ExecutorFilter DEBUG Exiting since queue is empty for              amel thread    MinaThreadPool  ExecutorFilter DEBUG Exiting since queue is empty for localhost             amel thread    MinaThreadPool  ExecutorFilter DEBUG Exiting since queue is empty for localhost                SendAsyncProcessorProducer  MinaProducer DEBUG Writing body    hello        SocketConnectorIoProcessor   ExecutorFilter DEBUG Launching thread for localhost                SendAsyncProcessorProducer  MinaProducer DEBUG Waiting for response           SendAsyncProcessorProducer  MinaProducer DEBUG Waiting for response           SendAsyncProcessorProducer  MinaProducer DEBUG Waiting for response       [ SocketAcceptorIoProcessor ] ExecutorFilter DEBUG Launching thread for              amel thread    MinaThreadPool  ExecutorFilter DEBUG Exiting since queue is empty for localhost             amel thread    MinaThreadPool  MinaConsumer DEBUG Received body   hello        amel thread    MinaThreadPool  MinaConsumer DEBUG Writing body   Bye hello        SocketConnectorIoProcessor   ExecutorFilter DEBUG Launching thread for localhost             amel thread    MinaThreadPool  MinaProducer DEBUG Message received   Bye hello        amel thread    MinaThreadPool  ExecutorFilter DEBUG Exiting since queue is empty for localhost             amel thread    MinaThreadPool  MinaConsumer DEBUG Received body   hello          ?sync trueamp textline true ] SendProcessor DEBUG Async reply received now routing the Exchange   Exchange Message   Bye hello           ?sync trueamp textline true ] SendProcessor DEBUG Async reply received now routing the Exchange   Exchange Message   Bye hello           ?sync trueamp textline true ] SendProcessor DEBUG Async reply received now routing the Exchange   Exchange Message   Bye hello           ?sync trueamp textline true ] DefaultManagementAgent DEBUG Registered MBean with objectname   org apache camel  context tamlftspjcameltest type producers name Producer xe           ?sync trueamp textline true ] ProcessorEndpoint$ DEBUG Starting producer   Producer log  +++ reply++++           ?sync trueamp textline true ] ProducerCache DEBUG Adding to producer cache with key   Endpoint log  +++ reply++++  for producer   Producer log  +++ reply++++           ?sync trueamp textline true ] +++ reply++++ INFO Exchange BodyType  String  Body  Bye hello           ?sync trueamp textline true ] GenericFileOnCompletion DEBUG Done processing file   GenericFile C  testtestresponseCopy    of New Text Document    txt  using exchange   Exchange Message   Bye hello           ?sync trueamp textline true ] +++ reply++++ INFO Exchange BodyType  String  Body  Bye hello           ?sync trueamp textline true ] GenericFileOnCompletion DEBUG Done processing file   GenericFile C  testtestresponseCopy of New Text Document    txt  using exchange   Exchange Message   Bye hello           ?sync trueamp textline true ] FileUtil DEBUG Tried  to delete file   C  testtestresponseCopy    of New Text Document    txt camelLock with result   true          ?sync trueamp textline true ] +++ reply++++ INFO Exchange BodyType  String  Body  Bye hello           ?sync trueamp textline true ] GenericFileOnCompletion DEBUG Done processing file   GenericFile C  testtestresponseNew Text Document    txt  using exchange   Exchange Message   Bye hello           ?sync trueamp textline true ] FileUtil DEBUG Tried  to delete file   C  testtestresponseCopy of New Text Document    txt camelLock with result   true          ?sync trueamp textline true ] nericFileRenameProcessStrategy DEBUG Renaming file   GenericFile C  testtestresponseCopy    of New Text Document    txt  to   GenericFile C  testtestresponse camelCopy    of New Text Document    txt           ?sync trueamp textline true ] FileUtil DEBUG Tried  to delete file   C  testtestresponseNew Text Document    txt camelLock with result   true          ?sync trueamp textline true ] nericFileRenameProcessStrategy DEBUG Renaming file   GenericFile C  testtestresponseCopy of New Text Document    txt  to   GenericFile C  testtestresponse camelCopy of New Text Document    txt           ?sync trueamp textline true ] nericFileRenameProcessStrategy DEBUG Renaming file   GenericFile C  testtestresponseNew Text Document    txt  to   GenericFile C  testtestresponse camelNew Text Document    txt           ?sync trueamp textline true ] FileUtil DEBUG Tried  to rename file   C  testtestresponseCopy    of New Text Document    txt to   C  testtestresponse camelCopy    of New Text Document    txt with result   true          ?sync trueamp textline true ] FileUtil DEBUG Tried  to rename file   C  testtestresponseCopy of New Text Document    txt to   C  testtestresponse camelCopy of New Text Document    txt with result   true          ?sync trueamp textline true ] FileUtil DEBUG Tried  to rename file   C  testtestresponseNew Text Document    txt to   C  testtestresponse camelNew Text Document    txt with result   true        amel thread    MinaThreadPool  MinaConsumer DEBUG Writing body   Bye hello        amel thread    MinaThreadPool  MinaConsumer DEBUG Received body   hello        SocketConnectorIoProcessor   ExecutorFilter DEBUG Launching thread for localhost             amel thread    MinaThreadPool  MinaProducer DEBUG Message received   Bye hello        amel thread    MinaThreadPool  ExecutorFilter DEBUG Exiting since queue is empty for localhost             amel thread    MinaThreadPool  MinaConsumer DEBUG Writing body   Bye hello        SocketConnectorIoProcessor   ExecutorFilter DEBUG Launching thread for localhost             amel thread    MinaThreadPool  ExecutorFilter DEBUG Exiting since queue is empty for              amel thread    MinaThreadPool  MinaProducer DEBUG Message received   Bye hello        amel thread    MinaThreadPool  ExecutorFilter DEBUG Exiting since queue is empty for localhost        
0;IndexOutOfBoundsException occur in UnsafeUriCharactersEncoder class   ;Here is the mail thread for the detail discussion    
0;camelhttp component should set TransferEncoding as chunked header for response message when checkChunked is true   ;so that the client side which send request will know this is a chunked message It's important when the response http headers is more than  and we want to use chunked response message   
0;Allow recipientList to be used inside a CBR using Java DSL   ;RecipientList is now offering fluent builders for parallel support We should allow it to work in CBR with having end   being able to return the Type it came from  eg ChoiceDefinition See nabblehttp  old nabble comRecipientListBChoicenolongerworktogetherinCamel  ts html   
0;CXFRS Routing in    does not behave like in      ;CXFRS Routing in Camel    works well with these endPoints  lt cxf  rsServer id 'restRouter' address 'restRouter'  serviceClass 'com project service impl ServiceManagerImpl' gt  lt cxf  rsClient id 'restEndpoint' address 'http  localhost  servicesrest' serviceClass 'com project service impl ServiceManagerImpl' gt In Camel     Routing fails with error causing the CXF Client to invoke a  not found Rest Service which is 'http  localhost  servicesrestrestRouterPath' The address of cxf  rsClient is being appended by the cxf  rsServer's address   
0;Graceful shutdown  Add option to shutdown routes in reverse order as they were started   ;As its more intuitive this way And it should be the new default in   onwards  The old behavior can be enabled by turning off the shutdownRoutesInReverseOrder option    
0;support get operation for cache   ;Please support get operation on cache component here is the discussion http  old nabble comreadfromcachecomponentts html   
0;Make use of testing mocks of the the GAE SDK   ;Replace existing GAE service mocks with those coming with the GAE SDK    
0;Invocation of hasNext   on org apache camel util ObjectHelper createIterator      new Iterator         return different results   ;public boolean hasNext      empty string should not be regarded as having next return ++idx     amp amp  ObjectHelper isNotEmpty s     public String next     return s   This is incorrect  Should be   public boolean hasNext      empty string should not be regarded as having next return idx+     amp amp  ObjectHelper isNotEmpty s     public String next     idx++  return s      
0;Aggregator  Completion by batch consumer should trigger completion for the batch group if multiple correlation keys was used   ;Yeah its really an odd use case if you use multiple correlation keys for the same batch consumer  but its still possible to do    
0;IOException   Bad file descriptor and FileNotFoundException   ;When I try to stream BINARY  pdf  file using camelhttp I get the java io IOException   Bad file descriptorThe pdf isn't recieved succesfully by reciever  kb This seems to be caused by a bug in java  on linux systems   closing inputstream twice causes problems  It seemed to me this is exactly what is happening  see also link  http   comgraydocsmiscjava_bad_file_descriptor_close_bug shtmlI fixed this by  checking out apache camelcore and camelhttp      In FileInputStreamCache java  In method close   wrapped getInputStream   close   in if  if  stream !  null amp amp  stream instanceof FileInputStream amp amp    FileInputStream  stream  getChannel   isOpen     getInputStream   close     In method reset   also  if  stream !  null amp amp  stream instanceof FileInputStream amp amp    FileInputStream  stream  getChannel   isOpen     getInputStream   close     Second I needed to fix a filenotfoundexception  the tempfile created by camel was deleted to early I changed CachedOutputStream java Reimplemented constructor  public CachedOutputStream Exchange exchange    String hold   exchange getContext   getProperties   get THRESHOLD   String dir   exchange getContext   getProperties   get TEMP_DIR   if  hold !  null    this threshold   exchange getContext   getTypeConverter   convertTo Long class  hold     if  dir !  null    this outputDir   exchange getContext   getTypeConverter   convertTo File class  dir      add on completion so we can cleanup after the exchange is done such  as deleting temporary files exchange addOnCompletion new SynchronizationAdapter     @Override public void onDone Exchange exchange    try    close the stream and FileInputStreamCache  close     for  FileInputStreamCache cache    fileInputStreamCaches      cache close        cleanup temporary file if  tempFile !  null    System err println ''   System err println 'DISABLED tempFile delete  '   System err println ''    boolean deleted   tempFile delete     if  !deleted     LOG warn 'Cannot delete temporary cache file   ' +  tempFile      else if  LOG isTraceEnabled       LOG trace 'Deleted temporary cache file   ' +  tempFile      tempFile   null      catch  Exception e    LOG warn 'Error deleting temporary cache file   ' + tempFile  e       @Override public String toString     return 'OnCompletion[CachedOutputStream]'         Reimplemented close    public void close   throws IOException   System err println ''   System err println 'outputStream close   gt  delete tempFile'   System err println ''   new Exception   printStackTrace    currentStream close    boolean deleted   tempFile delete    if  !deleted    LOG warn 'Cannot delete temporary cache file   ' + tempFile     else if  LOG isTraceEnabled      LOG trace 'Deleted temporary cache file   ' + tempFile         
0;Inconsistency between IntrospectionSupport getProperties   and IntrospectionSupport getProperty     ;IntrospectionSupport getProperties   and IntrospectionSupport getProperty   work in an inconsistency way  ExampleBean bean   new ExampleBean   Date date   new Date   bean setDate date  assertSame date  IntrospectionSupport getProperty bean  'date'     succeedMaplt String  Objectgt  map   new HashMaplt String  Objectgt    IntrospectionSupport getProperties bean  map  null  assertSame date  map get 'date'     fails   
0;Aggregator  Add option to specify if completionInterval to have interval based completion   ;This allows for example the stock quote example to use  sec interval to trigger completions to spit out current quotes every th seconds    
0;DefaultPackageScanClassResolver can't read entries in an eclipse rcp app because it can't handle bundleresource  protocol   ;scenario  I have an eclipse rcp based app and use the apache camel libs within my plugin  i e  the libs are one classpath of the plugin  I use a route using camelmail to process some mailqueues CamelContext context   new DefaultCamelContext   context addRoutes new RouteBuilder     public void configure     from 'imaps  mailserver?username useramp password passwordamp consumer delay amp delete falseamp unseen true'   to 'log   new mail'        context start   When I start my app all seems to be ok  But in my log I get a lot of error messages regarding the loading of converters  If I ask my context to find a converter f i  to converty to byte[] form inputstream  as I did see in another mail example reagding attachments  I get null because the context can't find one I debugged deeper into the camel code and it seems that the DefaultPackageScanClassResolver can't load from urls starting with bundleresource like 'bundleresource   fwk  orgapachecamelcomponentfile'using camelosgi didn't worked because all camel libs are loaded as inner libs of my single plugin and not as plugins   loading as plugins didn't worked but thats another problembug LOG Messages         DEBUG org apache camel impl converter DefaultTypeConverter loadTypeConverters  Loading type converters           DEBUG org apache camel impl DefaultPackageScanClassResolver findAnnotated  Searching for annotations of org apache camel Converter in packages    org apache camel component file  org apache camel component bean  org apache camel converter  org apache camel component mail  org apache camel component spring integration converter        DEBUG org apache camel impl DefaultPackageScanClassResolver getClassLoaders  The thread context class loader   org eclipse core runtime internal adaptor ContextFinder@aeff is used to load the class       DEBUG org apache camel impl DefaultPackageScanClassResolver find  Searching for   annotated with @Converter in package   orgapachecamelcomponentfile using classloader   org eclipse core runtime internal adaptor ContextFinder       DEBUG org apache camel impl DefaultPackageScanClassResolver getResources  Getting resource URL for package   orgapachecamelcomponentfile with classloader   org eclipse core runtime internal adaptor ContextFinder@aeff       DEBUG org apache camel impl DefaultPackageScanClassResolver find  URL from classloader   bundleresource   fwk  orgapachecamelcomponentfile       DEBUG org apache camel impl DefaultPackageScanClassResolver find  Decoded urlPath   orgapachecamelcomponentfile with protocol   bundleresource       DEBUG org apache camel impl DefaultPackageScanClassResolver find  isLocalFileSystem   false       DEBUG org apache camel impl DefaultPackageScanClassResolver find  Scanning for classes in  orgapachecamelcomponentfile  matching criteria   annotated with @Converter       DEBUG org apache camel impl DefaultPackageScanClassResolver find  Loading from jar using httphttps   orgapachecamelcomponentfile       DEBUG org apache camel impl DefaultPackageScanClassResolver find  Cannot read entries in url   bundleresource   fwk  orgapachecamelcomponentfilejava net MalformedURLException   no protocol   orgapachecamelcomponentfile at java net URL lt initgt  URL java    at java net URL lt initgt  URL java    at java net URL lt initgt  URL java    at org apache camel impl DefaultPackageScanClassResolver find DefaultPackageScanClassResolver java    at org apache camel impl DefaultPackageScanClassResolver find DefaultPackageScanClassResolver java    at org apache camel impl DefaultPackageScanClassResolver findAnnotated DefaultPackageScanClassResolver java    at org apache camel impl converter AnnotationTypeConverterLoader load AnnotationTypeConverterLoader java    at org apache camel impl converter DefaultTypeConverter loadTypeConverters DefaultTypeConverter java    at org apache camel impl converter DefaultTypeConverter doStart DefaultTypeConverter java    at org apache camel impl ServiceSupport start ServiceSupport java    at org apache camel util ServiceHelper startService ServiceHelper java    at org apache camel impl DefaultCamelContext startServices DefaultCamelContext java    at org apache camel impl DefaultCamelContext addService DefaultCamelContext java    at org apache camel impl DefaultCamelContext getTypeConverter DefaultCamelContext java    at org apache camel util CamelContextHelper convertTo CamelContextHelper java      
0;XPath  Add type converters from the pesky XPath types to String  InputStream etc    ;See nabblehttp  old nabble comXPathSplitterProblemts htmlThen its easier for Camel end users as they wont have as many problems with the bad XPath result types for NODESET and whatnot    
0;Smpp component schedule delivery time should default to null   ;In testing this component  I ran into a problem where the calculated SCHEDULE_DELIVERY_TIME in SmppBinding ends up off for my time zone  so all my SMS messages are delivered an hour later  I'm not quite sure why I'm seeing this problem  it almost appears that TimeZone is not properly adjusting the raw offset for DST However  in reading the SMS v  spec  there's no reason to attempt to define a default delivery time of 'now'  because transmitting null indicates the message is to be delivered immediately Therefore  it seems like SmppBinding should be updated not to attempt to set a default date of 'now'  This solved my problem  and avoids any potential date miscalculations for the overwhelming majority of cases where people want the message delivered immediately P S  There is no camelsmpp Component defined in Jira    
0;HttpEntityConverter should not create a InputStreamEntity by using the GZIPHelper toGZIPInputStream     ;GZIPHelper toGZIPInputStream   is used for uncompress the zip date and not for compress the data    
0;camelspring  Spring   x  Add dependson in the namespace handler to make it easy for end users to use Spring and Camel without considering ordering of their beans   ;Spring   x behaves differently when discovering bean dependencies  For example if you have a lt routeBuilder ref 'xxx'gt  in lt camelContextgt  than the xxx bean will not by default be dependent on the lt camelContextgt   This causes Spring maybe to create the xxx before the camelContext  And you most likely want CamelContext to be created beforehand  so IoC allows you to inject CamelContext into that xxx or whatnot See nabblehttp  old nabble comSpring andCamel RouteconfigurecalledbeforeSpringbeansinjectedts htmlWe do already have logic for this in the namespace handler  but we need to add it to more places to have it working for all kind of camel types    
0;cxfbean component should ignore the wsdlLocation in the POJO   ;cxfbean component should ignore the wsdlLocation in the annotation in the POJO when starting the service  It should be using the JAXWS bean to create the service  Came across this bug when I  mistakenly  set the wsdlLocation to the http one published by the service  which of course wasn't up yet and I got the exception below  Fix for this coming soon For Googlers out there  this ticket may fix this error message you may be getting  Caused by   org apache camel ResolveEndpointFailedException   Failed to resolve endpoint   cxfbean  jaxwsBean due to   Failed to create service  at org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java    at org apache camel util CamelContextHelper getMandatoryEndpoint CamelContextHelper java    at org apache camel model RouteDefinition resolveEndpoint RouteDefinition java    at org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java    at org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java    at org apache camel model SendDefinition resolveEndpoint SendDefinition java    at org apache camel model SendDefinition createProcessor SendDefinition java    at org apache camel model ToDefinition createProcessor ToDefinition java    at org apache camel model ProcessorDefinition makeProcessor ProcessorDefinition java    at org apache camel model ProcessorDefinition addRoutes ProcessorDefinition java    at org apache camel model RouteDefinition addRoutes RouteDefinition java         moreCaused by   org apache cxf service factory ServiceConstructionException   Failed to create service  at org apache cxf wsdl WSDLServiceFactory lt initgt  WSDLServiceFactory java    at org apache cxf service factory ReflectionServiceFactoryBean buildServiceFromWSDL ReflectionServiceFactoryBean java    at org apache cxf service factory ReflectionServiceFactoryBean initializeServiceModel ReflectionServiceFactoryBean java    at org apache cxf service factory ReflectionServiceFactoryBean create ReflectionServiceFactoryBean java    at org apache cxf jaxws support JaxWsServiceFactoryBean create JaxWsServiceFactoryBean java    at org apache cxf frontend AbstractWSDLBasedEndpointFactory createEndpoint AbstractWSDLBasedEndpointFactory java    at org apache cxf frontend ServerFactoryBean create ServerFactoryBean java    at org apache cxf jaxws JaxWsServerFactoryBean create JaxWsServerFactoryBean java    at org apache camel component cxf cxfbean CxfBeanEndpoint createServer CxfBeanEndpoint java    at org apache camel component cxf cxfbean CxfBeanEndpoint init CxfBeanEndpoint java    at org apache camel component cxf cxfbean CxfBeanComponent createEndpoint CxfBeanComponent java    at org apache camel impl DefaultComponent createEndpoint DefaultComponent java    at org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java         moreCaused by   javax wsdl WSDLException   WSDLException   faultCode PARSER_ERROR   java lang IllegalArgumentException   InputSource must have a ByteStream or CharacterStream at org apache cxf wsdl WSDLManagerImpl loadDefinition WSDLManagerImpl java    at org apache cxf wsdl WSDLManagerImpl getDefinition WSDLManagerImpl java    at org apache cxf wsdl WSDLServiceFactory lt initgt  WSDLServiceFactory java         moreCaused by   java lang IllegalArgumentException   InputSource must have a ByteStream or CharacterStream at org apache cxf staxutils StaxUtils createXMLStreamReader StaxUtils java    at org apache cxf wsdl WSDLManagerImpl loadDefinition WSDLManagerImpl java         more   
0;RoutingSlip  Let it be expression based   ;Currently the Routing Slip EIP is a bit inflexible as it mandates the attached slip has been created beforehand It would be nice if you could let it be expression based to generate the initial attached slip Then end users can use a bean to generate the slip This requires a change in the DSL which is not backwards compatible But it makes the EIP in line with Recipient List and others which is expression based    
0;File name lost when it starts with the same characters as the relative directory on the endpoint   ;When polling file from a directory using a relative file URI  the file name gets lost when it starts with the same characters as the directory name E g  a directory 'orders' containing 'orders xml' and 'orders xml'from 'file  orders'  process new Processor     public void process Exchange exchange     there's no file name on the message here  exchange getIn   getHeader Exchange FILE_NAME  returns null         
0;Incomplete cleanup of jmx mbeans after context stop   ;There is a fair amount of cleanup on context stop  but it is incomplete  Most of it has to do with JMX and if one creates and starts a new CamelContext she may end up with managed objects pointing nowhere or have duplicates or other minor sideeffects  One of the nasty side effects is that we are pretty much forced to use 'lt forkModegt pertestlt forkModegt ' in our surefire plugin configuration  ensuring a clean slate for every test For long running apps in which you may have multiple CamelContext running at various times during the lifetime of the application we must properly cleanup when stopping the context  I have a series of patches fixing that which I hope to finish before    Once we're comfortable and tested with multiple jdk implementations and versions  I'd change the forkMode to 'once'  In my local copy this reduces the test time in core from + mins to under  mins  Since interactions between tests is still possible and might lead us on a wildgoose we could add another profile that uses the safer yet time consuming 'pertest' forkMode    
0;Camelbindy should be able to process fix length records   ;Camelbindy should be able to process fix length records which has no separators  A sample line could looks like    is the companyId is the cardProgram is the accountNumber is the cardNumberCreated a POJO with the Camel bindy annotations  @CsvRecord separator   '' public class CSVRecord implements Serializable   @DataField pos     length     private String companyId  @DataField pos     length     private String cardProgram  @DataField pos     length     private String accountNumber  @DataField pos     length     private String cardNumber   getter and setter  See nabble for details    
0;SendProcessor  When a route is started it should be able to warmup the Producer   ;In case you want to have Camel etc  to fail on startup in case a Producer cannot start  for example it needs a remote connection which fails The producer would normally be created onthefly  eg a message needs to be send to it    
0;HttpProducer should not sending the Http headers with low case   ;Here is the mail thread which discusses about it http  old nabble comcamelhttpconvertsheaderstolowercasetpp html   
0;AggregationStrategy returning null causes NPE   ;When the AggregationStrategy's aggregate method returns null  the AggregateProcessor throws an NPE  While this is a result of user error  I think it would be easy to provide a more useful error indicating what the true problem is  This is the  not very helpful  error the user sees  ERROR | Caused by   [org apache camel RuntimeCamelException  java lang NullPointerException]org apache camel RuntimeCamelException   java lang NullPointerException at org apache camel util ObjectHelper wrapRuntimeCamelException ObjectHelper java    at org apache camel component jms EndpointMessageListener onMessage EndpointMessageListener java    at org springframework jms listener AbstractMessageListenerContainer doInvokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer invokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer doExecuteListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer doReceiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer receiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker invokeListener DefaultMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker executeOngoingLoop DefaultMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker run DefaultMessageListenerContainer java    at java lang Thread run Thread java   Caused by   java lang NullPointerException at org apache camel processor aggregate AggregateProcessor doAggregation AggregateProcessor java    at org apache camel processor aggregate AggregateProcessor process AggregateProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel processor DelegateProcessor processNext DelegateProcessor java    at org apache camel processor DelegateProcessor proceed DelegateProcessor java    at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel processor RedeliveryErrorHandler processExchange RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor DefaultErrorHandler process DefaultErrorHandler java    at org apache camel processor DefaultChannel process DefaultChannel java    at org apache camel processor UnitOfWorkProcessor processNext UnitOfWorkProcessor java    at org apache camel processor DelegateProcessor process DelegateProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel component jms EndpointMessageListener onMessage EndpointMessageListener java         more   
0;camelcxf feature doesn't include all cxf needs bundles   ;Current camelcxf features doesn't include wssj  saajimple  opensaml  fastinfoset bundle We need to add these bundle into camelcxf features    
0;VM endpoints with same name do not communicate if args don't match   ;If you send to a VM endpoint from one route and consume from the same endpoint in another route  but include an argument on only one of the routes  Camel sees them as two different routes  Therefore  the messages are never consumed  For example  lt camelContext id 'sendNotifyContext' xmlns 'http  camel apache orgschemaspring' errorHandlerRef 'errorHandler'gt  lt route id 'sendToNotify'gt  lt from uri '   ' gt       lt to uri 'vm  myNotify' gt  lt routegt lt camelContextgt lt camelContext id 'receiveNotifyContext' xmlns 'http  camel apache orgschemaspring' errorHandlerRef 'errorHandler'gt  lt route id 'receiveNotify'gt  lt from uri 'vm  myNotify?size ' gt       lt to uri '   ' gt  lt routegt lt camelContextgt The producer appears to send to vm  myNotify while the consumer is listening to a separate endpoint named vm  myNotify?size   so the messages build up and are never received    
0;MailBinding can't handle the subject header with NO_ASCII code rightly    ;Here is the mail thread which discusses about it    
0;OnCompletion  Let it be executed last so the internal on completions can be executed beforehand   ;See nabblehttp  old nabble comProblemsshuttingdownrouteonCompletionts htmlThis requires some sort of marker  API changes or whatever to let Camel knows that its a OnCompletion synchronization so it should be executed last We may need to add a priority option or the likes    
0;Bindy  No @Section causes a null key being generated which causes a NumberFormatException   ;See nabblehttp  old nabble comBindyCSVnotMarshalingts html   
0;Escaped characters in http URLs do not work   ;There is a bug in http HttpProducer that is unescaping URL query and path components too early  Patch fix attached    
0;ManagementAgent should expose gettersetters for the JMX settings so you can set it easily from Java   ;Today you have to use a JVM system propertyYou can set the service URL path by system property Dorg apache camel jmx serviceUrlPath lt pathgt This should be possible to set from Java like this also  context getManagementStrategy   getManagementAgent   setServiceUrlPath 'foo     '     
0;Aggregation raises NullPointerException if last file in batch is not to be aggregated    ;When trying to aggregate files from a directory  it seems that camelcore raises a NullPointerException if the last file of the batch is a single file  That is it doesn't match the correlationExpression with any other files and therefore should just pass through  If such a file is the first file or in the middle of the files  alphabetically  this issue is not present See  http  old nabble comAggregatorproblemwithfiles Camel  td htmla   
0;Graceful shutdown  Add option to shutdown manually addedstarted routes   ;If you for example add routes later at runtime  then those where not enlisted on startup and thus not part of the process to be stopped Those routes added manually should be part of this so they are also shutdown  There should be an option to control this behavior so you can turn it off  in the odd cases you dont want that    
0;It is impossible to put  sign in SQL statement in camelsql   ;SqlProducer implementation turns all  characters into ? making it impossible to have  in the SQL statement    
0;camelcastor relies on specific  out of date version of Castor   ;camelcastor specifies a nonflexible version dependency on Castor     Ideally should be changed to [      to allow later versions of Castor to be deployed  Castor   was released in Feb     was first released in Feb    
0;camelftp  SFTP in fileExists should handle exception being thrown with id code stating no such file   ;See nabblehttp  camel  n nabble comcamelftpcannotcreatedirectoryusingsftptpp html   
0;Deadlock in org apache camel util DefaultTimeoutMap   ;After running a camel route with a camel Aggregator for a while  I get a deadlock in org apache camel util DefaultTimeoutMap  A full processdump is attached to this bug I have also tried to recreate this as failing testcase  but without any luck so far    
0;Support for Binary Files in HttpProducer   ;Presently  the HTTP Component doesn't support transferring binary files  The attached patch adds support  Tested successfully using a file gt  http route with a PUT    
0;CsvDataFromat delimiter should also be configurable in the XMLSpring DSL   ;The org apache camel model dataformat CsvDataFormat doesn't support any attributes or nested elements in the XML DSL  So  currently it is not possible for the XMLSpring DSL to change the token delimiter as it is possible in the Java DSL See Nabble   
0;Thread Name Syntax  Do not output endpoint parameters to be less verbose   ;By default thread names from consumers have the endpoint uri in the name  but those can become longCamel Thread   ftp  sms@localhost  autreqerr?delay amp filter conaxRequestFilteramp move  processedamp passiveMode trueamp password sms]So we should change  $name  to be just the endpoint without all the parameters  Eg clip after the first ? so it becomesCamel Thread   ftp  sms@localhost  autreqerr]So we should change it to be $ name  the new short handed syntax $ fullName  as now with everything   
0;No consumers available on 'direct  xyz' endpoint   ;The following warning in logj log shows up with no predictable reason         WARN  DefaultMessageListenerContainer  DirectProducer java    No consumers available on endpoint   Endpoint direct  UserCancelJobRequest  to process   Exchange[JmsMessage   RunnerBase locationToRunId 'DVYcABTEHTRPATEGCBFkm'  jobrun_id   requestOrigId 'null'  secretKey 'null'  replyToQueueOrTopic 'null'  corrolationId 'null'  requestCreationTime Thu Jun       PDT  ]The endpoint  direct  UserCancelJobRequest  could be a number of different endpoints in our application and all of them are of 'direct  ' type  When this happens  all messages that run through that endpoint will fail  and it will never recover unless the application is restarted Also  if I restart the application and use that route immediately  that warning will not occur and the request will finish successfully  It seems to happen to routes that have not been used for a while after startup When this happens  I can find the exact Camel endpointrouteprocessor in JConsole  and nothing seems to be wrong  How can a 'direct  ' endpoint runs out of consumer? Isn't the thread that product this warning THE thread to process the message?We recently upgraded from   to    and this starts to show up randomly  It is a show stopper!Michael   
0;convertBodyTo should handle null bodies   ;If the body is null and you use convertBodyTo you will get a no type converter exception due body is null  Instead it should accept the null body and continue routing    
0;Redelivery policy's retryUntil option should be renamed as retryWhile   ;The semantics of retryUntil are a bit counterintuitive  I would naturally expect retryUntil predicate  to mean retry until predicate is true  but it actually means retry until predicate is false  If you change the name of the option to retryWhile  you would get the natural interpretation retry while predicate is true    
0;URIs for viewing a route as a language clashes with any other possible sub resource for routes  such as status    ;rather than    id  lang we should use something like  id lang lang so that it doesn't gobble up    id status or  id somethingElse   
0;remove ugly warnings running tests since upgrading to jetty    ;lets zap these   [ main] log WARN java lang ClassNotFoundException   org eclipse jetty jsp JettyLog   
0;update camelhttp and camelcxf features to use Commons Codec     ;The latest version of Commons Codec is available as an OSGi bundle  so it would be nice to update the features file for Camel   to use that version  lt bundlegt mvn  commonscodeccommonscodec lt bundlegt I've been installing   by hand and removing the org apache servicemix bundles commonscodec _ without any ill effects on camelhttp    
0;Oracle AQ does not support the JMSReplyTo property and therefore throws a 'JMS   Feature not supported' exception when the JMS provider tries to get it    ;Oracle AQ does not support the JMSReplyTo property and therefore throws a 'JMS   Feature not supported' exception when the JMS provider tries to get it    
0;more eager validation of routes   ;it seems you can dynamically create invalid routes which don't fail fast if there are errors e g from 'seda  foo'  beanRef 'doesNotExist'  'noMethodCalledThis' its only if a message is sent to 'seda  foo' that the whole thing barfs  We should maybe check that the to can be validated first before allowing the consumer to startup? If nothing else failing faster and earlier helps users spot errors sooner   
0;Use  forkMode once for the surefire plugin to significantly speed up tests   ;We need to reduce the testing time in Camel since we got so many tests now  For this to work wee need to make sure there are no side effects outside of a test  which is not always simple  Side effects usually stem from using static fields in classes shared across multiple tests  such as caches of Exchanges  or whatnot   which should be avoided    
0;Injecting Properties into the PropertiesComponent with Spring   ;The component is quite nice  however a good improvement would be allowing properties to be injected through Spring Currently there are two ways to do this using Spring   Declare a bean with an id of properties  lt bean id 'properties' class 'org apache camel component properties PropertiesComponent'gt  lt property name 'location' value 'classpath  commycompanymyprop properties'gt lt beangt This would be improved if we could simply say  lt bean id 'properties' class 'org apache camel component properties PropertiesComponent'gt  lt property name 'location' ref 'myPropertiesBean'gt lt beangt This would allow properties to be declared in Spring using lt util  propertiesgt   The same properties grouping could be injected into Camel as is injected into other beans   Inline within the camelContext defined in Spring  lt camelContext    gt  lt propertyPlaceholder id 'properties' location 'commycompanymyprop properties'gt lt camelContextgt Similarly it would be nice to say  lt camelContext    gt  lt propertyPlaceholder id 'properties' ref 'myPropertiesBean' gt lt camelContextgt I noticed CAMEL is out there to access JVM system properties  it would be good to not have to load as a system property to access them in Camel    
0;Broken failure reporting via DefaultProucerTemplate asyncCallback and Synchronization onFailure   ;The recent change in ProducerCache sendProducerCache java public void send Endpoint endpoint  Exchange exchange    try   sendExchange endpoint  null  null  exchange    RECENT CHANGE HERE    ensure that CamelExecutionException is always thrown if  exchange getException   !  null    exchange setException wrapCamelExecutionException exchange  exchange getException          catch  Exception e    throw wrapCamelExecutionException exchange  e      that throws a CamelExecutionException if exchange getException is not null  makes it impossible for DefaultProducerTemplate asyncCallback to report failures  other than fault messages  asynchronously via Synchronization onFailureDefaultProducerTemplate java public Futurelt Exchangegt  asyncCallback final Endpoint endpoint  final Exchange exchange  final Synchronization onCompletion    Callablelt Exchangegt  task   new Callablelt Exchangegt      public Exchange call   throws Exception    FIXME   exception is thrown in Camel   where a normal return with answer getException !  null was done in Camel   Exchange answer   send endpoint  exchange   if  answer isFailed      onCompletion onFailure answer     else          return answer             This was working in Camel    but unfortunately there wasn't any test case for it   I attached a patch for DefaultProducerTemplateAsyncTest that demonstrates the problem  I didn't commit a fix yet because I'm unsure at the moment about the best way to fix that  Of course I tried a naive fix in the DefaultProducerTemplate asyncCallback methods which causes the test  in the patch  to pass but I'd like to hear other opinions before I continue    
0;StreamProducer does not close stream in camelstream   ;Since the stream could be System out or System err  the producer does not close the stream ever  It should close all streams with the noted exceptions    
0;org apache camel component test package is imported in camelspring component  generates error on OSGI platform   ;[ ] [Installed ] [ ] [ ] camelspring     SNAPSHOT karaf@rootgt  start Error executing command   Unresolved constraint in bundle org apache camel camelspring []   Unable to resolve     missing requirement [ ] package   amp  package org apache camel component test  versiongt      ! versiongt         [ ] package   amp  package org apache camel component test  versiongt      ! versiongt       karaf@rootgt  headers camelspring   BndLastModified   BuildJdk     _BuiltBy   CharlesmBundleActivator   org apache camel osgi ActivatorBundleDescription   Camel Spring supportBundleDocURL   http  www apache orgBundleLicense   http  www apache orglicensesLICENSE  txtBundleManifestVersion   BundleName   camelspringBundleSymbolicName   org apache camel camelspringBundleVendor   The Apache Software FoundationBundleVersion      SNAPSHOTCreatedBy   Apache Maven Bundle PluginExportPackage   org apache camel spring spi uses   'org springframework context org apache camel spi org springframework beans factory org apache camel org springframework beans factory config org apache camel builder org springframework transaction org apache commons logging org apache camel processor exceptionpolicy org apache camel processor org apache camel util org apache camel model org springframework transaction support' version '   SNAPSHOT' org apache camel spring util uses   'org apache camel org springframework context org apache camel util org apache commons logging org springframework beans factory org springframework util' version '   SNAPSHOT' org apache camel spring remoting uses   'org apache camel util org springframework remoting support org apache camel component bean org apache camel org springframework beans org springframework context org apache camel spi org apache camel spring util org springframework beans factory' version '   SNAPSHOT' org apache camel spring uses   'org apache camel impl org apache camel util org apache commons logging org apache camel org springframework beans org springframework context org springframework util org springframework beans factory config org apache camel spring util javax xml bind annotation org springframework beans factory org apache camel builder org apache camel model dataformat org springframework context event org apache camel model config org apache camel model org apache camel spi org apache camel spring spi org apache camel view org springframework context support org apache camel spring handler javax xml bind org apache camel component bean org apache camel component event org springframework transaction org springframework transaction support' version '   SNAPSHOT' org apache camel spring handler uses   'org springframework beans factory support org springframework core org springframework util org springframework beans factory xml org wc dom org springframework beans org springframework beans factory config org springframework beans factory parsing org apache camel model dataformat org apache camel model config org apache camel util org apache camel model org apache camel spring javax xml bind org springframework beans factory org apache camel view org apache commons logging org apache camel model loadbalancer org apache camel builder xml org apache camel spring remoting org apache camel spi org apache camel org apache camel model language org apache camel processor' version '   SNAPSHOT' org apache camel osgi uses   'org osgi framework org apache camel impl org springframework osgi context org apache commons logging javax xml bind annotation org springframework context org apache camel spring org apache camel model org apache camel model loadbalancer org apache camel org apache camel model language org springframework beans factory xml org apache camel model dataformat org apache camel spring handler org apache camel model config org apache camel spi' version '   SNAPSHOT' org apache camel component uses   'org apache camel impl org apache commons logging org springframework core io org apache camel org apache camel converter org apache camel spi' version '   SNAPSHOT' org apache camel component event uses   'org apache camel org springframework context org apache camel impl org springframework beans org apache camel util org apache camel processor loadbalancer' version '   SNAPSHOT' org apache camel component test uses   'org apache camel impl org apache camel util org apache camel org apache commons logging org apache camel component mock' version '   SNAPSHOT' org apache camel component validator uses   'javax xml transform org springframework core io javax xml transform stream org apache camel processor validation org apache camel impl org apache camel component org apache commons logging org apache camel' version '   SNAPSHOT' org apache camel component xslt uses   'org apache camel impl org apache camel component org apache commons logging org apache camel org springframework core io org apache camel builder xml org apache camel util javax xml transform org apache camel converter jaxp org apache camel spi' version '   SNAPSHOT'IgnorePackage   org apache camel spring remoting org apache camel component org apache camel component validator org apache camel component xslt org apache camel spring spi org apache camel spring org apache camel osgi org apache camel spring handler org apache camel component event org apache camel spring utilImplementationTitle   Camel      SpringImplementationVendor   The Apache Software FoundationImplementationVendorId   org apache camelImplementationVersion    SNAPSHOTImportPackage   javax xml bind javax xml bind annotation javax xml bind annotation adapters javax xml transform javax xml transform stream org apache camel version '[      ' org apache camel builder version '[      ' org apache camel builder xml version '[      ' org apache camel component bean version '[      ' org apache camel component mock version '[      ' org apache camel component properties version '[      ' org apache camel component test version '[      ' org apache camel converter version '[      ' org apache camel converter jaxp version '[      ' org apache camel impl version '[      ' org apache camel impl converter version '[      ' org apache camel management version '[      ' org apache camel model version '[      ' org apache camel model config version '[      ' org apache camel model dataformat version '[      ' org apache camel model language version '[      ' org apache camel model loadbalancer version '[      ' org apache camel processor version '[      ' org apache camel processor exceptionpolicy version '[      ' org apache camel processor interceptor version '[      ' org apache camel processor loadbalancer version '[      ' org apache camel processor validation version '[      ' org apache camel spi version '[      ' org apache camel util version '[      ' org apache camel view version '[      ' org apache commons logging org osgi framework version '[   ' org osgi util tracker version '[   ' org springframework beans version '[   ' org springframework beans factory version '[   ' org springframework beans factory config version '[   ' org springframework beans factory parsing version '[   ' org springframework beans factory support version '[   ' org springframework beans factory xml version '[   ' org springframework context version '[   ' org springframework context event version '[   ' org springframework context support version '[   ' org springframework core version '[   ' org springframework core io version '[   ' org springframework osgi context version '[   ' org springframework remoting support version '[   ' org springframework transaction version '[   ' org springframework transaction support version '[   ' org springframework util version '[   ' org wc domManifestVersion    SpecificationTitle   Camel      SpringSpecificationVendor   The Apache Software FoundationSpecificationVersion    SNAPSHOTTool   Bnd     
0;java util ConcurrentModificationException in Method org apache camel util CaseInsensitiveMap putAll     ;Every now and then I'm facing the ConcurrentModificationException  It very hard to reproduce  This is my stack trace  Failed delivery for exchangeId   babccaaafba  Exhausted after delivery attempt    caught   java util ConcurrentModificationExceptionjava util ConcurrentModificationException   null at java util HashMap$HashIterator nextEntry HashMap java     na    _  at java util HashMap$KeyIterator next HashMap java     na    _  at org apache camel util CaseInsensitiveMap putAll CaseInsensitiveMap java     camelcore   jar      at org apache camel impl MessageSupport copyFrom MessageSupport java     camelcore   jar      at org apache camel impl DefaultMessage copyFrom DefaultMessage java     camelcore   jar      at org apache camel util ExchangeHelper copyResults ExchangeHelper java     camelcore   jar      at org apache camel processor Pipeline process Pipeline java     camelcore   jar      at org apache camel processor DelegateProcessor processNext DelegateProcessor java     camelcore   jar      at org apache camel processor ChoiceProcessor process ChoiceProcessor java     camelcore   jar      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java     camelcore   jar      at org apache camel processor DelegateProcessor processNext DelegateProcessor java     camelcore   jar      at org apache camel processor DelegateProcessor proceed DelegateProcessor java     camelcore   jar      at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java     camelcore   jar      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java     camelcore   jar      at org apache camel processor RedeliveryErrorHandler processExchange RedeliveryErrorHandler java     camelcore   jar      at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java     camelcore   jar      at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java     camelcore   jar      at org apache camel processor DefaultErrorHandler process DefaultErrorHandler java     camelcore   jar      at org apache camel processor DefaultChannel process DefaultChannel java     camelcore   jar      at org apache camel processor Pipeline process Pipeline java     camelcore   jar      at org apache camel processor UnitOfWorkProcessor processNext UnitOfWorkProcessor java     camelcore   jar      at org apache camel processor DelegateProcessor process DelegateProcessor java     camelcore   jar      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java     camelcore   jar      at org apache camel component http CamelServlet service CamelServlet java     camelhttp   jar      at javax servlet http HttpServlet service HttpServlet java     javaee jar       Looks like CaseInsensitiveMap isn't enough thread save  But I have no idea what other thread is modifies the map  Most of the time everything is ok    
0;Upgrade to JCR  x   ;cameljcr is based on  x  We should upgrade to  x which takes a bit of pain due API changes and the likes    
0;Upgrade to HawtDB     ;   
0;When polling consumers is shutdown  do less verbose logging for rollback strategies   ;To avoid logs having stacktraces or the likes which was caused by shutting down the application See nabblehttp  camel  n nabble comCamelShutdownExceptiontpp html   
0;JmsProducer should support non blocking routing engine   ;The JMS component is the most complex  and we left out improvements on purpose as we wanted   out before Now its time to let the JmsProducer in requestreply mode leverage async processing so threads are not blocked while waiting for reply    
0;onException not working correctly when using routeContext   ;When using a routeContext  the last  in the xmlfile  defined routescoped lt onExceptiongt  configuration is shared by the other routes in the context http  camel  n nabble compossibleonExceptionbugwhenusingrouteContexttd htmla   
0;java net SocketException   Too many open files with Apache Camel Netty TCP        ;I've got a unit test that works fine with Apache Camel     but as soon as I upgraded to    it consistently started to fail It performs a number of concurrent requests using this url  netty  tcp  localhost  ?sync trueIn both the client and server side of the unit test There's also a sister test which does the same thing with Netty directly and that works in isolation  so it would appear something has been broken in the transition to     Previously this code was also using a beta version of Netty  but even updating that specific dependency has made no difference    
1;FtpComponent   If login fails and disconnect true another connection is opened    ;In a route such as below a second connection to the ftp server is opened if the login fails lt routegt   lt from uri 'ftp  localhostinbox?username usramp password pwdamp disconnect trueamp consumer delay samp maximumReconnectAttempts ' gt   lt to uri 'file  test_data' gt  lt routegt  Further description   http  camel  n nabble comFTPTryloginonceanddisconnectiffailuretd htmla   
0;cameljpa doesn't use EntityManager merge entity  in the right way   ;The EntityManager merge entity  method returns the merged entity  The exchange in message body should be updated with the merged entity  what cameljpa currently not do  I running into this problem  because after saving an entity in the database  the id field was still null  So  we don't know  which entity in the database is the corresponding to this entity    Have a look in the process method of JpaProducer and the Java doc from the EntityManager Christian   
0;DefaultHttpBinding's populateRequestParameters should be more flexible when checking the content type on POST   ;Line  in DefaultHttpBinding checks if the request's method is POST and the content type is 'applicationxwwwformurlencoded'  This unfortunately fails to populate the request parameters of a POST request where the content type includes the charset  e g  'applicationxwwwformurlencoded  charset UTF'  Could the equals be changed to startsWith?   
0;IllegalStateException in CamelContinuationServlet under heavy load   ;Reason is a race between continuation suspend   and continuation resume    It can occur that continuation resume   is executed before continuation suspend   leading to an IllegalStateException thrown by Jetty  java lang IllegalStateException   DISPATCHED initial at org eclipse jetty server AsyncContinuation dispatch AsyncContinuation java    at org eclipse jetty server AsyncContinuation resume AsyncContinuation java    at org apache camel component jetty CamelContinuationServlet$ done CamelContinuationServlet java    at org apache camel management InstrumentationProcessor$ done InstrumentationProcessor java    at org apache camel processor UnitOfWorkProcessor$ done UnitOfWorkProcessor java    at org apache camel processor DefaultChannel$ done DefaultChannel java    at org apache camel processor RedeliveryErrorHandler$ done RedeliveryErrorHandler java    at org apache camel management InstrumentationProcessor$ done InstrumentationProcessor java    at org apache camel management InstrumentationProcessor$ done InstrumentationProcessor java   This is the case when an async completion callback is faster than the thread that is concurrently executing the if  continuation isInitial    block  I'll commit a fix soon that also follows the recommendations in http  wiki eclipse orgJettyFeatureContinuations to always call continuation suspend   before registering the continuation with a callback handler    
0;Add removeEndpoints to CamelContext   ;It should support uri patterns so you can remove all endpoints using wild cards etc removeEndpoints 'activemq  queue  foo*' removeEndpoints 'ftp  *'    
0;Enable the deletion of routes via REST in camelweb   ;The camelweb allows a user to deploy and manipulate routes It seems currently impossible to delete routes through camelweb A delete operation on the route to be deleted would complete the REST interface   http  en wikipedia orgwikiRepresentational_State_TransferRESTful_web_servicese g   RouteResource java@Delete public void removeRoute     getCamelContext   removeRouteDefinition this name       
0;Adding routes straight from XML should have Camel prepare the RouteDefintion as its done like in camelspring   ;camelspring does some preparation on the XML routes before they are added to CamelContext When end users loads the XML routes themself using JAXB and add it straight to CamelContext  we should let camelcore prepare the routes as well    
0;Velocity  Let it be able to load resources from both classpath and file system out of the box   ;See this blog entryhttp  www thedwick combloghowtoincludeothervelocitytemplatesfromapachecamelWe should pre configure Velocity to use both type of resource loaders    
0;provide an optional interface Endpoints can provide to generate a simple String ID which can be used within the class loader to make JMX  REST APIs simpler to avoid having to encode large URIs   ;rather than taking the URI and encoding it  it would be nice if endpoints could just generate their own unique ID on construction  then we don't have lifecycle issues of keeping track of endpoints coming and going and maintaining a parallel map of Endpoint gt  ID etc  We could use the same ID when registering endpoints with JMX etc   
0;Flatpack component    unable to set the delimiter parameter in spring config file   ;It's not possible to set the delimiter parameter in spring configuration file or I don't find the way to do it !For example    lt route id 'routeA'gt  lt from uri 'file  srctestresourcescsv?move doneamp fileName testfileRouteA csv' gt  lt to uri 'flatpack  delim  METAINFDelimited pzmap xml?delimiter  ' gt lt routegt I get the following error   Exception in thread 'main' org apache camel RuntimeCamelException   org apache camel FailedToCreateRouteException   Failed to create route routeA at   gt gt gt  To flatpack  delim  METAINFDelimited pzmap xml?ignoreFirstRecord falseamp splitRows trueamp delimiter    lt lt lt  in route   Route[[From[file  srctestresourcescsv?move doneamp fileName     because of Failed to resolve endpoint   flatpack  delim  METAINFDelimited pzmap xml?delimiter Bamp ignoreFirstRecord falseamp splitRows true due to   Could not find a suitable setter for property   delimiter as there isn't a setter method with same type   java lang String nor type conversion possible   No type converter available to convert from type   java lang String to the required type   char with value   at org apache camel util ObjectHelper wrapRuntimeCamelException ObjectHelper java    at org apache camel spring SpringCamelContext onApplicationEvent SpringCamelContext java    at org apache camel spring CamelContextFactoryBean onApplicationEvent CamelContextFactoryBean java    at org springframework context event SimpleApplicationEventMulticaster multicastEvent SimpleApplicationEventMulticaster java    at org springframework context support AbstractApplicationContext publishEvent AbstractApplicationContext java    at org springframework context support AbstractApplicationContext finishRefresh AbstractApplicationContext java    at org springframework context support AbstractApplicationContext refresh AbstractApplicationContext java    at org springframework context support ClassPathXmlApplicationContext lt initgt  ClassPathXmlApplicationContext java    at org springframework context support ClassPathXmlApplicationContext lt initgt  ClassPathXmlApplicationContext java    at org apache camel spring Main createDefaultApplicationContext Main java    at org apache camel spring Main doStart Main java    at org apache camel impl ServiceSupport start ServiceSupport java    at org apache camel impl MainSupport run MainSupport java    at org apache camel impl MainSupport run MainSupport java    at org apache camel spring Main main Main java   If it's a bug  to solve it  it's just necessary to change the class org apache camel component flatpack DelimitedEndpoint as below    change the flied definition like this  and gettersetter to    private String delimiter   ' '  private String textQualifier   '''  and the the method createParser like this    public Parser createParser Exchange exchange  throws InvalidPayloadException  IOException Unknown macro     Reader bodyReader   ExchangeHelper getMandatoryInBody exchange  Reader class   Resource resource   getResource    if  delimiter    null || delimiter equals quot quot    delimiter   quot  quot   if  textQualifier    null || textQualifier equals quot quot    textQualifier   quot quot quot   if  resource    null    return getParserFactory   newDelimitedParser bodyReader  delimiter charAt    textQualifier charAt       else   return getParserFactory   newDelimitedParser new InputStreamReader resource getInputStream     bodyReader  delimiter charAt    textQualifier charAt    ignoreFirstRecord         
1;JettyHttpComponent doStop   shuts down all servers in the VM  not just those associated with the component   ;We are running several bundles in Karaf with separate Camel contexts  each of which uses the cameljetty component to expose services over HTTP  Each bundle has an assigned port and may listen on multiple URIs  We noticed that when we updated or shut down one of these bundles  all of the Jetty servers in the other bundles would stop listening on their respective ports The problem is that the map of ConnectorRef objects in JettyHttpComponent is static  and therefore shared across the entire VM  Changing this from static to an instance variable fixed the issue for us    
0;Archetype for creating component should have better sample component   ;The current sample is based on Direct component which is a bad sample as its a very special component We should do a HelloWorldComponent the producer will just print the message body to system out the consumer is scheduled and triggers every th second with a dummy exchange   
0;RouteBuilderRef should work out of the box with Spring  and dependency injection   ;Spring  changed internally how dependency resolution works  Its now worse as we have to play tricks in the Camel namespace handler to tell Camel the various pieces you can ref  should depend on Camel  Otherwise the dependency resolution in Spring is not working properly This used to work like a charm in Spring       
1;Out of Heap memory issues with CamelFile processing large files   ;CamelFile component throws heap memory issue when processing csv file which is about MB with k Lines  http  camel  n nabble comJavaheapspaceissuewithreadinglargeCSVfilett htmla   
0;Simple language  Allow unlimited usage of and or operators in expression   ;The simple language currently only allows using and or or operators once in the expression  We should allow unlimited usages of those    
0;Cache Component needs to check for null values during GET operations   ;EhCache often has a bit of lag time when invalidating expired cache elements  first setting the Element value to null and then removing the key  If you are hitting a cache rapidly one often will run across a key that is present in the cache that still has a null element entry The logic for successfully key retrieval just needs to be slightly tweaked to check for null values    
0;netty timeout exception   ;eventhough message was received by netty procuder  it thows a timeout exception after  secs  here is the route and log  as this is a basic functionality I think this is critical priority  from 'netty  tcp  localhost  ?textline trueamp sync true'  process new Processor     int i   public void process Exchange exchange  throws Exception   String body   exchange getIn   getBody String class   Thread sleep    exchange getOut   setBody 'Bye ' + body    if i++    throw new IOException 'custom exception'         from 'file  testtestresponse'   convertBodyTo String class   threads    to ExchangePattern InOut 'netty  tcp  localhost  ?textline trueamp sync true'   to 'log  +++ reply++++'            file  testtestresponse  FileConsumer DEBUG Total  files to consume          file  testtestresponse  FileConsumer DEBUG About to process file   GenericFile C  testtestresponsehello txt  using exchange   Exchange[GenericFileMessage with file   GenericFile C  testtestresponsehello txt ]       [ Camel Thread   Threads] SendProcessor DEBUG gt gt gt gt  Endpoint tcp  localhost    Exchange GenericFileMessage with body   hello        [ Camel Thread   Threads] NettyProducer DEBUG Creating connector to address   localhost         [ Camel Thread   Threads] NettyProducer DEBUG Writing body   hello       [ New IO client worker ] NettyProducer DEBUG Operation complete org jboss netty channel DefaultChannelFuture@dbd       [ New IO server worker ] ServerChannelHandler DEBUG Incoming message   hello       [ New IO server worker ] ServerChannelHandler DEBUG Writing body   Bye hello       [ New IO client worker ] ClientChannelHandler DEBUG Message received   Bye hello       [ New IO client worker ] SendProcessor DEBUG gt gt gt gt  Endpoint log  +++ reply++++  Exchange GenericFileMessage with body   Bye hello        [ New IO client worker ] +++ reply++++ INFO Exchange ExchangePattern  InOut  BodyType  String  Body  Bye hello        [ New IO client worker ] GenericFileOnCompletion DEBUG Done processing file   GenericFile C  testtestresponsehello txt  using exchange   Exchange GenericFileMessage with body   Bye hello        [ New IO client worker ] FileUtil DEBUG Tried  to delete file   C  testtestresponsehello txt camelLock with result   true       [ New IO client worker ] nericFileRenameProcessStrategy DEBUG Renaming file   GenericFile C  testtestresponsehello txt  to   GenericFile C  testtestresponse camelhello txt        [ New IO client worker ] FileUtil DEBUG Tried  to rename file   C  testtestresponsehello txt to   C  testtestresponse camelhello txt with result   true       [ Hashed wheel timer ] DefaultErrorHandler DEBUG Failed delivery for exchangeId   febdaafcd  On delivery attempt    caught   org apache camel ExchangeTimedOutException   The OUT message was not received within    millis  Exchange GenericFileMessage with body   Bye hello        [ Hashed wheel timer ] DefaultErrorHandler ERROR Failed delivery for exchangeId   febdaafcd  Exhausted after delivery attempt    caught   org apache camel ExchangeTimedOutException   The OUT message was not received within    millis  Exchange GenericFileMessage with body   Bye hello org apache camel ExchangeTimedOutException   The OUT message was not received within    millis  Exchange GenericFileMessage with body   Bye hello    
0;BeanConveter didn't try to covert the bean invocation argument rightly   ;Here is the mail thread about it http  camel  n nabble comBugintheBeanConverterclasstd htmla   
0;QuartzEndpoint does not set the job name properly   ;Looks like the job name argument is not se properly on the endpoint and defaults to the uri path Another nastier issue  for which I should have probably created a separate issue  is that the uri gets messed up if it does not have the double slashes after the scheme  as in 'quartz  lt urigt ' vs 'quartz  lt urigt '  and the @cron argument contains '?'  The workaround  arguably  is to start the uri with 'quartz     ' See nabble thread  Many thanks to SK for reporting this    
0;@QueryParam doesn't work for CxfBeans   ;Charle report an issue    after tracing the code I found the DefaultCxfBeanBinding doesn't put the http query string into the cxf message So the @QueryParam will not take effect on the resource beans   http  camel  n nabble comcamelcxfbeanJAXRsQueryParamtd htmla   
0;hawtdb  Should work in OSGi   ;The decode method in ObjectCodec should wrap the causes stacktrace in the wrapped IOException For example OSGi frameworks may be pesky and we want to be able to see whatever stacktrace it may thrown on you  public T decode DataInput dataIn  throws IOException   int size   dataIn readInt    byte[] data   new byte[size]  dataIn readFully data   ByteArrayInputStream bytesIn   new ByteArrayInputStream data   ObjectInputStream objectIn   new ObjectInputStream bytesIn   try   return  T  objectIn readObject      catch  ClassNotFoundException e    throw new IOException e getMessage        For being JDK   compatible you need to do it like public static IOException createIOException String message  Throwable cause    IOException answer   new IOException message   answer initCause cause   return answer      
0;Splitter EIP  The sub exchanges should not contains on completions from original Exchange   ;See nabblehttp  camel  n nabble comCamelcallingcommittooearlywhenusingsplitsedafileendpointtpp html   
0;Performancescalability issue for converter lookup   ;In a simple HTTPgt HTTP proxy scenario  whith a Jetty or a servlet endpoint  that does not matter  I observe a very severe performance regression between Camel     as in servicemix    and camel    running on a apache karaf    OSGi stack  On the same hardware I get a throughput of  messages per second with Camel     but only  messages per second on Camel     both servletgt HTTP   If I replace the http endpoint with a log endpoint the throughput will be about  messages per second in both cases I have done some profiling for this   The active CPU times as shown in the profiler remain approximately the same for both versions  however if I monitor wait times  I get very long wait times for org apache camel impl DefaultMessage getHeader java lang String java lang Class  calls  If I break this down I see the java beans PropertyEditorManager findEditor java lang Class  call in org apache camel impl converter PropertyEditorTypeConverter convertTo java lang Class java lang Object   The findEditor   method is synchronized and initializes some class loading which takes some time Why is it necessary to instantiate the type converter for each message?   
0;polling of feeds in FeedEntryPollingConsumer is broken    ;The FeedEntryPollingConsumer class implements the poll   method for the 'splitEntries' mode of the RssEndpoint is broken You can think of two ways that polling feeds could work    A feed is created  then one item is processed  then the delay  then process another item  This way the feed is kept between calls to poll     A feed is created  then all the items are processed  the feed is cleared  and then the delay But the way it presently works  A feed is created  one items is processed  and the feed is cleared  then the delay  and again the feed is created and the next item is cleared This is clearly wrong  Feed entries can be missed  because the index of the next item to process is stored over polls but the list isn't  Also this creates a big network overhead when polling very active feeds such as twitter search   This is easy to fix  In the below code  public void poll   throws Exception   Object feed   createFeed    populateList feed   while  hasNextEntry      Object entry   list get entryIndex   boolean valid   true  if  entryFilter !  null    valid   entryFilter isValidEntry endpoint  feed  entry     if  valid    Exchange exchange   endpoint createExchange feed  entry   getProcessor   process exchange    return and wait for the next poll to continue from last time  this consumer is stateful  return     The return  at line  of org apache camel component feed FeedEntryPollingConsumer  should be deleted    
0;Using $ in endpoint uri causes thread name parser to fail   ;See nabblehttp  camel  n nabble comHowtospecifyroutetofolderwithinactualnametpp html   
0;Support userdefined shutdown timeout for CamelTestSupport   ;Would be nice if CamelTestSupport could allow user to define the Shutdown timeout of CamelContext We at Neociclo are finding difficult to debug through JUnit tests because of the hardcoded s timeout public void setUp             context   createCamelContext    assertValidContext context    reduce default shutdown timeout to avoid waiting for  seconds  context getShutdownStrategy   setTimeout   ++ context getShutdownStrategy   setTimeout getShutdownTimeout         + protected int getShutdownTimeout    + return  +     
0;cxfbean creates another instance of the class instead of directly using the referenced bean   ;    this makes it impossible to inject properties to the @WebService classlt camelContextgt  lt routegt  lt from uri '    ' gt  lt to uri 'cxfbean  handler' gt  lt routegt lt camelContextgt lt bean id 'handler' class 'a b c Handler'gt  lt property name 'prop' value '' gt lt beangt when 'handler' is created by Spring  its 'prop' is set to ''when the cxfbean  handler is triggered  the 'prop' is null  because CXF created another instance of Handler instead of using the one created by Spring   
0;Use ActiveMQUuidGenerator as the default uuid generator as its faster than the JDK UUID generator   ;The Java UUID is too slow  Switching back to AMQ based will improve performance We should just have to switch to use the JDK UUID for the camelgae component as it cannot use the AMQ based    
0;Contextsensitive setting of default UuidGenerator   ;Use JavaUuidGenerator in GAE environment  otherwise use ActiveMQUuidGenerator as default UuidGenerator    
0;Route autoStartup configurable through Property   ;Using Camel   I want to make the usage of a certain route configurable through properties  lt camelContext id 'camel' trace 'true' xmlns 'http  camel apache orgschemaspring'gt  lt route id 'configurable_' autoStartup '  startup_  'gt  lt from uri 'direct  start_'gt  lt to uri 'mock  end_'gt  lt routegt  lt route id 'configurable_' autoStartup '  startup_  'gt  lt from uri 'direct  start_'gt  lt to uri 'mock  end_'gt  lt routegt lt camelContextgt But if I do use the PropertyPlaceholder on the CamelContext like below it works  lt camelContext id 'camel' trace 'true' autoStartup '  startup_context  'So is this a bug or should this work this way?   
0;OsgiDefaultCamelContext getTypeConverterRegistry   returns null   ;The showed up when using dozer as shown in http  camel apache orgdozertypeconversion html  whose DozerTypeConverterLoader tries to get the type converter registry using      TypeConverterRegistry registry   camelContext getTypeConverterRegistry      Plausible error  OsgiDefaultCamelContext java @Override protected TypeConverter createTypeConverter     return new OsgiTypeConverter bundleContext  getInjector      DefaultCamelContext javapublic TypeConverterRegistry getTypeConverterRegistry     if  typeConverterRegistry    null     init type converter as its lazy if  typeConverter    null    getTypeConverter       type converter is usually the default one that also is the registry if  typeConverter instanceof DefaultTypeConverter    typeConverterRegistry    DefaultTypeConverter  typeConverter      return typeConverterRegistry   Error  getTypeConverter   returns an OsgiTypeConverter OsgiTypeConverter does not inherit from DefaultTypeConverter  thus the instanceof returns false gt  null is returnedSolution  Lots of different ways to do this  and it's getting late here  In this case  maybe it's OsgiDefaultCamelContext's responsibility to also override getTypeConverterRegistry with something along the lines of  @Overridepublic TypeConverterRegistry getTypeConverterRegistry     if  typeConverterRegistry    null     init type converter as its lazy if  typeConverter    null    getTypeConverter       type converter is usually the default one that also is the registry if  typeConverter instanceof OsgiDefaultTypeConverter    typeConverterRegistry     OsgiDefaultTypeConverter  typeConverter  getRegistry        return typeConverterRegistry   We've employed an  ugly  workaround in a local version of DozerTypeConverterLoader java   TypeConverter typeConverter   camelContext getTypeConverter    DefaultTypeConverter registry   null  if  typeConverter instanceof DefaultTypeConverter    registry    DefaultTypeConverter typeConverter    else if  typeConverter instanceof OsgiTypeConverter    OsgiTypeConverter osgiTypeConverter    OsgiTypeConverter typeConverter  registry   osgiTypeConverter getRegistry        
0;camelftp   fileExist Fail not honored when producer works in FTP root path   ;when using a route with ftp producer such as    lt to uri 'ftp  user@host?fileExist Failamp fileName testamp password mypass' gt The route will not correctly fail if the fileName already exists It will work in any subdirectory   lt to uri 'ftp  user@hostmydir?fileExist Failamp fileName testamp password mypass' gt The root cause of the bug is an incorrect test in org apache camel util FileUtil onlyPath   in component camelcore This method returns null when the parameter string is ''  It should return '' The attached patch fixes the issue    
0;Aggregator EIP  Add option to ignore timeout completed   ;See nabblehttp  camel  n nabble comAggregatorHowtoremovefrompersistencytpp htmlgt  I was thinking about something like a removeOnTimeout  default false ofgt  course  that would use the existing completionTimeout attribute but changegt  its behavior to remove the aggregated message instead of publishing it gt   Yeah I can kinda see an use case for this  You are using the timeoutas a last resort to just say hey we could not aggregate this in letssay  hours So lets just ignore the message Having an option on the aggregate to just auto discard those messageon timeout would help there to avoid the CBR and checking yourself Just wondering if this is a use case others use? Its still kindadangerous to discard messages    
0;Add alternative start token for simple language to avoid clash with Spring PropertyPlaceholder   ;When using Spring property placeholders it will scan for $    tokens  which is the same set the Camel Simple language uses This makes it harder to configure file endpoints where the file name is a simple expression because Spring interferes So by introducing the $simple  as alternative start token  we can avoid the clash    
0;camelftp  Setting password and username using UserInfo on uri does not work   ;You should be able to set ftp endpoint uri as  'ftp  scott@localhost  ' + getPort   + 'deletefile?password tigeramp binary falseamp delete true'And when using password and username in the userinfo part of the uri  'ftp  tiger  scott@localhost  ' + getPort   + 'deletefile?binary falseamp delete true'The latter didn't work   
0;Confusing IllegalArgumentException when address attribute isn't specified on CXF endpoint    ;If you create CXF endpoint  like this  without the address attribute   lt cxf  cxfEndpoint id 'greeting' wsdlURL 'greeting wsdl' serviceClass 'tutorial hanbo webservice Greeting' gt  lt cxf  cxfEndpointgt      then you get a really confusing error when you deploy the endpoint in ServiceMix   the error is Caused by   java lang IllegalArgumentException   endpointUri is not specified and org apache camel component cxf CxfSpringEndpoint does not implement createEndpointUri   to create a default value at org apache camel impl DefaultEndpoint getEndpointUri DefaultEndpoint java    at org apache camel management DefaultManagementLifecycleStrategy onEndpointAdd DefaultManagementLifecycleStrategy java    at org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java    We find that if you explicitly set the address then the problem goes away  see below  lt cxf  cxfEndpoint id 'greeting' wsdlURL 'greeting wsdl' address 'http  localhost  GreeterContextSOAPMessageService' serviceClass 'tutorial hanbo webservice Greeting' gt  lt cxf  cxfEndpointgt  On camelcxf web page  the 'address' attribute is not mentioned anywhere in the table of URI properties  so you might be lead to believe that it's not necessary    
1;Concurrent consumers on seda endpoint can cause content routing to mismatch   ;When consuming concurrently from a seda endpoint  when the route contains a content router based on the header  it will randomly route through the wrong choice In my specific case  I was consuming from an activemq queue  which would receive messages with a header that would then determine which route it would follow  It would randomly send messages down the wrong path  When I turned on tracing  it would behave itself  It also behaved itself when I limited it to only a single consumer  I was  however  able to duplicate it with the unit test below  Due to the concurrency issue  the test can occasionally pass  but run it a couple times and it should fail  It'll either receive  messages when it should have only gotten   or it will get no messages when it should have gotten  ConcurrencyTest javaimport org apache camel EndpointInject import org apache camel Produce import org apache camel ProducerTemplate import org apache camel builder RouteBuilder import org apache camel component mock MockEndpoint import org apache camel test CamelTestSupport public class ConcurrencyTest extends CamelTestSupport   @EndpointInject uri   'mock  result'  protected MockEndpoint resultEndpoint  @EndpointInject uri   'mock  otherResult'  protected MockEndpoint otherResultEndpoint  @Produce uri   'seda  start'  protected ProducerTemplate template  public void testSendMatchingMessage   throws Exception   String expectedBody   'lt matchedgt '  resultEndpoint expectedBodiesReceived expectedBody   otherResultEndpoint expectedBodiesReceived expectedBody   template sendBodyAndHeader expectedBody  'myDirection'  'send'   template sendBodyAndHeader expectedBody  'myDirection'  'received'   resultEndpoint assertIsSatisfied      @Override protected RouteBuilder createRouteBuilder     return new RouteBuilder     public void configure     from 'seda  start?concurrentConsumers '  from 'seda  start?concurrentConsumers '   choice    when header 'myDirection'  isEqualTo 'send'   to 'mock  result'   when header 'myDirection'  isEqualTo 'received'   to 'mock  otherResult'             
0;requestreply over JMS using temporary queues  if connection lost the temporary queue is not recreated which causes the producer to not work anymore   ;To recreate the problem you need a route with a jms inout endpoint that is configured to use a temporary destination for replies  Till now I was only able to show the problem with tibco ems  Start broker Start the jms consumer that replies to the request Start the route Send a requestreoply exchange  should work  Stop the broker Wait long enough for the client to do a full reconnect  I used connectionFactory setReconnAttemptCount   on the client so I do not have to wait so long  Start the broker gt  The jms component will do a full new connect Send a requestreoply exchange gt  Now a InvalidDestination Exception happensThe client route will not work anymore until a restart as it creates the temporary destination only once and it is invalid now    
0;The CxfConsumer's getContinuation method might throw NPE   ;HelloWhen trying the latest CAMEL    SNAPSHOT  I got a NPE  java lang NullPointerException at org apache camel component cxf CxfConsumer$ getContinuation CxfConsumer java    at org apache camel component cxf CxfConsumer$ invoke CxfConsumer java    at org apache cxf interceptor ServiceInvokerInterceptor$ run ServiceInvokerInterceptor java    at java util concurrent Executors$RunnableAdapter call Executors java    at java util concurrent FutureTask$Sync innerRun FutureTask java         
0;Add Exchange creation time to the exchange as property   ;Sometimes it would be really nice to access the exchange creation time from a processor  This can be of use for many tasks  like statistics etc    
0;Threads  Should allow using  in core pool size   ;See nabblehttp  camel  n nabble comThreadPoolExecutorconfigurationtpp html   
0;Route definitions should use boxed types and lazy evaluate defaults in the getter   ;When you output a route definition as XML then all the boolean types and whatnot get outputted using their default values For example inheritErrorHandler true This reduces the XML and keeps it much smaller    
0;GenericFileProducer writeFile method creates instance of unused InputStream   ;org apache camel component file GenericFileProducerMethod   writeFileThis method has the following statement  InputStream payload   exchange getIn   getBody InputStream class  This internally results in calling a TypeConverter to convert an object into InputStream type  However this InputStream has not been used and is eventually closed in the finally block  In the same method calling method storeFile on FileOperations  boolean success   operations storeFile fileName  exchange  also opens an InputStream on the same message    
0;JMX MBeans not registered for initiators   ;registering the Initiator before it has been started will not register the sessions mbeans with JMX  So the acceptors are ther  but no initiators    
0;XmppEndPoint  setting login to false when creating an account results in no action   ;XmppEndPoint myXmppEndPoint   new XmppEndPoint        myXmppEndPoint setCreateAccount true  myXmppEndPoint  setLogin false       This will result in 'no action' in xmpp server  if setLogin true the account is created and the user stays online I believe it's because of the logic used in createConnection   method of XmppEndPoint that could be changed to  if  !connection isAuthenticated      if  user !  null    if  LOG isDebugEnabled      LOG debug 'Logging in to XMPP as user   ' + user + ' on connection   ' + getConnectionMessage connection      if  password    null    LOG warn 'No password configured for user   ' + user + ' on connection   ' + getConnectionMessage connection      if  createAccount    AccountManager accountManager   new AccountManager connection   accountManager createAccount user  password     if login   if  resource !  null    connection login user  password  resource     else   connection login user  password         else   if  LOG isDebugEnabled      LOG debug 'Logging in anonymously to XMPP on connection   ' + getConnectionMessage connection      connection loginAnonymously        
0;RetryWhile is missing on the errorHandler DSL   ;You can only use retryWhile on the onException  It should be possible from errorHandler as well    
0;Let LazyLoadingTypeConverter load the converters from camelcore on startup   ;When using lazy loading type converter and Spring XML you will trigger the type converters to be loaded on startup due XML configuration needs to convert from String gt  other types etc So we should let Camel always load the type converters from camelcore as they are essential  Then the package scanning converters can be loaded on demand later    
0;support the Ordered Interceptor Strategy configured in spring   ;Now spring support user to configure their own Interceptor Strategy  but it cannot specifiy the wrap order of the interceptor strategy So we need to support a feature to let the user define the interceptor's order  user can choice to implement the org apache camel util Ordered interface for the customed interceptor strategy  if the interceptor strategy does support a Ordered interface  the camel context will loaded the interceptorstrategies and wrapper the process by the order For example if I write two interceptorstrategy A   B   if A's order is   and B's order is   the camel will always wrapper the processor as  A B Processor      
0;CaseInsensitiveMap concurrency issue   ;          PM  lt tarjeigt  cibsen   I get a few of these errors on a route using SEDA queues            PM  lt tarjeigt  Caused by    java util ConcurrentModificationException  null           PM  lt tarjeigt  java util ConcurrentModificationException          PM  lt tarjeigt  at java util HashMap$HashIterator nextEntry HashMap java             PM  lt tarjeigt  at java util HashMap$EntryIterator next HashMap java             PM  lt tarjeigt  at java util HashMap$EntryIterator next HashMap java             PM  lt tarjeigt  at org apache camel util CaseInsensitiveMap entrySet CaseInsensitiveMap java             PM  lt tarjeigt  at org apache camel util CaseInsensitiveMap putAll CaseInsensitiveMap java             PM  lt tarjeigt  at org apache camel impl MessageSupport copyFrom MessageSupport java             PM  lt tarjeigt  at org apache camel impl DefaultMessage copyFrom DefaultMessage java             PM  lt tarjeigt  at org apache camel util ExchangeHelper copyResults ExchangeHelper java             PM  lt tarjeigt  at org apache camel processor Pipeline process Pipeline java             PM  lt tarjeigt  at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java             PM  lt tarjeigt  at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java             PM  lt tarjeigt  at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java             PM  lt tarjeigt  at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java             PM  lt tarjeigt  at org apache camel management InstrumentationProcessor process InstrumentationProcessor java             PM  lt tarjeigt  at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java             PM  lt tarjeigt  at org apache camel component seda SedaConsumer sendToConsumers SedaConsumer java             PM  lt tarjeigt  at org apache camel component seda SedaConsumer run SedaConsumer java             PM  lt tarjeigt  at java util concurrent ThreadPoolExecutor runWorker ThreadPoolExecutor java             PM  lt tarjeigt  at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java             PM  lt tarjeigt  at java lang Thread run Thread java             PM  lt tarjeigt  It seems to me to be an error completely within Camel so I thought I'd report it           PM  lt tarjeigt  I got the error about  times having run about m messages through the different routes running in that jvm          PM  lt cibsengt  and do your prod server have more cpu cores?          PM  lt cibsengt  ibm  sun jdk?          PM  lt tarjeigt  Yes    This is openjdk          PM  lt tarjeigt  both places          PM  lt cibsengt  what os?          PM  lt tarjeigt  Centos           PM  lt cibsengt  yeah kinda figured when you said openjdk          PM  lt tarjeigt       
0;Multicast with pipeline may cause wrong aggregated exchange   ;This is a problem when using  set of nested pipeline and doing a transform as the first processor in that pipeline from 'direct  start'  multicast new SumAggregateBean     pipeline   transform bean IncreaseOne class   bean new IncreaseTwo    to 'log  foo'  end    pipeline   transform bean IncreaseOne class   bean new IncreaseTwo    to 'log  bar'  end    end    to 'mock  result'     
0;Let custom Processor be managed in JMX when implementing ManagementAware   ;See nabblehttp  camel  n nabble commanageCamelProcessorusingJMXtpp html   
0;Multiple Endpoints with the Same Port in Restlet Component   ;It should be possible to have several endpoints using the same port  the more it takes to rely on a HTTP server external to the component    
0;Add exception stacktrace to Simple language   ;So you can output the stracktrace  It should grab the stacktrace and print it to a String as output    
0;Stepwise change of directory unfit for production  ftpftpssftp    ;In Camel    the logic for changing directory for ftpftpssftp has changed in order to fix the problems discussed in the following thread   http  camel  n nabble comHowtochangedirectorywhileusingsftpcomponenttd htmlaIn Camel   changing of the remote directory is now done in a stepwise manner  This is a strategy not fit for production since it assumes that the logged in ftpftpssftp user has access to all intermediate directories all the way down to its home directory  This is rarely the case Also  when testing ftpsftp on ServU  a Windows based ftpftpssftp server  it turns out that it reports the current directory in a 'Windows way'  e g C  tempservuusersamplefilesftp  The topmost folder is not '' but 'C  '  This also breaks the new stepwise way of changing directory since it always tries to change to '' if an absolute path is used I propose to introduce a configuration property to enabledisable stepwise changing of directories where disabling it should be the default  I will upload a patch shortly    
0;cxfEndpoint of camelcxf doesn't support  the shcemaLocation element   ;Here is the mail thread   which discusses about it   http  camel  n nabble comcamelcxfexceptionwhenparsingcxfschemaLocationelementtd htmla   
0;NPE occurs without @Entity annotation   ;Here is code from the org apache camel component jpa JpaConsumer classprotected String getEntityName Classlt ?gt  clazz    Entity entity   clazz getAnnotation Entity class    Check if the property name has been defined for Entity annotation if  !entity name   equals ''      line  return entity name      else   return null    When trying to consume entities from jpa endpoint exception occursjava lang NullPointerException at org apache camel component jpa JpaConsumer getEntityName JpaConsumer java    at org apache camel component jpa JpaConsumer createQueryFactory JpaConsumer java    at org apache camel component jpa JpaConsumer getQueryFactory JpaConsumer java    at org apache camel component jpa JpaConsumer$ doInJpa JpaConsumer java    at org apache camel component jpa JpaTemplateTransactionStrategy$$ doInJpa JpaTemplateTransactionStrategy java    at org springframework orm jpa JpaTemplate execute JpaTemplate java    at org springframework orm jpa JpaTemplate execute JpaTemplate java    at org apache camel component jpa JpaTemplateTransactionStrategy$ doInTransaction JpaTemplateTransactionStrategy java    at org springframework transaction support TransactionTemplate execute TransactionTemplate java    at org apache camel component jpa JpaTemplateTransactionStrategy execute JpaTemplateTransactionStrategy java    at org apache camel component jpa JpaConsumer poll JpaConsumer java    at org apache camel impl ScheduledPollConsumer run ScheduledPollConsumer java    at java util concurrent Executors$RunnableAdapter call Executors java    at java util concurrent FutureTask$Sync innerRunAndReset FutureTask java    at java util concurrent FutureTask runAndReset FutureTask java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask access$ ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask runPeriodic ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask run ScheduledThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java   This is because there is no @Entity annotation and persistence is configured by means of orm xml To fix the problem change line  toif  entity !  null amp amp  !entity name   equals ''     
0;Quartz component has minor issues with old versions of Quartz   ;HelloI have run into two issues using camelquartz with old versions of Quartz  Quartz   and       With Quartz    at shutdown  I get a message         DefaultShutdownStrategy shutdownNow Error occurred while shutting down route   Consumer[quartz  importAnnuaireAgentsTimer?cron +++*+*+F]  This exception will be ignored java lang NoSuchMethodError   org quartz SchedulerMetaData isJobStoreClustered  Z at org apache camel component quartz QuartzComponent isClustered QuartzComponent java    at org apache camel component quartz QuartzComponent removeJob QuartzComponent java    at org apache camel component quartz QuartzEndpoint removeTrigger QuartzEndpoint java    at org apache camel component quartz QuartzEndpoint consumerStopped QuartzEndpoint java    at org apache camel component quartz QuartzConsumer doStop QuartzConsumer java    at org apache camel impl ServiceSupport stop ServiceSupport java    at org apache camel impl ServiceSupport stop ServiceSupport java    at org apache camel util ServiceHelper stopService ServiceHelper java    at org apache camel impl DefaultShutdownStrategy shutdownNow DefaultShutdownStrategy java    at org apache camel impl DefaultShutdownStrategy$ShutdownTask run DefaultShutdownStrategy java    at java util concurrent Executors$RunnableAdapter call Executors java    at java util concurrent FutureTask$Sync innerRun FutureTask java    at java util concurrent FutureTask run FutureTask java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java     Starting of a delayed timer fails  I think warning the user would be a better idea Patch is attached  it basically catches the NoSuchMethodError exceptions and acts accordingly    
0;CxfRsInvoker produces NullpointerException when no ContinuationProvider is set in the InMessage   ;In my usage of CXFRS with Camel through the camelcxf component I ran into a NullpointerException  the specific case is described in some detail on StackOverflow   http  stackoverflow comquestionswhydoigetanullpointerexceptionwheninvokingthecxfrsendpointofacamel Specifically I run into a NullpointerException  Caused by   java lang NullPointerException at org apache camel component cxf jaxrs CxfRsInvoker getContinuation CxfRsInvoker java    at org apache camel component cxf jaxrs CxfRsInvoker performInvocation CxfRsInvoker java    at org apache cxf service invoker AbstractInvoker invoke AbstractInvoker java         moreI was assuming I was misconfiguring something but didn't find any alternative way so I started digging in the camelcxf source code I found that such a 'getContinuation' method also exists for the org apache camel component cxf CxfConsumer as well as for the CxfRsInvoker  where it was failing for me   However in the case of the CxfConsumer there is a guard on the ContinuationProvider so that if it is null  then null is returned  return provider    null ? null    provider getContinuation   CxfRsInvoker does not have this guard  but it does have code to deal with a 'null' Continuation at the calling site  line   in performInvocation   Therefore I assumed this was a bug and patched the guard into the CxfRsInvoker as well My program now seems to work correctly  I assume this is a bug For completeness sake  this is what getContinuation now looks like for me   private Continuation getContinuation Exchange cxfExchange    ContinuationProvider provider    ContinuationProvider cxfExchange getInMessage   get ContinuationProvider class getName     return provider    null ? null    provider getContinuation        
0;camelirc component silently fails on nick collision   ;When the camelirc component connects to an irc server and there's a nick collision it silently fails  Also note there is no camelirc component in Jira    
0;Hard coded locale in Bindy DatePatternFormat   ;As reported by a user from the community  http  camel  n nabble comBindyDateformatParsingexceptiontd html   the locale of SimpeDateFormat in bindy's DatePatternFormat class is hard coded to FRANCE    
0;Add option on FTP component so you can set which path separator char to use  eg windows vs unix    ;For example if you use a windows platform and want to upload files to a remote linux FTP server  and the FTP server don't understand path separators using either  or  char   
0;springintegration  Should have better configuration validation   ;See nabblehttp  camel  n nabble comIntegrationcamelandspringintegrationtpp html   
0;PackageHelper  issue with version numbers which contains non decimal   ;See more herehttp  fusesource comforumsthread jspa?threadID amp tstart    
0;Tidying up strategy for managing resources in JMX   ;The management strategy should be  use ManagementAware if implemented on bean  use @ManagedResource if provided on bean  otherwise use defaultConsider using fallback from gt  which is the current behavior  If we change this we will break backwards compatibility But in essence we should had Camel fail if    cannot be registered  and not just fallback to use    as it does today    
0;Use ServiceMix guice bundle   ;In order to avoid to go on the googlecode maven repository  I provided a ServiceMix OSGi bundle for guice This bundle could be used by Camel in the Karaf features descriptor    
1;InterceptSendToEndpoint should check for if stop DSL has been used   ;See nabblehttp  camel  n nabble comInterceptSendToEndpointHttpComponenttpp html   
0;DefaultTimeoutMap should force scheduler in contructor   ;See nabblehttp  camel  n nabble comDoIhavetogiveaScheduledExecutorServiceinstancewheninitializingDefualtTimeoutMaptpp html   
0;CamelContext is started twice when using camelblueprint   ;For example if you run the testRouteWithAllComponents test in CamelBlueprintTest in testscamelitestosgi you will see a lot of logging  But notice[RMI TCP Connection     ] INFO org apache camel core osgi OsgiDefaultCamelContext  Apache Camel  SNAPSHOT  CamelContext   camel  is starting[RMI TCP Connection     ] INFO org apache camel core osgi OsgiDefaultCamelContext  Apache Camel  SNAPSHOT  CamelContext   camel  started in   secondsThen blueprint does something[Blueprint Extender   ] INFO org apache camel blueprint BlueprintCamelContext  Apache Camel  SNAPSHOT  CamelContext   camel  is starting[Blueprint Extender   ] INFO org apache camel blueprint BlueprintCamelContext  Apache Camel  SNAPSHOT  CamelContext   camel  started in   secondsAnd likewise both CamelContext's is shutdown when the test completes  There are logging events for that as well Pay attention to the name of the st CamelContext camel  This is the correct name as its based on the bundle id  our end user Camel application is given  This ensures that the CamelContext from his application has a name which is unique and refers to the bundle id as well Now if you look at the nd CamelContext being started its given another name camel  That id is most likely using a shared bundle id with a low number  For example camelblueprint or camelcore bundle  or something like that  In essence camelblueprint should only create one CamelContext and it should use the camel as the name of the CamelContext  eg  include the bundle id of the end user application     
0;InterceptSendToEndpoint has issues with interception http endpoints which has multiple parameters   ;See nabblehttp  camel  n nabble cominterceptSendToEndpointwithdynamicendpointtpp htmlThe issue is when any endpoints have parameters which may be reordered when the endpoint is normalized    
0;DataFormat  Support for CamelContextAware injection and startstop callbacks with Service   ;This allows custom DataFormat to do any initialization logic in start and stop methods from Service Also they will get access to CamelContext by implementing CamelContextAware   
0;Bindy should support clipping fields if they exceed maximum length allowed when using fixed length   ;Adding a new option to bindy annotation ** * Indicates to clip data in the field if it exceeds the allowed length when using fixed length  * boolean clip   default false Then if enabled it will clip the data so it can fit the length Also now Camel throws an exception if the data is too long and you have clip set as false    
0;CamelXMPP Consumer doesn't pass XMPP headers   ;XMPP Consumer should pass XMPP headers as message headers  just like XMPP Producer accepts message headers as XMPP headers    
0;NotifyBuilder  Should throw exception if it hasn't been created and matches is invoked   ;This helps use of NotifyBuilder as matches doesn't operate until you have created the notifier    
0;Some of JpaTraceEventMessage's attributes require @Lob annotation   ;JpaTraceEventMessage has a bunch of String attributes defined  Applying no annotations on String attributes of an @Entity result in generated database columns with a constrained length  e g   using EclipseLink and MySQL  a String attribute of an @Entity is mapped to a VARCHAR   field  Several values of JpaTraceEventMessage are probably carrying values larger than  characters  Using JPAs @Lob annotation tackles this problem by generating  C LOB fields  The attached patch defines the @Lob annotation on attributes which are expected to carry such large values    
0;BindyCsvDataFormat broken for pipe delimited files   ;Attempting to unmarshall a pipe delimited CSV file into a POJO using Bindy causese the first and last character the the line processed to be dropped  It appears that the BindyCsvDataFormat class removes the first and the last character from the line read from the CSV if the seperator is gt   characters in length  see below or line  in BindyCsvDataFormat   For pipe delimited files  you need to specify | as the seperator  as | is not evaluated correctly as a java regex by the split fuction  This leads to the first and last character for the line being parsed being dropped  From the comments it appears a 'fix' was added to remove the first and last character of the line when the seperator contains quotes or double quotes  Making this determination using the length of the seperator  rather than evaluating using a regex seems to be a poor solution that breaks other CSV delimiters See Attached for an code example    
0;ConcurrentModificationException in DefaultCamelContext removeRouteDefinitions     ;I get the following exception in DefaultCamelContext removeRouteDefinitions    We are removing route definitions from multiple threads  I see synchronization in various other methods  but not this one  Caused by   java util ConcurrentModificationException at java util AbstractList$Itr checkForComodification AbstractList java    at java util AbstractList$Itr next AbstractList java    at java util AbstractCollection removeAll AbstractCollection java    at org apache camel impl DefaultCamelContext removeRouteDefinitions DefaultCamelContext java      
0;Additional TypeConverters   ;Add TypeConverters to scala xml Elem from String  DOM Document  and DOM Node    
0;scala  xpath not working together with choicewhen   ;When using the Scala DSL  xpath expressions inside when   do not work as expected  As an example   'direct  a'   gt    choice   when  xpath 'hello'   to  'mock  english'  when  xpath 'hallo'     to  'mock  dutch'  to  'mock  german'    otherwise to  'mock  french'      Send messages'direct  a' !  'lt hellogt '  'lt hallogt '  'lt hellosgt ' Here we should receive  message in each of the mocks  For whatever reason  all  messages go to mock  english  Similar routes work as expected with the Java DSL    
0;classpath problem with camel  dot and provided dependencies   ;camel  dot in is failing with a class not found exception when the application context instantiates a class in a jar with provided scope If in your maven project you have   lt dependencygt  lt groupIdgt javax servletlt groupIdgt  lt artifactIdgt servletapilt artifactIdgt  lt versiongt  lt versiongt  lt scopegt providedlt scopegt  lt dependencygt and in your application context there is  for example  a subclass of ServletContextListener  mvn camel  dot fails with     Caused by   java lang ClassNotFoundException  javax servlet ServletContextListener at java net URLClassLoader$ run URLClassLoader java    at java security AccessController doPrivileged Native Method  at java net URLClassLoader findClass URLClassLoader java    at java lang ClassLoader loadClass ClassLoader java    at java lang ClassLoader loadClass ClassLoader java         moreIf you change it to   lt dependencygt  lt groupIdgt javax servletlt groupIdgt  lt artifactIdgt servletapilt artifactIdgt  lt versiongt  lt versiongt  lt scopegt compilelt scopegt  lt dependencygt then camelmavenplugin correctly generates the output  The fact isthat the servletapi jar must not be included in the final war I don't know the correct way to fix this  One option would be to add the includePluginDependencies option in the plugin and add the provided jars as runtime dependencies of the plugin The other  very easy to implement  option would be to change the requiresDependencyResolution from runtime to test The third option would be to make the requiresDependencyResolution configurable Attached is a patch for the nd option  lazy me     
0;Aggregation fails to call onComplete for exchanges if the aggregation is after a bean or process    ;When creating a route that contains an aggregation  if that aggregation is preceded by a bean or process  it will fail to call AggregateOnCompletion onComplete    I've attached a unit test that can show you the behavior  Trace level loggging will need to be enabled to see the difference  With the call to the bean  it won't show the following log entry  TRACE org apache camel processor aggregate AggregateProcessor  Aggregated exchange onComplete   Exchange[Message   ab]If you remove the bean call  it'll start calling onComplete   again What I've noticed is that if this call is not made  it ends up in a memory leak since the inProgressCompleteExchanges HashSet in AggregateProcessor never has any exchange ID's removed    
0;PollingConsumerPollStrategy  Add information to commit how many messages was polled   ;See nabblehttp  camel  n nabble comhowtofindoutifaftpfileconsumerhasfinishedreadingallfilesavailabletpp htmlHaving the number of messages polled allows end users to react accordingly  For example if there is  then they can do something special    
0;JtDataQueueConsumer incorrectly implements timeout semantics  jt component    ;JtDataQueueConsumer implementation of receive long  passes the timeout argument directly to com ibm as access DataQueue read int   not performing unit conversion  However  JtDataQueueConsumer receive long  accepts milliseconds  whereas DataQueue read int  accepts seconds as the time unit Also  invoking JtDataQueueConsumer receive   results in a call to DataQueue read    which is not a blocking call  on the contrary  it will not wait for entries Code snippet below JtDataQueueConsumer java DataQueue queue   endpoint getDataQueue    try   DataQueueEntry entry  if  timeout gt       entry   queue read  int timeout     else   entry   queue read     Note that the submitted patch floors the timeout value when converting to seconds  but different rounding might be desired  which should be specified in the class documentation    
0;cameljms  Improve logic waiting for ReplyTo destination to be computed when doing requestreply   ;When you use requestreply over JMS a JMSReplyTo destination must be computed which happens async by the MessageListenerContainer which is to listen for the replies The currently logic uses some lowlevel thread waitnotify scheme We should change that to use the concurrency API using a countdown latch  That's much better    
0;Aggregator  The completionFromBatchConsumer option dont aggregate the last incoming exchange   ;See nabblehttp  camel  n nabble comLastAggregatedExchangelostAggregatorwithaBatchConsumerandpersistentAggregationRepositorytpp html   
0;Detect uncaught exceptions in UoWProcessor to ensure UoW is done even for those uncaught exceptions   ;The Camel routing engines will handle this in   of the cases  but when you shutdown a Spring AC then Spring may stop beans in whatever order and this can cause those beans to fail operating during a graceful shutdown  And in worst case exceptions is thrown in situations where they are not normally done To cater for that and other situations the UoWProcessor should detect this and act accordingly This ensure the in flight registry will be tracked and we are not stuck with a missing inflight message  causing Camel to wait for the  sec timeout to shutdown For example just try hitting ctrl + c in that camelexamplemanagement and you can see such an example    
0;BindyFixedLengthDataFormat does a trim on Fixed Length record   ;BindyFixedLengthDataFormat does a trim on Fixed Length record  although Fixed Length recordare strictly positional in nature and may contain lot of fillers with empty spaces  doing a trim causes Bindy to fail the message length validation and exception is thrown on message length  Read the line String line   scanner nextLine   trim    Should be changed to  Read the line String line   scanner nextLine    Or a conditional option should be provided in FixedLengthRecord annotation whether or not to trim the entire record   
0;When Camel loads properties Camel should remove spaces  trim  from the end of the line    ;If Camel reads a property from a propertiesfile that has a space at the end of a line like  some property   theValue lt Camel will resolve 'theValue ' and then crash at route creation  Should be 'theValue'    
0;Update archetypes to use new descriptor format   ;Camel archetypes use the old descriptor format and give the following output  [INFO] ********************* End of debug info from resources from generated POM ***********************[INFO] project created from Old   x  Archetype in dir   wapachecamelprojectscamelxxxWe need to update to use the archetypemetadata xml descriptor   
1;camelsnmp  Should mask password in the endpoint class   ;See nabblehttp  camel  n nabble compasswordshowninplaintextinthelogfilewhilestartingampstoppingcontexttd htmlThe password should be masked which can be done by overriding toString and mask it in the output    
0;In some places we use ObjectHelper loadClass   instead of ClassResolver resolveClass     ;see Nabble   
0;Concurrent writes to the same file has race condition   ;See nabblehttp  camel  n nabble comUsingSplitterandfileproducerwithoptionfileExistAppendfailedtpp htmlWe need to synchronize on the file name to avoid concurrent writes to the same file    
0;JMS spec and JPA spec JARs should not be compile scoped by provided   ;See nabblehttp  camel  n nabble comdependencycompilescopetogeronimoXYZVERSIONspecincameljpaampcameljmstd htmla   
0;FTP rename fails   ; This is related to the user group discussion http  camel  n nabble comProblemrenamingexistingfileinFTPtd html When using a tmpPrefix when uploading  the rename from the tmpfile to the destination file fails  if the destination file is already present  even though the option fileExist Override is used We have the problem on just a few destination servers which all seems to be windows machines I have fetched the   branch of camelftp to find out why it does not work  since the unit test you refer to in your previous post do excercise the problem It appears that the cause of the problem is  that the FtpOperations existsFile fails to return true  which then causes the code not to enter the part where it deletes the exisiting file The reason for the FtpOperations existsFile to return false  is  that the list of existing files has the directoryname prepended  e g  I'm trying to upload Test REN to folder testrename  and in the code 'if  existing equals onlyName  ' existing testrenameTest REN and onlyName Test REN  which returns false  but causes the later rename to fail as the target folder did contain the Test REN  My guess is that it is server dependent whether the returned list of names in the directory include the directory name or not?To fix this I have added the following line of code before the ifstatementexisting   FileUtil stripPath FileUtil normalizePath existing   So it will strip the path part of the file name before comparing it to onlyName    
0;ServiceHelper  Avoid startedstopping service if already startedstopped   ;We should optimize ServiceHelper to detect if the service is already startedstopped  if it extends ServiceSupport  as then it provides state  Also DefaultEndpoint should extends ServiceSupport to provide state so we know if the endpoint is startedstopped This avoid double starting or stopping services which is not needed And some custom components may not work well if they are started twice  just because Camel handles it lifecycle and invokes start multiple times Also refine the logging in ServiceHelper from TRACE to DEBUG level so its easier to spot the lifecycle    
0;Include test directories in the archetypes   ;A reader of Camel in Action pointed out that typically folks write unit tests for their projects so we should of course add the test directories  empty or not  to the archetypes  http  www manningsandbox comthread jspa?threadID amp tstart    I agree but of course this is not possible with the current archetype descriptor we are using  Will do this once CAMEL is complete    
0;cameljosql doesnot export org apache camel language sql *   ;   
0;Inconsistent filename value when move attribute is used with File component   ;Unless I miss a point  when I use the following endpoint  the file  name value is incorrect and is equal to file  absolute pathlt endpoint id 'fileEndpoint' uri 'file  $ queue input folder ?recursive trueamp include  * datamp move $ queue done folder $simple file  name amp moveFailed $ queue failed folder $simple file  name ' gt $ queue input folder   $ queue done folder  and $ queue failed folder  are absolute paths resolved by Spring In fact  Camel tries to move the file to $ queue done folder $ queue input folder $simple file  name I've also tried using $simple header CamelFileName  instead of $simple file  name  and it gives the same result For now  I've found a workaround using a processor which put the CamelFileName header value into a 'destFile' property lt endpoint id 'fileEndpoint' uri 'file  $ queue input folder ?recursive trueamp include  * datamp move $ queue done folder $simple property destFile amp moveFailed $ queue failed folder $simple property destFile ' gt    
0;camelsmpp should unbind from SMSC before disconnecting   ;See Nabble   
0;Force disable Quartz UpdateChecker   ;This is really terrible that Terracotta added a 'malware' kinda feature in Quartz that automatic checks if there is a new version of Quartz  WTF that doesn't work nice in enterprises  where they want to be in control of their communication We should force disabling this See more details here  http  forums terracotta orgforumspostslist pagehttps  jira terracotta orgjirabrowseQTZ   
0;Mistake in cameleventAdmin feature   ;The Camel Karaf feature cameleventAdmin is not correct The features is described as follow  lt feature name 'cameleventAdmin' version '  'gt  lt feature version '  'gt camelcorelt featuregt  lt bundlegt mvn  org apache camelcameleventAdmin  lt bundlegt lt featuregt but the cameleventAdmin artifact correct name is cameleventadmin  http  repo maven orgmavenorgapachecamelcameleventadmin  cameleventadmin   jarThis typo mistake provides  Downloading   http  repo maven orgmavenorgapachecamelcameleventAdmin  cameleventAdmin   jar INFO  Unable to find resource 'org apache camel  cameleventAdmin  jar    ' in repository central  http  repo maven orgmaven  INFO   ERROR  BUILD FAILURE INFO   INFO  Can't resolve bundle org apache camel  cameleventAdmin  jar     INFO  I'm gonna submit a patch to fix that    
0;Upgrade mavenbundleplugin to version      ;According to Guillaume Nodet we should try to upgrade to the    version of the maven bundle plugin as it simplyfies several osgi related definitions I will do a full build before committing but as far as I know we do not test in osgi so we need some testing in osgi too  Perhaps Willem can run some servicemix tests    
0;camelcorexml  Add gettersett for endpoints   ;We have listed @XmlElement name   'endpoint'  required   false  private Listlt CamelEndpointFactoryBeangt  endpoints in the camelspring  but we dont have gettersetter We should enforce this by adding gettersetter in camelcorexml which we have for most of the stuff    
0;Fix the Sonar Blocker   Performance  Maps and sets of URLs can be performance hogs   ;The Camel Sonar Pilot lists  blocker for Camel     All in org apache camel impl converter AnnotationTypeConverterLoader because it use the URL equals   and URL hashCode   methods You can find the explanation in    why this is not a good idea  I would like to change it url toURI  ? Any doubt?   http  sonar apache orgdrilldownviolationsorg apache camel  camel?priority BLOCKER   http  michaelscharf blogspot comjavaneturlequalsandhashcodemake html   
0;SMSC initiated unbind spawns exponential amounts of reconnect threads   ;It took me a bit of time to put my finger on this problem When an unbind PDU is sent from the SMSC side to a camelsmpp endpoint  a cascading amount reconnect threads are spawned by the reconnect code  I can reliably reproduce this problem having a simple smpp consumer to a SMSC  simulator and issuing an unbind from the SMSC  simulator Here are some logs  I have added additional debug messages to the SmppConsumer to show the object references and state of the SmppSession objects   
0;BinaryPredicate  Dont store state to ensure thread safety   ;We should introduce a new matches method which is used by mock's when they report failure messages  The new method should return the failure message which ensures we dont have to store state on the binary predicate instance    
0;Make ContentType HTTP Header Optional   ;As per section    of RFC   any HTTP  message containing an entitybody SHOULD  not MUST  include a Content Type header field defining the media type of that body The populateExchangeFromRestletRequest method of the DefaultRestletBinding class  unlike others in the same class  needs to be changed  if  request getEntity   getMediaType   equals MediaType APPLICATION_WWW_FORM          else   inMessage setBody request getEntity   getStream        
0;Make it easier to derive from the Camel model   ;In order to facilitate the building of derivations of Camel  some methods in builder and model need to use accessors for member variables  and types to allow for sub types   
0;Java DSL  Allow load balancer to be used inside CBR   ;We should allow to use the load balancer inside the CBR  in eg the when predicate See nabblehttp  camel  n nabble comDISCUSSJavaDSLcaveatwiththeContentBasedRoutertd html   
0;Endpoints may be shutdown twice as they are tracked in two lists in CamelContext   ;Endpoint is a Service which means they are listed in both a endpoint and service list  They should only be listed in the endpoint list This avoids issues with endpoints may be shutdown twice when Camel shutdown See nabblehttp  camel  n nabble comQuartzComponentdonotdeletequartzworkerthreadswhenshutdownCameltpp html   
0;Tidy up AST model to proper support output or not   ;We should tidy up the model  so they clearly indicate if outputs supported no outputseg when an EIP supports output  they can be nestedadded to it  eg in XML its likelt splitgt  lt output gt  lt output gt lt splitgt But some EIPs indicate they support output  but they dont  For example lt togt  should not support output as it doesn't make sense We should introduce a isOutputSupported on the ProcessorDefinition and then check each EIP This will cause changes to the XSD in that regard EIPs which really didn't support output  eg it was hacked that way in Java code  but the XSD would allow outputs  eglt to uri 'xxx'gt  lt output gt  lt output gt lt togt Now this would not be possible and you would have to dolt to uri 'xxx'gt lt output gt lt output gt This will in fact reduce the XSD and make it more concise when outputs is supported or not    
0;interceptFrom and from Endpoint  don't work together   ;When using interceptFrom String  together with from Endpoint   the below Exception occurs during the routes building process  Looking at RoutesDefinition java   reveals  that the FromDefintion just created has no URI  That causes the comparison to all the interceptFroms' URIs to fail  As far as I can tell  the way to fix this would be to add setUri myEndpoint getEndpointUri    in the constructor FromDefinition Endpoint endpoint  Below the stack trace  there is a unit test that demonstrates the issue  Until it if fixed  it can be easily circumvented by adding the commentedout line  and then change to from 'myEndpoint'  org apache camel ResolveEndpointFailedException   Failed to resolve endpoint   null due to   null at org apache camel util EndpointHelper matchEndpoint EndpointHelper java    at org apache camel model RoutesDefinition route RoutesDefinition java    at org apache camel model RoutesDefinition from RoutesDefinition java    at org apache camel builder RouteBuilder from RouteBuilder java    at dk mobilethink adc endpoint UnsetUriTest$ configure UnsetUriTest java    at org apache camel builder RouteBuilder checkInitialized RouteBuilder java    at org apache camel builder RouteBuilder configureRoutes RouteBuilder java    at org apache camel builder RouteBuilder addRoutesToCamelContext RouteBuilder java    at org apache camel impl DefaultCamelContext addRoutes DefaultCamelContext java    at org apache camel test CamelTestSupport setUp CamelTestSupport java    at junit framework TestCase runBare TestCase java    at org apache camel test TestSupport runBare TestSupport java    at junit framework TestResult$ protect TestResult java    at junit framework TestResult runProtected TestResult java    at junit framework TestResult run TestResult java    at junit framework TestCase run TestCase java    at junit framework TestSuite runTest TestSuite java    at junit framework TestSuite run TestSuite java    at org junit internal runners JUnitClassRunner run JUnitClassRunner java    at org eclipse jdt internal junit runner JUnitTestReference run JUnitTestReference java    at org eclipse jdt internal junit runner TestExecution run TestExecution java    at org eclipse jdt internal junit runner RemoteTestRunner runTests RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner runTests RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner run RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner main RemoteTestRunner java   Caused by   java lang NullPointerException at org apache camel util UnsafeUriCharactersEncoder encode UnsafeUriCharactersEncoder java    at org apache camel util URISupport normalizeUri URISupport java    at org apache camel util EndpointHelper matchEndpoint EndpointHelper java         morepackage dk mobilethink adc endpoint import org apache camel Endpoint import org apache camel builder RouteBuilder import org apache camel test CamelTestSupport public class UnsetUriTest extends CamelTestSupport   @Override protected RouteBuilder createRouteBuilder   throws Exception   return new RouteBuilder     public void configure   throws Exception   interceptFrom 'URI'  to 'irrelevantURI'   Endpoint myEndpoint   getContext   getComponent 'direct'  createEndpoint 'ignoredURI'    getContext   addEndpoint 'myEndpoint'  myEndpoint   from myEndpoint   inOnly 'log  foo'          public void testNothing          
0;OnException  The order they are defined in the RouteBuilder  XML should be preserved when you have multiple of the same exception type   ;When you have + of onException MyExcpetion class  then the order may get reversed  in the logic which prepares the routes  The logic should cater for clashes and ensure orders is preserved This currently only occurs for XML based routes  The Java DSL works    
0;cameljms   testConnectionOnStartup does not test connection for producers   ;I have a camel context which configures jms producers  but no jms consumers  With this configuration  the 'testConnectionOnStartup' jms option did not test the connection when I started the camel context  I have discovered that  with the current implementation  the 'testConnectionOnStartup' option only applies to consumers  I see that it is implemented in JmsConsumer doStart   gt  JmsConsumer testConnectionOnStartup    It would be useful if this option could also applied to producers As a workaround  I configured a dummy route and a dummy jms consumer    
0;Sending to http endpoint may double encoding parameters   ;See nabbleThe workaround is to use either HTTP_URI or HTTP_QUERY as a header with the parameters  Then they are not double encoded Also the HTTP_URI should be placeholder resolved  so we can use port or the likes to inject the port number dynamic    
0;Camel properties component  Add support for using jvm systemenv in location   ;For example you may want to say   location $ karaf hom etcmyprop properties   eg where karaf home is a jvm system property Take a look at simple as we may want to be able to lookup environment variable also    
0;ThreadPoolProfile  Use string types so its much easier to use property placeholders   ;In the XML DSL you can use threadPoolProfile to define profiles for thread pools  People may want to use property placeholders for minmax values etc  Using xs  string is thus much easier to do that  We do that for some of the others such as lt jmxAgentgt    
0;JAXB marshaling broken in      ;This used to work in    but in    it throws  Caused by   javax xml bind JAXBException   class com ask ugc camel Jask$Foo nor any of its super class is known to this context  at com sun xml bind v runtime JAXBContextImpl getBeanInfo JAXBContextImpl java    at com sun xml bind v runtime XMLSerializer childAsRoot XMLSerializer java    at com sun xml bind v runtime MarshallerImpl write MarshallerImpl java    at com sun xml bind v runtime MarshallerImpl marshal MarshallerImpl java    at javax xml bind helpers AbstractMarshallerImpl marshal AbstractMarshallerImpl java    at org apache camel converter jaxb JaxbDataFormat marshal JaxbDataFormat java    at org apache camel converter jaxb JaxbDataFormat marshal JaxbDataFormat java      @ContextConfiguration  locations   'foo bar JaxbBug$ContextConfig'  loader   JavaConfigContextLoader class public class JaxbBug extends AbstractTestNGSpringContextTests   @EndpointInject uri   'mock  end'  protected MockEndpoint mockEndpoint  @Produce uri   'direct  test'  protected ProducerTemplate producer  @Test @DirtiesContext public void testJaxbMarshalling   throws InterruptedException   mockEndpoint expectedMessageCount    producer sendBody new Foo     mockEndpoint assertIsSatisfied      @Configuration public static class ContextConfig extends SingleRouteCamelConfiguration   @Bean public RouteBuilder route     return new RouteBuilder     @Override public void configure   throws Exception   JaxbDataFormat jaxb   new JaxbDataFormat JAXBContext newInstance Foo class    from 'direct  test'  marshal jaxb  to 'mock  end'            @XmlRootElement public static class Foo   String bar  public String getBar     return bar    public void setBar String bar    this bar   bar         
0;IgnoreInvalidEndpoint should log invalid endpoints at DEBUG level   ;Currently its logged at INFO level with full stacktrace  If end user enabled this option we should only log it at DEBUG level to avoid spamming production logs See nabblehttp  camel  n nabble comcamelrecipientListwithignoreInvalidEndpointstruetpp html   
0;Add comments on the CamelContextTestSupport class to tell user to start the camel context manually when the test doesn't use the RouteBuilder   ;Current CamelContextTestSupport class will not start the camelcontext if the isUseRouteBuilder   return false If the component that is used by template needs to be started  your test method will get the NPE or some strange error And you can these load when shutting down the camel context Mar         PM org apache camel test junit CamelTestSupport tearDownINFO   Testing done   com fusesource example camel cxf jms HelloWorldClient@edcMar         PM org apache camel impl DefaultCamelContext doStopINFO   Apache Camel   fuse  CamelContext  camel  is shutting downMar         PM org apache camel impl DefaultCamelContext createManagementStrategyINFO   JMX is disabled  Using DefaultManagementStrategy Mar         PM org apache camel impl DefaultShutdownStrategy doShutdownINFO   Starting to graceful shutdown  routes  timeout  seconds Mar         PM org apache camel impl DefaultShutdownStrategy doShutdownINFO   Graceful shutdown of  routes completed in  secondsMar         PM org apache camel impl DefaultCamelContext doStopINFO   Uptime   not startedMar         PM org apache camel impl DefaultCamelContext doStopINFO   Apache Camel   fuse  CamelContext   camel  is shutdown in   seconds   
0;Let log  log eip and mock producer be async processor   ;We should prefer to use the async processor for the Camel EIPs and components when possible  This avoids the tiny overhead of having a sync to async adapter  implemented using a converter     
0;sftp producer runs in exception fileName does not contain any path information   ;When the fileName uri option does not contain any folder information  ie   'fileName filename txt' the producer runs in exceptionThe exception is thrown when the producer calls ls method of jsch ChannelSftp passing an empty string as directory parameter in org apache camel component file remote SftpOperations existsFile line sample URI   sftp  user@hostname  ?disconnect trueamp eagerDeleteTargetFile falseBstepwiseDfalseamp fileName SYSTEMamp password ******amp soTimeout amp tempFileName BfileAname noextD tmpStack trace  [      ][RecipientList  thread  ][ERROR][org apache camel processor DefaultErrorHandler][] Failed delivery for exchangeId   ID******  Exhausted after delivery attempt    caught   org apache camel component file GenericFileOperationFailedExcept on   org apache camel component file GenericFileOperationFailedException   at org apache camel component file remote SftpOperations existsFile SftpOperations java    at org apache camel component file GenericFileProducer processExchange GenericFileProducer java    at org apache camel component file remote RemoteFileProducer process RemoteFileProducer java    at org apache camel impl converter AsyncProcessorTypeConverter$ProcessorToAsyncProcessorBridge process AsyncProcessorTypeConverter java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor MulticastProcessor doProcessParallel MulticastProcessor java    at org apache camel processor MulticastProcessor access$ MulticastProcessor java    at org apache camel processor MulticastProcessor$ call MulticastProcessor java    at org apache camel processor MulticastProcessor$ call MulticastProcessor java    at java util concurrent FutureTask$Sync innerRun FutureTask java    at java util concurrent FutureTask run FutureTask java    at java util concurrent Executors$RunnableAdapter call Executors java    at java util concurrent FutureTask$Sync innerRun FutureTask java    at java util concurrent FutureTask run FutureTask java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java    Caused by      at com jcraft jsch ChannelSftp ls ChannelSftp java    at org apache camel component file remote SftpOperations existsFile SftpOperations java         more Caused by   java lang StringIndexOutOfBoundsException   String index out of range    at java lang String charAt String java    at com jcraft jsch ChannelSftp remoteAbsolutePath ChannelSftp java    at com jcraft jsch ChannelSftp ls ChannelSftp java         more   
0;Add an example which use CXF bean binding and the OSGI HTTP Service  e g  PAX Web with jetty    ;Please see Nabble for details    
0;After switching to slfj  we can get rid of the 'isTraceEnabled'  'isDebugEnabled' and 'isInfoEnabled' statements   ;we can get rid of the 'isTraceEnabled'  'isDebugEnabled' and 'isInfoEnabled' statements with slfj and uselogger debug 'Temperature set to     Old temperature was    '  t  oldT  insteadchristianmuellersmacbookpro  camel cmueller$ egrep r 'isTraceEnabled|isDebugEnabled|isInfoEnabled]'   | wc l    
0;Mail component issue with starttls option   ;The problem occurs when I read from a pop endpoint and send to an smtp endpoint in the same camel context with the mail pop starttls enable true and mail smtp starttls enable true options Required Java options for starttls are set  Djavax net ssl trustStore D  testxxx jksDjavax net ssl trustStorePassword yyyWhen I only configure one of either route  everything works fine  When I configure both  I get the following exception  AUTH LOGINC   STAT Must issue STARTTLS command firstSTARTTLSS   +OK  C   NOOP begin TLS negotiationS   +OKC   RSETS   +OKC   QUITAUTH LOGINS   +OK POP server closing connection wrong state for AUTH command        foo  ERROR DefaultErrorHandler  Failed delivery for exchangeId   IDEahi  Exhausted after delivery attempt    caught   org springframework mail MailAuthenticationException   Authentication failed  nested exception is javax mail AuthenticationFailedException    wrong state for AUTH commandorg springframework mail MailAuthenticationException   Authentication failed  nested exception is javax mail AuthenticationFailedException    wrong state for AUTH command at org springframework mail javamail JavaMailSenderImpl doSend JavaMailSenderImpl java    org springframework context support   RELEASE jar     RELEASE  at org springframework mail javamail JavaMailSenderImpl send JavaMailSenderImpl java    org springframework context support   RELEASE jar     RELEASE  at org springframework mail javamail JavaMailSenderImpl send JavaMailSenderImpl java    org springframework context support   RELEASE jar     RELEASE  at org springframework mail javamail JavaMailSenderImpl send JavaMailSenderImpl java    org springframework context support   RELEASE jar     RELEASE  at org apache camel component mail MailProducer process MailProducer java    camelmail   jar      at org apache camel impl converter AsyncProcessorTypeConverter$ProcessorToAsyncProcessorBridge process AsyncProcessorTypeConverter java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor SendProcessor$ doInAsyncProducer SendProcessor java    camelcore   jar      at org apache camel impl ProducerCache doInAsyncProducer ProducerCache java    camelcore   jar      at org apache camel processor SendProcessor process SendProcessor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    camelcore   jar      at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    camelcore   jar      at org apache camel processor DefaultChannel process DefaultChannel java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor Pipeline process Pipeline java    camelcore   jar      at org apache camel processor Pipeline process Pipeline java    camelcore   jar      at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor RoutePolicyProcessor process RoutePolicyProcessor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel component timer TimerConsumer sendTimerExchange TimerConsumer java    camelcore   jar      at org apache camel component timer TimerConsumer$ run TimerConsumer java    camelcore   jar      at java util TimerThread mainLoop Unknown Source      _  at java util TimerThread run Unknown Source      _ The problem seems to be in org apache camel component mail MailConfiguration createJavaMailSender   where it uses the same mail session for both connection  see Session getDefaultInstance below if  session !  null    answer setSession session     else    use our authenticator that does no live user interaction but returns the already configured username and password Session session  try   session   Session getDefaultInstance answer getJavaMailProperties    getAuthenticator       catch  Throwable t     fallback as default instance may not be allowed on some systems session   Session getInstance answer getJavaMailProperties    getAuthenticator       answer setSession session    This is because getDefaultInstance creates a Session object the first time it is called  Then it caches that Session and returns it for all subsequent calls  It also ignores the new and different properties for the second route See also http  camel  n nabble comMailcomponentwithstarttlstd html   
1;HttpProducer drops authentification parameters    ;Hi  I run into the following problem with Camel     An HTML file contain an URI lists of files to be downloaded from a web server to the local file system The HTML file is parsed via a Java Bean Splitter  The Java Bean Splitter produces a Set of URI strings These files should be downloaded from a web server to the local file system  The files are protected with BASIC authentification The extraction and the splitting of the download URIs works quite well with the Java Bean Splitter The Java Bean Splitter produces URI like   http  download acme comfile_ txt?username fooamp password baaHere's the setup  lt routegt  lt from uri 'file  tmpfiles_to_retrieve' gt  lt method bean 'prepareDownLoadUri' method 'parseIndexHtml' gt  lt setHeader headerName 'CamelHttpMethod'gt  lt constantgt GETlt constantgt  lt setHeadergt  lt setHeader headerName 'CamelHttpUri'gt  lt simplegt $ body lt simplegt  lt setHeadergt  lt to uri 'http  download acme com' gt  lt to uri 'bean  saveFileProcessor' gt lt routegt lt bean id 'prepareDownLoadUri' class 'com acme PrepareDownLoadUri' gt lt bean id 'saveFileProcessor' class 'com acme SaveFileProcessor' gt The injection of the URIs from the Splitter into the HttpProducer  works quite well  I debugged into the HttpProducer and it seems  that the HttpProducer does not provide the unterlying http client  in this case Apache HttpClient   with the authentification settings from the URI At first  the queryString is extracted from the ExchangeHeader  if provided HttpProducer createMethod    line String url   HttpHelper createURL exchange  getEndpoint    The url string contains the URI produces by the splitter including the authentification parameters   http  download acme comfile_ txt?username fooamp password baaThen the HttpProducer assembles a new URI for the requests  The new URI is assembled from parts of the string url  line   and other parameters from the Exchange Header   HttpProducer createMethod    lines   is a query string provided in the endpoint URI or in a header  header overrules endpoint  String queryString   exchange getIn   getHeader Exchange HTTP_QUERY  String class   if  queryString    null    queryString   getEndpoint   getHttpUri   getRawQuery      StringBuilder builder   new StringBuilder uri getScheme    append '  '  append uri getHost     if  uri getPort   !      builder append '  '  append uri getPort       if  uri getPath   !  null    builder append uri getRawPath       if  queryString !  null    builder append '?'   builder append queryString     HttpRequestBase httpRequest   methodToUse createMethod builder toString    The problem is  in the assembling of the new URI  the authentification parameters are dropped  One possible solution could be    check for authentification parameters in the url  line   and extract them  build the credentials  AuthScheme and provide it to the underlying http client thanks in advance ben   
0;option to force sending original JMS message   ;When using mapJmsMessage false you would think that Camel would send along the original JMS message  However  if you touch the Camel Message headers  get or set  this effectively disables the mapJmsMessage option  I came across this issue when using the failover loadbalancer  We should add an option to force Camel to send along the orginal JMS message    
0;HTTP Producer seems to send an empty body request on redelivery when the original request fails due to a connection timeout   ;Camel HTTP Producer is throwing an exception when it encounters a connection timeout  However instead of preserving the original message it is treating it processing the exception output  When connected to a redelivery meachanism  this results in an exception message being sent as input to the HTTP Consumer  The older versions of Camel behaved differently on read timeout  In Camel  x  in a read timeout  the Exception is thrown and the input message to the producer is passed through the pipeline  Now there is a difference   An exception is thrown and the output of the HTTP Producer is passed through the pipeline  Need to study why and what changed since Camel  x and ensure that the above does not happen For more details  please check out the following nabble entryhttp  camel  n nabble comHttproutereturningwithbutalsogettingreadtimedouttd htmlaCheers Ashwin      
0;org apache camel component file strategy MarkerFileExclusiveReadLockStrategy is not threadsafe   ;MarkerFileExclusiveReadLockStrategy is not threadsafe  When I run a File endpoint with more than one thread the MarkerFileExclusiveReadLockStrategy only deletes the last file to start being processed  The MarkerFileExclusiveReadLockStrategy uses global variables   private File lock  private String lockFileName  and gives them values on the acquireExclusiveReadLock method  When another thread calls the releaseExclusiveReadLock method it uses the global variables to delete the locked file  That means that if another thread came and called the acquireExclusiveReadLock it would have changed the values on the global variables  If lock and lockFileName are not global variables the problem seems to disappear and I can a multithreaded File endpoint and not locked file is left undeleted    
0;Try to copy file when rename fails   ;I have a setup where I use file component to move files after being processed ou when processing fails As I have no troubles neither on my development workstation neither on local directory on my linux environnement  It fails when the monitored directory is a NFS mounted directory pointing to a Windows  Server shared directory While it's not a camel bug  the generated logs are just useless because we can't get the reason of failure Investigating the source code tells me that the File renameTo method is used  with the three times try hack for Windows   so I can't get any further information on the reason Could you implement a fallback strategy like copy the file and delete the original one ?  should it be made optional To workaround this  I currently do the move operations manually by invoking the FileUtils moveTo      from commonsio  which implements exactly the fallback method I described on renameTo failure  But  I have side effects as I'm forced to use the noop attribute  in fact  it doesn't explain why the rename fails  but it works  and should it be a failure I'll get an explicit error message     
1;Polish the aws component   ;   
0;Web Console   NPE when browsing routes with no description   ;When some of the routes does not have a description NPE will be thrown  because of the code$ i getDescription getText To prevent it  just use$ i getDescriptionText    
0;maven eclipse goal failure   ;The error is  [ERROR] BUILD ERROR[INFO] [INFO] Request to merge when 'filtering' is not identical  Original resource srcmainresources   output targetclasses  include []  exclude [*** java]  test false  filtering false  merging with resource srcmainresources   output targetclasses  include [**archetypemetadata xml]  exclude [*** java]  test false  filtering trueand it seems to be resolved in the upcoming maveneclipseplugin      see MECLIPSE   An update to the new release of the plugin  once available  should resolve this    
1;The camelcometd component does not support a custom SecurityPolicy or Extension as described on http  cometd orgdocumentationhowtosauthentication   ;The camelcometd component does not support a custom SecurityPolicy or Extension as described on http  cometd orgdocumentationhowtosauthenticationA simple solution is to add setters for SecurityPolicy and Extension to the component  If these attributes are set then also set them on the underlying AbstractBayeux class About the patch  The existing unit test is based on an interactive scenario that involves human intervention  A similar test is made that uses an extension and another one is made that needs authentication  To provide feedback on a failed authentication a cometd listener is used  The version of the cometddojo extension used does not support listeners so this dojo extension has also been upgraded to       
0;BeanInfo not reset when new bean looked up   ;In camelbean  when a bean is lookedup and it is not the same bean as the previous one beanInfo has to be reset This is done in getBean   method of org apache camel component bean RegistryBean but the test is placed after setting bean value so beanInfo is never reset   if  value !  bean     bean   value   processor   null   if  !ObjectHelper equal ObjectHelper type bean   ObjectHelper type value      beanInfo   null      
0;Allow cometd component to send message headers with the message   ;Currently the cometd component ignores message headers        Code snippet from CometdConsumer java   Message message   new DefaultMessage    message setBody data   Exchange exchange   endpoint createExchange    exchange setIn message        Exchange message headers should be maintained  perhaps with a flag?     
0;cameljms default cache level should be CACHE_NONE when transaction is enabled   ;I lost a huge amount of time chasing the problem as the default value just screw the whole transaction  the session is created outside the transaction and cached  so usually not enlisted in the tx     
0;SmppProducer sends incorrect data_coding parameter   ;The dataCoding parameter on the SMPP uri allows for a value of    or   Our aggregator expects the data_coding parameter on the SMPP request from the SmppProducer to be  SMSC Default Alphabet  However  when     or  is specified for the dataCoding parameter  the actual value sent on the smpp request is     or   It appears the MessageClass Class on the GeneralDataCoding object in SmppProducer is masking an additional  to the byte value It seems the dataCoding parameter should allow you to specify the actual value that is needed as defined by the SMPP Protocol specification    
0;OSGi  No possibility to enable ehcache clustering as   ehcache xml is ignored and there is no possibility to set cacheManagerFactory described camelcache docs   ;This bug is caused by more than one problem as    camelcache bundle provides ehcache xml config which is ignored so then default ehcachefailsafe xml is taken by ehcache bundle   according to camelcache docs there is a way to set cacheManagerFactory but it seems to be not implemented asa  default CacheManagerFactory instance is created when when CacheComponent is instantiated b  setter method   public void setCacheManagerFactory CacheManagerFactory cacheManagerFactory  is used just nowhere c  there is no suitable filed in class CacheConfigurationAll above problems cause camelcache to be not able to work in java clustered world as default failsafe config  is really failsafe wo clustering    
0;camelcache  Should use Camel style constant keys   ;The CacheConstant use all upper cases and they are not using the Camel style which we should use It should be'CamelCacheAdd' instead of 'ADD'and so forth This also ensures those headers is not propagated over remote transports as they should not In fact we should consider removing those headers in the camelcache code as they are just input parameters to control the operation    
0;camelweb  Cannot browse endpoints if messages was consumed from jms queue   ;You get a NPE if you brows the endpoint Caused by   java lang NullPointerException at org apache camel web resources $scalate$ExchangeResource_index_ssp$$anonfun$$scalate$render$ apply ExchangeResource index ssp scala    at org apache camel web resources $scalate$ExchangeResource_index_ssp$$anonfun$$scalate$render$ apply ExchangeResource index ssp scala    at scala collection Iterator$class foreach Iterator scala      
0;camelxmpp  Should stop and clean session  so hotdeploy works   ;See this stacktrace      | ERROR | ExtenderThread | ContextLoaderListener |   org springframework osgi extender     | Application context refresh failed  OsgiBundleXmlApplicationContext bundle qbuscamelosgi  config osgibundle  METAINFspring* xml  org apache camel FailedToCreateProducerException   Failed to create Producer for endpoint   Endpoint[xmpp  articleRoute@localhost?password ******amp room mechatronconference mwpc]  Reason   java lang NullPointerException at org apache camel impl ProducerCache doGetProducer ProducerCache java   [  org apache camel camelcore     fuse] at org apache camel impl ProducerCache acquireProducer ProducerCache java   [  org apache camel camelcore     fuse] at org apache camel impl ProducerCache startProducer ProducerCache java   [  org apache camel camelcore     fuse] at org apache camel processor SendProcessor doStart SendProcessor java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startService ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startServices ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel processor DelegateAsyncProcessor doStart DelegateAsyncProcessor java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startService ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startServices ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel processor DelegateAsyncProcessor doStart DelegateAsyncProcessor java   [  org apache camel camelcore     fuse] at org apache camel processor interceptor TraceInterceptor doStart TraceInterceptor java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startService ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startServices ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel processor RedeliveryErrorHandler doStart RedeliveryErrorHandler java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startService ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startServices ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel processor DefaultChannel doStart DefaultChannel java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startService ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startServices ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel processor MulticastProcessor doStart MulticastProcessor java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startService ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startServices ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel processor DelegateAsyncProcessor doStart DelegateAsyncProcessor java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startService ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startServices ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel processor DelegateAsyncProcessor doStart DelegateAsyncProcessor java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startService ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel impl RouteService startChildService RouteService java   [  org apache camel camelcore     fuse] at org apache camel impl RouteService warmUp RouteService java   [  org apache camel camelcore     fuse] at org apache camel impl DefaultCamelContext doWarmUpRoutes DefaultCamelContext java   [  org apache camel camelcore     fuse] at org apache camel impl DefaultCamelContext safelyStartRouteServices DefaultCamelContext java   [  org apache camel camelcore     fuse] at org apache camel impl DefaultCamelContext doStartOrResumeRoutes DefaultCamelContext java   [  org apache camel camelcore     fuse] at org apache camel impl DefaultCamelContext doStartCamel DefaultCamelContext java   [  org apache camel camelcore     fuse] at org apache camel impl DefaultCamelContext doStart DefaultCamelContext java   [  org apache camel camelcore     fuse] at org apache camel spring SpringCamelContext doStart SpringCamelContext java   [  org apache camel camelspring     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel impl DefaultCamelContext start DefaultCamelContext java   [  org apache camel camelcore     fuse] at org apache camel spring SpringCamelContext maybeStart SpringCamelContext java   [  org apache camel camelspring     fuse] at org apache camel spring SpringCamelContext onApplicationEvent SpringCamelContext java   [  org apache camel camelspring     fuse] at org apache camel spring CamelContextFactoryBean onApplicationEvent CamelContextFactoryBean java   [  org apache camel camelspring     fuse] at org springframework context event SimpleApplicationEventMulticaster multicastEvent SimpleApplicationEventMulticaster java   [  org springframework context     RELEASE] at org springframework context support AbstractApplicationContext publishEvent AbstractApplicationContext java   [  org springframework context     RELEASE] at org springframework context support AbstractApplicationContext finishRefresh AbstractApplicationContext java   [  org springframework context     RELEASE] at org springframework osgi context support AbstractOsgiBundleApplicationContext finishRefresh AbstractOsgiBundleApplicationContext java   [  org springframework osgi core    ] at org springframework osgi context support AbstractDelegatedExecutionApplicationContext$ run AbstractDelegatedExecutionApplicationContext java   [  org springframework osgi core    ] at org springframework osgi util internal PrivilegedUtils executeWithCustomTCCL PrivilegedUtils java   [  org springframework osgi core    ] at org springframework osgi context support AbstractDelegatedExecutionApplicationContext completeRefresh AbstractDelegatedExecutionApplicationContext java   [  org springframework osgi core    ] at org springframework osgi extender internal dependencies startup DependencyWaiterApplicationContextExecutor$CompleteRefreshTask run DependencyWaiterApplicationContextExecutor java   [  org springframework osgi extender    ] at java lang Thread run Thread java   [    _]Caused by   java lang NullPointerException at org jivesoftware smackx muc MultiUserChat$ connectionCreated MultiUserChat java   [  org apache servicemix bundles smack     ] at org jivesoftware smack XMPPConnection initConnection XMPPConnection java   [  org apache servicemix bundles smack     ] at org jivesoftware smack XMPPConnection connectUsingConfiguration XMPPConnection java   [  org apache servicemix bundles smack     ] at org jivesoftware smack XMPPConnection connect XMPPConnection java   [  org apache servicemix bundles smack     ] at org apache camel component xmpp XmppEndpoint createConnection XmppEndpoint java   [  org apache camel camelxmpp     fuse] at org apache camel component xmpp XmppGroupChatProducer doStart XmppGroupChatProducer java   [  org apache camel camelxmpp     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel impl ServiceSupport start ServiceSupport java   [  org apache camel camelcore     fuse] at org apache camel util ServiceHelper startService ServiceHelper java   [  org apache camel camelcore     fuse] at org apache camel impl ProducerCache doGetProducer ProducerCache java   [  org apache camel camelcore     fuse]      more   
0;Avoiding to process the bean which value is null in CamelBeanPostProcessor   ;When user use the FactoryBean to return a null object within Spring  x  the CamelBeanPostProcessor will throw a NPE exception Although this issue can't be reproduced within Spring  x  we should consider to put the NP check in the CamelBeanPostProcessor as an enhancement    
0;camelcache exception message   CamelCacheOperation not specified in the message header [CamelCacheKey]   ;Caused by   net sf ehcache CacheException   CamelCacheOperation not specified in the message header  CamelCacheKey Sound like a mistake? Or maybe my English is so bad? as this message doesn't make sense for me   Simply it should be  Caused by   net sf ehcache CacheException   CamelCacheOperation header not specified in message   
0;Prevent 'FolderNotOpen' exception when closing out an email exchange   ;When an email exchange is complete it should set either the SEEN or DELETED flags in the folder on the email server  But if the folder isn't open  either because of automatic closing or timeout  attempting to set the flag results in a FolderNotOpen exception  The attached version of MailConsumer includes a check in processCommit   that opens the folder if it's not open at exchange completion    
0;Consumer URI parameters ignored after Route Restart   ;The URI parameters for a consumer appear to be ignored or disappear when the route where this consumer defined gets restarted One example could be JPA query passed in the URI and is used to filter the results from the consumer The attached test case shows this Look at the Readme txt  camelcontext xml  and JPARouteRestartTest class for more information Also  took a stab at fixing the problem and provided a patch with a possible solution  I ran the unit tests after that change and all passed    
0;CxfPayloadConverter may start failing to convert a CxfPayload to a Node   ;There is an issue with CxfPayloadConverter that can lead to a failure in converting the CxfPayload into something which is actually convertible  This problem happens when you try to convert a CxfPayload instance that has an empty body list into a Node instance  This returns null and subsequently registers this type mapping key  CxfPayloadgt Node  in org apache camel impl converter BaseTypeConverterRegistry's conversionmisses table  Because of this  a subsequent conversion using a CxfPayload instance with an non empty body list will permanently fail I am attaching a modified CxfPayloadConversionTest that includes testCxfPayloadToNode that illustrates this problem  Currently  the last assertion of this test is failing when this issue is present I think we can fix this problem by returning Void TYPE instead of a null for this case In this way  the conversion is regarded as a success and there will be no entry in the conversionmisses table So  I am also attaching the modiefied CxfPayloadConverter class that can handle this test case    
0;JdbcAggregationRepository count  *  is not working with MySQL     ;The JdbcAggregationRepository makes a  'SELECT COUNT  *  FROM    ' SQL request at line  in the source code  This appears to be incorrect with MySQL because theire is a space between COUNT and    By replacing the request with  'SELECT COUNT *  FROM    '  without the white space  the bug is corrected for MySQL  I think it should be tested with other database without the space   This request can be tested with Mysql Query Browser  the returned error is the same as the one encountered when we execute the JdbcAggregationRepository with Camel   The exception returned is the following    ERROR DefaultErrorHandler  Failed delivery for exchangeId   ID  COEWRKST          Exhausted after delivery attempt    caught   org springframework jdbc BadSqlGrammarException   PreparedStatementCallback  bad SQL grammar [SELECT COUNT  *  FROM aggregation_repo_ WHERE id   ?]  nested exception is com mysql jdbc exceptions jdbc MySQLSyntaxErrorException   You have an error in your SQL syntax  check the manual that corresponds to your MySQL server version for the right syntax to use near '*  FROM aggregation_repo_ WHERE id   ''' at line org springframework jdbc BadSqlGrammarException   PreparedStatementCallback  bad SQL grammar [SELECT COUNT  *  FROM aggregation_repo_ WHERE id   ?]  nested exception is com mysql jdbc exceptions jdbc MySQLSyntaxErrorException   You have an error in your SQL syntax  check the manual that corresponds to your MySQL server version for the right syntax to use near '*  FROM aggregation_repo_ WHERE id   ''' at line  at org springframework jdbc support SQLErrorCodeSQLExceptionTranslator doTranslate SQLErrorCodeSQLExceptionTranslator java    at org springframework jdbc support AbstractFallbackSQLExceptionTranslator translate AbstractFallbackSQLExceptionTranslator java    at org springframework jdbc core JdbcTemplate execute JdbcTemplate java    at org springframework jdbc core JdbcTemplate query JdbcTemplate java    at org springframework jdbc core JdbcTemplate query JdbcTemplate java    at org springframework jdbc core JdbcTemplate query JdbcTemplate java    at org springframework jdbc core JdbcTemplate queryForObject JdbcTemplate java    at org springframework jdbc core JdbcTemplate queryForObject JdbcTemplate java    at org springframework jdbc core JdbcTemplate queryForInt JdbcTemplate java    at org apache camel processor aggregate jdbc JdbcAggregationRepository$ doInTransaction JdbcAggregationRepository java    at org apache camel processor aggregate jdbc JdbcAggregationRepository$ doInTransaction JdbcAggregationRepository java    at org springframework transaction support TransactionTemplate execute TransactionTemplate java    at org apache camel processor aggregate jdbc JdbcAggregationRepository add JdbcAggregationRepository java    at org apache camel processor aggregate AggregateProcessor doAggregation AggregateProcessor java    at org apache camel processor aggregate AggregateProcessor process AggregateProcessor java    at org apache camel impl converter AsyncProcessorTypeConverter$ProcessorToAsyncProcessorBridge process AsyncProcessorTypeConverter java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor DefaultChannel process DefaultChannel java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel component jms EndpointMessageListener onMessage EndpointMessageListener java    at org springframework jms listener AbstractMessageListenerContainer doInvokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer invokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer doExecuteListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer doReceiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer receiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker invokeListener DefaultMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker executeOngoingLoop DefaultMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker run DefaultMessageListenerContainer java    at java lang Thread run Thread java   Caused by   com mysql jdbc exceptions jdbc MySQLSyntaxErrorException   You have an error in your SQL syntax  check the manual that corresponds to your MySQL server version for the right syntax to use near '*  FROM aggregation_repo_ WHERE id   ''' at line  at sun reflect GeneratedConstructorAccessor newInstance Unknown Source  at sun reflect DelegatingConstructorAccessorImpl newInstance DelegatingConstructorAccessorImpl java    at java lang reflect Constructor newInstance Constructor java    at com mysql jdbc Util handleNewInstance Util java    at com mysql jdbc Util getInstance Util java    at com mysql jdbc SQLError createSQLException SQLError java    at com mysql jdbc MysqlIO checkErrorPacket MysqlIO java    at com mysql jdbc MysqlIO checkErrorPacket MysqlIO java    at com mysql jdbc MysqlIO sendCommand MysqlIO java    at com mysql jdbc MysqlIO sqlQueryDirect MysqlIO java    at com mysql jdbc ConnectionImpl execSQL ConnectionImpl java    at com mysql jdbc PreparedStatement executeInternal PreparedStatement java    at com mysql jdbc PreparedStatement executeQuery PreparedStatement java    at org apache commons dbcp DelegatingPreparedStatement executeQuery DelegatingPreparedStatement java    at org apache commons dbcp DelegatingPreparedStatement executeQuery DelegatingPreparedStatement java    at org springframework jdbc core JdbcTemplate$ doInPreparedStatement JdbcTemplate java    at org springframework jdbc core JdbcTemplate execute JdbcTemplate java         more   
0;AnnotationTypeConverterLoader fails for folders containing spaces   ;This problem appears when jar dependencies with type converters have path containing space characters In my case  the camelmail   jar jar is located in my local maven repository I get this error during my project startup   [   ]Caused by   java net URISyntaxException   Illegal character in opaque part at index    jar  file  D  Documents and Settings mrepositoryorgapachecamelcamelmail  camelmail   jar!METAINFservicesorgapachecamelTypeConverter at java net URI$Parser fail URI java    at java net URI$Parser checkChars URI java    at java net URI$Parser parse URI java    at java net URI lt initgt  URI java    at java net URL toURI URL java    at org apache camel impl converter AnnotationTypeConverterLoader findPackages AnnotationTypeConverterLoader java    at org apache camel impl converter AnnotationTypeConverterLoader findPackageNames AnnotationTypeConverterLoader java    at org apache camel impl converter AnnotationTypeConverterLoader load AnnotationTypeConverterLoader java         moreFIX  findPackages method in AnnotationTypeConverterLoader shouldn't use URIs to store already visited jars    
1;Sending a message to log endpoint should not convert payload to StreamCache   ;We should not automatic try to convert the payload to a StreamCache if you send a message to a log endpoint  StreamCache newBody   message getBody StreamCache class   if  newBody !  null    message setBody newBody    Only if people have explicit enabled stream cache we can safely log it Otherwise we should not output streams in the log We should use the extractBodyForLogging from MessageHelper instead which cater for this    
0;Route cannot be started within webconsole  if autoStartup 'false' is set in camel xml   ;When a route has autoStartup 'false' set in the camel xml  it cannot be started anymore in the web console In the logfile  an entry is generated  similar to this  'Cannot start route route as its configured with autoStartup false | org apache camel spring SpringCamelContext | qtp'If a route does not have autoStartup 'false'  it can be stopped and started normally  as before with ActiveMQ     Camel    Reproduce steps   Configure a route with 'lt route autoStartup 'false'gt ' Start the ActiveMQ Service Navigate to 'http  server domain tld  camelroutes try to start the route with the button 'Start' check the logfile 'activemq log'   
0;Script arguments   ;As I said here    http  fusesource comforumsthread jspa?threadID amp tstart   the ScriptEngine class  http  download oracle comjavasedocsapijavaxscriptScriptEngine html  provides a put method which enable to add a Java object into the created script  thanks to the JSR  But Camel does not provide a 'bridge' to this method So I propose to pass the arguments via the header map of the message Indeed  on client side  I created a Maplt String  Objectgt  which contains the future scripts arguments  Then I put this map into the header Next on the camelscript component  I check a particular key  a public static final attribute that I added  and if the value returned is a Map  I try to add the Map's objects with the engine put String  Object  method    
0;camelsoap  Add support for multiple parameters   ;camelsoap is limited to only work with one parameter There is some code that throws an exception stating multiple parameters is not supported We should add support for that See nabblehttp  camel  n nabble comMultipleparametersinCXFservicemethodtpp html   
0;Dumping route to XML created by Java DSL using an expression may not output the actual used expression   ;See this unit testManagedCamelContextDumpRoutesAsXmlTestThe route in Java DSL from 'seda  bar'  routeId 'myOtherRoute'   filter   header 'bar'   to 'mock  bar'   end   And the output in XML lt route group 'org apache camel management ManagedCamelContextDumpRoutesAsXmlTest$' id 'myOtherRoute'gt  lt from uri 'seda  bar'gt  lt filter id 'filter'gt  lt expressionDefinitiongt  lt to uri 'mock  bar' id 'to'gt  lt filtergt  lt routegt The same example created by Spring XML  outputs the XML correct   
0;Add send body operations to managed CamelContext so you can pass in headers as well   ;Currently we only support sendBody  requestBody on ManagedCamelContext  We should add operations that includes a map of headers  Then we supports sending a message that has headers as well Also the existing operations should accept a java lang Object as body instead of a fixed String    
0;SpringWS producer doesn't propagate headers   ;The SpringWS producer only sets the body of the exchange  headers aren't propagated See Nabble   http  camel  n nabble comspringwscomponentnotpropagatinginheaderstooutmessagetd html   
0;Updated Hazelcast to version      ;Updated Hazelcast to version     This offers some major bugfixes in Hazelcast and new functionality in the camel camponent  e g  list inserting by index     
0;Java DSL  New means to explicitly end trycatch blocks   ;We are facing a problem with split   in combination with doTrydoCatch   Could you add a method 'endDoTry  ' to the ProcessorDefinition? My use case is this   @Override public void configure   throws Exception   from 'timer  myTimer?period    log 'begin'   setBody constant 'x y z'    doTry    log 'processing'   split body     log 'split'   end    endDoTry    would need some way like this to get back to the TryDefinition  doCatch Exception class   log 'Exception'   end     I tested this by adding endDoTry   to the ProcessorDefinition  and it works just fine  public TryDefinition endDoTry     return  TryDefinition  this   An endDoCatch in the TryDefinition would be great too  Is it possible that these endXXX   methods get added to     not just    or trunk?See also   http  camel  n nabble comRoutewithchoiceandsplittd html   
0;Camel FTP component fails to process multiple files at once from a specified folder   ;Camel FTP component fails to process multiple files at once from a specified folder  let's assume the folder is in  When the consumer connects to a ftp account and finds a list of  let's say   files  it will try to retrieve them in parallel but this is not handled properly As you can see from the below FTP server log  this is what Camel FTP does   it changes the current directory to in retrieves the file it changes the current directory to  the second  probably  thread changes the directory to in retreives the second file the first  probably  thread sends a delete command but it sends it as if it were in the root folder but it is actually in the in folder the FTP gives an error that the file doesn't exist somehow the FTP Component blocks itself on the first file   See my comments in the following log starting with *****        PM  sftptest      gt   '' is current directory         PM  sftptest      gt  CWD in        PM  sftptest      gt   CWD successful  'in' is current directory         PM  sftptest      gt  PASV        PM  sftptest      gt   Entering Passive Mode                PM  sftptest      gt  RETR WS__ xml        PM  sftptest      gt   Connection accepted        PM  sftptest      gt  SSL connection for data connection established        PM  sftptest      gt   Transfer OK        PM  sftptest      gt  CWD         PM  sftptest      gt   CWD successful  '' is current directory         PM  sftptest      gt  PWD        PM  sftptest      gt   '' is current directory         PM  sftptest      gt  CWD in        PM  sftptest      gt   CWD successful  'in' is current directory         PM  sftptest      gt  PASV        PM  sftptest      gt   Entering Passive Mode                PM  sftptest      gt  RETR WS__ xml        PM  sftptest      gt   Connection accepted        PM  sftptest      gt  DELE inWS__ xml ***** The location is already in  should be DELE WS__ xml        PM  sftptest      gt   File not found        PM  sftptest      gt  PASV        PM  sftptest      gt   Entering Passive Mode                PM  sftptest      gt  NLST in        PM  sftptest      gt   Directory not found        PM  sftptest      gt  PWD        PM  sftptest      gt   'in' is current directory         PM  sftptest      gt  CWD in ***** Current directory is already in        PM  sftptest      gt   CWD failed  'inin'   directory not found For the whole FTP server logs go here   http  pastie orgprivatekknnkxpbyzqmaigsmzgFor the ServicemixCamel Trace  log   http  pastie orgprivateeulookxiepannkjyuaA workaround that seems to work is to use the maxMessagesPerPoll  option    
0;cxf  rsServer requires class instead of interface in the serviceClass attribute   ;Here are part of the conversation from the mailing list   Hi there I'm using apacheservicemix  fuse and I need to consume RESTful requests Here is the documentation I have used   http  camel apache orgcxfrs htmlHere is my configuration filelt beans xmlns 'http  www springframework orgschemabeans' xmlns  xsi 'http  www w orgXMLSchemainstance' xmlns  jaxrs 'http  cxf apache orgjaxrs' xmlns  cxf 'http  camel apache orgschemacxf' xsi  schemaLocation ' http  www springframework orgschemabeans http  www springframework orgschemabeansspringbeans  xsd http  camel apache orgschemaspring http  camel apache orgschemaspringcamelspring xsd http  cxf apache orgjaxrs http  cxf apache orgschemasjaxrs xsd http  camel apache orgschemacxf http  camel apache orgschemacxfcamelcxf xsd 'gt  lt import resource 'classpath  METAINFcxfcxf xml' gt  lt import resource 'classpath  METAINFcxfcxfextensionjaxrsbinding xml' gt  lt import resource 'classpath  METAINFcxfcxfextensionhttp xml' gt  lt import resource 'classpath  METAINFcxfosgicxfextensionosgi xml' gt  lt cxf  rsServer id 'myServer' address '' serviceClass 'org test MyService' gt  lt camelContext id 'camel' xmlns 'http  camel apache orgschemaspring'gt  lt routegt  lt from uri 'cxfrs  bean  myServer?exchangePattern InOut'gt  lt transformgt  lt constantgt Hello World!!!lt constantgt  lt transformgt  lt routegt  lt camelContextgt lt beansgt Here is implementation of org test MyService@Path 'service' @Produces 'applicationjson' public class MyService   @POST @Path 'resource'  public Response add @QueryParam 'res'  String res    return Response ok new Status 'The Resource has been processed'   build      I'm wondering why we have to specify the serviceClass attribute and why this attribute should point at the real class  I'm asking because the response of such a service will always be 'Hello World!!!' and implementation of MyService add method does not matter in that case  Hi Ben You are right  the serviceClass is just used to build up the JAXRS service module  And Camel CXF RS Consumer doesn't all serviceClass instance at the end  it just route the request to the camel route   Hi Willem  BenThanks for the information I tried to use the interface instead of class in the serviceClass attribute and I didn't succeed because of an exception that told that the class is required Here is the exception  Caused by   java lang RuntimeException   Resource class interface org test MyService has no valid constructor at org apache cxf jaxrs lifecycle PerRequestResourceProvider lt initgt  PerRequestResourceProvider java    at org apache cxf jaxrs JAXRSServerFactoryBean updateClassResourceProviders JAXRSServerFactoryBean java    at org apache cxf jaxrs JAXRSServerFactoryBean create JAXRSServerFactoryBean java         moreI think that using an interface would be better in that case    
0;Replace the NoCacheStorage Class   ;The NoCacheStorage class can safely be replaced by FreeMarker's NullCacheStorage class  created per my suggestion based on our needs in Camel  introduced in       
0;ConcurrentModificationException at DefaultCamelContext getRouteDefinition     ;Similar to CAMEL there is also a race in getRouteDefinition  java util ConcurrentModificationException at java util AbstractList$Itr checkForComodification AbstractList java   [    _] at java util AbstractList$Itr next AbstractList java   [    _] at org apache camel impl DefaultCamelContext getRouteDefinition DefaultCamelContext java   [cihcore  jar   ] at com tieto cih core main GatewayRouteSetup startGatewayRoutes GatewayRouteSetup java   [cihcore  jar   ] at com tieto cih core main GatewayRouteSetup process GatewayRouteSetup java   [cihcore  jar   ]As route count could be quite large  it would be nice to have them stored in synchronized map or something like that instead of list    
0;Issue using errorBuilderRef with the xml dsl   ;While fixing issues around the errorHandler I noticed that lt onExceptiongt  definitions defined in the camel context are ignored if a route specifies its own errorHandlerRef  The reason is that we set the onException definition on the default error handler  I have a fix for that  but I discovered a different issue  I think  for which I would like to discuss the solution When we have an onException definition that looks kinda like this  lt onExceptiongt  lt exceptiongt  java lang IllegalArgumentExceptionlt exceptiongt  lt to uri 'mock  illegalArgumentException'gt lt onExceptiongt     something happens  the IAE exception is caught  we do something  but in that process another exception is thrown  Currently  that would be caught by the default error handler  which may not be what we want What error handler  if any  should handle exceptions thrown while in onException?The onException mechanism is somewhat similar to a trycatch  I don't think the exceptions thrown while handling onException should be handled by the same error handler configured for the route  or even the context scoped one  The processing should be very simple  predictable and immutable  Since the default 'CamelDefaultErrorHandlerBuilder' can be replaced  it is not imho a solution and we need one global one that does as little as possible  the problem would be agreeing what that is   no redeliveries  logging or not  etc  Thoughts?   
0;Loop EIP  Add copy option to let it start next loop with a copy of the original exchange   ;The Loop EIP will use pipes and filters  So if you loop  times  then on the nd and rd time its the output from the previous processing that is being used We should add an option so people can use a copy of the original exchange instead  so its the same copy being looped on each iteration The wiki documentation should be updated to describe the difference in these two modes See nabblehttp  camel  n nabble comLoopusagetpp html   
0;ChoiceProcessor    unable to find the mBeans processor   ;Using the jconsole  we are not able to locate some processors after a ChoiceProcessor For example   from 'direct  start'  to 'mock  test'  id 'mock'  choice   when predicate  to 'mock  test'  id 'test'  otherwise   to 'mock  test'  id 'test'  end   to 'mock  outOfChoice'  id 'outOfChoice'  The processors mock and outOfChoice are well found but not the processors test and test    
0;javax script dependency in camelcore   ;The OSGi imports for camelcore ends up with a nonoptional dependency on javax script due to it being used in the Activator  However  the karaf feature for camelcore doesn't have a dependency on org apache servicemix specs scriptingapi   One of two things should be done    mark javax script as optional  This MAY require some updates to the Activator to work when it's not available   Update the karaf features file to add  lt bundle dependency 'true'gt mvn  org apache servicemix specsorg apache servicemix specs scriptingapi $ servicemixspecsversion lt bundlegt    
0;continued true  doesn't work when is invoked for the second time in the Camel flow   ;When Camel flow contains error handling as continued true   it is not invoked when the error occurs for the second time  even in different onException  What is more the exception is not handled even by global onException and Camel flow is interruped    
0;Test failures in camelhdfs on windows as Streams are not closed correctly   ;On windows some hdfs tests fail as the streams are not correctly being closed  The first stacktrace looks like below  This is a bit misleading as in fact the problem is that not all exchanges could be processed  The reason is that the file component can´t rename the file as it is still open  This is because an inputStream is opened for the file but never closed junit framework AssertionFailedError   expected  lt gt  but was  lt gt  at junit framework Assert fail Assert java    at junit framework Assert failNotEquals Assert java    at junit framework Assert assertEquals Assert java    at junit framework Assert assertEquals Assert java    at junit framework Assert assertEquals Assert java    at org apache camel component hdfs HdfsProducerFileWriteTest testSimpleWriteFile HdfsProducerFileWriteTest java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org junit runners model FrameworkMethod$ runReflectiveCall FrameworkMethod java    at org junit internal runners model ReflectiveCallable run ReflectiveCallable java    at org junit runners model FrameworkMethod invokeExplosively FrameworkMethod java    at org junit internal runners statements InvokeMethod evaluate InvokeMethod java    at org junit internal runners statements RunBefores evaluate RunBefores java    at org junit internal runners statements RunAfters evaluate RunAfters java    at org junit rules TestWatchman$ evaluate TestWatchman java    at org junit runners BlockJUnitClassRunner runChild BlockJUnitClassRunner java    at org junit runners BlockJUnitClassRunner runChild BlockJUnitClassRunner java    at org junit runners ParentRunner$ run ParentRunner java    at org junit runners ParentRunner$ schedule ParentRunner java    at org junit runners ParentRunner runChildren ParentRunner java    at org junit runners ParentRunner access$ ParentRunner java    at org junit runners ParentRunner$ evaluate ParentRunner java    at org junit internal runners statements RunAfters evaluate RunAfters java    at org junit runners ParentRunner run ParentRunner java    at org eclipse jdt internal junit runner JUnitTestReference run JUnitTestReference java    at org eclipse jdt internal junit runner TestExecution run TestExecution java    at org eclipse jdt internal junit runner RemoteTestRunner runTests RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner runTests RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner run RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner main RemoteTestRunner java      
0;Create camelquartz component to support Quartz   x   ;Quartz    has been released  We should upgrade the camelquartz to use that version There is an OSGi bundle in the works  to be pushed to central repo  http  repo maven orgmavenorgapacheservicemixbundlesorg apache servicemix bundles quartzAlso there is a SMX tickethttps  issues apache orgjirabrowseSMXCOMP   
0;FileIdempotentRepository fileStore does not get loaded on bootrapping  therefore files are processed again   ;I am using JVM based initialization of Camel using Spring I use the documented Camel initialization procedure of main setApplicationContext 'myspringcamelconfig xml'  main start  I also use the documented FileIdempotentRepository that points to a FileStore However  when Camel initializes this filestore is not loaded up  Hence  the LRU cache contained within this is empty As a result  all my files are FTPed again from the remote server This happens everytime I start my JVM resulting in expensive FTP of files    
0;XML DSL having attributes that is a Class type should be a String type instead and use ClassResolver to lookup the class   ;In the XML DSL  some of the EIPs etc  have an attribute where you can configure a Classlt ?gt  type  For example lt xpathgt  has a resultType attribute  The XSD type is a xs  string The problem is JAXB can only convert the xs  string to a Classlt ?gt  if the class can be loaded by JAXBJDK  This may not work to well with custom types in OSGi  JBoss etc  Instead we should use ClassResolver from CamelContext to lookup those classes  as it works in OSGIblueprintJBoss etc    
0;In doTry    doCatch    doFinally the FAILURE_ENDPOINT details should be available as well in case an exception was thrown   ;In doCatch you have access to the caught exception using the exchange property CAUGHT_EXCEPTION  But we should also make FAILURE_ENDPOINT available as well  This information is present when you use onException  errorHandler  So we should make this consistent  and be avail in doCatch  doFinally as well    
0;Error using multiple error handlers and onException  java lang IllegalStateException   SendProcessor has not been started    ;When we use more than one errorHandler in our routes and onException  we face test failures with the following exception  java lang IllegalStateException   SendProcessor has not been started   sendTo Endpoint mock  custom   at org apache camel processor SendProcessor process SendProcessor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    camelcore   jar      at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    camelcore   jar      at org apache camel processor DefaultChannel process DefaultChannel java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor RedeliveryErrorHandler deliverToFailureProcessor RedeliveryErrorHandler java    camelcore   jar      at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    camelcore   jar      at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    camelcore   jar      at org apache camel processor DefaultChannel process DefaultChannel java    camelcore   jar      at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel component seda SedaConsumer sendToConsumers SedaConsumer java    camelcore   jar      at org apache camel component seda SedaConsumer run SedaConsumer java    camelcore   jar      at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java        _  at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java        _    
0;Refactorings in camelcxf   ;There are some dependency cycles between packages in camelcxf  Also some classes could need a bit internal cleanup  I open this ticket so my different commits around this can be seen in context    
0;SpringWebserviceConsumer should check if there is an Exception connected to the exchange and throw that one if it exists so that the default Errorhandling in springws can take place   ;If an Exception is thrown in the camel flow then that exception is not propagated to springwebservices Example   lt camel  from uri 'springws  rootqname   foo com BarRequest?endpointMapping endpointMapping'gt  lt camel  to uri 'bean  exceptionThrower?method throwException'gt This would result in an empty response from spring webservices with a status code of   accepted  If the check was made on the Exchange to see if there was an Exception thrown then that one could be rethrown and the Exceptionhandling in spring web services could do its magic In SpringWebserviceConsumer add this to the invoke method   if exchange getException   !  null   throw exchange getException        
0;camelsql  JDBC aggregation repository  Should use ClassResolver from Camel to load classes   ;The ClassLoadingAwareObjectInputStream should use the classResolver from CamelContext  which ensures better class loading on various platforms and OSGi etc    
0;JMX API to createdelete endpoint   ;we can create endpoints on the fly via the camelweb REST API  or by just sending a message to a new endpoint URI or consuming from a URI  But there is currently no JMX way to do so which is a bit of an omission Something like   createEndpoint String uri  would be a nice addition to the MBeans API on a ManagedCamelContext  Maybe a removeEndpoint String uri  too would be handy    
0;Improve pom xml for cameljibx  use mavenjibxplugin   ;I have a patch attached that updates the pom xml in the cameljibx component   The mavenjibxplugin has fixed http  jira codehaus orgbrowseJIBX  Using a profile to allow a user to skip the unit tests using Dmaven test skip true  The plugin will run even if unit tests are skipped  so using a profile to correct that    
0;ThrottlingInflightRoutePolicy can deadlock   ;Using ThrottlingInflightRoutePolicy can deadlock a route in some situations  The unit test pasted in below shows one such situation What happens is that the bottom route processes its first exchange  then suspends  Since it is suspended it will not take the next exchange from the seda queue  and so it will never check whether it should reenable the route Perhaps it will work by putting the check to reenable the route in the onExchangeBegin method  if that is called even when the route is suspended?import org apache camel Exchange import org apache camel Produce import org apache camel ProducerTemplate import org apache camel builder RouteBuilder import org apache camel component mock MockEndpoint import org apache camel impl DefaultInflightRepository import org apache camel impl ThrottlingInflightRoutePolicy import org apache camel impl ThrottlingInflightRoutePolicy ThrottlingScope import org apache camel test CamelTestSupport public class ThrottleTest extends CamelTestSupport   @Produce uri   'direct  input'  protected ProducerTemplate input  protected MockEndpoint resultEndpoint  @Override protected RouteBuilder createRouteBuilder   throws Exception   return new RouteBuilder     public void configure     resultEndpoint   new MockEndpoint 'mock  result'   resultEndpoint setCamelContext getContext     getContext   setInflightRepository new DefaultInflightRepository     @Override public void add Exchange exchange    super add exchange   System out println ' add ' + this size       @Override public void remove Exchange exchange    super remove exchange   System out println ' remove ' + this size           ThrottlingInflightRoutePolicy throttler   new ThrottlingInflightRoutePolicy    throttler setMaxInflightExchanges    throttler setScope ThrottlingScope Context   from 'direct  input'   inOnly 'seda  hey'  'seda  hey'  'seda  hey'  'seda  hey'  'seda  hey'   delay    inOnly 'log  inputDone'   from 'seda  hey'   routePolicy throttler   inOut 'log  outputDone'   to resultEndpoint          public void testThatAllExchangesAreReceived   throws Exception   input sendBody 'hello'   resultEndpoint expectedMessageCount    resultEndpoint assertIsSatisfied         
0;MockEndpoint expectedHeaderReceived checks only one header   ;The method MockEndpoint expectedHeaderReceived sets one header key and one header value to check  Subsequent calls to the same method overwrites the key and value  As a  nonexpert  user of the MockEndpoint  I would expect this method to work somewhat along the lines of Map put  so that multiple headers can be expected  Alternatively  replace it with MockEndpoint expectedHeadersReceived Maplt String  Objectgt  headers  or something like that MockEndpoint expectedPropertyReceived has the same issue The unit test below demonstrates the bug  Have fun import java util HashMap import org apache camel Produce import org apache camel ProducerTemplate import org apache camel builder RouteBuilder import org apache camel component mock MockEndpoint import org apache camel test CamelTestSupport public class MockEndpointTest extends CamelTestSupport   @Produce uri   'direct  input'  protected ProducerTemplate input  protected MockEndpoint resultEndpoint  @Override protected RouteBuilder createRouteBuilder   throws Exception   return new RouteBuilder     public void configure     resultEndpoint   new MockEndpoint 'mock  result'   resultEndpoint setCamelContext getContext     from 'direct  input'   inOnly 'log  output?showHeaders true'   to resultEndpoint          public void testStuff   throws Exception   HashMaplt String  Objectgt  headers   new HashMaplt String  Objectgt     headers put 'h'  'hello'   headers put 'h'  'world'   resultEndpoint expectedHeaderReceived 'h'  'hello'   resultEndpoint expectedHeaderReceived 'h'  'world'   input sendBodyAndHeaders null  headers   resultEndpoint expectedMessageCount    resultEndpoint assertIsNotSatisfied         
0;LoanBroker example have some issues when it is deployed into osgi container like ServiceMix   ;When you deploy the camelexampleloanbroker bundle into OSGi container  the osgi container only load the WebService route because there are some confliction of the bean ids    
0;Label of marshal and unmarshal processors do not appear in trace output   ;My route is defined as following   from mqIn   routeId Helper getRouteId this getClass   getName      errorHandler deadLetterChannel 'log  DEAD'  maximumRedeliveries   retryAttemptedLogLevel LoggingLevel WARN    onException EAIException class  maximumRedeliveries   handled true  to 'bean  AuditBO?method handleException'  end    transacted 'PROPAGATION_REQUIRES_NEW'   setHeader 'UBS_ID' new AuditId     wireTap 'seda  auditNew'   unmarshal 'SwiftDataFormat'   setHeader 'MT'  getMT   setHeader 'SWIFTAddress'  getSwiftAddress   to mqOut  The tracing output is the following[ main] Tracer INFO IDwbbc gt gt gt   wmswift in IcgToCore  wireTap seda  auditNew  gt  lt lt lt  Pattern  InOnly  Headers   UBS_ID bcfecfabefffd   BodyType  String     [ main] Tracer INFO IDwbbc gt gt gt   wmswift in IcgToCore  gt  setHeader MT  lt lt lt  Pattern  InOnly  Headers   UBS_ID bcfecfabefffd   BodyType  com ubs eai wmswift SwiftDataMessage  Body  com ubs eai wmswift SwiftDataMessage@bb[ main] Tracer INFO IDwbbc gt gt gt   wmswift in IcgToCore  setHeader MT  gt  setHeader SWIFTAddress  lt lt lt  Pattern  InOnly  Headers   MT   UBS_ID bcfecfabefffd   BodyType  com ubs eai wmswift SwiftDataMessage  Body  com ubs eai wmswift SwiftDataMessage@bb[ main] Tracer INFO IDwbbc gt gt gt   wmswift in IcgToCore  setHeader SWIFTAddress  gt  direct  core lt lt lt  Pattern  InOnly  Headers   SWIFTAddress ZYAMCHZXXXX  MT   UBS_ID bcfecfabefffd   BodyType  com ubs eai wmswift SwiftDataMessage  Body  com ubs eai wmswift SwiftDataMessage@bb[ main] Tracer INFO IDwbbc gt gt gt   wmswift core CoreToMQ  direct  core gt  lt lt lt  Pattern  InOnly  Headers   SWIFTAddress ZYAMCHZXXXX  MT   UBS_ID bcfecfabefffd   BodyType  com ubs eai wmswift SwiftDataMessage  Body  com ubs eai wmswift SwiftDataMessage@bb[ main] Tracer INFO IDwbbc gt gt gt   wmswift core CoreToMQ  gt  choice lt lt lt  Pattern  InOnly  Headers   MT   UBS_ID bcfecfabefffd  SWIFTAddress ZYAMCHZXXXX   The bug I found is the missing label of the unmarshal processor    
0;Add getRouteId   to TraceEventMessage   ;It would be good to find the routeId from the TraceEventMessage  in the case that the trace information is sent to a route In my example  extracts from XML   lt bean id 'CamelTracer' class 'org apache camel processor interceptor Tracer'gt  lt property name 'destination' ref 'traced'gt  lt property name 'logLevel' value 'OFF'gt  lt beangt  lt endpoint id 'traced' uri 'seda  auditrace?waitForTaskToComplete Never'gt And my route is   @EndpointInject ref 'traced'  Endpoint traced   @Override public void configure   throws Exception   from traced   routeId 'util AuditTrace'   noTracing    to 'bean  AuditBO?method trace'    An instance object of TraceEventMessage is sent down this route and there is no getRouteId   defined  This would make the TraceEventMessage even more helpful    
0;Groovy language  classNotFoundException in OSGi environment   ;The problem is in the following method of the GroovyLanguage@SuppressWarnings 'unchecked' protected Classlt Scriptgt  parseExpression String expression    return new GroovyClassLoader   parseClass expression   It uses the default constructor to create GroovyClassLoader  which uses Thread context classloader  which may not be equal to the classloader of the bundle where the camel context is defined Caused by   java lang NoClassDefFoundError   groovylangScript at java lang ClassLoader defineClass Native Method      _  at java lang ClassLoader defineClassCond ClassLoader java        _  at java lang ClassLoader defineClass ClassLoader java        _  at java security SecureClassLoader defineClass SecureClassLoader java        _  at groovy lang GroovyClassLoader access$ GroovyClassLoader java    at groovy lang GroovyClassLoader$ClassCollector createClass GroovyClassLoader java    at groovy lang GroovyClassLoader$ClassCollector onClassNode GroovyClassLoader java    at groovy lang GroovyClassLoader$ClassCollector call GroovyClassLoader java    at org codehaus groovy control CompilationUnit$ call CompilationUnit java    at org codehaus groovy control CompilationUnit applyToPrimaryClassNodes CompilationUnit java    at org codehaus groovy control CompilationUnit doPhaseOperation CompilationUnit java    at org codehaus groovy control CompilationUnit processPhaseOperations CompilationUnit java    at org codehaus groovy control CompilationUnit compile CompilationUnit java    at groovy lang GroovyClassLoader doParseClass GroovyClassLoader java    at groovy lang GroovyClassLoader parseClass GroovyClassLoader java    at groovy lang GroovyClassLoader parseClass GroovyClassLoader java    at groovy lang GroovyClassLoader parseClass GroovyClassLoader java    at groovy lang GroovyClassLoader parseClass GroovyClassLoader java    at org apache camel language groovy GroovyLanguage parseExpression GroovyLanguage java    at org apache camel language groovy GroovyLanguage createExpression GroovyLanguage java    at org apache camel language groovy GroovyLanguage createExpression GroovyLanguage java    at org apache camel component language LanguageProducer process LanguageProducer java      org apache camel camelcore     fuse  at org apache camel impl converter AsyncProcessorTypeConverter$ProcessorToAsyncProcessorBridge process AsyncProcessorTypeConverter java      org apache camel camelcore     fuse       moreCaused by   java lang ClassNotFoundException   groovy lang Script at java net URLClassLoader$ run URLClassLoader java        _  at java security AccessController doPrivileged Native Method      _  at java net URLClassLoader findClass URLClassLoader java        _  at java lang ClassLoader loadClass ClassLoader java        _  at groovy lang GroovyClassLoader loadClass GroovyClassLoader java      groovyall      at groovy lang GroovyClassLoader$InnerLoader loadClass GroovyClassLoader java    at groovy lang GroovyClassLoader loadClass GroovyClassLoader java      groovyall      at java lang ClassLoader loadClass ClassLoader java        _       more   
0;Nullpointer in camelmail when body is null   ;When trying to send a mail with an empty body  null  then we get the following NullPointer exception We should instead either complain about the null body or send the mail with an empty body       | INFO | tp | ache camel processor CamelLogger  |   org apache camel camelcore     | Exchange[ExchangePattern  InOut  BodyType  org apache cxf message MessageContentsList  Body   com ier ebo_servicerequest ServiceRequestType@e ]      | ERROR | tp | ache camel processor CamelLogger  |   org apache camel camelcore     | Failed delivery for exchangeId   IDMacBookProdebahaaldinelocal  Exhausted after delivery attempt    caught   org springframework mail MailPreparationException   Could not prepare mail  nested exception is java lang NullPointerExceptionorg springframework mail MailPreparationException   Could not prepare mail  nested exception is java lang NullPointerException at org springframework mail javamail JavaMailSenderImpl send JavaMailSenderImpl java      org springframework context support     RELEASE  at org springframework mail javamail JavaMailSenderImpl send JavaMailSenderImpl java      org springframework context support     RELEASE  at org apache camel component mail MailProducer process MailProducer java      org apache camel camelmail      at org apache camel impl converter AsyncProcessorTypeConverter$ProcessorToAsyncProcessorBridge process AsyncProcessorTypeConverter java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor SendProcessor$ doInAsyncProducer SendProcessor java      org apache camel camelcore      at org apache camel impl ProducerCache doInAsyncProducer ProducerCache java      org apache camel camelcore      at org apache camel processor SendProcessor process SendProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java      org apache camel camelcore      at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java      org apache camel camelcore      at org apache camel processor DefaultChannel process DefaultChannel java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor Pipeline process Pipeline java      org apache camel camelcore      at org apache camel processor Pipeline process Pipeline java      org apache camel camelcore      at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel component direct DirectProducer process DirectProducer java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java      org apache camel camelcore      at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java      org apache camel camelcore      at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor MulticastProcessor doProcessSequential MulticastProcessor java      org apache camel camelcore      at org apache camel processor MulticastProcessor doProcessSequential MulticastProcessor java      org apache camel camelcore      at org apache camel processor MulticastProcessor process MulticastProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor RecipientList sendToRecipientList RecipientList java      org apache camel camelcore      at org apache camel processor RecipientList process RecipientList java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java      org apache camel camelcore      at org apache camel processor DefaultChannel process DefaultChannel java      org apache camel camelcore      at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel component cxf CxfConsumer$ syncInvoke CxfConsumer java      org apache camel camelcxf      at org apache camel component cxf CxfConsumer$ invoke CxfConsumer java      org apache camel camelcxf      at org apache cxf interceptor ServiceInvokerInterceptor$ run ServiceInvokerInterceptor java      org apache cxf bundle      at java util concurrent Executors$RunnableAdapter call Executors java        _  at java util concurrent FutureTask$Sync innerRun FutureTask java        _  at java util concurrent FutureTask run FutureTask java        _  at org apache cxf workqueue SynchronousExecutor execute SynchronousExecutor java      org apache cxf bundle      at org apache cxf interceptor ServiceInvokerInterceptor handleMessage ServiceInvokerInterceptor java      org apache cxf bundle      at org apache cxf phase PhaseInterceptorChain doIntercept PhaseInterceptorChain java      org apache cxf bundle      at org apache cxf transport ChainInitiationObserver onMessage ChainInitiationObserver java      org apache cxf bundle      at org apache cxf transport http AbstractHTTPDestination invoke AbstractHTTPDestination java      org apache cxf bundle      at org apache cxf transport servlet ServletController invokeDestination ServletController java      org apache cxf bundle      at org apache cxf transport servlet ServletController invoke ServletController java      org apache cxf bundle      at org apache cxf transport servlet CXFNonSpringServlet invoke CXFNonSpringServlet java      org apache cxf bundle      at org apache cxf transport servlet AbstractHTTPServlet handleRequest AbstractHTTPServlet java      org apache cxf bundle      at org apache cxf transport servlet AbstractHTTPServlet doPost AbstractHTTPServlet java      org apache cxf bundle      at javax servlet http HttpServlet service HttpServlet java      org apache geronimo specs geronimoservlet_ _spec      at org apache cxf transport servlet AbstractHTTPServlet service AbstractHTTPServlet java      org apache cxf bundle      at org eclipse jetty servlet ServletHolder handle ServletHolder java      org eclipse jetty servlet     v  at org eclipse jetty servlet ServletHandler doHandle ServletHandler java      org eclipse jetty servlet     v  at org opsj pax web service jetty internal HttpServiceServletHandler doHandle HttpServiceServletHandler java      org opsj pax web paxwebjetty      at org eclipse jetty server handler ScopedHandler handle ScopedHandler java      org eclipse jetty server     v  at org eclipse jetty security SecurityHandler handle SecurityHandler java      org eclipse jetty security     v  at org eclipse jetty server session SessionHandler doHandle SessionHandler java      org eclipse jetty server     v  at org eclipse jetty server handler ContextHandler doHandle ContextHandler java      org eclipse jetty server     v  at org opsj pax web service jetty internal HttpServiceContext doHandle HttpServiceContext java      org opsj pax web paxwebjetty      at org eclipse jetty servlet ServletHandler doScope ServletHandler java      org eclipse jetty servlet     v  at org eclipse jetty server session SessionHandler doScope SessionHandler java      org eclipse jetty server     v  at org eclipse jetty server handler ContextHandler doScope ContextHandler java      org eclipse jetty server     v  at org eclipse jetty server handler ScopedHandler handle ScopedHandler java      org eclipse jetty server     v  at org opsj pax web service jetty internal JettyServerHandlerCollection handle JettyServerHandlerCollection java      org opsj pax web paxwebjetty      at org eclipse jetty server handler HandlerWrapper handle HandlerWrapper java      org eclipse jetty server     v  at org eclipse jetty server Server handle Server java      org eclipse jetty server     v  at org eclipse jetty server HttpConnection handleRequest HttpConnection java      org eclipse jetty server     v  at org eclipse jetty server HttpConnection$RequestHandler content HttpConnection java      org eclipse jetty server     v  at org eclipse jetty http HttpParser parseNext HttpParser java      org eclipse jetty http     v  at org eclipse jetty http HttpParser parseAvailable HttpParser java      org eclipse jetty http     v  at org eclipse jetty server HttpConnection handle HttpConnection java      org eclipse jetty server     v  at org eclipse jetty io nio SelectChannelEndPoint handle SelectChannelEndPoint java      org eclipse jetty io     v  at org eclipse jetty io nio SelectChannelEndPoint$ run SelectChannelEndPoint java      org eclipse jetty io     v  at org eclipse jetty util thread QueuedThreadPool$ run QueuedThreadPool java      org eclipse jetty util     v  at java lang Thread run Thread java        _ Caused by   java lang NullPointerException at javax mail util ByteArrayDataSource lt initgt  ByteArrayDataSource java      javax mail      at org apache camel component mail MailBinding populateContentOnMimeMessage MailBinding java      org apache camel camelmail      at org apache camel component mail MailBinding populateMailMessage MailBinding java      org apache camel camelmail      at org apache camel component mail MailProducer$ prepare MailProducer java      org apache camel camelmail      at org springframework mail javamail JavaMailSenderImpl send JavaMailSenderImpl java      org springframework context support     RELEASE       more      | WARN | tp | ache cxf common logging LogUtils  |   | Interceptor for {http  //www ier com/WS_ServiceRequest}WSServiceRequestService{http  //www ier com/WS_ServiceRequest}createServiceRequest has thrown exception  unwinding noworg apache cxf interceptor Fault   Could not prepare mail  nested exception is java lang NullPointerException at org apache camel component cxf CxfConsumer$ checkFailure CxfConsumer java      org apache camel camelcxf      at org apache camel component cxf CxfConsumer$ setResponseBack CxfConsumer java      org apache camel camelcxf      at org apache camel component cxf CxfConsumer$ syncInvoke CxfConsumer java      org apache camel camelcxf      at org apache camel component cxf CxfConsumer$ invoke CxfConsumer java      org apache camel camelcxf      at org apache cxf interceptor ServiceInvokerInterceptor$ run ServiceInvokerInterceptor java      org apache cxf bundle      at java util concurrent Executors$RunnableAdapter call Executors java        _  at java util concurrent FutureTask$Sync innerRun FutureTask java        _  at java util concurrent FutureTask run FutureTask java        _  at org apache cxf workqueue SynchronousExecutor execute SynchronousExecutor java      org apache cxf bundle      at org apache cxf interceptor ServiceInvokerInterceptor handleMessage ServiceInvokerInterceptor java      org apache cxf bundle      at org apache cxf phase PhaseInterceptorChain doIntercept PhaseInterceptorChain java      org apache cxf bundle      at org apache cxf transport ChainInitiationObserver onMessage ChainInitiationObserver java      org apache cxf bundle      at org apache cxf transport http AbstractHTTPDestination invoke AbstractHTTPDestination java      org apache cxf bundle      at org apache cxf transport servlet ServletController invokeDestination ServletController java      org apache cxf bundle      at org apache cxf transport servlet ServletController invoke ServletController java      org apache cxf bundle      at org apache cxf transport servlet CXFNonSpringServlet invoke CXFNonSpringServlet java      org apache cxf bundle      at org apache cxf transport servlet AbstractHTTPServlet handleRequest AbstractHTTPServlet java      org apache cxf bundle      at org apache cxf transport servlet AbstractHTTPServlet doPost AbstractHTTPServlet java      org apache cxf bundle      at javax servlet http HttpServlet service HttpServlet java      org apache geronimo specs geronimoservlet_ _spec      at org apache cxf transport servlet AbstractHTTPServlet service AbstractHTTPServlet java      org apache cxf bundle      at org eclipse jetty servlet ServletHolder handle ServletHolder java      org eclipse jetty servlet     v  at org eclipse jetty servlet ServletHandler doHandle ServletHandler java      org eclipse jetty servlet     v  at org opsj pax web service jetty internal HttpServiceServletHandler doHandle HttpServiceServletHandler java      org opsj pax web paxwebjetty      at org eclipse jetty server handler ScopedHandler handle ScopedHandler java      org eclipse jetty server     v  at org eclipse jetty security SecurityHandler handle SecurityHandler java      org eclipse jetty security     v  at org eclipse jetty server session SessionHandler doHandle SessionHandler java      org eclipse jetty server     v  at org eclipse jetty server handler ContextHandler doHandle ContextHandler java      org eclipse jetty server     v  at org opsj pax web service jetty internal HttpServiceContext doHandle HttpServiceContext java      org opsj pax web paxwebjetty      at org eclipse jetty servlet ServletHandler doScope ServletHandler java      org eclipse jetty servlet     v  at org eclipse jetty server session SessionHandler doScope SessionHandler java      org eclipse jetty server     v  at org eclipse jetty server handler ContextHandler doScope ContextHandler java      org eclipse jetty server     v  at org eclipse jetty server handler ScopedHandler handle ScopedHandler java      org eclipse jetty server     v  at org opsj pax web service jetty internal JettyServerHandlerCollection handle JettyServerHandlerCollection java      org opsj pax web paxwebjetty      at org eclipse jetty server handler HandlerWrapper handle HandlerWrapper java      org eclipse jetty server     v  at org eclipse jetty server Server handle Server java      org eclipse jetty server     v  at org eclipse jetty server HttpConnection handleRequest HttpConnection java      org eclipse jetty server     v  at org eclipse jetty server HttpConnection$RequestHandler content HttpConnection java      org eclipse jetty server     v  at org eclipse jetty http HttpParser parseNext HttpParser java      org eclipse jetty http     v  at org eclipse jetty http HttpParser parseAvailable HttpParser java      org eclipse jetty http     v  at org eclipse jetty server HttpConnection handle HttpConnection java      org eclipse jetty server     v  at org eclipse jetty io nio SelectChannelEndPoint handle SelectChannelEndPoint java      org eclipse jetty io     v  at org eclipse jetty io nio SelectChannelEndPoint$ run SelectChannelEndPoint java      org eclipse jetty io     v  at org eclipse jetty util thread QueuedThreadPool$ run QueuedThreadPool java      org eclipse jetty util     v  at java lang Thread run Thread java        _ Caused by   org springframework mail MailPreparationException   Could not prepare mail  nested exception is java lang NullPointerException at org springframework mail javamail JavaMailSenderImpl send JavaMailSenderImpl java      org springframework context support     RELEASE  at org springframework mail javamail JavaMailSenderImpl send JavaMailSenderImpl java      org springframework context support     RELEASE  at org apache camel component mail MailProducer process MailProducer java      org apache camel camelmail      at org apache camel impl converter AsyncProcessorTypeConverter$ProcessorToAsyncProcessorBridge process AsyncProcessorTypeConverter java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor SendProcessor$ doInAsyncProducer SendProcessor java      org apache camel camelcore      at org apache camel impl ProducerCache doInAsyncProducer ProducerCache java      org apache camel camelcore      at org apache camel processor SendProcessor process SendProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java      org apache camel camelcore      at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java      org apache camel camelcore      at org apache camel processor DefaultChannel process DefaultChannel java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor Pipeline process Pipeline java      org apache camel camelcore      at org apache camel processor Pipeline process Pipeline java      org apache camel camelcore      at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel component direct DirectProducer process DirectProducer java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java      org apache camel camelcore      at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java      org apache camel camelcore      at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor MulticastProcessor doProcessSequential MulticastProcessor java      org apache camel camelcore      at org apache camel processor MulticastProcessor doProcessSequential MulticastProcessor java      org apache camel camelcore      at org apache camel processor MulticastProcessor process MulticastProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor RecipientList sendToRecipientList RecipientList java      org apache camel camelcore      at org apache camel processor RecipientList process RecipientList java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java      org apache camel camelcore      at org apache camel processor DefaultChannel process DefaultChannel java      org apache camel camelcore      at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java      org apache camel camelcore      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java      org apache camel camelcore      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java      org apache camel camelcore      at org apache camel component cxf CxfConsumer$ syncInvoke CxfConsumer java      org apache camel camelcxf           moreCaused by   java lang NullPointerException at javax mail util ByteArrayDataSource lt initgt  ByteArrayDataSource java      javax mail      at org apache camel component mail MailBinding populateContentOnMimeMessage MailBinding java      org apache camel camelmail      at org apache camel component mail MailBinding populateMailMessage MailBinding java      org apache camel camelmail      at org apache camel component mail MailProducer$ prepare MailProducer java      org apache camel camelmail      at org springframework mail javamail JavaMailSenderImpl send JavaMailSenderImpl java      org springframework context support     RELEASE       more   
0;Using adviceWith  times or more in Java DSL with a context scoped onException causing the st advised route to not work as expected   ;See nabblehttp  camel  n nabble cominterceptusingadviceWithtpp html   
0;A name should be specified in the karaf featuresfile   ;When doing a features  list in karaf  the repository for camel is listed as repo  which looks ugly to me  It would be better if it were given a name on the form camel$ pom version   similar to the names used by other projects such as Karaf and ActiveMQ    
0;Add Lazy Connection to XMPP   ;We are trying to use XMPP as an endpoint but we have a serious problem If the XMPP server is inaccessible  we cannot start Camel  it just issues a FailedToCreateProducerException exception and shuts itself down Given we are running Camel from an ActiveMQ instance this prevents critical infrastructure from being restarted when our XMPP server is offline    
0;Added wrap method for template  consumer and context in org apache camel test junit CamelContextSupport   ;User complain about the change of CAMEL causes some issue when using the CamelTestSupport in scala A simple solution is add some wrap method to get the value protected static member Here is the mail thread   of it   http  camel  n nabble comCamelTestSupporttemplatevariablemissingchangedintd html   
0;avoid runtime package scanning to discover TypeConverters   ;Package scanning to discover classes annotated with @Converter is slow  Plus on many containers  especially commercial JEE containers  its not even possible  since ClassLoader getResource   doesn't often return file system based URIs you can easily convert to a java io File so you can list files in a directory Finding known resourcesclasses in class loaders generally works  scanning packages is generally more problematic  as well as being slow So it would be better if Camel could use a text file per jar containing all the fully qualified class names of the converters to use  Then no package scanning is required  Or rather we only need to use package scanning if a text file contains packages  rather than fully qualified classes   i e  do the package scanning at build time  when you have full access to the file system  rather than at runtime when you generally don't have access to the files  and expanding jars to look inside them is awfully slow In addition it'd be great if we added a maven plugin  or Java compiler AnnotationProcessor we can use with the compile step  to generate the METAINFservicesorgapachecamelTypeConverter file automatically as part of the build  Then users don't even have to think about it  they just add @Converter to a class and the plugin generates the text file as part of the build   using fully qualified class names  so no package scanning required at runtime  and much faster startup times too   
0;When performing lookup in registry and having expected type as parameter  then report better failure if ClassCastException   ;When Camel lookup in the registry  it may lookup in different runtime registries  such as OSGi blueprint  If an explicit type has been provided as a parameter you will get a ClassCastException if the type does not match  But you cannot see which types was a stake  So we should provide a better exception Caused by   java lang ClassCastException at java lang Class cast Class java        _  at org apache camel blueprint BlueprintContainerRegistry lookup BlueprintContainerRegistry java    at org apache camel impl CompositeRegistry lookup CompositeRegistry java    at org apache camel impl PropertyPlaceholderDelegateRegistry lookup PropertyPlaceholderDelegateRegistry java         more   
0;Archetypes fail to build in offline mode   ;If build toolingarchetypes with the offline Maven argument you may see an error like ERROR  Unresolveable build extension   Error resolving version for plugin 'org apache maven archetype  archetypepackaging'Seems the version for archetypepackaging in the dependencyManagement section defined in the parent pom is not propagating down to build extension    when Maven is not in offline mode it can simply grab the latest version from the metadata at central  I'm committing a simple fix shortly    
0;TraceInterceptor does not work correctly for AsyncProcessing   ;TraceEventHandlers are not called correctly when a node is processed asynchronously From org apache camel processor interceptor TraceInterceptor   try    special for interceptor where we need to keep booking how far we have routed in the intercepted processors if  node getParent   instanceof InterceptDefinition amp amp  exchange getUnitOfWork   !  null    TracedRouteNodes traced   exchange getUnitOfWork   getTracedRouteNodes    traceIntercept  InterceptDefinition  node getParent    traced  exchange      process the exchange try   sync   super process exchange  callback     catch  Throwable e    exchange setException e       finally    after  trace out  if  shouldLog amp amp  tracer isTraceOutExchanges      logExchange exchange   traceExchangeOut exchange  traceState      As it is this results in traceExchangeOut being called before the callback  which is wrong The call to super process needs to wrap the callback to call traceExchangeOut  and the finally block shouldn't run if the process is asynch  This isn't a regression  but the change to make more routes asynchronous makes it more noticeable    
0;camelftp  Using tempFileName option should use the separator option to allow control of path separators in the generated file name   ;See nabblehttp  camel  n nabble comFTPtempfilenotbeingcreatedcorrectlyonWindowsCameltpp html   
0;Missing setter or constructorargument for elementNameStrategyRef in SoapJaxbDataFormat   ;Because the variable 'elementNameStrategyRef' in org apache camel dataformat soap SoapJaxbDataFormat can't be set  it is always null  Therefore declaring the data format with springdsl leads to an automatic fallback to the default strategy 'TypeNameStrategy' in org apache camel dataformat soap SoapJaxbDataFormat checkElementNameStrategy Exchange exchange   This further leads to wrong results when marshalling So the following declararion does not work correctly      lt bean id 'myStrategy' class 'org apache camel dataformat soap name ServiceInterfaceStrategy'gt  lt constructorarg value 'my package MyServiceInterface'gt  lt constructorarg value 'true'gt  lt beangt     lt camelContext xmlns 'http  camel apache orgschemaspring'gt     lt dataFormatsgt  lt soapjaxb id 'mySoap'  contextPath 'my package'  elementNameStrategyRef 'myStrategy'gt  lt dataFormatsgt     lt routegt  lt from uri 'cxf  MyService?serviceClass my package MyServiceInterface' gt     lt convertBodyTo type 'my package MyType'gt  lt marshal ref 'mySoap'gt       
0;Expose setDeliveryMode property in org apache camel component jms JmsComponent   ;It would be beneficial if org apache camel component jms JmsComponent would allow to specify JMS deliveryMode explicitly  Currently  from what I can tell  there is only boolean deliveryPersistent property which is not enough if JMS provider supports additional nonstandard delivery modes  Example is Tibco EMS RELIABLE_DELIVERY mode    
0;Properties component  Cached locations may add duplicates   ;See nabblehttp  camel  n nabble comLRUCachememoryleakwhenusingcamelpropertiesfiletpp htmlThe internal cache should be a soft cache and we should use a key holder to ensure equalshashCode   
0;The routeContext stack of DefaultUnitOfWork should be thread safe   ;Here is the stack tracejava util EmptyStackException at java util Stack peek Stack java    at java util Stack pop Stack java    at org apache camel impl DefaultUnitOfWork popRouteContext DefaultUnitOfWork java    at org apache camel processor DefaultChannel$ done DefaultChannel java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor DefaultChannel process DefaultChannel java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor aggregate AggregateProcessor$ run AggregateProcessor java    at java util concurrent Executors$RunnableAdapter call Executors java    at java util concurrent FutureTask$Sync innerRun FutureTask java    at java util concurrent FutureTask run FutureTask java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java   You can find more information in this mail thread    http  camel  n nabble comEmptyStackExceptioninDefaultUnitOfWorkpopRouteContexttd html   
0;CamelAWS   Add support for adding CacheControl and ContentDisposition metadata support when uploading file   ;Add support for setting the CacheControl and ContentDisposition metadata information for the object Proposed Implementation    Add two new headers   CamelAwsSCacheControl and CamcelAwsSContentDisposition    Add corresponding enumerations in SConstants  Set the corresponding data into PutObjectRequest in SProducer    
0;Connection to sftp server occasionally don't want to come back   ;Problem appear if somebody kill logged on user on sftp server while you are connected with consumer Camel is not able to reconnect on next poll even if it says that it will do this RemoteFileConsumer is not connected but it thinks that it is still logged in I think 'loggedIn' flag should be down after each disconnecting action like in attached patch        WARN  RemoteFilePollingConsumerPollStrategy    Trying to recover by disconnecting from remote server forcing a reconnect at next poll   sftp  test@host        WARN  RemoteFilePollingConsumerPollStrategy    Consumer Consumer sftp  test@hosttest?delay amp delete trueamp localWorkDirectory FvarFtestFtempamp password xxxxamp throwExceptionOnConnectFailed true  could not poll endpoint   sftp  test@hosttest?delay amp delete trueamp localWorkDirectory FvarFtestFtempamp password xxxxamp throwExceptionOnConnectFailed true caused by   Cannot change directory to   test org apache camel component file GenericFileOperationFailedException   Cannot change directory to   test at org apache camel component file remote SftpOperations doChangeDirectory SftpOperations java    at org apache camel component file remote SftpOperations changeCurrentDirectory SftpOperations java    at org apache camel component file remote SftpConsumer doPollDirectory SftpConsumer java    at org apache camel component file remote SftpConsumer pollDirectory SftpConsumer java    at org apache camel component file GenericFileConsumer poll GenericFileConsumer java    at org apache camel impl ScheduledPollConsumer run ScheduledPollConsumer java    at java util concurrent Executors$RunnableAdapter call Executors java    at java util concurrent FutureTask$Sync innerRunAndReset FutureTask java    at java util concurrent FutureTask runAndReset FutureTask java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask access$ ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask runPeriodic ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask run ScheduledThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java   Caused by       at com jcraft jsch ChannelSftp cd ChannelSftp java    at org apache camel component file remote SftpOperations doChangeDirectory SftpOperations java         moreCaused by   java io IOException   Pipe closed at java io PipedInputStream read PipedInputStream java    at java io PipedInputStream read PipedInputStream java    at com jcraft jsch ChannelSftp fill ChannelSftp java    at com jcraft jsch ChannelSftp header ChannelSftp java    at com jcraft jsch ChannelSftp _realpath ChannelSftp java    at com jcraft jsch ChannelSftp cd ChannelSftp java         more   
0;cameljdbc should provide a option not set the autoCommit flag   ;When the jdbc connection is work as XA resource  the connection autoCommit flag doesn't support to be reset So we should provide an option in the cameljdbc endpont not to set the autoCommit flag on the connection    
0;MDCUnitOfWork behaviour incorrect with nested routes   ;MDCUnitOfWork clear   removes any content set by MDCUnitOfWork from MDC If there are two separate exchange running at the same time in the same thread  as happens when a ProduceTemplate is used from Java  this is incorrect because the MDC of the parent is cleared after the child completes Conceptually the MDC should be a stack  but MDC only accepts strings so the simplest thing to do is for MDCUnitOfWork to replace the previous values in clear      
0;Camel archetypes and examples should enable JMX for ActiveMQ   ;The camelactivemq archetype setup an embedded AMQ broker which has JMX disabled We should check all our examples and archetypes that JMX is enabled for AMQ when its embedded As it may confuse end users that they can see Camel in JMX  but not AMQ    
0;dump as xml fails if message body is already xml   ;MessageHelper dumpAsXml has a problem if the message body is already xml    
0;camelaws won't build offline   ;If you build camelaws in Maven's offline mode  o   you may get the following error  No versions available for org codehaus jackson  jacksoncoreasl  jar  [    within specified rangeThis will occur even if you have the libs locally  This is happening because Maven cannot download the remote metadata to get a list of versions for jacksoncoreasl  Specifying a hard version for this  not a range  gets around the issue  Committing a fix shortly    
0;#NAVN?;Since    Exchange BEAN_METHOD_NAME is always used instead of @Bean method name  see BeanInfo createInvocation Object pojo  Exchange exchange    As a consequence  the wrong method is choosen when I use a beanref invokation on a method that uses @Bean parameter binding I built a simple test case as a zip file containing an Eclipse Helios maven project  see attachment   The test fails with camel    and succeeds with    and earlier  at least until     regards Vincent MATHON   
0;Camel CXF Endpoint creates incomplete WSDL   ;The dynamically created WSDL for a cxf  cxfEndpoint declaration is malformed when using a complex type as parameter Please see as well the discussion here http  camel  n nabble comCamelCXFEndpointcreatingincompleteWSDLtd htmlUse attached test project to run mvn test with version    and     this should show the error    
0;Add errorHandler option for DMLC to cameljms   ;In Spring  a org springframework util ErrorHandler can be used to react to unhandled exceptions  unlike JMSExceptions handled by an javax jms ExceptionListenerSee http  static springsource orgspringdocs  xjavadocapiorgspringframeworkjmslistenerAbstractMessageListenerContainer htmlsetErrorHandler org springframework util ErrorHandler I'm going to add an option for this to cameljms shortly    
0;xslt component  Cannot load xslt file from file system   ;See nabblehttp  camel  n nabble comCustomURIResolverforCameltpp htmlThe Spring IO resource is a bit pants  as you ask for it to give an input stream  and then it fails doing that for a plain file url Instead it gives you an URL connection  and you get a unknown host exception    
0;Camel Bindy Parser One to Many KvP Unmarshall Issue   ;Bindy KvP unmarshall issue  While unmarshalling FIX messages  camelbindy causing inconsistencies if the incoming fix messages are defined to map using 'OneToMany' annotations In a given route for eg   BindyKeyValuePairDataFormat kvpBindyDataFormat   new BindyKeyValuePairDataFormat 'org apache camel dataformat bindy model fix complex onetomany'   public void configure     from URI_DIRECT_START  unmarshal kvpBindyDataFormat  to URI_MOCK_RESULT    kvpBindyDataFormat is single instance for multiple threads and with in 'BindyKeyValuePairFactory' class instance varialbe below is shared across multiple threads causing data inconsistencies private Maplt String  Listlt Objectgt gt  lists   new HashMaplt String  Listlt Objectgt gt     Values from previous threadmessages are retained in the current thread causing issues For eg in the test case   public class BindyComplexOneToManyKeyValuePairUnMarshallTest extends CommonBindyTest if we send another message with no repeating groups are sent String message   ' FIX      INVMGR BRKR' + ' BE CHM  CHM this is a camel  bindy test'  + ' ' The output message has repeating group data from message processed in earlier thread are pouplated causing data inconsistencies Please suggest the fix considering multithreading scenario  I am willing to volunteer for the fix Regards Surya   
0;Example feature   wrong spring version   ;Featureapachecamel   zipapachecamel  examplescamelexampleetlsrcmainresourcesfeatures xml contains lt bundlegt mvn  org springframeworkspringjdbc   SEClt bundlegt  lt bundlegt mvn  org springframeworkspringorm   SEClt bundlegt  Exception during 'hibernatefeauture' feature installation        | INFO | l Console Thread | araf shell console jline Console  |   org apache karaf shell console     | Exception caught while executing command java lang Exception   Could not start bundle mvn  org springframeworkspringjdbc   SEC in feature s  hibernatefeauture     The bundle 'org springframework jdbc_   SEC   ' could not be resolved  Reason   Missing Constraint   ImportPackage   org springframework dao  version '    SEC    SEC ' at org apache karaf features internal FeaturesServiceImpl installFeatures FeaturesServiceImpl java      org apache karaf features core        Caused by   org osgi framework BundleException   The bundle 'org springframework jdbc_   SEC   ' could not be resolved  Reason   Missing Constraint   ImportPackage   org springframework dao  version '    SEC    SEC ' at org eclipse osgi framework internal core AbstractBundle getResolverError AbstractBundle java    osgi   v jar    at org eclipse osgi framework internal core AbstractBundle getResolutionFailureException AbstractBundle java    osgi   v jar    at org eclipse osgi framework internal core BundleHost startWorker BundleHost java    osgi   v jar    at org eclipse osgi framework internal core AbstractBundle start AbstractBundle java    osgi   v jar    at org eclipse osgi framework internal core AbstractBundle start AbstractBundle java    osgi   v jar    at org apache karaf features internal FeaturesServiceImpl installFeatures FeaturesServiceImpl java      org apache karaf features core           moreSolution  Change version for bundles org springframeworkspringjdbc and org springframeworkspringorm to    RELEASE instead    SEC    
0;Wrong exception uri when an HTTP error code is returned   ;When a REST service returns an HTTP error code  e g     the URI property of the exception is incorrect The URI is the URI of the origin endpoint of the route It should be instead the URI of the endpoint that threw the exception For instance  in the following route   lt route id 'restproxy'gt  lt from uri 'restlet  http  localhost  oewsoffre id 'gt  lt doTrygt  lt to uri 'restlet  http  bla dot com  oewsoffre id 'gt  lt doCatchgt  lt exceptiongt org apache camel CamelExceptionlt exceptiongt  lt log message 'URI $ exception uri 'gt  lt doCatchgt  lt doTrygt lt routegt The logged URI is 'restlet  http  localhost  oewsoffre id ' but should be instead the real URI used  e g  'restlet  http  bla dot com  oewsoffre' This bug might be fixed by the following code change in class org apache camel component restlet RestletProducer  method populateRestletProducerException      String uri   exchange getFromEndpoint   getEndpointUri    + String uri   response getRequest   getResourceRef     
0;Validator component  Should be able to validate from a File payload   ;The validator component should be able to validate a message which is from a java io File What is needed is a couple of type converters to ensure this    
0;Add String>TimeZone converter so that time zone can be specified for camelquartz   ;It is possible to specify a time zone for Quartz  however  in order for that to work Camel needs a String to TimeZone type converter since Quartz requires a TimeZone Attached is a patch containing a type converter that works  By setting the type converter explicitly on the context like this context getTypeConverterRegistry   addTypeConverter TimeZone class  String class  new StringTimeZoneConverter    it is possible to create an endpoint URI looking like this  quartz  groupNametimerName?cron lt cronExpressiongt amp trigger timeZone EuropeStockholmHowever  it would be really useful if this type converter could be included in camelcore  This has been discussed on the camel user list  http  camel  n nabble comHowtospecifyatimezoneforcamelquartztd html   
0;Impossible to use placeholders in endpointName and serviceName attributes of cxf  cxfEndpoint   ;Here is how endpointName and serviceName are declared in XSD lt xsd  attribute name 'endpointName' type 'xsd  QName' gt  lt xsd  attribute name 'serviceName' type 'xsd  QName' gt  So the xml parser fails to parse the following elementlt cxf  cxfEndpoint id 'service' address '$ http service endpoint path ' wsdlURL '$ http service wsdl path ' serviceName '$ http service serviceName ' endpointName '$ http service portName 'gt lt cxf  cxfEndpointgt    
0;Ftp consumer using done file should cater for if stepwise has been enabled  and thus the done file path is to be calculated differently   ;The workaround is to use $ file  onlyname  or not using stepwise    
0;Using transacted in Java DSL without Spring XML setting up TX manager should report better error when not able to find a TX manager in the registry   ;See nabblehttp  camel  n nabble comTransactionconfigurationinJavaDSLtpp htmlYou will see an error likeException in thread 'main' org apache camel FailedToCreateRouteException   Failed to create route route at   gt gt gt  Policy ref  null  lt lt lt  We should improve that and report a more details error    
0;faster way of testing for file existence   ;when storing a file the ftp component checks if the file exists in the endpoint  this is done by listing the content of the destination folder and looping through all files listed  the list operation takes a long time when the destination folder contains hundreds of files  instead of listing for all files the component can simply list for the file it is interested on  this way the number of files contained in destination folder won't affect the time it takes the producer to process the exchange  I currently have a case where delivering to an endpoint is taking more than a minute because of this issue  Both ftp and sftp libraries used supports listing for a single file so the changes would be the following   FtpOperations javapublic boolean existsFile String name  throws GenericFileOperationFailedException   String[] names   client listNames name   if  names    null    return false    return  names lenght gt        SftpOperations javapublic boolean existsFile String name  throws GenericFileOperationFailedException   Vector files   channel ls name   if  names    null    return false    return  names size gt          
0;Move org apache camel Main to org apache camel main Main   ;I am currently looking into the dependencies betwen packages in camelcore  The packages org apache camel and org apache camel spi form the camel api So I am trying to make them not depend on other packages from camelcore  One problem there is the starter class Main  It needs access to impl packages as it needs to start camel  So it should not live in org apache camel I propose to move it to org apache camel main  To not break anything right now I will create a deprecated class Main in org apache camel that extends the moved Main  We can remove the deprecated version in camel     
0;Refactoring of management code to remove cycles and clearly separate between API and impl   ;Currently the management code  org apache camel management *  contains a mix of implementation code and APIs  This leads to cycle in the management code as well as to bigger cycles involving all of camelcore So I propose to do several changes   move interfaces and annotations that form the API to camel spi management  As these are probably not used by external components or user code no compatibility classes are created create new package camel suppport for classes that implement API or SPI classes and are expected to be extended by many impl classes  classes in support may only access the camel API and SPI Move EventNotifierSupport and ServiceSupport to this package  Create deprecate dummys in the old locations to avoid breaking older code Move DefaultEventFactory from management to management eventI will post a patch shortly for review   
0;Camel test  Debugger should be explicit enabled if end user want to leverage it   ;The debugger adds a little overhead and silently enables tracer as well  We should have the end user to explicit enable the debugger if he need to use it from his unit tests    
0;Bug in parsing of JPA uri   ;According to http  camel apache orgjpa html entityName is optional When configuring with the following uri  e g  wo entityName   lt camel  endpoint id 'jpaEndpoint' uri 'jpa  ?persistenceUnit journalPersistenceUnitamp usePersist true' gt the following warning will be displayed        main [][][][][][][] WARN org apache camel util ObjectHelper  Cannot find class   persistenceUnitjournalPersistenceUnitusePersisttruepersistenceUnitjournalPersistenceUnitusePersisttruedue to the incorrect if test in the JpaComponent   lets interpret the next string as a class if  path !  null     provide the class loader of this component to work in OSGi environments as cameljpa must be able  to resolve the entity classes Classlt ?gt  type   getCamelContext   getClassResolver   resolveClass path  JpaComponent class getClassLoader     if  type !  null    endpoint setEntityType type      path is not null  but it is the rest of the string and not the entityname  e g it should not start with ? if it is an entityname  else it is the options    
0;Freemarker  Loading template from file system fails   ;This only affects Camel      
0;Camelnetty option 'encoder' and 'decoder' does not work   ;Contrary to the documentation  the 'encoder' and 'decoder' option is unusable as it's value is taken asis instead of resolving the references using the registry This bug was introduced in the revision  as part of CAMEL Patch can be found at https  github comszabolcsbereczcamelcommitbbccddceacedd   
0;It's hardly possible to use all expression of the Simple language to create file names in the file component   ;Sometimes it can be necessary to use custom headers to create a file name For example  I declare my file endpoint in the following manner  lt route id 'fileReader'gt  lt from uri 'file  rootFolder?move  backupamp amp moveFailed  error$ header CustomHeader ' gt  lt to uri 'file  out'gt lt routegt The header 'CustomHeader' cannot be read because of the following snippets of code in the org apache camel component file GenericFile** * Bind this GenericFile to an Exchange *public void bindToExchange Exchange exchange    exchange setProperty FileComponent FILE_EXCHANGE_FILE  this   GenericFileMessagelt Tgt  in   new GenericFileMessagelt Tgt  this   exchange setIn in   populateHeaders in   ** * Populates the  @link GenericFileMessage  relevant headers * * @param message the message to populate with headers *public void populateHeaders GenericFileMessagelt Tgt  message    if  message !  null    message setHeader Exchange FILE_NAME_ONLY  getFileNameOnly     message setHeader Exchange FILE_NAME  getFileName     message setHeader 'CamelFileAbsolute'  isAbsolute     message setHeader 'CamelFileAbsolutePath'  getAbsoluteFilePath     if  isAbsolute      message setHeader Exchange FILE_PATH  getAbsoluteFilePath       else    we must normalize path according to protocol if we build our own paths String path   normalizePathToProtocol getEndpointPath   + File separator + getRelativeFilePath     message setHeader Exchange FILE_PATH  path     message setHeader 'CamelFileRelativePath'  getRelativeFilePath     message setHeader Exchange FILE_PARENT  getParent     if  getFileLength   gt       message setHeader 'CamelFileLength'  getFileLength       if  getLastModified   gt      message setHeader Exchange FILE_LAST_MODIFIED  new Date getLastModified          As you can see a new 'in' message is created and not all the headers from the original message are copied to it    
0;The debugger doesn't work in the CamelSpringTestSupport with route defined in XML   ;The debugger doesn't work in the CamelSpringTestSupport with route defined in XML  This issue is related to CAMEL  closed and I cannot reopen  I've created a patch with  new tests that show the problem and a solution  check the doSetup   method in the tests   However I think this could be improved by moving the SpringCamelContext setNoStart true   to CamelSpringTestSupport     
1;add support to set the cipher used for SFTP   ;Right now a user has to manually configure a JSch instance to set the cipher used  We should have an option for that    
0;Exeptions cannot be propagated to the parent route when using LogEIP   ;Here is unit test that demonstrates the problem For the unit test pass successfully it's necessary to delete LogEIP from the route package org apache camel impl import org apache camel Exchange import org apache camel Processor import org apache camel builder RouteBuilder import org apache camel test junit CamelTestSupport import org junit Test public class PropagateExceptionTest extends CamelTestSupport   @Test public void failure   throws Exception   getMockEndpoint 'mock  handleFailure'  whenAnyExchangeReceived new Processor     @Override public void process Exchange exchange  throws Exception   throw new RuntimeException 'TEST EXCEPTION'         getMockEndpoint 'mock  exceptionFailure'  expectedMessageCount    sendBody 'direct  startFailure'  'Hello World'   assertMockEndpointsSatisfied      @Test public void success   throws Exception   getMockEndpoint 'mock  handleSuccess'  whenAnyExchangeReceived new Processor     @Override public void process Exchange exchange  throws Exception   throw new RuntimeException 'TEST EXCEPTION'         getMockEndpoint 'mock  exceptionSuccess'  expectedMessageCount    sendBody 'direct  startSuccess'  'Hello World'   assertMockEndpointsSatisfied      @Override protected RouteBuilder[] createRouteBuilders   throws Exception   return new RouteBuilder[]   new RouteBuilder     public void configure   throws Exception   from 'direct  startFailure'   onException Throwable class   to 'mock  exceptionFailure'   end    to 'direct  handleFailure'   to 'mock  resultFailure'   from 'direct  handleFailure'   errorHandler noErrorHandler     log 'FAULTY LOG'   to 'mock  handleFailure'        new RouteBuilder     public void configure   throws Exception   from 'direct  startSuccess'   onException Throwable class   to 'mock  exceptionSuccess'   end    to 'direct  handleSuccess'   to 'mock  resultSuccess'   from 'direct  handleSuccess'   errorHandler noErrorHandler     to 'mock  handleSuccess'               
0;Fix OSGiexports of camelsoap   ;The OSGi exports of camelsoap is not correct  If I run exports in karaf I get the following output   karaf@localhostgt  exports  ID Packages  org apache camel dataformat soap  version '  '  org apache camel dataformat soap name  version '  '  org xmlsoap schemas soap envelope  version '   SNAPSHOT' I think org apache camel dataformat soap and org apache camel dataformat soap name should be exported with version '   SNAPSHOT' ????  The same issue is on trunk     
0;The URI of the ServletEndpoint exposed to the JMX is not accurate   ;As an example a ServletEndpoint with the URI 'servlet  test?matchOnUriPrefix trueamp servletName test' is exposed as 'test' on the JMXMBeanServer! For details see  http  camel  n nabble combackslashesonEndpointURIbyJConsoletd html   
0;CamelLogger should not be a Processor and a log class at the same time and it should not have ServiceSupport   ;CamelLogger currently does too many things   It is a log class that stores a log level and a slfj logger  It suppports some methods for logging with the set level  It is a processor for logging exchanges  It extends ServiceSupport even though it has no services  is apparently needed fro ThroughputLoggerSo what I propose is   Leave the current class as is but mark as @Deprecated Introduce a new CamelLogger that only supports   Introduce a CamelLogProcessor in processor that only supports   Make ThroughputLogger not extend CamelLogger but instead delegate to the new CamelLogger   
0;camelhazelcast should allow the user to provide an existing instance to the component   ;The camelhazelcast component currently is using Hazelcast default instance  It should allow the user to specify an existing HazelcastInstance and fall back to the default instance if none is provided  Finally  in the case that the component is using the default instance it should shut it down when the component is stopped    
0;Error in camelrestlet feature definition   ;The current contents of the camelfeatures xml file reads  lt feature name 'camelrestlet' version '  fuse' resolver ' obr 'gt  lt feature version '  fuse'gt camelcorelt featuregt  lt bundle dependency 'true'gt mvn  org apache camelcamelrestlet  fuselt bundlegt  lt bundlegt mvn  http  maven restlet org!org restlet jseorg restlet  lt bundlegt lt featuregt It actually should read http  fernandoribeiro eti brbuginfuse  Thanks to Fernando Ribeiro for the heads up!    
0;camelcsv  Make it consistent what unmarshal returns as object  so its the same for  or more rows   ;See nabblehttp  camel  n nabble comunmarshalCsvDataFormatdifferentbehaviorforoneormultipleslinestpp htmlThe camelcsv should always return the same Listlt Listgt gt  regardless if there is    or + rows returned  That makes it consistent and easier for end users who need to work with this data    
0;Wrong slash in FTP component for doneFile   ;I tried to use the doneFile with FTP component When I used it to my FTP on my windows machine everything goes fine When I tried to act the same with a FTP host on a Linux machine  I got an issue I sniff the packet to see what goes wrong and I see this   the doneFile DELE publicTestinmyFile txt the file to processDELE publicTestinmyFile xmlAfter a Quick look on the code  org apache camel component file GenericFileEndpoint line  String answer   pattern  if  ObjectHelper isNotEmpty path  amp amp  ObjectHelper isNotEmpty pattern      done file must always be in same directory as the real file name answer   path + File separator + pattern    if  getConfiguration   needToNormalize       must normalize path to cater for Windows and other OS answer   FileUtil normalizePath answer    We use the 'File Separator' but in this case  it should get a kind of 'FTP Separator' or the FTP component should return true to the needToNormalize method and change the narmalizePath method to manage this case    
0;camelbindy  Marshaling using CSV will insert wrong char separator if using an escaped separator char such as a pipe   ;When using bindy in CSV format with a separator in the model as '|' to denote a pipe character  then it does not work consistent for marshal and unmarshal  In marshal it will insert  as separator  but it should use | instead See nabblehttp  camel  n nabble combindydifferentbehaviorbetweenmarshalandunmarshalwithpipeseparatortpp html   
0;NullPointerException when unmarshalling using serialization data format   ;Spring configuration   lt ! A custom CamelContext gt  lt camel  camelContext id 'camel'gt  lt ! JSON data format marshalling gt  lt camel  dataFormatsgt  lt camel  serialization id 'serialization'gt  lt camel  dataFormatsgt  lt ! RawOffer input route gt  lt camel  routegt  lt camel  from uri 'kestrel  etlffeeds'gt  lt camel  unmarshal ref 'serialization'gt  lt camel  to uri 'bean  shard?method consume'gt  lt camel  routegt  lt camel  camelContextgt Exception  run   [java] logj  WARN No appenders could be found for logger  org springframework context support ClassPathXmlApplicationContext   [java] logj  WARN Please initialize the logj system properly  [java] logj  WARN See http  logging apache orglogj faq htmlnoconfig for more info  [java]       [main] INFO o a c s h CamelNamespaceHandler  OSGi environment not detected  [java]       [main] INFO o a camel spring SpringCamelContext  Apache Camel     CamelContext   camel  is starting [java]       [main] INFO o a camel spring SpringCamelContext  JMX enabled  Using ManagedManagementStrategy  [java]       [main] INFO o a c i c AnnotationTypeConverterLoader  Found  packages with  @Converter classes to load [java]       [main] INFO o a c i c DefaultTypeConverter  Loaded  core type converters  total  type converters  [java]       [main] INFO o a c i c DefaultTypeConverter  Loaded additional  type converters  total  type converters  in   seconds [java]       [main] INFO o a c c kestrel KestrelComponent  Creating endpoint for queue 'feeds' on etlf  parameters    [java]       [main] INFO o a c c kestrel KestrelComponent  Creating MemcachedClient for etlffeeds [java]        INFO net spy memcached MemcachedConnection   Added  QA sa etlf       Rops   Wops   iq   topRop null  topWop null  toWrite   interested   to connect queue [java]        INFO net spy memcached MemcachedConnection   Connection state changed for sun nio ch SelectionKeyImpl@ba [java]       [main] INFO o a c c kestrel KestrelConsumer  Starting consumer for kestrel  etlffeeds [java]       [main] INFO o a camel spring SpringCamelContext  Route   route started and consuming from   Endpoint[kestrel  etlffeeds] [java]       [main] INFO o a camel spring SpringCamelContext  Total  routes  of which  is started  [java]       [main] INFO o a camel spring SpringCamelContext  Apache Camel     CamelContext   camel  started in   seconds [java]       [Camel  camel  thread   Pollerkestrel  etlffeeds] ERROR o a c processor DefaultErrorHandler  Failed delivery for exchangeId   IDincubososxlocal  Exhausted after delivery attempt    caught   java lang NullPointerException [java] java lang NullPointerException   null [java] at org apache camel impl SerializationDataFormat unmarshal SerializationDataFormat java    ~[camelcore   jar    ] [java] at org apache camel processor UnmarshalProcessor process UnmarshalProcessor java    ~[camelcore   jar    ] [java] at org apache camel impl converter AsyncProcessorTypeConverter$ProcessorToAsyncProcessorBridge process AsyncProcessorTypeConverter java    ~[camelcore   jar    ] [java] at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    [camelcore   jar    ] [java] at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    [camelcore   jar    ] [java] at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    [camelcore   jar    ] [java] at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    [camelcore   jar    ] [java] at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    [camelcore   jar    ] [java] at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    [camelcore   jar    ] [java] at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    [camelcore   jar    ] [java] at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    ~[camelcore   jar    ] [java] at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    [camelcore   jar    ] [java] at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    [camelcore   jar    ] [java] at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    [camelcore   jar    ] [java] at org apache camel processor DefaultChannel process DefaultChannel java    [camelcore   jar    ] [java] at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    [camelcore   jar    ] [java] at org apache camel processor Pipeline process Pipeline java    [camelcore   jar    ] [java] at org apache camel processor Pipeline process Pipeline java    [camelcore   jar    ] [java] at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    [camelcore   jar    ] [java] at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    [camelcore   jar    ] [java] at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    [camelcore   jar    ] [java] at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    [camelcore   jar    ] [java] at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    [camelcore   jar    ] [java] at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    [camelcore   jar    ] [java] at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    [camelcore   jar    ] [java] at org apache camel component kestrel KestrelConsumer$Poller run KestrelConsumer java    [camelkestrel   jar    ] [java] at java util concurrent Executors$RunnableAdapter call Executors java    [na    _] [java] at java util concurrent FutureTask$Sync innerRun FutureTask java    [na    _] [java] at java util concurrent FutureTask run FutureTask java    [na    _] [java] at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    [na    _] [java] at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    [na    _] [java] at java lang Thread run Thread java    [na    _]It seems that ExchangeHelper convertToType   method returned null because camelContext getTypeConverter   returned null    
0;Resolve cycle between language simple and language simple ast   ;Currently we have a big dpendency cycle between language simple and language simple ast As simple creates the ast this dependency is necessary  In the other direction ast needs types and exceptions that are inside simple So I propose to nove these classes into a package simple types  As I think these types and exceptions are not used outside the camelcore I will not create compatibility measures    
0;Unable to use cxf  binding configuration for the endpoint   ;Caused by   org springframework beans factory BeanCreationException   Error creating bean with name 'service'   Error setting property values  nested exception is org springframework beans NotWritablePropertyException   Invalid property 'bindingConfig' of bean class [org apache camel component cxf CxfSpringEndpoint]   Bean property 'bindingConfig' is not writable or has an invalid setter method  Does the parameter type of the setter match the return type of the getter? at org springframework beans factory support AbstractAutowireCapableBeanFactory applyPropertyValues AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractAutowireCapableBeanFactory populateBean AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractAutowireCapableBeanFactory doCreateBean AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractAutowireCapableBeanFactory createBean AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractBeanFactory$ getObject AbstractBeanFactory java    at org springframework beans factory support DefaultSingletonBeanRegistry getSingleton DefaultSingletonBeanRegistry java    at org springframework beans factory support AbstractBeanFactory doGetBean AbstractBeanFactory java    at org springframework beans factory support AbstractBeanFactory getBean AbstractBeanFactory java    at org springframework beans factory support DefaultListableBeanFactory preInstantiateSingletons DefaultListableBeanFactory java    at org springframework context support AbstractApplicationContext finishBeanFactoryInitialization AbstractApplicationContext java    at org springframework context support AbstractApplicationContext refresh AbstractApplicationContext java    at org springframework test context support AbstractGenericContextLoader loadContext AbstractGenericContextLoader java    at org springframework test context support AbstractGenericContextLoader loadContext AbstractGenericContextLoader java    at org springframework test context TestContext loadApplicationContext TestContext java    at org springframework test context TestContext getApplicationContext TestContext java         moreCaused by   org springframework beans NotWritablePropertyException   Invalid property 'bindingConfig' of bean class [org apache camel component cxf CxfSpringEndpoint]   Bean property 'bindingConfig' is not writable or has an invalid setter method  Does the parameter type of the setter match the return type of the getter? at org springframework beans BeanWrapperImpl setPropertyValue BeanWrapperImpl java    at org springframework beans BeanWrapperImpl setPropertyValue BeanWrapperImpl java    at org springframework beans AbstractPropertyAccessor setPropertyValues AbstractPropertyAccessor java    at org springframework beans AbstractPropertyAccessor setPropertyValues AbstractPropertyAccessor java    at org springframework beans factory support AbstractAutowireCapableBeanFactory applyPropertyValues AbstractAutowireCapableBeanFactory java         more   
0;file   consumer does not create directory   ;According to http  camel apache orgfile html autoCreate is true by default and should for a consumer create the directory autoCreate true Automatically create missing directories in the file's pathname  For the file consumer  that means creating the starting directory  For the file producer  it means the directory the files should be written to  This does not happen and thus a route startup would fail    
0;Because local PrintService objects on Windows have a name which is not their UNC path  the PrinterProducer can never find them    ;In org apache camel component printer PrinterProducer  the line  setPrinter '' + config getHostname   + '' + config getPrintername    reconstructs a UNC path which is expected to match the name of a PrintService on the system  For local printers on Windows  the name of the PrintService is simply the name of the printer without the host and any backslashes  so the PrinterProducer is never able to find them So when config getHostname   is 'localhost'  at least on Windows  the line should be simply  setPrinter config getPrintername   so that we'd have code like  if  'localhost' equalsIgnoreCase config getHostname       setPrinter config getPrintername      else   setPrinter '' + config getHostname   + '' + config getPrintername     This can only work if issue CAMEL about the error in parseURI   in PrinterConfiguration is also fixed    
0;Exceptions are not propagated to the parent route when endpoint cannot be resolved in the RoutingSlip EIP   ;Here is the unit test to reproduce the issuepackage org test import org apache camel builder RouteBuilder import org apache camel component mock MockEndpoint import org apache camel test junit CamelTestSupport import org junit Test public class RecipientListTest extends CamelTestSupport   public static class Router   public String findEndpoint     return 'unresolved  endpoint'      @Test public void recipientList   throws Exception   MockEndpoint endpoint   getMockEndpoint 'mock  error'   endpoint expectedMessageCount    sendBody 'direct  parent'  'Hello World!'   assertMockEndpointsSatisfied      @Override protected RouteBuilder createRouteBuilder   throws Exception   return new RouteBuilder     @Override public void configure   throws Exception   from 'direct  parent'   onException Throwable class   to 'mock  error'   end    to 'direct  child'   from 'direct  child'   errorHandler noErrorHandler     routingSlip bean Router class              
0;Be able to check classtype through simple language   ;See http  camel  n nabble comHowdoIaccessthemessageclassnamefromSimpletd html for the full context In short be able to access Object getClass   for usage in Camel's simple language    
0;Add a Tracer that uses JMX Notifications and provides full details of Camel Messages   ;We should create a base for Camel Trace toolings so these can trace the full message content The trace event should contain   all Exchange Data including properties all Message Data including headersThere should be a setting to truncate the message body as it can be quite long and often in tracing not all details are needed One question is if this tracing should be combined with the current Notifications or should be a separate thing    
0;Recipient List cannot vary destination by changing property in an expression   ;This is probably due to producers being cached based on unresolved endpoint URI  rather than the resolved endpoint URI  Haven't tested this theory out though See message on user list http  markmail orgmessagesdyspsspqlomf   
1;The SFTP component   the keyboardinteractive auth method support   ;As it was discussed in this topic http  camel  n nabble comTheSFTPcomponentthekeyboardinteractiveauthmethodsupporttd htmlThe SFTP component may be slightly improved to support the keyboardinteractive auth method and the compression Preamble  It appeared that our sftp share we get files from doesn't support the ssh password auth method and we're not allowed to put the public key to there  So the only ssh auth method we can use is the keyboardinteractive  Unfortunately the SFTP camel component doesn't support this However this can be easily fixed simply by providing the Jsch session with both the com jcraft jsch UserInfo and com jcraft jsch UIKeyboardInteractive interfaces  The UIKeyboardInteractive has the only one promptKeyboardInteractive method which returns String[] containing the password entered by user interactively  In our case I simply return a password The implementation example is attached Also it's sometime required to set the ssh compression to be able to process longsize files  The compression fix is also implemented in the attached file  Compression requires the zlib jar to be in the pom This was tested with the    version of the jsch and the    version of the jzlib    
0;SpringWS should populate Camel Header with the SOAP Header   ;Currently the CamelSpringWS component does not support the setting of SOAP Headers and has issues getting them  The current issue getting the SOAP Headers when receiving a message is that the resulting header key includes the namespace Change the component so that a Camel header 'CamelSpringWebserviceSoapHeader' can be populated with an intended SOAP Header for a request  and that this Header is also populated from the SOAP Header on a response    
0;Unable to convert jms textmessage to bytemessage   ;When receiving a jms textmessage and just forward it to a another queue as a jms bytemessage the original textmessage is sendt without being converted to a jms bytemessage  JmsBinding makeJmsMessage seems to use the exchange headers to determine of a new jms message should be created or the original send Exchange headers seems to be populated if you do routing or set a dummy header See http  camel  n nabble comConvertjmsmessagefromtextmessagetobytemessagetc htmlpreben   
0;Can't find splitter bean in registry using multiple camel contexts with 'vm' endpoint   ;The splitter component can use a bean with a 'split method'  It seems that this 'split bean' is handled as expression and resolved lately using Camel Context from current exchange If I send an exchange using a separate CamelContext  'client' lt camelContext id 'client' xmlns 'http  camel apache orgschemaspring'gt lt camelContextgt to a route defined in another CamelContext  'server'  using inmemory transport like 'direct' or 'vm'lt camelContext id 'server' xmlns 'http  camel apache orgschemaspring'gt  lt route id 'route' trace 'false' streamCache 'false'gt  lt from uri 'vm  route'gt  lt splitgt  lt method bean  'stringLineSplitter' method 'split'gt  lt log message 'before sending   $ body 'gt  lt inOut uri  'vm  route'gt  lt log message 'after sending'gt  lt splitgt  lt to uri 'mock  route'gt  lt routegt lt camelContextgt the test fails with 'Cannot find class   stringLineSplitter'  Camel      'org apache camel NoSuchBeanException  No bean could be found in the registry for   stringLineSplitter'  Camel  SNAPSHOT If I understood Camel right it failsbecause it tries to resolve this bean based on client Camel Contextwhich is still set at the current exchange send from 'client' to 'server' but itdoesn't contain the bean If I send an exchange using same 'client' CamelContext to another route in'server' CamelContext involving 'external' components like 'jms'  ActiveMQ lt camelContext id 'server' xmlns 'http  camel apache orgschemaspring'gt  lt route id 'route' trace 'false' streamCache 'false'gt  lt from uri 'jms  queue  route'gt  lt splitgt  lt method bean  'stringLineSplitter' method 'split'gt  lt log message 'before sending   $ body 'gt  lt inOut uri  'vm  route'gt  lt log message 'after sending'gt  lt splitgt  lt to uri 'mock  route'gt  lt routegt lt camelContextgt the test passed successfully  It seems that 'jms' component creates anew exchange using 'server' CamelContext    
0;NotifyBuilder wereSentTo condition fires too eagerly   ;Problem is  NotifyBuilder notify   new NotifyBuilder context    whenDone   wereSentTo 'mock  bar'  The wereSentTo condition will fire after first message gets to endpoint 'mock  bar'  so either needs to take preceding whenDone into account  or wereSentTo needs to have a count condition added to it's method signature See nabble trail for full details  http  camel  n nabble comNotifyBuilderconditionfailstomatchonanoutactivemqendpointtpp html   
0;Support nested directories with multiple segment files in the HDFS endpoint consumer   ;A common pattern in HDFS is for multiple segment files underneath a given directory  representing the fragments of data  Lots of tools understand to automatically merge these segment files  ie hadoop fs getmerge  pig script loaders   This patch does the same for the HDFS consumer  using a temporary local directory for the merging Additionally  tools like pig and oozie understand to look for a _SUCCESS file in one of these directories containing segments  This file indicates that the segments have been completely written  This patch additionally skips the directory if a _SUCCESS file is not present    
0;NettyProducer creating new connection on every message   ;Using a NettyProducer without the disconnect true configuration is causing the route to block after  messages on the to 'netty  tcp    '  call It appears that a new socket connection is created for every message  and then after  connections no new connection is allowed  must be a default thread pool limit?  Using the disconnect true option fixes the problem as a socket is connected  message sent  then disconnected  But this does not seem viable for implementations where that overhead is undesirable or where more than one response is expected on a channel  This is a small Unit Test that shows the problem  http  camel  n nabble comCamelNettyProducercreatingnewconnectiononeverymessagetd htmlnone  package netty  import java util Arrays  import java util Collection  import java util concurrent TimeUnit  import java util concurrent atomic AtomicBoolean  import java util concurrent atomic AtomicInteger  import junit framework TestCase  import org apache camel CamelContext  import org apache camel Exchange  import org apache camel ExchangePattern  import org apache camel Processor  import org apache camel builder RouteBuilder  import org apache camel impl DefaultCamelContext  import org junit Before  import org junit BeforeClass  import org junit Test  import org junit runner RunWith  import org junit runners Parameterized  import org junit runners Parameterized Parameters  import org slfj Logger  import org slfj LoggerFactory  @RunWith Parameterized class  public class NettyTest extends TestCase    private final static Logger logger   LoggerFactory getLogger NettyTest class    private final static CamelContext serverContext   new DefaultCamelContext     private final CamelContext clientContext   new DefaultCamelContext     private final AtomicInteger responseCounter   new AtomicInteger     private final AtomicBoolean passedTen   new AtomicBoolean false    private Boolean disconnectClient   public NettyTest Boolean disconnectClient     this disconnectClient   disconnectClient     @Parameters  public static Collectionlt Object[]gt  configs       return Arrays asList new Object[][]     true      false           @BeforeClass  public static void createServer   throws Exception     serverContext addRoutes new RouteBuilder       @Override  public void configure   throws Exception     from 'netty  tcp  localhost  ?sync trueamp disconnectOnNoReply falseamp allowDefaultCodec trueamp tcpNoDelay trueamp reuseAddress trueamp keepAlive false'    setExchangePattern ExchangePattern InOut    process new Processor      @Override  public void process Exchange exchange  throws Exception     Object body   exchange getIn   getBody     logger info 'Request received    Value     '  body            transform constant    stop             serverContext start        @Before  public void createClient   throws Exception     clientContext addRoutes new RouteBuilder       @Override  public void configure   throws Exception      Generate an Echo message and ensure a Response is sent  from 'timer  echoTimer?delay samp fixedRate trueamp period s'    setExchangePattern ExchangePattern InOut    transform     constant     to ExchangePattern InOut  'netty  tcp  localhost  ?allowDefaultCodec trueamp tcpNoDelay trueamp reuseAddress trueamp keepAlive falseamp sync trueamp disconnect ' + disconnectClient toString      process new Processor       @Override  public void process Exchange exchange  throws Exception     Object body   exchange getIn   getBody     logger info 'Response number       Value     '   responseCounter incrementAndGet    body    if  responseCounter get   gt      passedTen set true            stop                @Test  public void test   throws Exception     clientContext getShutdownStrategy   setTimeout     clientContext start     logger info 'Disconnect     '  this disconnectClient    Thread sleep TimeUnit SECONDS toMillis      clientContext stop     assertTrue 'More than  responses have been received'  passedTen get            
0;Need to specify the sljapi version in the camel maven archetypes   ;There are some third part dependencies will introduce other version of sljapi as CAMEL shows  we need to specify the sljapi in the pom xml resource    
0;camelfile component does not close a file when it's used with camelxslt   ;Here are the steps to reproduce   Create the directory targetin  Put the file 'file xml' into the directory targetin  Note   the end tag in this file is not closed properly  Run the test  The test should fail  The file 'file xml' remains in the targetin but it should not FileLockedTest javapackage org apache camel import org apache camel builder RouteBuilder import org apache camel component mock MockEndpoint import org apache camel test junit CamelTestSupport import org junit Test public class FileLockedTest extends CamelTestSupport   @Test public void testFileLocked   throws Exception   MockEndpoint result   getMockEndpoint 'mock  result'   result setAssertPeriod    result expectedMessageCount    result assertIsSatisfied      @Override protected RouteBuilder createRouteBuilder   throws Exception   return new RouteBuilder     @Override public void configure   throws Exception   from 'file  targetin?delay amp moveFailed  error'   onException Throwable class   to 'mock  result'   end    to 'xslt  FileLockedTest xsl'          FileLockedTest xsllt ?xml version ' ' encoding 'UTF'?gt lt xsl  stylesheet xmlns  xsl 'http  www w orgXSLTransform' xmlns 'http  schemas computershare rucodex' version ' 'gt  lt xsl  output method 'xml' encoding 'UTF' omitxmldeclaration 'yes' gt  lt xsl  preservespace elements '*'gt  lt xsl  template match ''gt  lt xsl  applytemplates gt  lt xsl  templategt  lt xsl  template match '@* | node  'gt  lt xsl  copygt  lt xsl  applytemplates select '@* | node  ' gt  lt xsl  copygt  lt xsl  templategt lt xsl  stylesheetgt file xml  Note   the end tag is not closed properlylt rootgt lt root   
0;SLFJLog does not work with JdbcDriver for QuickfixJ   ;I discovered that to use SLFJ log  JdbcDriver cannot be present in the QuickfixJ config file  Otherwise  the default LogFactory  ScreenLogFactory will be used  We need JdbcDriver setting as it is used for persisting FIX messages into database for FIX session management After debugging the code  I found out that this could be fixed by swapping those two lines in QuickfixjEngine java   isJdbcLog settings  impliedLogFactories     isSLJLog settings  impliedLogFactories  Can we please have this fixed for the next release?   
0;Add option on XSLT to allow StAX   ;With the new StAX converters you may convert to a StAXSource which is not supported by the XSLT transformer  and you get this exceptionCaused by   org apache xml dtm DTMException   Not supported   javax xml transform stax StAXSource@de at org apache xml dtm ref DTMManagerDefault getDTM DTMManagerDefault java    at org apache xalan transformer TransformerImpl transform TransformerImpl java    at org apache xalan transformer TransformerImpl transform TransformerImpl java    at org apache xalan transformer TransformerImpl transform TransformerImpl java    at org apache camel builder xml XsltBuilder process XsltBuilder java   We should add option on XSLT component to explicit enable StAX if the end user wants it    
0;XQuery component does not work with StAXSource out of the box   ;The new STaXSource type converters cause camelsaxon to fail unit tests as reported by CI serversCaused by   net sf saxon trans XPathException   Unknown source class at net sf saxon Configuration buildDocument Configuration java    at net sf saxon query StaticQueryContext buildDocument StaticQueryContext java    at org apache camel component xquery XQueryBuilder createDynamicContext XQueryBuilder java   We should implement the same optimized logic as we did today in XSLT to convert to Source if StAX is allowed  as well to avoid leaking resources we need to ensure if InputStream is in use  we should ensure it gets closed    
0;XPath will lock File input in case of an exception during xpath evaluation   ;We have a similar issue with XPath  as we had with XSLT and XQuery If the message is a java io File and an exception occurs during evaluation  then that file is locked on Windows platforms We need to close the FileInputStream to unlock the file  and allow Windows to access the file    
0;Add default for transactionName in cameljms   ;Say you have a simple transacted route like  from 'activemq  queue  foo'   transacted    to      on new messages you get logs like  DEBUG JmsTransactionManager  Creating new transaction with name [null]   PROPAGATION_REQUIRED ISOLATION_DEFAULTwhich isn't very helpful  It would be good to actual give the TX a name with some context  Thinking of something like the following would be better  DEBUG JmsTransactionManager  Creating new transaction with name [JmsConsumer[foo]]   PROPAGATION_REQUIRED ISOLATION_DEFAULT   
1;Improve URISupport sanitizeUri and apply it in additional places   ;In this issue  I propose that URISupport sanitizeUri method sanitizes the password token in URIs that contain it  i e   URIs in the form scheme  user  password@host   JT component URIs directly benefit from this improvement Additionally  I suggest that this method be invoked in additional sensitive places  in much the same way as DefaultEndpoint toString    Proposed patch attached    
0;Add support for PGP data format in Java and XML DSLs   ;The new PGP data format from CAMELrequires to create it from Java code We should add some syntax sugar and have it in the DSL directly like the other data formats We may also want to look into how to configure a public and private key file  and have it load the PGPPublicKey and PGPPrivateKey for you automatic Instead of using the PGPDataFormatUtil class    
0;Stop or shutdown a route with a custom timeout value  will still log using the default timeout in the logs   ;If you stop a route with a custom time out value  then the graceful shutdown strategy will still use the default timeout value in the logs  so that information is not correct  For example if you have a short default value  but provide a higher timeout value  then you can have the log show negative timeout values INFO DefaultShutdownStrategy  Waiting as there are still  inflight and pending exchanges to complete  timeout in  seconds    
0;Do not print javax jms Message in toString in cameljms   ;See nabblehttp  camel  n nabble comExchangeTimedOutExceptionnotproperlyconstructedbyCamelexposingexchangedatatpp htmlThere may be details in the JMS message you do not want to show in logs unintended    
0;Simple expression does not find method toString     ;In a route builder  we have a log definition   from 'direct  testSimple'   log '$ body toString '  The body contains an object  that implements a public toString   method  But the problem is  that the simpleexpression does not find the method toString   and route processing stops without throwing an exception The funny thing is  that when we just rename the method  e g  toInfoString    then it works  from 'direct  testSimple'   log '$ body toInfoString '  Why does simple expression have a problem with a method named 'toString'?   
0;NPE from DefaultCxfBinding when  is null   ;when got soap message from CXF component like this  lt soap  Envelope xmlns  soap 'http  schemas xmlsoap orgsoapenvelope'gt lt soap  Headergt       lt soap  Headergt lt soap  Bodygt lt soap  Envelopegt the NPE will be thrown         | WARN | tp | ache cxf common logging LogUtils  |   | Interceptor for  http  airportsoap sopera de airport http  airportsoap sopera de getAirportInformationByISOCountryCode has thrown exception  unwinding nowjava lang NullPointerException at org apache camel component cxf DefaultCxfBinding getResponsePayloadList DefaultCxfBinding java      org apache camel camelcxf      at org apache camel component cxf DefaultCxfBinding populateCxfResponseFromExchange DefaultCxfBinding java      org apache camel camelcxf      at org apache camel component cxf CxfConsumer$ setResponseBack CxfConsumer java      org apache camel camelcxf      at org apache camel component cxf CxfConsumer$ asyncInvoke CxfConsumer java      org apache camel camelcxf      at org apache camel component cxf CxfConsumer$ invoke CxfConsumer java      org apache camel camelcxf      at org apache cxf interceptor ServiceInvokerInterceptor$ run ServiceInvokerInterceptor java      org apache cxf bundle      at org apache cxf interceptor ServiceInvokerInterceptor handleMessage ServiceInvokerInterceptor java      org apache cxf bundle      at org apache cxf phase PhaseInterceptorChain doIntercept PhaseInterceptorChain java      org apache cxf bundle      at org apache cxf phase PhaseInterceptorChain resume PhaseInterceptorChain java      org apache cxf bundle      at org apache cxf transport ChainInitiationObserver onMessage ChainInitiationObserver java      org apache cxf bundle      at org apache cxf transport http_jetty JettyHTTPDestination serviceRequest JettyHTTPDestination java      org apache cxf bundle      at org apache cxf transport http_jetty JettyHTTPDestination doService JettyHTTPDestination java      org apache cxf bundle      at org apache cxf transport http_jetty JettyHTTPHandler handle JettyHTTPHandler java      org apache cxf bundle      at org eclipse jetty server handler ContextHandler doHandle ContextHandler java      org eclipse jetty server     v  at org eclipse jetty server handler ContextHandler doScope ContextHandler java      org eclipse jetty server     v  at org eclipse jetty server handler ScopedHandler handle ScopedHandler java      org eclipse jetty server     v  at org eclipse jetty server handler ContextHandlerCollection handle ContextHandlerCollection java      org eclipse jetty server     v  at org eclipse jetty server handler HandlerWrapper handle HandlerWrapper java      org eclipse jetty server     v  at org eclipse jetty server Server handleAsync Server java      org eclipse jetty server     v  at org eclipse jetty server HttpConnection handleRequest HttpConnection java      org eclipse jetty server     v  at org eclipse jetty server HttpConnection handle HttpConnection java      org eclipse jetty server     v  at org eclipse jetty io nio SelectChannelEndPoint handle SelectChannelEndPoint java      org eclipse jetty io     v  at org eclipse jetty io nio SelectChannelEndPoint$ run SelectChannelEndPoint java      org eclipse jetty io     v  at org eclipse jetty util thread QueuedThreadPool$ run QueuedThreadPool java      org eclipse jetty util     v  at java lang Thread run Thread java        _ Looking into the source codes  before the line  of DefaultCxfBinding  the elements variable shoulde be checked if it's null    
0;NPE when using SEDA route and attaching an extra consumer   ;I'm trying to construct a system for moving some seda queues over toActiveMQ during system shutdown  What I did was create a Route thatconnects to some of my seda queues and then drains the queue to activemq Basicly I got two routes  the drainer  from 'seda  ' + sedaId + '?size '   routeId routeName +sedaIs  noAutoStartup   to activeMQFailuresQueue  And the main route  from 'seda  ' + sedaId + '?size '   routeId routeName + sedaIs  to SomeProcessor  Now  sometimes the main route stalls for various reasons I need torestart the jvm process it is running in  so I start the first route But when trying this in production  I got   java lang NullPointerException atorg apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    atorg apache camel component seda SedaConsumer sendToConsumers SedaConsumer java    atorg apache camel component seda SedaConsumer doRun SedaConsumer java    atorg apache camel component seda SedaConsumer run SedaConsumer java    atjava util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    atjava util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java   Bvahdat added a comment  just a very tiny pointer  Looking at the source it seems that theSedaEndpoint getConsumerMulticastProcessor   method returns 'null' causingthe NPE  as the condition  multicastStarted    false || consumerMulticastProcessor    nullis true    
0;Bindy does not support quoted value with separator char in CSV datasource   ;i'm currently writing a tuto on Camel      Showing HTTP component usage by downloading US Gov public data  i found a problem    from 'quartz  dataTimer?cron +?'  to 'direct  datas'   from 'direct  datas'   to 'http  earthquake usgs govearthquakescatalogseqsdayM txt'   unmarshal new BindyCsvDataFormat 'net thejeearchitectcookbook camel earthquake'    process new Processor     public void process Exchange exchange  throws Exception   Message message   exchange getIn              The data format is like and my separator char is ' '  nc   'Wednesday  November         UTC'          'Central California'I want to get all datas as java lang String but the date value raises exception   java lang IllegalArgumentException   No position  defined for the field     line    must be specified]My separator is ' ' but some values are nested inside ' '  Unfortunately there are ' ' inside the ' ' Bindy get lost !How can i get String values nested inside ' ' and containing ' ' ?I can note that Camel CSV component deals with it without any problems Here is my pojo   package net thejeearchitectcookbook camel earthquake import java io Serializable import org apache camel dataformat bindy annotation CsvRecord import org apache camel dataformat bindy annotation DataField @CsvRecord  separator   ' ' public class EarthquakeInfos implements Serializable   @DataField pos     private String src  @DataField pos     private String eqid  @DataField pos     private String version  @DataField pos     private String datetime  @DataField pos     private String lat  @DataField pos     private String lon  @DataField pos     private String magnitude  @DataField pos     private String depth  @DataField pos     private String nst  @DataField pos     private String place  public String getSrc     return src    public void setSrc String src    this src   src    public String getEqid     return eqid    public void setEqid String eqid    this eqid   eqid    public String getVersion     return version    public void setVersion String version    this version   version    public String getLat     return lat    public void setLat String lat    this lat   lat    public String getLon     return lon    public void setLon String lon    this lon   lon    public String getDepth     return depth    public void setDepth String depth    this depth   depth    public String getNst     return nst    public void setNst String nst    this nst   nst    public String getDatetime     return datetime    public void setDatetime String datetime    this datetime   datetime    public String getMagnitude     return magnitude    public void setMagnitude String magnitude    this magnitude   magnitude    public String getPlace     return place    public void setPlace String place    this place   place     I can find that CSV Camel component performs well with the same datasource   from 'direct  datas'  to 'http  earthquake usgs govearthquakescatalogseqsdayM txt'  unmarshal   csv   process new Processor     public void process Exchange exchange  throws Exception   Message message   exchange getIn    Listlt Listlt Stringgt gt  datas    Listlt Listlt Stringgt gt   message getBody     Skip header datas   datas subList   datas size        Process my data for  Listlt Stringgt  row    datas     Process Row String datetime   row get    String region   row get    String magnitude   row get             
0;Bindy  CSV format  Should be able to marshal with quotes   ;See nabblehttp  camel  n nabble comBindyCSVmarshaldoesnotproperlyquotevaluesdefinedbytheCsvRecordseparatortd htmlIts fairly common to marshal tofrom with quotes in CSV format We should make this easier by adding an attribute to @CsvRecord where you can define a quote char to use  either single or double etc    
0;Add option to override XSLT stylesheet used via header   ;Similar to 'dynamic templates' in velocity component http  camel apache orgvelocity   
0;Text improvements to camelexamplecxfproxy    ;Attachment has improvements to README and the camelconfig xml file shown in the online description of this sample   https  cwiki apache orgconfluencedisplayCAMELCXF+Proxy+Example  a web page I just updated     
0;When a route is removed from camel  LifecycleStrategy is called twice   ;DefaultCamelContext removeRoute method has these lines among others if  getRouteStatus routeId  isStopped      routeService setRemovingRoutes true   shutdownRouteService routeService   removeRouteDefinition routeId   ServiceHelper stopAndShutdownServices routeService  I think the last line from this snippet is not needed  because the route should be already stopped in order to pass the IF statement and then it is shutdown through this call shutdownRouteService routeService   ServiceHelper stopAndShutdownServices routeService  tries to stops again the route if not stopped  but the worse is it shutdown the rout again It seems to me like a bug  other thoughts?   
0;Scala DSL does not support defining routescoped error handlers   ;The Scala DSL does not allow for defining error handlers at the route scope  The 'errorHandler' method only sets the contextscoped error handler    
0;file endpoint to raise a warning msgs if unable to autocreate the starting directory   ;The file component tries to autocreate any nonexisting starting directories however it does not raise any warnings if its unable to create the directory  e g  due to file permission or due to unmounted file systems   It should at least log a warning msg if it cannot autocreate the starting directory    
0;Change cometd SslSocketConnetor to use SslSelectChannelConnector   ;Currently cometd uses SslSocketConnector for cometds connections  In its current configuration it can only support about  connections as SslSocketConnector is a blocking connector  Switching this to use the SslSelectChannelConnector in the same way it uses the SelectChannelConnector will fix this and allow the cometds to perform as the non ssl version    
0;Tokenize pair  evaluated as predicate should close input stream   ;If you read from a file and use the tokenize pair in a predicate such as a filter  content based router  then the input stream should be closed  Otherwise OS such as Windows keep a lock on the stream  and the file cannot be moveddeleted after processing is done See nabblehttp  camel  n nabble comRidingonorgapachecamellanguageTokenPairPredicateTesttpp htmlNote that using tokenizePair as a predicate is must likely very unusual  as its meant for splitting a stream into tokens  and thus most often only used with the splitter EIP    
0;Unable to set logName on DefaultErrorHandler as well as executorService on LoggingErrorHandler   ;The following snippets do not work  although each of the specified error handlers supports logName and executorServiceRef  The issue is actual for the DeadLetterChannel error handler too LoggingErrorHandlerlt errorHandler id 'errorHandler' type 'LoggingErrorHandler' logName '$ router logger name ' executorServiceRef 'redeliveryExecutor'gt DefaultErrorHandlerlt errorHandler id 'errorHandler' type 'DefaultErrorHandler' logName '$ router logger name ' executorServiceRef 'redeliveryExecutor'gt StackTraceCaused by   org springframework beans factory BeanDefinitionStoreException   Unexpected exception parsing XML document from class path resource [METAINFspringcamelcontext xml]  nested exception is java lang IllegalArgumentException   Attribute executorServiceRef is not supported by error handler type   LoggingErrorHandler  in error handler with id   errorHandler at org springframework beans factory xml XmlBeanDefinitionReader doLoadBeanDefinitions XmlBeanDefinitionReader java    at org springframework beans factory xml XmlBeanDefinitionReader loadBeanDefinitions XmlBeanDefinitionReader java    at org springframework beans factory xml XmlBeanDefinitionReader loadBeanDefinitions XmlBeanDefinitionReader java    at org springframework beans factory support AbstractBeanDefinitionReader loadBeanDefinitions AbstractBeanDefinitionReader java    at org springframework beans factory support AbstractBeanDefinitionReader loadBeanDefinitions AbstractBeanDefinitionReader java    at org springframework beans factory xml DefaultBeanDefinitionDocumentReader importBeanDefinitionResource DefaultBeanDefinitionDocumentReader java         moreCaused by   java lang IllegalArgumentException   Attribute executorServiceRef is not supported by error handler type   LoggingErrorHandler  in error handler with id   errorHandler   
0;Avoid explicit cast while using the CamelContext getEndpoint   or ApplicationContext getBean   API and better rely on the overloaded counterpart of them taking a class type as the second argument  implicit cast    ;Some simple change examples on the trunk are  From  jpaTemplate    JpaTemplate applicationContext getBean 'jpaTemplate'  To  jpaTemplate   applicationContext getBean 'jpaTemplate'  JpaTemplate class  OrFrom  HttpEndpoint epOut    HttpEndpoint  getContext   getEndpoint 'http  localhost  ' + port + '?bridgeEndpoint trueamp throwExceptionOnFailure false'  To  HttpEndpoint epOut   getContext   getEndpoint 'http  localhost  ' + port + '?bridgeEndpoint trueamp throwExceptionOnFailure false'  HttpEndpoint class  Here another one with the removal of @SuppressWarnings as a side effect  From   @SuppressWarnings 'unchecked'  public lt Tgt  T lookup Classlt Tgt  type    ApplicationContext context   getApplicationContext    String[] names   context getBeanNamesForType type  true  true   if  names !  null    int count   names length  if  count         lets instantiate the single bean return  T context getBean names[]     else if  count gt      throw new IllegalArgumentException 'Too many beans in the application context of type   ' + type + '  Found   ' + count       throw new IllegalArgumentException 'No bean available in the application context of type   ' + type    To   public lt Tgt  T lookup Classlt Tgt  type    ApplicationContext context   getApplicationContext    String[] names   context getBeanNamesForType type  true  true   if  names !  null    int count   names length  if  count         lets instantiate the single bean return context getBean names[]  type     else if  count gt      throw new IllegalArgumentException 'Too many beans in the application context of type   ' + type + '  Found   ' + count       throw new IllegalArgumentException 'No bean available in the application context of type   ' + type    There're also cases where we could make a huge benefit of this so that the following code   public lt Tgt  T getMandatoryBean Classlt Tgt  type  String name    Object value   applicationContext getBean name   assertNotNull 'No spring bean found for name lt ' + name + 'gt '  value   if  type isInstance value     return type cast value     else   fail 'Spring bean lt ' + name + 'gt  is not an instanceof ' + type getName   + ' but is of type ' + ObjectHelper className value    return null     became just a one liner as   public lt Tgt  T getMandatoryBean Classlt Tgt  type  String name    return applicationContext getBean name  type    I also came across the cases where the prefered API indeed was used but there were unneccessary casts around it  From   must type cast to work with Spring   xSpringCamelContext context    SpringCamelContext  applicationContext getBeansOfType SpringCamelContext class  values   iterator   next   To  SpringCamelContext context   applicationContext getBeansOfType SpringCamelContext class  values   iterator   next   Another benefit of this patch is a better test code coverage  because as one would intuitively expect DefaultCamelContext getEndpoint String name  Classlt Tgt  endpointType  makes use of DefaultCamelContext getEndpoint String uri  before casting and returning the answer  So that now through the usage of the first method API  expecting two parameters  we do call both of them while testing  one explicitly and the other one implicitly  There're  sources affected by the provided patch  one source change is just because of an already preexisting checkstyle violation by HtmlToPdfMojo java on the trunk  I did verify only the tests on camelcore but not the rest with the following test result  WindowsVista   Results   Failed tests   testConcurrentAppend org apache camel component file FileConcurrentWriteAppendSameFileTest    mock  result Received message count  Expected   lt gt  but was   lt gt Tests run     Failures     Errors     Skipped    INFO   INFO  BUILD FAILURE INFO   INFO  Total time      s INFO  Finished at   Sun Dec       CET  INFO  Final Memory   MM INFO   ERROR  Failed to execute goal org apache maven plugins  mavensurefireplugin     test  defaulttest  on project camelcore   There are test failures    
0;Extra request parameters sent by the camelhttp component   ;Described in http  camel  n nabble comExtraRequestParamssentincamelHTTPcomponentGETrequesttd htmlRoute from 'jetty  http       myappmyservice'   to 'http  www google com?q camelamp bridgeEndpoint trueamp throwExceptionOnFailure false'   sends to the server the bridgeEndpoint trueamp throwExceptionOnFailure false parameters while route from 'jetty  http       myappmyservice'   to 'http  www google com?q camelamp bridgeEndpoint trueamp throwExceptionOnFailure false'   behaves properly and removes them   
0;camelquartz  Using underscore in group name does not work   ;The group name is not properly resolved if people specify a invalid host name  such as with underscores If so we should fallback and grab the group name by grabbing the string until the first path separator char See nabblehttp  camel  n nabble comCamelQuartzconsumerdoesntallowunderscorestpp html   
0;Make Ant path matching in file  FTP component easier to use   ;The existing codebase has an implicit optional dependency from camelcore to camelspring  camelcore contains the class AntPathMatcherGenericFileFilter  which internally uses camelspring's SpringAntPathMatcherFileFilter class via runtime classpath checks and reflection  The reason that SpringAntPathMatcherFileFilter is in camelspring is that it uses Spring's AntPathMatcher class internally  Interestingly  there is already an AntPathMatcher class with an API very similar to Spring's class in the camelcorexml module This patch moves camelcorexml's AntPathMatcher into camelcore  removes the classpath and reflection magic in camelcore's AntPathMatcherGenericFileFilter class  and adds a new class to camelcore named GenericFileFilterConverter  which automagically converts strings to ant path file filters  The patch also adds some unit tests The end result is that Camel users can now use ant path matching with the file and FTP components without having to add a dependency on camelspring  and Camel users can specify the ant path expression to use directly in the component querystring  rather than having to go through the work of registering an additional file filter instance in the registry  although this is only true when the user only needs to specify a single include path  which is a very common use case   For example  from 'file  targetblah?recursive trueamp filter * txt'   to      Instead of  from 'file  targetblah?recursive trueamp filter myTxtFilter'   to         
0;camelaws can allow SNAPSHOT transitive dependencies   ;The camelaws component depends on awsjavasdk which has several dependencies defined using version ranges  The problem with version ranges is that they can introduce SNAPSHOT versions if they are available on your system which is not so good    in my case I had this http  download java netmavencomsunmailjavax mail  SNAPSHOTjavax mail  SNAPSHOT jar jar in my local repo so camelaws promptly used that SNAPSHOT lib    
0;Improve Camel awssdb component   ;I would like to improve the awssdb component in the following places   Using the Amazon operation names instead of CamelAwsSdbXXX gt  With this we can easily support more operations  in the future  and the users are more familiar with this names Add OSGI integration testsI would like to resolve this issue for Camel    because renaming of the operation names are not backwards compatible  I will resolve this issue today    
0;After restarting route a camelquartz component fires right away  and it shouldn't    ;I am adding a new QuartzRouteRestartTest that demonstrates this issue  Not only a message is fired right after restart  but the scheduled times are messed up as well  I tried to keep the fire interval as low as possible  but it has to be large enough to demonstrate the problem  So I went down to   fire every five sec   but it's more obvious with  or   the trigger starts firing at the wrong time    
0;cameljms  Include details about correlation id in exchange timeout exception if a reply message did not come back   ;This helps make it easier to spot situations when doing requestreply over JMS and the reply message is not received within the timeout period And then the reply messages comes later Then it should be easier to spot in the logs when the timeout occurred  and the correlation ID should be in the logs  so you can correlate these two situations    
0;Add replyTo option to camel mail component   ;Add replyTo option to camel mail component   
0;interceptSendToEndpoint with predicate and skip   ;The lt whengt  clause in the interceptors behave like filters  This is okay with intercept and interceptFrom  where the only possible route manipulation is lt stop gt   which is expressed inside the routing block However  with interceptSendToEndpoint there is one edge case that could cause ambiguity  When skipSendToEndpoint true  along with a lt whengt  clause  the user might expect that the skipping will only occur if the condition is met  However  it occurs always  The lt when gt  only determines whether the routing logic contained inside the body of the intercept block will occur or not I propose to add a new attribute onlySkipWhenConditionMet  so that when this is true  the lt whengt  clause will be evaluated to determine if the originally intended endpoint is actually skipped or not    
0;cameleventadmin do not work   ;ChristianMuellersMacBookPro  bin cmueller$  karaf cleankaraf@rootgt  features  addurl mvn  org apache camel karafapachecamel  xmlfeatureskaraf@rootgt  features  install cameleventadminError executing command   Could not start bundle mvn  org apache camelcameleventadmin   in feature s  cameleventadmin     Unresolved constraint in bundle org apache camel cameleventadmin      Unable to resolve     missing requirement     package   amp  package org osgi service event  versiongt      ! versiongt       We have to install the feature eventadmin  from Karaf  first   
0;Log EIP  Check if it should log first before evaluating exchange   ;In the log EIP only evaluate the log message if really needed  eg shouldLog returns true   
0;Tech edits of JavaDoc and other code comments  lets >  let's  allow        ;Partial conversion of 'lets do   ' to 'let's do   '  'allows for doing'  or 'do   ' as appropriate  and associated other nitpicks found  'Let's' retained more where the code is part of an example or tutorial or if it's a matterofopinion on how to implement    
0;Ability to specify the cache level on JMS reply to queue   ;I'm trying to use Camel  v     JMS RequestReply with Websphere  using Websphere MQ  I'm successfully able to put the request message onto the queue using the following URI   jms  queue  inboundQueue?connectionFactory connectionFactoryamp taskExecutor taskExecutoramp transactionManager transactionManageramp cacheLevelName CACHE_NONEamp replyTo outboundQueueamp requestTimeout  Note   I have to use cacheLevelName CACHE_NONE in order for this to work on Websphere  However  when Camel creates the PersistentQueueMessageListenerContainer to read the reply message  it is hard coding the cache level to CACHE_SESSION  see PersistentQueueReplyManager java line    What happens is that Camel is successfully able to read the reply off the queue  but then spits out the following error repeatedly    Dec       |||WorkManager DefaultWorkManager    ||WARN |org springframework jms listener DefaultMessageListenerContainer|Setup of JMS message listener invoker failed for destination 'outboundQueue'  trying to recover  Cause   Connection closed I believe this is due to the PersistentQueueMessageListenerContainer using a cache level of CACHE_SESSION instead of CACHE_NONE  Can Camel be enhanced to have the ability to set the cache level on the reply queue?   
0;Remove ProducerCache from CamelContext service list when shutting down a route   ;If people add routes dynamic and remove the routes later on  we need to remove services which may have been added to the CamelContext services list  For example the ProducerCache by SendProcessor etc This will ensure that the ProducerCache can be GC'ed    
0;camelmina  Make it easier to use a custom thread pool for the consumer   ;It should be easier to use a custom thread pool for the mina consumer  in case you use it in sync mode  where the consumer thread would then be synchronous  and thus take up a thread  So in case you put load on the mina consumer  it will use up the default thread pool size of  threads We should add documentation in the wiki  how to use a custom thread pool  and pool profile See nabblehttp  camel  n nabble cominflightexchangeandqueueofapachecameltpp html   
0;BAM  database constraint violation when restaring application   ;Take BAM example from http  camel apache orgbamexample html  or any other one  it doesn't matter  Here is the one I'm using   ActivityBuilder request   activity 'eaiBroker  topic  SOME_TOPIC?concurrentConsumers '  name 'Request'   correlate xpath 'MessageRequest@Id'  stringResult     ActivityBuilder response   activity 'eaiBroker  topic  SOME_OTHER_TOPIC?concurrentConsumers '  name 'Response'   correlate xpath 'MessageResponse@Id'  stringResult     response  starts   after request completes     expectWithin seconds     errorIfOver seconds     to 'log  com eai?level error'   First run of the application and everything works  Restart application and try to activate one of BAM rules  there will be an exception that database constraint has been violated  Every time application is started  Camel tries to do following sql insertinsert into CAMEL_ACTIVITYDEFINITION  name  processDefinition_id  id  values  ?  ?  ? but name columne must be unique in CAMEL_ACTIVITYDEFINITION  Workaround for this is to purge BAM tables every time you want to restart the application  but it's not a solution    
0;xpath expression with $header with saxon may throw exception if header did not exist   ;See CAMELWe should return an empty String instead of a Void class  as this works with both JDK + Saxon XPathEngine Saxon does not work with the Void class    
0;add feature for camelcontext component   ;Workaround until this makes it into a release is of course justosgi  install s mvn  org apache camelcamelcontext     
0;Timed out Exchanges should be removed from seda queues   ;When the SedaProducer times out and stops waiting for an Exchange to be processed it should remove it from the queue as well  Same applies to the vm   component    
0;CamelContext autoStartup false and starting context programmatically doesnt work   ;If a lt camelContextgt  is set to autoStartup false and then later tried to start it via code or JMX doesn't start routes associated with it    
0;Parameter binding not working with BeanExpression   ;The parameter binding options available in camel   do not work for BeanExpression  The reason is the fake ognl parser that gets confused about the syntax  We need to align the two scenarios and probably replace the ognl like parsing    
0;SedaConsumer  Should not poll if CamelContext is starting   ;If you startup Camel with many routes  which mean starting Camel may take some seconds or whatnot  and then SedaConsumer may poll messages  while CamelContext is starting  It should avoid polling until CamelContext is fully started    
0;camelblueprint  Using namespaces with xpath does not work as the namesapces is not parsed and injected into the camel model   ;Using xpath predicates in a blueprint xml file does not work if you use custom namespaces  as the camelblueprint component does not detect the custom namespaces  as camelspring does    
0;Testing headers in multiple messages   ;The need is something similar to expectedBodiesReceivedInAnyOrder applied to headers   I know that a given endpoint will receive  messages in any order  and I need to test ONE header in each of these messages I wrote   getMockEndpoint 'mock  zipSHP'  expectedHeaderReceived 'zippedFile'  ' zip'  getMockEndpoint 'mock  zipSHP'  expectedHeaderReceived 'zippedFile'  ' zip'  getMockEndpoint 'mock  zipSHP'  expectedHeaderReceived 'zippedFile'  ' zip'  for the route   for 'file  filesToBeZipped'  to 'bean  my bean ZipperBean'  log 'Zipped       '  The endpoint effectively received the three messages  the results of three ZIP operations  but the test failed saying that the first message header was ' zip' and not the expected ' zip'    
0;ManagedBrowsableEndpoint are broken   ;ManagedeBrowsableEndpoint are broken which means any component that inherit ManagedBrowsableEndpoint have errors as well  Please see the link below which will have error screen shot of queueSize JMX operations http  camel  n nabble comJMXqueuesizeoperationfailsCameltd html   
0;exchange getIn   getBody  class  throws an exception for Jaxb model objects   ;exchange getIn   getBody Foo class  should return a Foo instance or null  if no suitable type converter is available  The java doc says   'return the body of the message as the specified type  or lt ttgt nulllt ttgt  if not possible to convert'If Foo is an Jaxb object model  this method call   throws an org xml sax SAXParseException if the body content is a string throws a javax xml bind UnmarshalException if the body content is another Jaxb model objectPlease have a look on the attached sample eclipse project    
0;Camel    incapable of working with  in endpoint URIs   ;In the class org apache camel util URISupport which will be used to resolve endpoints  DefaultCamelContextnormalizeEndpointUri  the method parseParameters will be called At first the java net UrigetQuery will be called with according to the javadoc 'Returns the decoded query component of this URI' returns a decoded URI  If that fails the java net UrigetSchemeSpecificPart method will be called which according to the javadoc 'Returns the decoded schemespecific part of this URI ' returns a decoded URI So to summarize we get in any case a decoded URI This URI will then be than in the method org apache camel util URISupportparseQuery String  again decoded with java net URLDecoderdecode String String  This code leads to the following behaviour   If a  is properly encoded with test the test will be substituted by the first call to test and the decoded again which leads to an Exception In the http  svn apache orgviewvc?view revisionamp revision  commit you can see that the  was uncommented from org apache camel utilUnsafeUriCharactersEncoder  Maybe this is related However    Double encoding of URIs seems quite odd  With any URI char there is no issue with that  But with  the  will be decoded again  which makes a  unusable in Camel    
0;antInclude support for case insensitive patterns   ;antIncude patterns are case sensitive  I need a case insensitive file matching pattern with file and ftp components note   custom filters is not applicable since I read patterns from database there is no way to correlate the filters with the routes    
0;Cannot use xquery predicate in filter after an xpath splitter    ;After upgrading from    to    using xqury predicate after an xpath filter throws java lang ClassCastException   net sf saxon tinytree TinyElementImpl cannot be cast to net sf saxon om DocumentInfo   Attached unit test doesn't fail in camel    from 'direct  xpath'   split xpathsplitter   filter   xquery 'record type  '   to 'mock  result'   See nabble discussion http  camel  n nabble comUnittestfailsafterupgradingtoCannotusexqueryexpressionafterxpathtd html   
1;Problem Removing Endpoints   ; see context on the users@ list When using removeEndpoints String  with a pattern  some endpoints  like jms topics  are reported as removed but they are not    
1;Spring security example does not work   ;When you try to run the spring security example and access it from a browser you get   I debugged into it and the reason is that the camel context does not attach to the camel http servlet    
0;ManagedPerformanceCounterMBean should extend ManagedCounterMBean   ;ManagedPerformanceCounterMBean does not extend ManagedCounterMBean  while ManagedPerformanceCounter does extend ManagedCounter    
0;BindyDataFormat should not use the default encoding   ;Here is the mail thread   which discuss about it   http  camel  n nabble comBindyCSVparserusesdefaultencodingtpp html   
1;Add session information from cometd to camel message headers   ;The cometd component has the ability to authenticate a connection with a custom SecurityPolicy    This information can then be added to the cometd session for further calls  Unfortunately  session attributes aren't passed to the camel message for processing by endpoints and processors further down the line    http  cometd orgdocumentation xhowtosauthentication   
0;UnsupportedOperationException thrown if @Consume method is not public   ;If the org apache camel Consume annotation is used on a method that is not public  e g  default visibility   then the following exception will be thrown every time a message is delivered to that consumer and the message will rollback with the consumer never invoked        [Camel Thread   JmsConsumer paula inprogress  WARN org apache camel component jms JmsMessageListenerContainer  Execution of JMS message listener failed  and no ErrorHandler has been set org apache camel RuntimeCamelException   java lang UnsupportedOperationException at org apache camel util ObjectHelper wrapRuntimeCamelException ObjectHelper java    at org apache camel component jms EndpointMessageListener onMessage EndpointMessageListener java    at org springframework jms listener AbstractMessageListenerContainer doInvokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer invokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer doExecuteListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer doReceiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer receiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker invokeListener DefaultMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker executeOngoingLoop DefaultMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker run DefaultMessageListenerContainer java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java   Caused by   java lang UnsupportedOperationException at java util Collections$UnmodifiableMap put Collections java    at org apache camel component bean BeanInfo introspect BeanInfo java    at org apache camel component bean BeanInfo createInvocation BeanInfo java    at org apache camel component bean BeanProcessor process BeanProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel component jms EndpointMessageListener onMessage EndpointMessageListener java         moreI appreacate that this not specifically a bug  so I am filing this as an improvement  However this is a REALLY misleading error message  A more specific error message would be greaty appreaceated and save a lot of time  Thanks    
0;DigitalSignatureEndpoint not clearing headers after verify   ;The DigitalSignatureEndpoint has a clearHeaders option that is supposed to clear headers after a verify operation  However that is not working because the headers cleared are not the actual header values  but the name of the java String fields  which is irrelevant at runtime The default value of the clearHeaders should also be true  so that Camel does not leave debris in the Exchange after a verify operation    
0;Error handler not called when recipient list has non existing endpoint   ;Given this route onException Exception class   handled true   to 'mock  dead'   from 'direct  start'   recipientList constant 'fail  endpoint'    to 'mock  result'  You would assume the on exception will handle the exception from the recipient list with the non existing endpoint This is not the case  We should let recipient list detect and let the error handler handle it    
0;Camel simple language wrong working with real number   ;I compute real number in route   lt setBodygt  lt setBodygt After that I want to filter   lt filtergt lt simplegt $ body  gt   lt simplegt      lt filtergt This expression return false for value in body       
0;simple without embedded text results in an NPE   ;After switching to   the following results in a NPElt camel  setBodygt  lt camel  simplegt lt camel  simplegt lt camel  setBodygt I'm not sure if it is now required to have something in the content of the simple element  I used it for setting the body element to an empty string before  worked with       
0;Support unmarshall of CSV files that does not contain all fields described in the annotated POJO    ;Actually when trying to unmarshall a CSV that does not contain all the fields described via @DataField annotation  an IllegalArgumentException is thrown  Would be better to define a default value for non required fields via @DataField annotation and therefore  not fail    
0;Streaming splitter ignores exception handling   ;If an exception occurs on the next   call of an Iterator in a streaming splitter  the exception is never propagated to the exception or the error handler  This will lead to improper route termination  and inifite rollbackretry cycles I attached the minimal test case demonstrating the issue    
0;CxfProducer should release the CXF when the Producer is stopped    ;CXF ClientImpl has the requestContext need to be cleaned when the CxfProducer is stopped If we don't call the Client destory   method  the requestContext will cause the memory leak    
0;Camel route with bean element sends on startup invalid message to target route that is represented by a proxy who exposes route   ;I expose a Camel route with a direct endpoint defined in an OSGi bundle with the lt camel  proxygt  and lt osgi  servicegt  tags  The reason for this is to be able to call this directroute in other routes  defined in other bundles  as a 'subroute' directly as bean   bean routeproxy  quot methodquot     This works as expected But on route startup the toString method is called on the route  for a description  which is propagated to the elements of the route  Therefore my beanelement  which is the directrouteproxy  receives the toString call and the CamelInvocationHandler converts this toString call to a message and sends it to the directroute  This more or less empty message is of course not valid for the target route and produces an error on bundle startup  Shouldn't the toString call be suppressed by the proxy  since toString is not part of the Interface the proxy represents? Or is my approach a not recommended or problematic approach?Parts of stacktrace to show the way from route startup to the produced message gt  route receives 'empty' message omitted  at org apache camel component direct DirectProducer process DirectProducer java    at org apache camel component bean CamelInvocationHandler invoke CamelInvocationHandler java    at $Proxy toString Unknown Source  at sun reflect GeneratedMethodAccessor invoke Unknown Source  at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    gt  toString call is converted to message and sent to route omitted  at org springframework aop framework ReflectiveMethodInvocation proceed ReflectiveMethodInvocation java    at org springframework aop framework JdkDynamicAopProxy invoke JdkDynamicAopProxy java    at $Proxy toString Unknown Source  at org apache camel component bean ConstantBeanHolder toString ConstantBeanHolder java    gt  toString called on beanelement in route  bean is a proxy for a route   omitted  at java lang String valueOf String java    at java lang StringBuilder append StringBuilder java    at org apache camel impl EventDrivenConsumerRoute toString EventDrivenConsumerRoute java    at org apache camel management mbean ManagedRoute lt initgt  ManagedRoute java    at org apache camel management DefaultManagementLifecycleStrategy onRoutesAdd DefaultManagementLifecycleStrategy java    at org apache camel impl RouteService doStart RouteService java    gt  Route startup   
0;Memory leak in SedaComponent if adding and removing a lot of seda endpoints with different queue names   ;If you add and remove a lot of seda endpoints with different queue names  then the seda component may keep references to non used queues    
0;Memory leak in TimerListener if JMX enabled   ;If adding and removing a lot of routes  and you have JMX enabled with load statistics  then it may leak memory  as the route listener is not properly removed when the route is removed  due invalid equalshashCode    
0;DefaultUnitOfWork should copy headers from the original message if it's a JmsMessage   ;see Nabble for details   
0;Offer a way to not set a transaction manager in cameljms   ;The following sample Spring config sets up a camelactivemq componentlt bean id 'activemq' class 'org apache activemq camel component ActiveMQComponent'gt  lt property name 'configuration' ref 'jmsConfigAmq' gt  lt beangt  lt bean id 'jmsConfigAmq' class 'org apache activemq camel component ActiveMQConfiguration' gt  lt property name 'connectionFactory' ref 'jmsPooledConnectionFactory' gt  lt property name 'transacted' value 'true'gt  lt ! lt property name 'transactionManager' ref 'jmsTransactionManager' gt  gt  lt property name 'cacheLevelName' value 'CACHE_CONSUMER'gt  lt beangt  lt bean id 'jmsTransactionManager' class 'org springframework jms connection JmsTransactionManager'gt  lt property name 'connectionFactory' ref 'jmsPooledConnectionFactory' gt  lt beangt  lt bean id 'jmsConnectionFactory' class 'org apache activemq ActiveMQConnectionFactory'gt  lt property name 'brokerURL' value 'tcp  localhost  ' gt  lt property name 'watchTopicAdvisories' value 'false' gt  lt beangt  lt bean id 'jmsPooledConnectionFactory' class 'org apache activemq pool PooledConnectionFactory' gt  lt property name 'maxConnections' value ''gt  lt property name 'connectionFactory' ref 'jmsConnectionFactory'gt  lt beangt The ActiveMQConfiguration sets transacted true and configures for a JmsTransactionManager  Also  a PooledConnectionFactory is used  The config for a cameljms component would be similar The Spring JMS javadoc on AbstractPollingMessageListenerContainer setTransactionManager states  Note   Consider the use of local JMS transactions instead  Simply switch the 'sessionTransacted' flag to 'true' in order to use a locally transacted JMS Session for the entire receive processing  including any Session operations performed by a SessionAwareMessageListener  e g  sending a response message  It basically advises to only set transacted true and don't specify a TX manager  The benefit of doing so is that the cacheLevel setting will be honored when using local transactions without a configured TX manager  When a TX manager is configured  no caching happens at DMLC level and its necessary to rely on a pooled connection factory  This is discussed here However right now its not possible to configure the cameljms or camelactivemq component to not use an external TX manager when transacted true is set Even when setting lazyCreateTransactionManager false In case of camelactivemq  it still creates a default JmsTransactionManager  ActiveMQConfiguration javapublic PlatformTransactionManager getTransactionManager     PlatformTransactionManager answer   super getTransactionManager    if  isTransacted   amp amp  answer    null     lets autodefault the transaction manager if its not specified answer   createTransactionManager    setTransactionManager answer   answer   getTransactionManager      return answer  In case of cameljms it throws an exception  JmsConfiguration javaPlatformTransactionManager tm   getTransactionManager   if  tm !  null    container setTransactionManager tm    else if  transacted    throw new IllegalArgumentException 'Property transacted is enabled but a transactionManager was not injected!'   We should allow for using transactions in cameljms and camelactivemq without setting an external TX manager    
0;Bug   Unique Endpoints Leaking in DefaultInflightRepository   ;If you have an endpoint protocol which uses unique URIs you will leak Strings in the HashMap stored in the DefaultInflightRepository  org apache camel impl DefaultInflightRepository It seems there is a reference counting scheme in place  but it doesn't do a remove until the 'stop' method is called to shut the system down  We are running XMPP endpoints  which use a protocol like xmpp  someaccount@domainpassword?to someOtherAccountWhen there are  million accounts  not all of which are active  but all of which may message at some time or another  no references are removed to the endpointCount When the count becomes   the reference should be removed and the size method will still return the appropriate result Please be careful in the implementation to synchronize on some object  perhaps the AtomicInteger  reflecting a readwrite lock on the endpoint count modification    
0;npe in camel    validator   ;validator component seems broken in     Gives you a npe when loading xsd from classpath during unittesting See http  camel  n nabble comnpeincamelvalidatortc htmlprefixing with classpath eg  lt to uri 'validator  classpath  BroadcastMonitor xsd' gt  doesn't help    
0;cameljt  Parameter length when doing Program Call issue   ;When the length of each parameter of a program PGM is greater than the length of his values  the parameters are setted incorrectly Example  Input of program pgm  param gt  A  alphanumeric with length   param gt  A  alphanumeric with length   When the String array is  ''  ''  the values are setted on each parameter as  param   param      
0;org apache camel component mybatis MyBatisBatchConsumerTest testBatchConsumer   fails unpredictable   ;I assume we see this failure when we inserted the first test into the database  and only the first one  when the mybatis consumer starts to poll the database  See build failure   https  builds apache orgjobCamel   x fulltestorg apache camel$camelmybatis   
0;Incorrect feature definition for camelfop   ;   
0;Timer component  Should use thread name pattern so the thread name is aligned with the Camel threads   ;When using the timer component  the thread name will just be the timer name Before       [foo ] INFO route  Fired timerAfter       [Camel  camel  thread   foo ] INFO route  Fired timer   
0;Add option autogenColumns to csv data format in XML DSL   ;See nabblehttp  camel  n nabble comCSVdateformatbugAttributeAutogenColumnsisnotallowedtoappearinelementcamelcsvtpp htmlThis option is not exposed in the lt csvgt  data format in the XML DSLs   
0;Timer endpoint getState does not work in JMX   ;The getState attribute does not work    
0;Add the options configRef and strategyRef to csv data format in XML DSL   ;CAMEL provided the autogenColumns option which doesn't bring much on it's own  default is true   which with an explicit value set to false nothing will be appended into the output other than 'n''s So using the configRef and strategyRef options we could then bring the same power of expression inside XML DSL like inside Java  Following a sample where the user can customize the used CSVConfig andor CSVStrategy being used   lt camelContext id 'camel' xmlns 'http  camel apache orgschemaspring'gt  lt routegt  lt from uri 'direct  start' gt  lt marshalgt  lt csv autogenColumns 'false' delimiter '|' configRef 'csvConfig' gt  lt marshalgt  lt convertBodyTo type 'java lang String' gt  lt to uri 'mock  result' gt  lt routegt  lt routegt  lt from uri 'direct  start' gt  lt marshalgt  lt ! make use of a strategy other than the default one which is 'org apache commons csv CSVStrategy DEFAULT_STRATEGY' gt  lt csv autogenColumns 'false' delimiter '|' configRef 'csvConfig' strategyRef 'excelStrategy' gt  lt marshalgt  lt convertBodyTo type 'java lang String' gt  lt to uri 'mock  result' gt  lt routegt  lt camelContextgt  lt bean id 'csvConfig' class 'org apache commons csv writer CSVConfig'gt  lt property name 'fields'gt  lt listgt  lt ! here we're only interested in 'item' but not in 'orderId' or 'amount' gt  lt bean class 'org apache commons csv writer CSVField'gt  lt property name 'name' value 'item' gt  lt beangt  lt listgt  lt propertygt  lt beangt  lt bean id 'csvConfig' class 'org apache commons csv writer CSVConfig'gt  lt property name 'fields'gt  lt listgt  lt ! here we're interested in both 'orderId' and 'amount' but not in 'item' gt  lt bean class 'org apache commons csv writer CSVField'gt  lt property name 'name' value 'orderId' gt  lt beangt  lt bean class 'org apache commons csv writer CSVField'gt  lt property name 'name' value 'amount' gt  lt beangt  lt listgt  lt propertygt  lt beangt  lt bean id 'excelStrategy' class 'org springframework beans factory config FieldRetrievingFactoryBean'gt  lt property name 'staticField' value 'org apache commons csv CSVStrategy EXCEL_STRATEGY' gt  lt beangt    
0;Set Restlet Server Options and Return HTTP Headers Set in Exchange   ;The underlying Restlet server options can now be set via an Endpoint option HTTP headers  e g  Expires or Last Modified  are returned properly from the exchange to the Restlet    
0;CxfBeanDestination should copy the in message header to the out message   ;User complains about can not access any other headers after the cxfbean in this mail thread   We should let the CxfBeanDestination copy the in message header before it sends the message back   http  camel  n nabble comCamelCXFDropsHeaderstt html   
0;RMI endpoint doesn't handle nested exception and raise CamelRuntimeException instead of RemoteException   ;When we have a route looking like  lt from uri 'rmi     'gt lt to uri 'myBean'gt if an exception is raised on myBean  the RMI endpoint ignores the exception described in the RemoteInterface and always raises a RuntimeCamelException nesting the original exceptions More over  RuntimeCamalException should not be raised by the RMI endpoint  It would make more sense to raise a RemoteException  as we are on a RMI endpoint    
0;bean component  @Handler should take precedence in a bean that implements Predicate   ;If you use a bean in a Camel route  and have not specified the method name to invoke  Then Camel has to scan for suitable methods to use  And for that we have the @Handler annotation which should take precedence in this process  However if the bean implements Predicate  or Processor  then Camel will use that  However the @Handler should be used instead  as this is what the enduser expects  And also what we tell in the docs    
0;OnException  Handler or Continued predicate is invoked twice per exception   ;See CAMELWhen using handled predicate  or continued predicate  those is evaluated twice per exception  We should only do this once  which is what the end user would normally except    
0;onException policy within global context lost when error handler redefined within route context    ;This may as well be Camel feature  limitation of Java DSL   but I found no indicationswarning that this is a feature in Camel book or web documentation  The route is somewhat ill defined as local errorHandler should be placed before bean part  but maybe for those types of mistakes it should not have this nasty side effects of loosing global onException policy  but at least complain during route creation   Moreover  the route works properly if I remove global error handler  so it is rather nasty effect if route definition correctness depends on the existence of the global error handler definition If I move local errorHandler before bean part then the my test passes as the onException policy is triggered and works properly  As soon as I redefine the error handler within a route the onException policy is no longer applicable for the route and the route propagates the exception back to the caller   errorHandler defaultErrorHandler   maximumRedeliveries     onException NullPointerException class  setOnRedelivery new NullRegistrationDateProcessor     from 'direct  toPropertyFile'  routeId 'registrationEntryToPropertyFile'   setHeader Exchange FILE_NAME  simple '$ body firstname  $ body surname '    bean RegistrationToPropertiesBean class  'convert'   Potential bug in Camel  if the same error handler like global is turned on then onException defined in global context will not be picked up   errorHandler defaultErrorHandler   maximumRedeliveries     the code above is working if no default handler was created for a global context   to 'file  ' + outFolder     
0;Avoid parsing URI each time when getting uri from endpoint   ;In Camel    a new EndpointConfiguration was introduced  which has more fine grained details about an URI However the getEndpointUri method on Endpoint is now parsing the uri on each call  this is not needed  and is also unnecessary overhead We should parse this once Also Camel's builtin type converter should be used during the parsing  and not just the hardcoded PropertyEditorTypeConverter which is to be considered removed as its not thread safe causes unforeseen side effects when rd party projects register property converter   
0;IOException   No space left on device' exception swallowed by camel   ;When routing a file using the GenericFileConsumer object an exception is swallowed if the lock file cant be created  i e there is no harddrive space  GenericFileConsumer javaprotected void processExchange final Exchange exchange    GenericFilelt Tgt  file   getExchangeFileProperty exchange   log trace 'Processing file     '  file    must extract the absolute name before the begin strategy as the file could potentially be pre moved  and then the file name would be changed String absoluteFileName   file getAbsoluteFilePath     check if we can begin processing the file try   final GenericFileProcessStrategylt Tgt  processStrategy   endpoint getGenericFileProcessStrategy    boolean begin   processStrategy begin operations  endpoint  exchange  file   if  !begin    log debug endpoint + ' cannot begin processing file     '  file    begin returned false  so remove file from the in progress list as its no longer in progress endpoint getInProgressRepository   remove absoluteFileName   return      catch  Exception e    if  log isDebugEnabled      log debug endpoint + ' cannot begin processing file   ' + file + ' due to   ' + e getMessage    e     endpoint getInProgressRepository   remove absoluteFileName   return        When processStrategy begin operations  endpoint  exchange  file   throws an java io IOException this is swallowed in the catch method and never propagated to the error handling of camel  Output from log is         [Camel  camel  thread   file  UsersxxxxyyyyFiles] DEBUG o a c component file FileConsumer  Endpoint[file  UsersxxxxyyyyFiles] cannot begin processing file   GenericFile[UsersxxxxyyyyFilesfile] due to   No space left on devicejava io IOException   No space left on device at java io UnixFileSystem createFileExclusively Native Method  ~[na    _] at java io File createNewFile File java    ~[na    _] at org apache camel component file strategy MarkerFileExclusiveReadLockStrategy acquireExclusiveReadLock MarkerFileExclusiveReadLockStrategy java    ~[camelcore   jar    ] at org apache camel component file strategy GenericFileProcessStrategySupport begin GenericFileProcessStrategySupport java    ~[camelcore   jar    ] at org apache camel component file strategy GenericFileRenameProcessStrategy begin GenericFileRenameProcessStrategy java    ~[camelcore   jar    ] at org apache camel component file GenericFileConsumer processExchange GenericFileConsumer java    [camelcore   jar    ] at org apache camel component file GenericFileConsumer processBatch GenericFileConsumer java    [camelcore   jar    ] at org apache camel component file GenericFileConsumer poll GenericFileConsumer java    [camelcore   jar    ] at org apache camel impl ScheduledPollConsumer doRun ScheduledPollConsumer java    [camelcore   jar    ] at org apache camel impl ScheduledPollConsumer run ScheduledPollConsumer java    [camelcore   jar    ] at java util concurrent Executors$RunnableAdapter call Executors java    [na    _] at java util concurrent FutureTask$Sync innerRunAndReset FutureTask java    [na    _] at java util concurrent FutureTask runAndReset FutureTask java    [na    _] at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask access$ ScheduledThreadPoolExecutor java    [na    _] at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask runPeriodic ScheduledThreadPoolExecutor java    [na    _] at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask run ScheduledThreadPoolExecutor java    [na    _] at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    [na    _] at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    [na    _] at java lang Thread run Thread java    [na    _]I have tried both tried error handling on the route and the DefaultErrorHandler way but this exception is never handled by the methods  ie Camel log them and then swallow them    
0;Backmerge CAMEL to the Bindy component for nonrequired fields   ;The issue  originally reported via CAMEL  is to backmerge the CAMEL fix into the   x branch I merged revision  into my local   x branch that I had updated with two new test cases Before merge one test failed  after merge all tests were successfull Attaching the updated model and tabtest   Revision   Author   ningjiangDate   den  februari      Message  CAMEL support the set the default value on the field of bindy CVSModified    cameltrunkcomponentscamelbindysrcmainjavaorgapachecameldataformatbindyBindyCsvFactory javaModified    cameltrunkcomponentscamelbindysrcmainjavaorgapachecameldataformatbindyannotationDataField javaModified    cameltrunkcomponentscamelbindysrctestjavaorgapachecameldataformatbindycsvBindySimpleCsvUnmarshallTest javaModified    cameltrunkcomponentscamelbindysrctestjavaorgapachecameldataformatbindymodelsimpleoneclassOrder java   
0;JMX issues on WebSphere   ;While setting up a Camel web application for WebSphere    I encountered two issues  Documentation   the Camel JMX docs proposes the following settings for WebSphere  lt camel  jmxAgent id 'agent' createConnector 'true' mbeanObjectDomainName 'org yourname' mbeanServerDefaultDomain 'WebSphere'gt This registers the beans with the PlatformMbeanServer instead of the WebSphere MBean server  The following setup works better  lt camel  jmxAgent id 'agent' createConnector 'false' mbeanObjectDomainName 'org yourname' usePlatformMBeanServer 'false' mbeanServerDefaultDomain 'WebSphere'gt   For each Camel route  the same Tracer and DefaultErrorHandler MBeans are tried to be registered over and over again  Because WebSphere changes the ObjectNames on registration  server isRegistered name   in DefaultManagementAgentregisterMBeanWithServer always returns false  which causes the MBean to be reregistered  which again cause Exceptions  e g       [WebContainer    ] [] WARN  DefaultManagementLifecycleStrategy onErrorHandlerAdd   | Could not register error handler builder   ErrorHandlerBuilderRef[CamelDefaultErrorHandlerBuilder] as ErrorHandler MBean javax management InstanceAlreadyExistsException   org apache camel  cell wdflapNodeCell name 'DefaultErrorHandlerBuilder ref  CamelDefaultErrorHandlerBuilder ' context wdflapcamelContext type errorhandlers node wdflapNode process server at com sun jmx mbeanserver Repository addMBean Repository java    at com sun jmx interceptor DefaultMBeanServerInterceptor internal_addObject DefaultMBeanServerInterceptor java    at com sun jmx interceptor DefaultMBeanServerInterceptor registerDynamicMBean DefaultMBeanServerInterceptor java    at com sun jmx interceptor DefaultMBeanServerInterceptor registerObject DefaultMBeanServerInterceptor java    at com sun jmx interceptor DefaultMBeanServerInterceptor registerMBean DefaultMBeanServerInterceptor java    at com sun jmx mbeanserver JmxMBeanServer registerMBean JmxMBeanServer java    at com ibm ws management PlatformMBeanServer registerMBean PlatformMBeanServer java    at org apache camel management DefaultManagementAgent registerMBeanWithServer DefaultManagementAgent java    at org apache camel management DefaultManagementAgent register DefaultManagementAgent java      The web application starts up  but with a lot of exceptions in the log Proposal  Instead of using a Setlt ObjectNamegt  for mbeansRegistered  use a Maplt ObjectName  ObjectNamegt  where the key is the 'Camel' ObjectName and the value is the actually deployed ObjectName I will provide a patch that illustrates the idea    
0;Bean component  Should preserver properties from exchange to allow to transfer state   ;See nabblehttp  camel  n nabble comStatefulDynamicRoutertpp htmlThis allows other EIPs such as the dynamic route to use state when using a bean as its expression    
0;spring schema is not up to date   ;The URI of the Spring schema has been updated in Camel    and     http  camel apache orgschemacxfWe can see that starting from    and     we suffix the schema with spring or blueprint However  the spring schema resource file has not been updated with this suffix    
0;Strange warning appears   WARN  org apache camel processor DeadLetterChannel  Cannot determine current route from Exchange with id   ;The warning gets printed but other than that  everything seems to work   I hope           [drisCamelContext JmsConsumer[dispatchHttpQueue] ] WARN org apache camel processor DeadLetterChannel  Cannot determine current route from Exchange with id   IDdrisixorbe  will fallback and use first error handler           [drisCamelContext JmsConsumer[dispatchHttpQueue] ] WARN distribution kv dispatch  Failed delivery  attempt        org apache http conn HttpHostConnectException   Connection to http        refused  cd  KVpasstimes         queue_dispatchHttpQueue_ID_dris ixor be____When looking up the log statement in RedeliveryErrorHandler  I find this  else if  !exceptionPolicy getErrorHandlers   isEmpty       note this should really not happen  but we have this code as a fail safe  to be backwards compatible with the old behavior log warn 'Cannot determine current route from Exchange with id       will fallback and use first error handler '  exchange getExchangeId     processor   exceptionPolicy getErrorHandlers   iterator   next     So it shouldn't happen but it happens after all   Here is the route causing the warning  I think it started when I made the route transacted  As shown in the log snippet above  the warning is printed when the HTTP endpoint throws an IOException  route ENDPOINT_DISPATCH  from ENDPOINT_DISPATCH_QUEUE + '?cacheLevelName CACHE_CONSUMERamp ' +  necessary for message groups to work 'concurrentConsumers   hermes dris distribution kv concurrentOutgoingHttpDispatchers  amp ' + 'maxConcurrentConsumers   hermes dris distribution kv maxConcurrentOutgoingHttpDispatchers  '   routeId ROUTE_ID_DISPATCH_QUEUE   onException Throwable class   transacted routes override the default error handler  to avoid the message going to the the ActiveMQ DLQ  forward to our DLQ here  to ENDPOINT_DLQ   handled true   end    transacted    determine action  the timingPointSequencer will check what needs to happen with the message  beanRef 'timingPointSequencer'  'handleDispatch'   choice    normal situation  the message can be sent  when header TimingPointSequencer HEADER_ACTION  isEqualTo constant TimingPointSequencer ACTION_PROCEED     to ENDPOINT_DISPATCH   delay message  usually because of previous errors for this destination  when header TimingPointSequencer HEADER_ACTION  isEqualTo constant TimingPointSequencer ACTION_REENQUEUE     log LoggingLevel INFO  'Reenqueuing' + MESSAGE_LOG_FORMAT   to ENDPOINT_DISPATCH_QUEUE   otherwise    log LoggingLevel ERROR  'No action header set ???' + MESSAGE_LOG_FORMAT   to ENDPOINT_DLQ   end    end    from ENDPOINT_DISPATCH   routeId ROUTE_ID_DISPATCH   onException IOException class   in case of IO exceptions  the message is always reenqueued  reschedule parameters are set by the timingPointSequencer  beanRef 'timingPointSequencer'  'handleFailure'   log LoggingLevel WARN  'Failed delivery  attempt   $ in header tpSecAttempt      $ in header CamelExceptionCaught ' + MESSAGE_LOG_FORMAT   to ENDPOINT_DISPATCH_QUEUE   handled true   end    clear http headers to avoid interference from other http endpoints  removeHeaders 'CamelHttp*'   setHeader Exchange HTTP_URI  simple 'http  $ header ' + HEADER_DESTINATION_ADDRESS + ' '    setHeader Exchange HTTP_PATH  simple '$ properties  hermes dris distribution kv controller urlpath '    setHeader Exchange CONTENT_TYPE  constant 'applicationxml'    setHeader Exchange CONTENT_ENCODING  constant 'gzip'    use gzip compression  log verboseLoggingLevel  'Sending request to $ in header CamelHttpUri $ in header CamelHttpPath ' + MESSAGE_LOG_FORMAT   use multicast instead of a pipeline  or the audit log will contain the http response!  multicast    stopOnException    to ENDPOINT_TIMINGPOINT_HTTP + '?httpClientConfigurerRef timingPointHttpClientConfigureramp headerFilterStrategy distributionHttpHeaderFilterStrategy'  ENDPOINT_AUDIT_OUTGOING   end    beanRef 'timingPointSequencer'  'handleSuccess'     
0;SftpChangedExclusiveReadLockStrategy does not check the correct field to determine if a file is changing   ;I have recently upgraded from Camel   to a more recent version  I can confirm that the bug is still in trunk  In Camel    there was a generic FileChangedExclusiveReadLockStrategy  This checked the modification time of the file using GenericFile lastModified  This field was set by SftpComponentasRemoteFile as file getAttrs   getMTime   *   In Camel   onwards  this behaviour is implemented by SftpChangedExclusiveReadLockStrategy  This incorrectly  to my mind  retrieves the timestamp on line  using   newLastModified   f getAttrs   getATime   Taking the atime of the file doesn't make a great deal of sense to me  on a POSIX compliant filesystem  the atime will be incremented every time the file is polled  meaning that this strategy will never be able to mark a file as unchanged  While some filesystems are mounted nowadays as noatime or relatime  the mtime is still absolutely the safest mechanism to determine if something is writing to a target file  The impact of this bug is that we cannot reliably poll files from a remote SFTP server    
0;Implement connection pooling in jt component   ;Instead of eagerly obtaining a new connection to the AS system  Endpoint instances request one from a connection pool  Users can specify that their own connection pool be used  or let Camel provide one  default behaviour  Functionally speaking  this feature does not introduce any change  it can be viewed as an optimization in advanced usage scenarios  Thread safety   the producersconsumers  which were inherently threadsafe  became not threadsafe in regard to their startstop lifecycle The following text can be used as the documentation for the new URI option  NameconnectionPoolDefault valueASConnectionPool instanceDescriptionCamel     Reference to an com ibm as access ASConnectionPool instance in the Registry  This is used for obtaining connections to the AS system  The look up notation  '' character  should be used    
0;initialDelay and idempotentRepository Endpoint URI parameters fail to be read from Camel context when Turkish language is set in host operating system    ;org apache camel util ObjectHelper capitalize   method uses native JAVA String toUpperCase   method  without parameters   which performs capitalization according to operating system current language and regional settings configuration  When these are set to Turkish  a call to capitalize   method  with a String starting with 'i' as parameter  returns Turkish dotted 'I' as capitalized 'i'  which is wrong according to programmatic language and expected behavior This behaviour impacts  at least  in Endpoint URI parameters which names start with char 'i'  such as 'idempotentRepository' and 'initialDelay' URI parameters  When settergetter methods lookup is performed for these parameters  wrong method names are returned due to ObjectHelper capitalize   method  This method uses standard Java String toUpperCase   function which returns a dotted 'I' instead of dotless 'I' for idempotentRepository and initialDelay parameters To solve this  the attached patch consists of refactoring ObjectHelper capitalize   method  Instead of calling toUpperCase   method  it is called toUpperCase Locale ENGLISH  to enforce 'I' character  dotless  return    
0;Potential deadlock when shutting down Camel with NotifyBuilder doing notication   ;See nabblehttp  camel  n nabble comGracefullshutdowntimeoutsduetoNotifyBuilderblocksoncontexttpp htmlWe should avoid the synchronized getRoutes method which is really not needed    
0;Loop causes NullPointerException on error   ;The following context will cause NullPointerException  lt routeContext id 'myCamelContext' xmlns 'http  camel apache orgschemaspring'gt   lt routegt  lt from uri 'jms  myQueue'gt  lt onExceptiongt  lt exceptiongt org xml sax SAXParseExceptionlt exceptiongt  lt redeliveryPolicy maximumRedeliveries ''gt  lt handledgt lt constantgt truelt constantgt lt handledgt  lt to uri 'log  camelfatal?showAll trueamp multiline trueamp level ERROR'gt   lt onExceptiongt  lt loop copy 'true'gt  lt constantgt lt constantgt  lt inOnly uri 'smtp  you_can_leave_this_unchanged'gt  lt loopgt  lt routegt  lt routeContextgt The callstack on the NullPointerException  Daemon Thread [Camel  appServerCamelContext  thread   JmsConsumer emailOutbox ]  Suspended  exception NullPointerException    DefaultErrorHandler RedeliveryErrorHandler  processErrorHandler Exchange  AsyncCallback  RedeliveryErrorHandler$RedeliveryData  line     DefaultErrorHandler RedeliveryErrorHandler  process Exchange  AsyncCallback  line     RouteContextProcessor processNext Exchange  AsyncCallback  line     RouteContextProcessor DelegateAsyncProcessor  process Exchange  AsyncCallback  line     DefaultChannel process Exchange  AsyncCallback  line     AsyncProcessorHelper process AsyncProcessor  Exchange  AsyncCallback  line     LoopProcessor DelegateAsyncProcessor  processNext Exchange  AsyncCallback  line     LoopProcessor process Exchange  AsyncCallback  AtomicInteger  AtomicInteger  line     LoopProcessor process Exchange  AsyncCallback  line     AsyncProcessorHelper process AsyncProcessor  Exchange  AsyncCallback  line     InstrumentationProcessor DelegateAsyncProcessor  processNext Exchange  AsyncCallback  line     InstrumentationProcessor DelegateAsyncProcessor  process Exchange  AsyncCallback  line     InstrumentationProcessor process Exchange  AsyncCallback  line     AsyncProcessorHelper process AsyncProcessor  Exchange  AsyncCallback  line     TraceInterceptor DelegateAsyncProcessor  processNext Exchange  AsyncCallback  line     TraceInterceptor DelegateAsyncProcessor  process Exchange  AsyncCallback  line     TraceInterceptor process Exchange  AsyncCallback  line     AsyncProcessorHelper process AsyncProcessor  Exchange  AsyncCallback  line     DefaultErrorHandler RedeliveryErrorHandler  processErrorHandler Exchange  AsyncCallback  RedeliveryErrorHandler$RedeliveryData  line     DefaultErrorHandler RedeliveryErrorHandler  process Exchange  AsyncCallback  line     RouteContextProcessor processNext Exchange  AsyncCallback  line     RouteContextProcessor DelegateAsyncProcessor  process Exchange  AsyncCallback  line     DefaultChannel process Exchange  AsyncCallback  line     RouteContextProcessor processNext Exchange  AsyncCallback  line     RouteContextProcessor DelegateAsyncProcessor  process Exchange  AsyncCallback  line     UnitOfWorkProcessor processAsync Exchange  AsyncCallback  UnitOfWork  line     UnitOfWorkProcessor process Exchange  AsyncCallback  line     RouteInflightRepositoryProcessor processNext Exchange  AsyncCallback  line     RouteInflightRepositoryProcessor DelegateAsyncProcessor  process Exchange  AsyncCallback  line     AsyncProcessorHelper process AsyncProcessor  Exchange  AsyncCallback  line     InstrumentationProcessor DelegateAsyncProcessor  processNext Exchange  AsyncCallback  line     InstrumentationProcessor DelegateAsyncProcessor  process Exchange  AsyncCallback  line     InstrumentationProcessor process Exchange  AsyncCallback  line     AsyncProcessorHelper process AsyncProcessor  Exchange  line     InstrumentationProcessor DelegateAsyncProcessor  process Exchange  line     EndpointMessageListener onMessage Message  line     DefaultJmsMessageListenerContainer AbstractMessageListenerContainer  doInvokeListener MessageListener  Message  line     DefaultJmsMessageListenerContainer AbstractMessageListenerContainer  invokeListener Session  Message  line     DefaultJmsMessageListenerContainer AbstractMessageListenerContainer  doExecuteListener Session  Message  line     DefaultJmsMessageListenerContainer AbstractPollingMessageListenerContainer  doReceiveAndExecute Object  Session  MessageConsumer  TransactionStatus  line     DefaultJmsMessageListenerContainer AbstractPollingMessageListenerContainer  receiveAndExecute Object  Session  MessageConsumer  line     DefaultMessageListenerContainer$AsyncMessageListenerInvoker invokeListener   line     DefaultMessageListenerContainer$AsyncMessageListenerInvoker executeOngoingLoop   line     DefaultMessageListenerContainer$AsyncMessageListenerInvoker run   line     ThreadPoolExecutor$Worker runTask Runnable  line     ThreadPoolExecutor$Worker run   line     Thread run   line      
0;HazelcastComponent doStop bombing out   ;I am setting up an own hazelcast instance on HazelcastComponent  it is created by Spring the problem is when HazelcastComponent doStop is called  a NullPointerException is throw  becausecreateOwnInstance is null    
0;camelnetty can't distinguish between Sharable and Unsharable codecs   ;Camelnetty uses general configuration model for referenced encodersdecoders for channel pipelines  see DefaultServerPipelineFactory  That is  create encoderdecoder objects at configuration parsing time and store them in a list  then use them when a pipeline is established  However  this will make encoderdecoder objects shared among different pipelines  that may cause data conflicts  when the encoderdecoder is not Sharable has object statusnot annotated as @Sharable   e g  a LengthFieldBasedFrameDecoder Although we can avoid the problem by totally writing a new serverpipelinefactory for our apps  several problem still remains  please see detailed description and testcase for this bug at  http  camel  n nabble comcamelnettybugandtheneedofbestpracticeforcreatingreferencedparameterobjectonlookinguptd html   
0;Camel    jetty component no longer works with Jetty    ;When attempting to create a cameljetty endpoint in Camel     the following exception is thrown  java lang NoSuchMethodError   org eclipse jetty servlet ServletContextHandler addFilter LorgeclipsejettyservletFilterHolder LjavalangString LjavautilEnumSet  Vat org apache camel component jetty JettyHttpComponent enableMultipartFilter JettyHttpComponent java    at org apache camel component jetty JettyHttpComponent connect JettyHttpComponent java    at org apache camel component http HttpEndpoint connect HttpEndpoint java    at org apache camel component http HttpConsumer doStart HttpConsumer java    at org apache camel support ServiceSupport start ServiceSupport java    at org apache camel impl DefaultCamelContext startService DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStartOrResumeRouteConsumers DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStartRouteConsumers DefaultCamelContext java    at org apache camel impl DefaultCamelContext safelyStartRouteServices DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStartOrResumeRoutes DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStartCamel DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStart DefaultCamelContext java    at org apache camel spring SpringCamelContext doStart SpringCamelContext java    at org apache camel support ServiceSupport start ServiceSupport java    at org apache camel impl DefaultCamelContext start DefaultCamelContext java      This appears to be a regression of a caused by the this merge from trunk  which I suspect requires Jetty  to be used Creating the endpoint under    works fine    
0;jt   program call should support binary format   ;Data queue message exchange supports both text and binary formats and so should the remote program call exchange  The specification is the same as the one for the data queue Additionally  this patch supports the concept of ommiting a parameter  This is achieved by passing null as the parameter value Implementation note  Since I don't know Camel's policy regarding API breaking  I opted to refer to JtDataQueueEndpoint Format  but Format should now be a toplevel class  since the concept is the same for data queues and programs    
0;LDAP Component lose headers   ;When we call to a LDAP endpoint  the result is returned in the Out body and we lose the IN headers  see http  camel  n nabble comLDAPComponentloseheaderstd html   A fix seems relatively easy  The solution could be add this line inside the process   method in LdapProducer java exchange getOut   setHeaders exchange getIn   getHeaders       
0;Relax simple language checking for function startend tokens  to only validate start tokens has appropriate end token   ;See nabblehttp  camel  n nabble comTranslatingrouteexceptionstoJSONwithSimpleExpressionLanguageorSPELtp html   
0;Incorrect ContentLength returned for converted result objects with Unicode characters   ;The camelservlet component responds with an incorrect http ContentLength header  causing the HTTP client to retreive a incomplete response  when the body of the out message is of a POJO type and is converted into a string that contains unicode characters For example  the following route returns 'B?e W?r'  but should return 'B?e W?rld' from 'servlet  testUnicodeWithObjectResponse?matchOnUriPrefix true'    process new Processor     public void process Exchange exchange  throws Exception    String contentType   exchange getIn   getHeader Exchange CONTENT_TYPE  String class   exchange getOut   setHeader Exchange CONTENT_TYPE  contentType + '  charset UTF'         transform constant  new Object    @Override public String toString   Unknown macro     return quot B?e W?rldquot           The attached patch contains a fix for the problem and a test to reproduce the problem    
0;Make it possible to change the remote file name without changing the local file name   ;Currently  if you change the remote file name by changing the message header Exchange FILE_NAME  this will not only change the remote file name but also the local file name  This is often undesirable  Instead it is a common requirement to archive the files that you process locally with their original file names unchanged This has been discussed on the user mailing list  http  camel  n nabble comhowtospecifyremotefilenamewhenusingFTPendpointtd html   
0;Add community and peer address of SNMP TRAP PDUs to camelsnmp header   ;A patch is included to add the community and peer address of SNMP traps that are received by camel  This is useful to determine where a trap originated from  as not all SNMPv traps include an OID that identifies the sender The information is placed in the message header as strings with names  securityNamepeerAddressThese names correspond to the accessor names in the snmpj API for the CommandResponderEvent class  securityName is not the correct name for SNMP v traps  but it's probably better to stick with a name that can be consistant between SNMP versions    
0;Jetty client can corrupt streams if used in a bridge mode  proxy    ;The jetty http producer should favor streams over Strings  which otherwise could cause the payload to be corrupted if doing a bridge mode  eg from jetty to jetty    
0;Dependencies with inconsitant paths in repository   ;Artifactory doesn't by default serve artifacts that have a path inconsistancy in it's repository  The used mavenshadeplugin version   used by camel   SNAPSHOT depends on such a component  this is fixed in version  I was unable to add an attachement  so here is the patch inline        Eclipse Workspace Patch  P camelIndex   parentpom xml                                                                      parentpom xml  revision  +++ parentpom xml  working copy @@   +  @@ lt plugingt  lt groupIdgt org apache maven pluginslt groupIdgt  lt artifactIdgt mavenshadepluginlt artifactIdgt      lt versiongt  lt versiongt + lt versiongt  lt versiongt  lt plugingt  lt plugingt    
0;camelstream overwrites files instead of appending   ;When a file stream is used with camelstream  the file is not opened in append mode  therefore the file is overwritten with every message  ending up with just the last message  all others are lost This contrasts with the documented behavior    
0;camelstream should not close stream after each write   ;The StreamProducer in camelstream closes the stream after every write  which significantly affects performance    
0;EventNotifiers don't work under Blueprint   ;EventNotifiers don't work with Blueprint Camel Contexts  Testing on latest  SNAPSHOT  updated on  May    GMT After some debugging  it looks like the bean lookup performed on line  of AbstractCamelContextFactoryBean afterPropertiesSet   triggers the initialization of the CamelContext as part of the lookup  As part of the init  all services are started  including the ManagementContext and its EventNotifiers  which we were just looking up  EventNotifiers are then added but never started because they came in late    
0;Main is bound to DefaultCamelContext   ;We are using our own CamelContext  which is extending the DefaultCamelContext  Using Main is impossible in this case  since the getCamelContextMap  method creates statically a DefaultCamelContext  Overriding this method doesn't works either  since the field registery is final  and no other accessors are defined The given path doesn't breaks existing code bases  and gives an easy possiblity to override the contextcreation  as well as access to the registry    
0;camelftp  Add option to check files without downloading   ;download false could be an option to stop poll consumers from downloading files when all you need is to check for file attributes The need was generated from ftp component but it could potentially apply to any file consumer  For more info see the original thread http  camel  n nabble comCamelFTPSFTPcheckinsteadofdownloadtd html   
0;camelbindy  Do not use locale if not explicit configured   ;Bindy should newer use locale if not explicit configured to use one  as they will format numbers and whatnot in unexpected ways For example an integer with an US locale will have comma as thousand separator  and that dont go well when marshalling to a CSV file  as the comma is also often a separator there    
0;Add a Camel Component to support MQTT   ;MQTT is a light weight messaging protocol for small sensors and mobile devices  see http  mqtt org   
0;camelsql  Should support  sign in query   ;See nabbleWe should look into supporting the  sign in the sql component It should possible be less strict in uri validation as people can enter SQL queries  And to make it easy  they should just be able to dump in the SQL as is We should also consider adding an option to refer to a SQL that is enlisted in the registry Also people should be able to externalize their SQL in a  properties file and have Camel lookup that using the       notation   
0;Camel features file doesn't validate   ;If you execute$camelplatformskarafgt mvn clean install Pvalidateit fails in the feature definition validation for the following components  camelquickfixcamelcxfcamelcdi   
0;cameljms  Exception thrown from destination resolver should trigger Camel exception handling   ;See nabblehttp  camel  n nabble comCamelErrorhandlingthrowingexceptionnotmovingtoerrorqueuetp htmlThe jms producer should catch unhandled exceptions from the Spring JMS  such as its destination resolver  And ensure the callback is invoked  to let Camel error handler be triggered    
0;SOAPMessage to InputStream conversion needed for some CXF SOAPMessage Provider scenarios   ;When you have a SOAPMessage Provider based CXF endpoint in your Camel route and the message is forwarded to an input stream based processor or producer  e g   File   it is necessary to have a converter that converts SOAPMessage into InputStream It would be practical to have this conversion method included in CxfConverter I am attaching a test case and a possible implementation  This implementation uses CachedOutputStream to make an InputStream from a SOAPMessage  There might be a better way to get an InputStream  but I don't know a simple one Thanks    
0;Shutting down one of the contexts breaks async redeliveries in others   RedeliveryErrorHandler has static reference to a thread pool   ;ErrorRedeliveryHandler has static reference to a thread pool used for scheduling retries  thus when it's stopped it stops a pool used by other handler instances e g  from other contexts   thus they now can't redeliver    
0;Mail component does not work as expected  Email Deletion is partially broken et Disconnect does not work well    ;The way disconnect is implemented causes issues with some other options of the consumer  For instance 'disconnect' option is not compatible with 'delete' option The delete action is done in completion action  processCommit   line    On line   processCommit method checks if folder is open  but 'disconnect' option force folder at null value at the end of poll method  Line   I guess disconnect method should be called on completion after any other completion actions occured   It is not possible to make completion actions if connection to mail server is closed The result of the usage of disconnect option and delete option is a NullPointerException on test   'if  !folder isOpen   ' statement on line  Issue should be always reproductible I let you fix the priority of the issue  but it is an annoying issue even if there is a workaround by disabling disconnect option       
0;Improve performance of DefaultJmsKeyFormatStrategy   ;The current default implementation uses String replacereplaceAll to escape the illegal characters in the header key  This is unfortunate because replacereplaceAll are implemented in terms of regular expressions which makes the escaping quite costly for something that is executed for every single message  Also it's quite likely that the headers will be identical for every single message that's published via JMS  The attached patch makes two changes  Use Commons Lang StringUtil replaceEach which using a StringBuilder internally to do the replacement  This adds a dependency on Commons Lang  Cache the output of StringUtil replaceEach in a ConcurrentHashMap  This could be moved to a separate class if caching every key is a concern  Or this could be changed to use an LRUCache   
0;CXF Transport loses HTTP Matrix parameters   ;DefaultCxfMesssageMapper  note the typo  to be fixed in a followup JIRA  wrongly initializes CXF Message Message REQUEST_URI property with the value of Camel Exchange HTTP_PATH  even though Camel Exchange HTTP_URI is available The net effect is that the HTTP matrix parameters if any attached to the last HTTP path segment are lost  Another sideeffect is that Exchange HTTP_PATH will contain the decoded value  done at HTTPServletRequest level  which can lead to the matching issues at the JAXRS level A simple patch is attached   
0;Threads EIP hangs Junit tests using adviceWith   ;If the  threds    DSL keyword is used in a route and a Junit test is performed  the test hangs indefenitely The issue is descibed here  http  camel  n nabble comThreadsEIPhangsUnitTestsJUnittd htmlplease find attached a selfconsistent sample project to reproduce it    
0;Better error message when trying to write a null body as file   ;See nabblehttp  camel  n nabble comCantroutewsdlrequestintofiletp htmlWe should have a better error message instead of something about no type converter exception We could also consider an option to the file producer  to silently ignore writing files if there is no message body Finding a good name for this option is a challenge  skipNullBody ignoreWritingNullBody   
0;MQTT Endpoint does not correctly return the MQTTPayload   ;MQTT Endpoint does not correctly return the MQTTPayload  It returns the whole MQTT Message  header + payload  The bug is in line  of MQTTEndpoint java  version    but also in    exchange getIn   setBody body getData    must become exchange getIn   setBody body toByteArray     because getData   ignores the offset  to skip the MQTT header  set in the body byte array    
0;ObjectAlreadyExistsException when 'redeploying' routes that uses CronScheduledRoutePolicy   ;When a route that has a CronScheduledRoutePolicy is removed it does not properly clean up the quartz jobs  The result  apart from possible memory leak  is that if the route is removed from the context and then readded with the same route id a ObjectAlreadyExistsException This is done using the following steps   Stop the route  Remove the route  and it's endpoints  from the context    Re add the route to the context using the same name Attached is a testcase that shows the problem I've solved this by adding my own implementation of onRemove  that calls doStop    to CronScheduledRoutePolicy    
0;Simple does not handle empty values in predicates properly   ;Example code     lt choicegt  lt whengt  lt simplegt $ property someProperty     ''lt simplegt      lt whengt    Error message   right must be specified   
0;cameljms  Log at INFO level if shared replyTo queues are in use  as they are not as fast as temporary or exclusive queues   ;See nabblehttp  camel  n nabble comfyiSItp htmlWe should log at INFO  maybe even WARN level  if shared reply queues are in use as they are not as fast  They have their purposes though  such as a shared clustered queue  or if a queue is used by other apps too  not ideally thought   Temporary and Exclusive reply queues are faster See the JMS docs at the request reply section  for much more details    
0;Folder closed too early when working asynchronously   ;When using a MailConsumer connected with IMAP to a mailserver and routing the messages to SEDA or any other asynchronous endpoint  it can cause a com sun mail util FolderClosedIOException or javax mail FolderClosedException to happen if you are trying to process the mailsmessages attachments This is because the IMAP folder gets closed at the end of each MailConsumer poll  I propose to add a new MailConfiguration option 'closeFolder'  which can override this behaviour Here's an example on how to reproduce the problem   Scala code  sorry! But it should be selfexplanatory You need a couple of mails with attachments in your mailbox to test this  ~ mails should be enough to cause the exceptions import javax mail internet MimeMultipartimport org apache camel impl DefaultCamelContextimport org apache camel scala dsl builder RouteBuilderimport scala io Sourceobject Main    def main args   Array String     Unit     val camelContext   new DefaultCamelContext val host   'imap gmail com' val username   '*****@gmail com' val password   '*****'  this will cause com sun mail util FolderClosedIOException or javax mail FolderClosedException val endpoint   'imaps  'host'?password 'password'amp username 'username'amp folderName INBOXamp unseen falseamp disconnect falseamp mapMailMessage trueamp connectionTimeout '  with fix  new feature 'closeFolder' set to false val endpoint   'imaps  'host'?password 'password'amp username 'username'amp folderName INBOXamp unseen falseamp disconnect falseamp mapMailMessage trueamp connectionTimeout amp closeFolder false' camelContext addRoutes  new RouteBuilder   endpoint  to 'seda  process'  from 'seda  process?concurrentConsumers '    gt    process   ex  gt  val att   ex getIn getBody asInstanceOf[MimeMultipart] getBodyPart   println 'Attachment Name  ' + att getFileName  println 'Attachment Content  ' + att getDataHandler getContent  println 'Attachment Content  ' + Source fromInputStream att getDataHandler getInputStream  mkString  Thread sleep    simulate some work being done here with the attachment  takes time           camelContext start   Thread sleep  *   camelContext stop        
0;IOConverter toInputStream opens a BufferReader which will never be closed   ;If called with a nonnull charset IOConvert toInputStream returns a InputStream which will never close the opened BufferedReader    
0;cameljms consumer doesn't send back a reply in all cases   ;In a very simple route consuming from a Camel JMS endpoint receiving InOut exchanges  i e  JMSReplyTo header present   the endpoint will not send back replies This happens because Camel JMS only returns a reply if the OUT message is set  But if the route looks like   consumer  gt  processor  and Camel doesn't find the need to 'weave in' an implicit Pipeline processor  no one will implicitly take care of mapping the IN message to an OUT message  unless the user knows about these internal aspects  but we shouldn't expect them too  As a result  these routes DON'T WORK   lt routegt  lt from uri 'timer  foo?fixedRate trueamp amp period ' gt  lt setBodygt lt constantgt Hello Raullt constantgt lt setBodygt  lt to uri 'log  SendingRequest?showAll true' gt  lt inOut uri 'activemq  queue  test?requestTimeout ' gt  lt to uri 'log  ReceivedReply?showAll true' gt lt routegt  lt routegt  lt from uri 'activemq  queue  test' gt  lt to uri 'log  ReceivedRequest?showAll true' gt lt routegt     but just by adding an additional log endpoint to the second route  or any other thing  for that matter   it starts to work because Camel weaves in the Pipeline processor Other workarounds that work   explicitly wrapping the log endpoint in a lt pipelinegt  DSL lt setBodygt lt simplegt $ in body lt simplegt lt setBodygt Or simply introducing anything that will force Camel to insert a Pipeline processor IMHO  there are two solutions to avoid this issue   Always weave in a Pipeline processor  adds overhead in simple routes and may cause regressions  Adapt EndpointMessageListener to pick the IN message when the exchange is out capable and expectation of a reply existsI'm happy to work on a patch for Camel    EDIT   Just wrapping the single endpoint in lt pipeline gt  doesn't function as a workaround    
0;Support to build the camelsoap offline   ;camelsoap introduce soap xsd which has the import from the internet  it will cause some trouble when you build the camelsoap offline    
1;camelmybatis should do a proper transaction demarcation while readingwriting fromto database    ;See http  camel  n nabble comMyBatisComponentBugconsumeronConsumehitserrortransactionsarecommittedinsteadofrollbacktd htmlOther than DefaultMyBatisProcessingStrategy the same issue exists by MyBatisProducer as well Another thing which is currently missing completley is that there's no transaction demarcation by the Producer at all while reading from the database  e g  by SelectOne or SelectList statement types    
0;Add option to restrict HTTP method in cameljetty and camelservlet   ;See http  camel  n nabble comJettyconsumerrestrictingmethodstd html   
0;file endpoints on windows without volume name in the path url not working in some cases   ;I am using file endpoints on Windows without the volume name just like the normal unix based paths look That means  I have something like file  tmpfilein and file  tmpfileoutThe funny thing that I noticed is that each endpoint itself works fine  but when a route is set up from one to the other  it fails because there seems to be an inconsistency in the way the windows path is handled in the camelcore's file component As mentioned  each file endpoint itself is working fine  For example  the consumer file endpoint configured in a routefrom 'file  tmpfilein'  to 'mock  test' works fine Similarly  the produce file endpoint configured in a routefrom 'direct  test'  to 'file  tmpfileout' works fine But when a route is setup to connect these two file endpoints  the producer endpoint fails to create the output file Concretely  there is the following code in GenericFileEndpoint configureMessage that determines the file name  String name   file isAbsolute   ? file getAbsoluteFilePath      file getRelativeFilePath     skip leading endpoint configured directory String endpointPath   getConfiguration   getDirectory   + getFileSeparator   In this particular case  the name variable is set to 'C  tmpfileinsample xml' while the endpointPath variable is set to 'tmpfilein' So  the subsequent code to extract the file name part  shown below  fails to match the path  if  ObjectHelper isNotEmpty endpointPath  amp amp  name startsWith endpointPath     name   ObjectHelper after name  endpointPath    As a result  the file name is not extracted as 'sample xml' but remain unchanged as 'C  tmpfileinsample xml' Consequently  when the file producer endpoint tries to write this file in the file system  it tries to write a file as 'tmpfileoutC  tmpfileinsample xml'  resulting in an error I modified FileComponent and FileEndpoint so that the endpoint path is stored correctly in this case to make the above extraction code find the file name part correctly Attached is this proposed patch and a test case which runs on windows and on nonwindows but this issue can only be demonstrated under windows testRouteToFileOnly and testRouteFromFileOnly work without this patch while testRouteFileToFile fails without this patch on windows Thanks for looking into this issue Regards  Aki   
0;cameltestng  The spring base test class should use @AfterMethod on teardown as its parent does   ;See nabblehttp  camel  n nabble comProblemwithtestngCamelSpringTestSupportseveralcontextsrunssimultaneouslytp html   
0;Add option to changed readLock to denote whether a zero file size is accepted or not   ;Some people may write zero files and want them to be accepted    
0;'ThreadID is already used' exception under heavy load   ;In situations with heavy load or under load tests we rarely got exception          [oolthread] ERROR DefaultErrorHandler  Failed delivery for  MessageId   IDatitovpc on ExchangeId   IDatitovpc   Exhausted after delivery attempt    caught   java lang IllegalArgumentException   ThreadID is already usedjava lang IllegalArgumentException   ThreadID is already used at org jivesoftware smack ChatManager createChat ChatManager java    at org apache camel component xmpp XmppPrivateChatProducer getOrCreateChat XmppPrivateChatProducer java    at org apache camel component xmpp XmppPrivateChatProducer process XmppPrivateChatProducer java    at org apache camel util AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge process AsyncProcessorConverterHelper java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor SendProcessor$ doInAsyncProducer SendProcessor java    at org apache camel impl ProducerCache doInAsyncProducer ProducerCache java    at org apache camel processor SendProcessor process SendProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor DefaultChannel process DefaultChannel java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel processor RouteInflightRepositoryProcessor processNext RouteInflightRepositoryProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel component direct DirectProducer process DirectProducer java    at org apache camel processor UnitOfWorkProcessor processAsync UnitOfWorkProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor UnitOfWorkProducer process UnitOfWorkProducer java    at org apache camel impl ProducerCache$ doInProducer ProducerCache java    at org apache camel impl ProducerCache$ doInProducer ProducerCache java    at org apache camel impl ProducerCache doInProducer ProducerCache java    at org apache camel impl ProducerCache sendExchange ProducerCache java    at org apache camel impl ProducerCache send ProducerCache java    at org apache camel impl DefaultProducerTemplate send DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate sendBody DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate sendBody DefaultProducerTemplate java    at org apache camel component xmpp XmppProducerConcurrentTest$ call XmppProducerConcurrentTest java    at java util concurrent FutureTask$Sync innerRun FutureTask java    at java util concurrent FutureTask run FutureTask java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java          [oolthread] ERROR DefaultErrorHandler  Failed delivery for  MessageId   IDatitovpc on ExchangeId   IDatitovpc   Exhausted after delivery attempt    caught   java lang IllegalArgumentException   ThreadID is already usedjava lang IllegalArgumentException   ThreadID is already used at org jivesoftware smack ChatManager createChat ChatManager java    at org apache camel component xmpp XmppPrivateChatProducer getOrCreateChat XmppPrivateChatProducer java    at org apache camel component xmpp XmppPrivateChatProducer process XmppPrivateChatProducer java    at org apache camel util AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge process AsyncProcessorConverterHelper java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor SendProcessor$ doInAsyncProducer SendProcessor java    at org apache camel impl ProducerCache doInAsyncProducer ProducerCache java    at org apache camel processor SendProcessor process SendProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor DefaultChannel process DefaultChannel java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel processor RouteInflightRepositoryProcessor processNext RouteInflightRepositoryProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel component direct DirectProducer process DirectProducer java    at org apache camel processor UnitOfWorkProcessor processAsync UnitOfWorkProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor UnitOfWorkProducer process UnitOfWorkProducer java    at org apache camel impl ProducerCache$ doInProducer ProducerCache java    at org apache camel impl ProducerCache$ doInProducer ProducerCache java    at org apache camel impl ProducerCache doInProducer ProducerCache java    at org apache camel impl ProducerCache sendExchange ProducerCache java    at org apache camel impl ProducerCache send ProducerCache java    at org apache camel impl DefaultProducerTemplate send DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate sendBody DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate sendBody DefaultProducerTemplate java    at org apache camel component xmpp XmppProducerConcurrentTest$ call XmppProducerConcurrentTest java    at java util concurrent FutureTask$Sync innerRun FutureTask java    at java util concurrent FutureTask run FutureTask java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java    After debugging and looking at source code we figured out  that smack use some sort of map with week references for chat cache  When memory is low java GC discards chat instances  but in Process   method they instantiated over and over again without synchronization  XmppPrivateChatProducer java public void process Exchange exchange  {                           Chat chat = chatManager getThreadChat endpoint getChatId     if  chat == null  { LOG trace 'Creating new chat instance with thread ID {}'  endpoint getChatId     chat = chatManager createChat getParticipant    endpoint getChatId    new MessageListener   { public void processMessage Chat chat  Message message  { // not here to do conversation if  LOG isDebugEnabled    { LOG debug 'Received and discarding message from {}    {}'  getParticipant    message getBody     } } }   }                          } But smack implementation prohibits chat instances with same chatId    
0;Maven archetype  Generates wrong plugin for surefire plugin   ;The blueprint archetype creates wrong pom xml  The groupId for the surefire plugin is wrong    
0;Improve how the AWSSQS component create a new queue with additional attributes   ;   
0;Multiple restlet routes of the same restlet URI but different VERBs does not work in Apache Camel      both routes work in Apache Camel       ;Multiple restlet routes of the same restlet URI but different VERBs does not work in Apache Camel      both routes work in Apache Camel     Reproduce Steps    Add a restlet route with a from uri of restlet  nimbushello restlet ?restletMethods getlt route xmlns 'http  camel apache orgschemaspring' trace 'true' gt  lt from uri 'restlet  nimbushello restlet ?restletMethods get'gt  lt transformgt  lt simplegt Hello Restlet Method   $ header CamelHttpMethod  ID  $ header id lt simplegt  lt transformgt  lt routegt   Add a restlet route with a from uri of restlet  nimbushello restlet ?restletMethods post lt route xmlns 'http  camel apache orgschemaspring' trace 'true' gt  lt from uri 'restlet  nimbushello restlet ?restletMethods post'gt  lt transformgt  lt simplegt Hello Restlet Method   $ header CamelHttpMethod  ID  $ header id lt simplegt  lt transformgt  lt routegt   route work fine  but  results in the following exception  both route work fine in Camel    Exception         ERROR grails app service nimbus ComputeService localhost addRoute for hello restletpost failed  Failed to start route nimbus hello restletpost   because of Multiple consumers for the same endpoint is not allowed   Endpoint nimbushello restlet   Caused by   org apache camel FailedToStartRouteException   Failed to start route nimbus hello restletpost   because of Multiple consumers for the same endpoint is not allowed   Endpoint nimbushello restlet   at org apache camel impl DefaultCamelContext doStartOrResumeRouteConsumers    I've already posted on http  camel  n nabble comApacheCamelmultiplerestletroutesofthesamerestletURIbutdifferentVERBsdoesnotworktd html   
0;Possible issue in camelapns  Reported on user forum   ;See nabblehttp  camel  n nabble comIssuewithApnsServiceFactorytp html   
0;Mina Consumer doesn't reliably work with SSL   ;I've been trying to write a service using Camel    which uses the mina component to expose a service  and which uses SSL  using an endpoint of  mina  tcp  localhost  ?sync trueamp filters hlSslFilterFactory hlCodecFilteramp allowDefaultCodec falsehowever  what I found was that the SSL handshake was failing quite often for no apparent reason  Investigating further  it appeared that messages sent during the handshake were being processed out of order  specifically  when the client  which uses a standard java SSLSocket  sent a 'TLSv Change Cipher Spec' followed by a 'TLSv Handshake'  the 'TLSv Handshake' was being processed before the 'TLSv Change Cipher Spec'  breaking the process This appears to have been caused because when the the MinaConsumer configures MINA for tcp  in MinaConsumer setupSocketProtocol   it is using a UnorderedThreadPoolExecutor  which allows messages to be processed in any order  Switching this to use a OrderedThreadPoolExecutor instead has fixed the issue May I request that the use of UnorderedThreadPoolExecutor vs OrderedThreadPoolExecutor be configurable via endpoint parameters?  or OrderedThreadPoolExecutor is used when SSL if configured   I'm assuming the reason for the use of UnorderedThreadPoolExecutor is simply for performance    
0;File consumer  NPE if configured to consume from root directory   ;See nabblehttp  camel  n nabble comSettingrootfolderasendpointCouldnotpollendpointNPEtp html   
1;Support key password for private key access in XMLSecurity   ;Enhance the XMLSecurity component to enable access of a private key  for decryption  from a Java key store using a password that is unique to the key  and different than the key store password The likely solution is to allow an optional 'keyPassword' parameter in the XMLSecurity data format A description of the issue in context is here   http  camel  n nabble comXMLSecuritykeyrecoveryfailswhenkeystoreandkeyusedifferentpasswordstd html   
0;In ScheduledRoutePolicy a suspended route cannot be started   ;If a route is suspended using the ScheduledRoutePolicy and its subclasses  CronScheduledRoutePolicy   it cannot be resumed or started Looking at the code in ScheduledRoutePolicy onJobExecute    on startresume actions  the route status is first checked and must be stopped or suspended before any actions is taken Suspension of a route  only suspends the consumer and not the route  and hence the startresume after a suspend does nothing One solution could be to also check the status of the consumer on startresume  This would require adding a isSuspended   to serviceHelper and should be relatively straightforward    
0;camelbeanio using beanio   should be using the  beanio namespace   ;camelbeanio which uses beanio  x library should use the beanio  's namepsace  http  www beanio org  and not the   namespace   http  www beanio org  in its test cases The background to this is described in this mail thread http  camel  n nabble comissuewithcamelbeaniosversionusedintrunktd html   
0;Make Spring Optional Bundle Import for CXF Transport   ;The camelcxftransport component should define the Spring import packages as optional given they are only required if using the Spring DSL namespaces  If you are using Java DSL Spring is not required Best Regards Scott ES   
0;camelsftp's stepwise behavior to walk up and down relatively to avoid potential traversal issues   ;I am having a directory traversal problem using the stepwise mode of camelsftp at the producer side  Basically  it can walk down the path from the starting directory to the walking directory  but it cannot go back correctly to the original starting directly  The server is SSH Cleo VLProxy   SSH FTP server I saw a related JIRA issue CAMEL that describes some issues in the stepwise traversal and some background to this related problem My question is on the part that changes the working directory back to the original starting folder  I am wondering why we are using stepwise traversal from the ancestor directory towards the starting child directory  instead of moving upwards relatively from the working directory back to the starting directory  This reverse traversal does not require accessing the ancestry path above the staring directory  hence  not affected by the accessing problem   And in fact  I think this reverse stepwise traversal seems more natural order than doing stepwise traversal each time from top down  How do you think?I have made a change that implements this reverse stepwise traversal in SftpOperations and also made a few minor improvement changes This changed version passes all the existing tests and works also against the above server I am attaching a patch file for this change  I would appreciate if you can comment on it Thanks regards  aki   
0;Logger Level is always at default level 'ERROR'  when error handler is LoggingErrorHandler   ;when logger level is set to other level  WARN  DEBUG or INFO  except for ERROR  but actually the log is always at ERROR level  it's the default level     
0;cameljackson  Make it easier to support List as output out of the box   ;See nabblehttp  camel  n nabble comJSONJacksonreturnlistratherthanPOJOtp htmlWe should look into making it easier to output a List as output with jackson json  On the nabble link there is an example and pseduo code how to do that We should find a way to make that easy in Camel  Either as some new option  or somehow auto detect its a List etc    
0;camelhl bundle should specify the mina version   ;As there could be different version of mina or mina exist in the OSGi platform  we need to specify the right version rang on camelhl which has the dependency on the mina    
1;An exception when constructing JT endpoints should not leak the password   ;Sanitize the endpoint URI in the message of the runtime exception thrown in the constructors for JtDataQueueEndpoint and JtPgmEndpoint    
0;JmsToJmsTransactedSecurityTest in cameljms fails every now and then   ;Test JmsToJmsTransactedSecurityTest fails every now and then because of JMS message redelivery  When the entire test class is executed  it sometimes happens that the message that failed at testJmsSecurityFailure test method pops up in the assertions of testJmsSecurityOK    
0;EventHelper notifyRouteStarted skips all remaining notifiers if one if the notifiers ignores route events   ;Having two or more notifiers registered at the management strategy of a camel context  where one of the notifiers  not the last one  is set up to ignore route events  results in all remaining notifiers to be skipped when notifying a RouteStartedEvent Look at http  svn apache orgviewvccamelbranchescamel  xcamelcoresrcmainjavaorgapachecamelutilEventHelper java?revision amp view markup  line    There's a 'return' which actually should be a 'continue' Note   CamelContextStoppingEvents are also affected    
0;ObjectHelper resolveUriPath is broken  can not handle    '    ' correctly   ;In my xslfiles I have imports and includes that resides in folders a few levels up Ex   lt xsl  include href '    commonmyfunctions xsl'gt When camel starts up and tries to resolve the paths it crashes because of the current implementation in ObjectHelper resolveUriPath    Made a simple testcase that demonstrates my problem public void testResolveUriPath   throws Exception   assertEquals 'xslt'  ObjectHelper resolveUriPath 'xsltone  '     OK assertEquals 'xslt'  ObjectHelper resolveUriPath 'xsltone  two  '     OK assertEquals 'xslt'  ObjectHelper resolveUriPath 'xslt'     OK assertEquals ''  ObjectHelper resolveUriPath ' '     OK assertEquals 'xslt'  ObjectHelper resolveUriPath 'xsltonetwo    '     Fails  gives 'xsltone ' assertEquals 'xslt'  ObjectHelper resolveUriPath 'xsltonetwo     '    Fails  gives 'xsltone '     
0;Enricher with async routing not handling exceptions thrown from AggregationStrategy   ;The Enricher does not handle exceptions thrown from the AggregationStrategy when the async routing engine has kicked in  It leads to the following thread dump  callback thread remains blocked forever 'Camel  context  thread   JmsConsumer[queue]' daemon prio  tid  nid xc waiting on condition [c] java lang Thread State   WAITING  parking  at sun misc Unsafe park Native Method   parking to wait for lt fdadegt   a java util concurrent CountDownLatch$Sync  at java util concurrent locks LockSupport park LockSupport java    at java util concurrent locks AbstractQueuedSynchronizer parkAndCheckInterrupt AbstractQueuedSynchronizer java    at java util concurrent locks AbstractQueuedSynchronizer doAcquireSharedInterruptibly AbstractQueuedSynchronizer java    at java util concurrent locks AbstractQueuedSynchronizer acquireSharedInterruptibly AbstractQueuedSynchronizer java    at java util concurrent CountDownLatch await CountDownLatch java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel component jms EndpointMessageListener onMessage EndpointMessageListener java    at org springframework jms listener AbstractMessageListenerContainer doInvokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer invokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer doExecuteListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer doReceiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer receiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker invokeListener DefaultMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker executeOngoingLoop DefaultMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker run DefaultMessageListenerContainer java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java      
0;EIPs using custom aggregation strategy should fail if not possible to find in registry   ;Some EIPs support using a custom aggregations strategy  And if you use XML DSL to refer to a custom strategy  then you may have typo  or the strategy do not implement the interface What we should do is to ensure to fail if the custom strategy could not be looked up  Some EIPs such as the content enricher will fallback and use a default strategy  This is wrong    
0;Camel Endpoint ignores camelContextId property in Spring configuration   ;Camel Endpoint  if configured outside camelContext element in Spring configuration  ignores camelContextId property  Steps to reproduce   Configure two contexts in spring configuration  Then in the same config file configure two endpoints outside camelContext  but with camelContextId specified  Both endpoints will be created pointing to the same  first  camel context  despite being configured to different contexts  Attempting to use them by reference results in failure  as endpoint camelContext doesn't match the expected one    
0;Recipient list EIP  Should shutdown thread pool if parallel mode enabled   ;We should shutdown the thread pool for recipient list if a pool was in use  and it can be shutdown The logic in doShutdown is missing that Camel would though have a failsafe when it shutdown itself to shutdown that pool otherwise  But we should shutdown when the EIP is shutdown itself    
0;camelmqtt  Nullpointer Exception when disconnected from broker   ;Hi  from time to time  we get the following exception when producing messages via camelmqtt  Caused by   java lang NullPointerException at org fusesource mqtt client CallbackConnection publish CallbackConnection java    at org fusesource mqtt client CallbackConnection publish CallbackConnection java    at org apache camel component mqtt MQTTEndpoint publish MQTTEndpoint java    at org apache camel component mqtt MQTTProducer doProcess MQTTProducer java    at org apache camel component mqtt MQTTProducer process MQTTProducer java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java   [   ]From looking at the source of both camelmqtt and the fusesource mqtt client  it looks like that this is caused by the mqttclient being disconnected and trying to invoke the onFailure method on the callback  CallbackConnection javapublic void publish UTFBuffer topic  Buffer payload  QoS qos  boolean retain  Callbacklt Voidgt  cb    queue assertExecuting    if  disconnected     cb onFailure createDisconnectedError     return    PUBLISH command   new PUBLISH   qos qos  retain retain   command topicName topic  payload payload   send command  cb    camelmqtt passes in null for the callback though  Wouldn't it be better if a more fitting exception were thrown  or if camel passed in a Callback in order to receive the onFailure event when disconnected from the broker?   
0;Using recipient list in a doTry     doCatch situation dont work properly   ;See nabblehttp  camel  n nabble comIssuewithdoTrydoCatchnotroutingcorrectlytp htmlThe end user would expect that doTry    doCatch will overrule  However it gets a bit further more complicated if the try block routes to other routes and using EIPs such as recipient list    
0;Netty  Should use ordered thread pool   ;We should favor using OrderedMemoryAwareThreadPoolExecutor andOrderedDownstreamThreadPoolExecutor to ensure ordering of events in a channel See nabblehttp  camel  n nabble comNettyorMinaAsyncinthesamesockettp htmlWe can add an option so people can turn it off  like we did for mina    
0;cameljms  Should also allow multiple consumers from multiple routes from the same queue   ;If having + routes that consumes from the same queue  then that should be allowed Its a bit unusual though for queues in Camel as you most likely want to use the same route for the same queue  But there is nothing in the JMS spec that forbids this    
0;camelnetty  The ordered thread pool should be shared   ;Related to CAMELThe ordered memory thread pool from Netty is intended to be shared per application  And not per consumer    
0;NotifyBuilder should be thread safe   ;In high concurrent tests the NotifyBuilder may miss a counter    
0;Rest route returns response with http Status code  Internal Server Error when response has LastModified or Headerexpires in header as string    ;Rest route returns Response with http Status code  Internal Server Error and expected response headersbody when response has LastModified or Headerexpires in header as string  I found the issue in below code it try to convert string Wed   Dec       CS to Date and it fails  Is it posible to convert String Date without knowing Date format?DefaultRestletBinding                        if  header equalsIgnoreCase HeaderConstants HEADER_LAST_MODIFIED     if  value instanceof Calendar    message getEntity   setModificationDate   Calendar  value  getTime       else if  value instanceof Date    message getEntity   setModificationDate  Date  value     else   Date date   exchange getContext   getTypeConverter   mandatoryConvertTo Date class  value    Here it try to convert String to Date it throws No type converter available to convert from type   java lang String to the required type   java util Date with value Wed   Dec       CS message getEntity   setModificationDate date      Stack trace            Oct        WARN org restlet Component StatusFilter  Exception or error caught in status serviceorg apache camel RuntimeCamelException   Cannot process request at org apache camel component restlet RestletConsumer$ handle RestletConsumer java    at org apache camel component restlet MethodBasedRouter handle MethodBasedRouter java    at org restlet routing Filter doHandle Filter java    at org restlet routing Filter handle Filter java    at org restlet routing Router doHandle Router java    at org restlet routing Router handle Router java    at org restlet routing Filter doHandle Filter java    at org restlet routing Filter handle Filter java    at org restlet routing Router doHandle Router java    at org restlet routing Router handle Router java    at org restlet routing Filter doHandle Filter java    at org restlet engine application StatusFilter doHandle StatusFilter java    at org restlet routing Filter handle Filter java    at org restlet routing Filter doHandle Filter java    at org restlet routing Filter handle Filter java    at org restlet engine ChainHelper handle ChainHelper java    at org restlet Component handle Component java    at org restlet Server handle Server java    at org restlet engine ServerHelper handle ServerHelper java    at org restlet engine http HttpServerHelper handle HttpServerHelper java    at org restlet ext servlet ServerServlet service ServerServlet java    at org apache shiro grails SavedRequestFilter doFilter SavedRequestFilter java    at org apache shiro web servlet AbstractShiroFilter executeChain AbstractShiroFilter java    at org apache shiro web servlet AbstractShiroFilter$ call AbstractShiroFilter java    at org apache shiro subject support SubjectCallable doCall SubjectCallable java    at org apache shiro subject support SubjectCallable call SubjectCallable java    at org apache shiro subject support DelegatingSubject execute DelegatingSubject java    at org apache shiro web servlet AbstractShiroFilter doFilterInternal AbstractShiroFilter java    at org apache shiro web servlet OncePerRequestFilter doFilter OncePerRequestFilter java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java   Caused by   org apache camel NoTypeConversionAvailableException   No type converter available to convert from type   java lang String to the required type   java util Date with value Wed   Dec       CST at org apache camel impl converter BaseTypeConverterRegistry mandatoryConvertTo BaseTypeConverterRegistry java      
0;BlueprintCamelContext should not get started in the init   method but later when the blueprint container is fully initialized   ;The init   method in BlueprintCamelContext should not call maybeStart    but instead should be started when the blueprint container is done doing all its dance and initialization For example Spring sends on ContextRefreshedEvent when its done We need something similar for blueprint to tell us when its done doing its initialization et all The problem is that the CamelContext should not be started until all that other stuff is initialized as well    
0;Classloader mixup when consumers across bundles share the same cameljetty port   ;Happens in an OSGi environment  but it is also applicable in modular servers that build dynamic classloaders  e g  JBoss AS  per deployed artifacts  WAR  module  EAR  etc   If bundles A and B are both creating cameljetty consumers on the same TCP port  the consumers will share the underlying Jetty connector  Moreover  the Jetty connector is indeed created by the first consumer that initialises on that TCP port Since the Camel route executes on the Jetty Connector thread  all class resolutions will happen against the classloader of the bundle that initialises first This makes class resolution absolutely undeterministic and erratic  Quite a nasty bug IMHO Perhaps this can be fixed by adding a call to Thread setContextClassLoader   passing the classloader of the JettyHttpEndpoint  as soon as a request comes in?   
0;SpringWS consumer and producer do not propagate some custome headers and attachements to a response message   ;Hi!I wanted to send back as response or as a request some soap messages with modified header I found out that SpringWebserviceProducer and SpringWebserviceConsumer do not populate a soap header for any outgoing message from a camel exchange In the attachments I am sending you a patch against camelspringws    that solves this issue Please let me know  what do you think about it Best regards Andrej   
0;HTTP   Host header not set correctly with camelhttp   ;The HTTP   Host header is not set correctly when using the camelhttp component as a proxy with bridgeEnpoint true The original request Host header is set in the proxied request instead of the host of the service requested by the proxy  ref   http  www w orgProtocolsrfcrfcsec html section    This simple route shows the problem   lt route autoStartup 'true' id 'TestHost' xmlns  ns 'http  camel apache orgschemaweb' xmlns 'http  camel apache orgschemaspring'gt  lt from uri 'jetty  http       TestHost'gt  lt to uri 'https  www google com?bridgeEndpoint trueamp throwExceptionOnFailure false'gt  lt routegt  This is what I get in the log  INFO | jvm  |       | [ qtp  TestHost] DefaultClientConnection DEBUG Sending request   GET  HTTP INFO | jvm  |       | [ qtp  TestHost] wire DEBUG gt gt  'GET  HTTP  r  n 'INFO | jvm  |       | [ qtp  TestHost] wire DEBUG gt gt  'breadcrumbId   IDlocalhost r  n 'INFO | jvm  |       | [ qtp  TestHost] wire DEBUG gt gt  'UserAgent   Mozilla   Windows NT    WOW  rv     Gecko Firefox  r  n 'INFO | jvm  |       | [ qtp  TestHost] wire DEBUG gt gt  'AcceptEncoding   gzip  deflate r  n 'INFO | jvm  |       | [ qtp  TestHost] wire DEBUG gt gt  'Host   localhost   r  n 'INFO | jvm  |       | [ qtp  TestHost] wire DEBUG gt gt  'Accept   texthtml applicationxhtml+xml applicationxml q    q   r  n 'INFO | jvm  |       | [ qtp  TestHost] wire DEBUG gt gt  'AcceptLanguage   enus en q   r  n 'INFO | jvm  |       | [ qtp  TestHost] wire DEBUG gt gt  'Connection   KeepAlive r  n 'INFO | jvm  |       | [ qtp  TestHost] wire DEBUG gt gt  ' r  n '   
0;Update SqsConsumer to extend Visibility Timeout correctly   ;Currently SqsConsumer will scheduled a future to happen start occruing  the visibility timeout  and reoccur again at the visibility timeout period  Because of the way SQS works  when you request a ChangeMessageVisibility timeout it does not add that to the time remaining on the message visibility  Instead it will set the message visibility to the time out given  This means that what actually happens in the camel code is that   we request the ChangeMessageVisibility timeout to be set to X seconds from now after X seconds then every X seconds after that we we request the ChangeMessageVisibility timeout to be set to X from nowThis means that our message will become visible every now and again as the ChangeMessageVisibility timeout is not updated in time as period between successive executions is the same as the timeout period we request I've attached two patches which would fix this issue  'aws_sqs_visibility_timeout_simple patch'  This patch changes the way we set up the future  The delay and period are now the same so that we call ChangeMessageVisibility every X after the message has been pulled  'aws_sqs_visibility_timeout_phased_timeout patch'  This one keeps the delay to  the period and requests ChangeMessageVisibility every period  This time though it requests the visibility to be   * the period  This means that it behaves as originally planned  as if it was adding duration to the visibility duration left  This means we call Amazon less times and still keep the message hidden as expected This was looked at with Alex Hutter  both working on same project     
0;Configuring jetty component with a different name dont work with jetty consumer   ;For example if you do lt routegt  lt from uri 'jetty  http  localhost  myapp'gt  lt transformgt  lt simplegt Hello $ body lt simplegt  lt transformgt  lt routegt Then it fails withjava net SocketException   Unresolved address at sun nio ch Net translateToSocketException Net java    at sun nio ch Net translateException Net java    at sun nio ch Net translateException Net java    at sun nio ch ServerSocketAdaptor bind ServerSocketAdaptor java    at org eclipse jetty server nio SelectChannelConnector open SelectChannelConnector java    at org eclipse jetty server AbstractConnector doStart AbstractConnector java    at org eclipse jetty server nio SelectChannelConnector doStart SelectChannelConnector java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server Server doStart Server java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org apache camel component jetty JettyHttpComponent connect JettyHttpComponent java    at org apache camel component http HttpEndpoint connect HttpEndpoint java    at org apache camel component http HttpConsumer doStart HttpConsumer java    at org apache camel support ServiceSupport start ServiceSupport java         
0;Camel Splitter eat up exceptions recorded by the underlying Scanner   ;See http  camel  n nabble comTroublewithsplittokenizeonlinuxtd html for details   
0;Camel JMS producer can block a thread under specific circumstances   ;This is an edge case  but when the following circumstances concur  the asynchronous routing engine in Camel become blocked   Sending an InOut exchange over JMS  requestreply   where   Persistent messages are enabled  deliveryPersistent true  useMessageIDasCorrelationID is enabled replyToType is Temporary queues  default   using TemporaryQueueReplyManager  a timeout is setYou have to be really unlucky  but if the following condition is satisfied  a thread will become blocked  time the broker takes to ACK the produced message gt  message timeoutHence  if we have a timeout of ms  and the broker takes ms to ACK the message  e g  slow Disk IO while the journal is rotating  it happened to us   at some point we'll see this        | WARN | CorrelationMap |   org apache camel camelcore     fuse | Exception occurred during purge task  This exception will be ignored java lang NullPointerExceptionThe CorrelationMap is rendered useless  so if subsequent exchanges time out  the ReplyHandler may never get an onTimeout callback  thus leading to the waiting thread getting blocked forever if the async routing engine was in place    
0;RoutePolicySupport should provide some easy to use utility methods to suspendresume routes as we have it already to startstop routes   ;   
0;ActiveMQ target endpoint with transferExchange true does not work together with source File endpoint with preMove option set   ;Got failure on a simple route reading from file and sending to ActiveMQ queue On source File endpoint set preMove option to some folder  and on target activemq endpoint set transferExchange true It fails with FileNotFound exception  trying to read file from original location  not from temporary preMoved one Without preMove all works perfect Simplified Spring application context with Camel routes looks like this  lt ?xml version ' ' encoding 'UTF'?gt lt beans xmlns 'http  www springframework orgschemabeans' xmlns  xsi 'http  www w orgXMLSchemainstance' xsi  schemaLocation ' http  www springframework orgschemabeans http  www springframework orgschemabeansspringbeans  xsd http  camel apache orgschemaspring http  camel apache orgschemaspringcamelspring xsd'gt  lt bean id 'brokerService' class 'org apache activemq broker BrokerService' initmethod 'start' destroymethod 'stop'gt  lt property name 'brokerName' value 'localhost' gt  lt property name 'useJmx' value 'false' gt  lt property name 'transportConnectorURIs'gt  lt listgt  lt valuegt vm  localhostlt valuegt  lt listgt  lt propertygt  lt beangt  lt bean id 'jmsConnectionFactory' class 'org apache activemq ActiveMQConnectionFactory' dependson 'brokerService'gt  lt property name 'brokerURL' value 'vm  localhost'gt  lt property name 'redeliveryPolicy' ref 'redeliveryPolicyConfigActiveMQ'gt  lt beangt  lt bean id 'pooledConnectionFactory' class 'org apache activemq pool PooledConnectionFactory' initmethod 'start' destroymethod 'stop'gt  lt property name 'maxConnections' value '' gt  lt property name 'maximumActive' value '' gt  lt property name 'connectionFactory' ref 'jmsConnectionFactory' gt  lt beangt  lt bean id 'redeliveryPolicyConfigActiveMQ' class 'org apache activemq RedeliveryPolicy'gt  lt property name 'maximumRedeliveries' value ''gt  lt property name 'redeliveryDelay' value ''gt  lt beangt  lt camelContext id 'testCustomer' xmlns 'http  camel apache orgschemaspring'gt  lt endpoint id 'sourceEndpoint' uri 'file  e  workidstestCustomerinput?preMove  tmpamp delay amp readLock renameamp copyAndDeleteOnRenameFail falseamp move  archiveamp moveFailed  failed' gt  lt endpoint id 'destJms' uri 'activemq  queue  source?transferExchange trueamp connectionFactory pooledConnectionFactory' gt  lt route id 'testRoute'gt  lt from ref 'sourceEndpoint' gt  lt to ref 'destJms' gt  lt routegt  lt camelContextgt lt beansgt Exception trace  org apache camel TypeConversionException   Error during type conversion from type   java io File to the required type   byte[] with value e  workidstestCustomerinputpayment xml due java io FileNotFoundException   e  workidstestCustomerinputpayment xml  The system cannot find the file specified  at com it ids exceptions HandleException process HandleException java    at org apache camel util AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge process AsyncProcessorConverterHelper java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor DefaultChannel process DefaultChannel java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor Pipeline process Pipeline java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor FatalFallbackErrorHandler processNext FatalFallbackErrorHandler java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor RedeliveryErrorHandler deliverToFailureProcessor RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor DefaultChannel process DefaultChannel java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor UnitOfWorkProcessor processAsync UnitOfWorkProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel processor RouteInflightRepositoryProcessor processNext RouteInflightRepositoryProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel component file GenericFileConsumer processExchange GenericFileConsumer java    at org apache camel component file GenericFileConsumer processBatch GenericFileConsumer java    at org apache camel component file GenericFileConsumer poll GenericFileConsumer java    at org apache camel impl ScheduledPollConsumer doRun ScheduledPollConsumer java    at org apache camel impl ScheduledPollConsumer run ScheduledPollConsumer java    at java util concurrent Executors$RunnableAdapter call Executors java    at java util concurrent FutureTask$Sync innerRunAndReset FutureTask java    at java util concurrent FutureTask runAndReset FutureTask java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask access$ ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask runPeriodic ScheduledThreadPoolExecutor java    at java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask run ScheduledThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java   Caused by   org apache camel RuntimeCamelException   java io FileNotFoundException   e  workidstestCustomerinputpayment xml  The system cannot find the file specified  at org apache camel util ObjectHelper wrapRuntimeCamelException ObjectHelper java    at org apache camel util ObjectHelper invokeMethod ObjectHelper java    at org apache camel impl converter StaticMethodTypeConverter convertTo StaticMethodTypeConverter java    at org apache camel impl converter BaseTypeConverterRegistry doConvertTo BaseTypeConverterRegistry java    at org apache camel impl converter BaseTypeConverterRegistry mandatoryConvertTo BaseTypeConverterRegistry java    at org apache camel component file FileBinding loadContent FileBinding java    at org apache camel component file GenericFileConverter genericFileToInputStream GenericFileConverter java    at org apache camel component file GenericFileConverter genericFileToSerializable GenericFileConverter java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org apache camel util ObjectHelper invokeMethod ObjectHelper java    at org apache camel impl converter StaticMethodTypeConverter convertTo StaticMethodTypeConverter java    at org apache camel impl converter BaseTypeConverterRegistry doConvertTo BaseTypeConverterRegistry java    at org apache camel impl converter BaseTypeConverterRegistry convertTo BaseTypeConverterRegistry java    at org apache camel impl DefaultExchangeHolder checkMapSerializableObjects DefaultExchangeHolder java    at org apache camel impl DefaultExchangeHolder safeSetProperties DefaultExchangeHolder java    at org apache camel impl DefaultExchangeHolder marshal DefaultExchangeHolder java    at org apache camel impl DefaultExchangeHolder marshal DefaultExchangeHolder java    at org apache camel component jms JmsBinding createJmsMessage JmsBinding java    at org apache camel component jms JmsBinding makeJmsMessage JmsBinding java    at org apache camel component jms JmsProducer$ createMessage JmsProducer java    at org apache camel component jms JmsConfiguration$CamelJmsTemplate doSendToDestination JmsConfiguration java    at org apache camel component jms JmsConfiguration$CamelJmsTemplate access$ JmsConfiguration java    at org apache camel component jms JmsConfiguration$CamelJmsTemplate$ doInJms JmsConfiguration java    at org springframework jms core JmsTemplate execute JmsTemplate java    at org apache camel component jms JmsConfiguration$CamelJmsTemplate send JmsConfiguration java    at org apache camel component jms JmsProducer doSend JmsProducer java    at org apache camel component jms JmsProducer processInOnly JmsProducer java    at org apache camel component jms JmsProducer process JmsProducer java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor SendProcessor$ doInAsyncProducer SendProcessor java    at org apache camel impl ProducerCache doInAsyncProducer ProducerCache java    at org apache camel processor SendProcessor process SendProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java         moreCaused by   java io FileNotFoundException   e  workidstestCustomerinputpayment xml  The system cannot find the file specified  at java io FileInputStream open Native Method  at java io FileInputStream lt initgt  FileInputStream java    at org apache camel converter IOConverter toInputStream IOConverter java    at org apache camel converter IOConverter toByteArray IOConverter java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org apache camel util ObjectHelper invokeMethod ObjectHelper java         more   
0;limitaions on s component  no means to specify acl on created object  objects do not inherit acl from the bucket they belong to    ;When using s component to create new object on amazon bucket  there is no means to specify acl that will be applied to this newly created object  s objects do not inherit acl applied to the bucket they belong to  in s camel component  enpoint  we can specify bucket policy but not objects acl the limitation is in sproducer there is an attachment file  patch  to fix this quickly and whith little modifications to the existing code  but i think that we need to enhance the design of this component to be more flexible and rely on strategy that executes requests to interact with s for now there is no tests for sproducer in camelaws thus i don't supply a unit test if we enhance the design we can change or improve this layer with less effort  and we can do tests obviously    
0;regression    invalid SetQueueAttributesRequest created  works on      ;In org apache camel component aws sqs SqsEndpoint updateQueueAttributes if I don't have any configuration  the created SetQueueAttributesRequest contains a null atttribute collection and AWS emit an error In     no problem Workaround in       force the create SetQueueAttributesRequest to contain a valid attribute collection by defining a configuration in camel  For exemple   from 'awssqs  'queue'?amazonSQSClient amazonSQSClientamp delay 'pollCycle getMillis  'amp maxMessagesPerPoll amp deleteAfterRead false'   gt  works on     fail on   if I add an argument to my URI'amp defaultVisibilityTimeout '  gt  works on     works on   Exception      Caused by   org apache camel FailedToCreateRouteException   Failed to create route SQStoMongoDBEVENTS   Route[[From[awssqs  EVENTS?amazonSQSClient amazonSQSClien    because of Failed to resolve endpoint   awssqs  EVENTS?amazonSQSClient amazonSQSClientamp delay amp deleteAfterRead falseamp maxMessagesPerPoll  due to   The request must contain the parameter Attribute Name  at org apache camel model RouteDefinition addRoutes RouteDefinition java    ~ camelcore   jar      at org apache camel impl DefaultCamelContext startRoute DefaultCamelContext java    ~ camelcore   jar      at org apache camel impl DefaultCamelContext startRouteDefinitions DefaultCamelContext java    ~ camelcore   jar      at org apache camel impl DefaultCamelContext doStartCamel DefaultCamelContext java    ~ camelcore   jar      at org apache camel impl DefaultCamelContext doStart DefaultCamelContext java    ~ camelcore   jar      at org apache camel support ServiceSupport start ServiceSupport java    ~ camelcore   jar      at org apache camel impl DefaultCamelContext start DefaultCamelContext java    ~ camelcore   jar      at com netceler ivmeasure contract impl sqs CamelRoutesLauncher start CamelRoutesLauncher java    ~ webapp  SNAPSHOT jar    SNAPSHOT  at com netceler ivmeasure contract impl config ConfiguredStreamInitializer startStreams ConfiguredStreamInitializer java    ~ webapp  SNAPSHOT jar    SNAPSHOT       common frames omittedCaused by   org apache camel ResolveEndpointFailedException   Failed to resolve endpoint   awssqs  EVENTS?amazonSQSClient amazonSQSClientamp delay amp deleteAfterRead falseamp maxMessagesPerPoll  due to   The request must contain the parameter Attribute Name  at org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java    ~ camelcore   jar      at org apache camel util CamelContextHelper getMandatoryEndpoint CamelContextHelper java    ~ camelcore   jar      at org apache camel model RouteDefinition resolveEndpoint RouteDefinition java    ~ camelcore   jar      at org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java    ~ camelcore   jar      at org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java    ~ camelcore   jar      at org apache camel model FromDefinition resolveEndpoint FromDefinition java    ~ camelcore   jar      at org apache camel impl DefaultRouteContext getEndpoint DefaultRouteContext java    ~ camelcore   jar      at org apache camel model RouteDefinition addRoutes RouteDefinition java    ~ camelcore   jar      at org apache camel model RouteDefinition addRoutes RouteDefinition java    ~ camelcore   jar           common frames omittedCaused by   com amazonaws AmazonServiceException   The request must contain the parameter Attribute Name  at com amazonaws http AmazonHttpClient handleErrorResponse AmazonHttpClient java    ~ awsjavasdk   jar  na  at com amazonaws http AmazonHttpClient executeHelper AmazonHttpClient java    ~ awsjavasdk   jar  na  at com amazonaws http AmazonHttpClient execute AmazonHttpClient java    ~ awsjavasdk   jar  na  at com amazonaws services sqs AmazonSQSClient invoke AmazonSQSClient java    ~ awsjavasdk   jar  na  at com amazonaws services sqs AmazonSQSClient setQueueAttributes AmazonSQSClient java    ~ awsjavasdk   jar  na  at com netceler infra aws sqs JMXSQS setQueueAttributes JMXSQS java    ~ infrasqs  SNAPSHOT jar    SNAPSHOT  at com netceler infra aws sqs AmazonSQSClientProxy setQueueAttributes AmazonSQSClientProxy java    ~ infrasqs  SNAPSHOT jar    SNAPSHOT  at org apache camel component aws sqs SqsEndpoint updateQueueAttributes SqsEndpoint java    ~ camelaws   jar      at org apache camel component aws sqs SqsEndpoint doStart SqsEndpoint java    ~ camelaws   jar      at org apache camel support ServiceSupport start ServiceSupport java    ~ camelcore   jar      at org apache camel impl DefaultCamelContext startService DefaultCamelContext java    ~ camelcore   jar      at org apache camel impl DefaultCamelContext doAddService DefaultCamelContext java    ~ camelcore   jar      at org apache camel impl DefaultCamelContext addService DefaultCamelContext java    ~ camelcore   jar      at org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java    ~ camelcore   jar           common frames omitted     
0;option to add bundle directives in the generated test bundles by cameltestblueprint   ;The generated test bundle by cameltestblueprint has the plain test class name as the bundle symbolic name in its manifest Some test cases may require bundle directives to be added to the bundle symbolic name entry in the manifest One such test case is for disabling xml validation To support such blueprint test cases  I would like to add an option in CamelBlueprintTestSupport to customize the bundle directives    
0;Adding blueprint based camelcxf tests using cameltestblueprint   ;Adding some blueprint scenario tests for camelcxf using cameltestblueprint I put this in a separate testonly component under the tests folder  I can't put the test classes directly within camelcxf because of the way how the bundle context is generated  namely the jars on the classpath are scanned and added to the context  Hence  the tests are in a separate component that refer to all the bundle jars that they need I don't know if the tests folder is the the right location for this test component  though    
0;camelmongodb  Add converters for files or inputstreams   ;Inserting files into MongoDB doesn't work like this  from 'file  tmptestapachecon?runLoggingLevel TRACE'   to 'mongodb  connectionBean?database xamp collection yamp operation insert'  It requires an explicit  convertBodyTo String class   The attached patch adds Converter  s for File and InputStream object  detecting and supporting both   JSON and BSON filesstreams The new String input  'utf'   fragment seems a bit dodgy  but I don't really see a better way    
0;Regression in validator component in      ;I get  CaughtExceptionType  java lang NullPointerException  CaughtExceptionMessage  null  StackTrace  java lang NullPointerException at org apache camel converter jaxp XmlConverter toStreamSource XmlConverter java    at org apache camel converter jaxp XmlConverter toSAXSource XmlConverter java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org apache camel util ObjectHelper invokeMethod ObjectHelper java    at org apache camel impl converter InstanceMethodTypeConverter convertTo InstanceMethodTypeConverter java    at org apache camel support TypeConverterSupport convertTo TypeConverterSupport java    at org apache camel processor validation ValidatingProcessor getSource ValidatingProcessor java    at org apache camel processor validation ValidatingProcessor process ValidatingProcessor java    at org apache camel impl ProcessorEndpoint onExchange ProcessorEndpoint java    at org apache camel impl ProcessorEndpoint$ process ProcessorEndpoint java    at org apache camel util AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge process AsyncProcessorConverterHelper java    atorg apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor SendProcessor$ doInAsyncProducer SendProcessor java    at org apache camel impl ProducerCache doInAsyncProducer ProducerCache java    at org apache camel processor SendProcessor process SendProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    when I upgrade camel to    and use the validator component  lt camel  to uri 'validator  METAINFxsdtransactiongatetransfertransaction xsd' gt this did not happen in    or versions before that    
0;PreXSLT and Validator Type Conversions from byte[] may easily fail   ;XsltBuilder getSource Exchange e  Object o  tries to convert the payload to a Source  If you have a byte[] payload  then the following type converter will likely be picked  InstanceMethodTypeConverter   public javax xml transform sax SAXSource org apache camel converter jaxp XmlConverter toSAXSource byte[] org apache camel Exchange  throws java io IOException org xml sax SAXException javax xml transform TransformerExceptionThis type converter requires the Exchange  InstanceMethodTypeConverter useExchange    true   but line  of XsltBuilder doesn't pass it on Therefore  a NullPointerException happens because the conversion method tries to access the Exchange    
0;camelquickfix   QuickfixjEndpoint should adhere the InOut exchange pattern if you would ask for this MEP   ;See http  camel  n nabble comcamelquickfixRequestReplyExamplejavaioIOExceptiontd html   
0;FTP endpoints should support charset property like File endpoint does   ;FTP endpoints should support charset property like the File endpoint does  Currently you have to remember to set the CamelCharsetName Exchange property if you want to have the message body transformed to another charset See http  camel  n nabble comProblemwFTPproducerandcharsettd htmlI'll work on a patch and attach it later    
0;File consumer  When using done file name then delete the file when batch is complete   ;When using doneFileName then the file is deleted on each completion of files in the batch  And you get WARN logs about the done file cannot be deleted  because the st already deleted the file We should defer and only delete the done file on the last in the batch    
1;When call removeRouteDefinition the route doesn't removed from collection of route Definitions    ;When I call removeRouteDefinition for DefaultCamelContext  the route doesn't removed from collection of routes  public synchronized void removeRouteDefinition RouteDefinition routeDefinition  throws Exception   String id   routeDefinition idOrCreate nodeIdFactory   stopRoute id   removeRoute id    it is just remove it from running route service if context is running When we do restart context this route started again  Workaround for this issue is call removeRouteDefinitions and wrap single route into collection But when I call removeRouteDefinitions  it is process correctly   remove from collections of definitions and after removed from running route services  public synchronized void removeRouteDefinitions Collectionlt RouteDefinitiongt  routeDefinitions  throws Exception   this routeDefinitions removeAll routeDefinitions   for  RouteDefinition routeDefinition    routeDefinitions    removeRouteDefinition routeDefinition         
0;Scala DSL   no tokenize '   '  method   ;This is related to issue https  issues apache orgjirabrowseCAMELIt looks like the fix included tokenizeXML   method  but there is still not tokenize    I have a usecase where I have to split my in message body  text  by semicolon character for downstream processing  so I need to be able to do something like the following in Scala DSL  split _ in  tokenize ' ' I fix would be very welcome  also  if there is a work around with TokenizeLanguage etc  please let me know  thank you!   
0;NPE when jaxb fallback converter is used with RequestEntityConverter   ;As the RequestEntityConverter toRequestEntity String str  Exchange exchange  doesn't has check if the exchange is null  it caused the NPE as the user complain in camel user mailing list    http  camel  n nabble comContentEnrichErrorwhenupgradingApacheCamelfromtoanyhigherversiontd htmlHere is the stack trace CaughtExceptionType  org apache camel TypeConversionException  CaughtExceptionMessage  Error during type conversion from type   com ecc DamBean to the required type   org apache commons httpclient methods RequestEntity with value com ecc DamBean@a due Error during type conversion from type   java lang String to the required type   org apache commons httpclient methods RequestEntity with value     The complete Stack Trace    Exchange[ExchangePattern  InOnly  BodyType  String  Body    CaughtExceptionType  org apache camel TypeConversionException  CaughtExceptionMessage  Error during type conversion from type   com ecc DamBean to the required type   org apache commons httpclient methods RequestEntity with value com ecc DamBean@a due Error during type conversion from type   java lang String to the required type   org apache commons httpclient methods RequestEntity with value due java lang NullPointerException  StackTrace  org apache camel TypeConversionException   Error during type conversion from type   com ecc DamBean to the required type   org apache commons httpclient methods RequestEntity with value com ecc DamBean@a due Error during type conversion from type   java lang String to the required type   org apache commons httpclient methods RequestEntity with value due java lang NullPointerException at org apache camel converter jaxb FallbackTypeConverter convertTo FallbackTypeConverter java    at org apache camel impl converter BaseTypeConverterRegistry doConvertTo BaseTypeConverterRegistry java    at org apache camel impl converter BaseTypeConverterRegistry convertTo BaseTypeConverterRegistry java    at org apache camel impl MessageSupport getBody MessageSupport java    at org apache camel impl MessageSupport getBody MessageSupport java    at org apache camel component http HttpProducer createRequestEntity HttpProducer java    at org apache camel component http HttpProducer createMethod HttpProducer java    at org apache camel component http HttpProducer process HttpProducer java    at org apache camel util AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge process AsyncProcessorConverterHelper java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor Enricher process Enricher java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor DefaultChannel process DefaultChannel java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor UnitOfWorkProcessor processAsync UnitOfWorkProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel processor RouteInflightRepositoryProcessor processNext RouteInflightRepositoryProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel component seda SedaConsumer sendToConsumers SedaConsumer java    at org apache camel component seda SedaConsumer doRun SedaConsumer java    at org apache camel component seda SedaConsumer run SedaConsumer java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java   Caused by   org apache camel TypeConversionException   Error during type conversion from type   java lang String to the required type   org apache commons httpclient methods RequestEntity with value due java lang NullPointerException at org apache camel impl converter BaseTypeConverterRegistry convertTo BaseTypeConverterRegistry java    at org apache camel impl converter BaseTypeConverterRegistry convertTo BaseTypeConverterRegistry java    at org apache camel converter jaxb FallbackTypeConverter marshall FallbackTypeConverter java    at org apache camel converter jaxb FallbackTypeConverter convertTo FallbackTypeConverter java         moreCaused by   org apache camel RuntimeCamelException   java lang NullPointerException at org apache camel util ObjectHelper wrapRuntimeCamelException ObjectHelper java    at org apache camel util ObjectHelper invokeMethod ObjectHelper java    at org apache camel impl converter StaticMethodTypeConverter convertTo StaticMethodTypeConverter java    at org apache camel impl converter BaseTypeConverterRegistry doConvertTo BaseTypeConverterRegistry java    at org apache camel impl converter BaseTypeConverterRegistry convertTo BaseTypeConverterRegistry java    at org apache camel impl converter BaseTypeConverterRegistry convertTo BaseTypeConverterRegistry java    at org apache camel converter jaxb FallbackTypeConverter marshall FallbackTypeConverter java    at org apache camel converter jaxb FallbackTypeConverter convertTo FallbackTypeConverter java    at org apache camel impl converter BaseTypeConverterRegistry doConvertTo BaseTypeConverterRegistry java    at org apache camel impl converter BaseTypeConverterRegistry convertTo BaseTypeConverterRegistry java    at org apache camel impl MessageSupport getBody MessageSupport java    at org apache camel impl MessageSupport getBody MessageSupport java    at org apache camel component http HttpProducer createRequestEntity HttpProducer java    at org apache camel component http HttpProducer createMethod HttpProducer java    at org apache camel component http HttpProducer process HttpProducer java    at org apache camel util AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge process AsyncProcessorConverterHelper java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor Enricher process Enricher java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor DefaultChannel process DefaultChannel java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor UnitOfWorkProcessor processAsync UnitOfWorkProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel processor RouteInflightRepositoryProcessor processNext RouteInflightRepositoryProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel component seda SedaConsumer sendToConsumers SedaConsumer java    at org apache camel component seda SedaConsumer doRun SedaConsumer java    at org apache camel component seda SedaConsumer run SedaConsumer java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java         moreCaused by   java lang NullPointerException at org apache camel component http RequestEntityConverter toRequestEntity RequestEntityConverter java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org apache camel util ObjectHelper invokeMethod ObjectHelper java         more]   
0;camelnetty  Producer should avoid blocking while waiting for connection   ;We should at most wait for the connection timeout to trigger    
0;cameljms  JmsPollingConsumer use the constant fields from JmsTemplate for receiveNoWait etc   ;See nabblehttp  camel  n nabble comJmsPollingConsumerandmethodreceiveNoWaithasincorrecttimeoutvaluetp html   
0;SpringIntegrationConsumer should honor the 'inOut' instance variable by setting the MEP and sending back message headers   ;See http  camel  n nabble comhowtoobtaincamelsmppsubmitmessageidtd html for details   
0;SJMS component's pom xml missing taskmanager package in camel osgi private pkg   ;Hi I know it's not out in the wild yet but with this tiny patch SJMS is usable in my spike project Sadly doesn't affect the number of passingfailing tests The pom's lt camel osgi private pkggt  section is missing an entry for the org apache camel component sjms taskmanager package thanks Caspar   
0;Cache producer is not thread safe   ;from 'direct  causeFailure'   split   body   parallelProcessing    setHeader CacheConstants CACHE_OPERATION  constant CacheConstants CACHE_OPERATION_DELETEALL    to 'cache  MyTestCache'    String[] body   new String[]   'a'  'b'    template sendBody body   net sf ehcache ObjectExistsException   Cache MyTestCache already exists at net sf ehcache CacheManager addCacheNoCheck CacheManager java    at net sf ehcache CacheManager addCache CacheManager java    at org apache camel component cache CacheEndpoint initializeCache CacheEndpoint java    at org apache camel component cache CacheProducer process CacheProducer java    at org apache camel util AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge process AsyncProcessorConverterHelper java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor SendProcessor$ doInAsyncProducer SendProcessor java    at org apache camel impl ProducerCache doInAsyncProducer ProducerCache java    at org apache camel processor SendProcessor process SendProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor DefaultChannel process DefaultChannel java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor UnitOfWorkProcessor processAsync UnitOfWorkProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor MulticastProcessor doProcessParallel MulticastProcessor java    at org apache camel processor MulticastProcessor access$ MulticastProcessor java    at org apache camel processor MulticastProcessor$ call MulticastProcessor java    at org apache camel processor MulticastProcessor$ call MulticastProcessor java    at java util concurrent FutureTask$Sync innerRun FutureTask java    at java util concurrent FutureTask run FutureTask java    at java util concurrent ThreadPoolExecutor runWorker ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java      
0;Dead Letter Channel  Store failed route id on Exchange   ;Seehttp  camel  n nabble comRetrievefailedRoutefromdeadLetterChanneltp htmlWe should store the route id where we failed  this allows end users to get that as a detail if they route to another route as part of DLC  You can get the current route  but if you let DLC be a route  then its that route you get  and not the route that failed So we need to store this as part of the RedeliveryErrorHandler logic inside camelcore We do have failed endpoint store already  eg if it failed sending a message to an endpoint  But we lack the route id    
0;ClassNotFoundException   weblogic jndi WLInitialContextFactory when starting the route via Karaf startroute camel  routestart  command    ;We have a simple camel route definied in Java DSL  from 'wmq  queue  ESB_TEST_IN'  routeId 'IN'  autoStartup true  log '$ body '  This route receives JMS messages from a WebLogicJMS queue with name ESB_TEST_IN and logs the body to the log file The route works fine when autoStartup is set to true  But when autoStartup is set to false then the creation of the WebLogic InitialContext failed because of an ClassNotFoundException regarding weblogic jndi WLInitialContextFactory and the following message is written to the karaf log file         WARN    DefaultJmsMessageListenerContainer | Setup of JMS message listener invoker failed for destination 'ESB_TEST_IN'  trying to recover  Cause   Destination  ESB_TEST_IN  not found in JNDI  nested exception is javax naming NoInitialContextException   Cannot instantiate class   weblogic jndi WLInitialContextFactory  Root exception is java lang ClassNotFoundException   weblogic jndi WLInitialContextFactory  [org springframework jms listener DefaultMessageListenerContainer | mer ESB_TEST_IN  | org springframework jms    RELEASE id  ]This issue's related to https  jira talendforge orgbrowseTESB   
0;OsgiServiceRegistry to lookup services with filter on name blah   ;OsgiServiceRegistry to lookup services with filter on name blahWhen using the  bean resolver prefix in plain OSGi  not blueprint  the only way to lookup a service is by specifying the full registered classinterface name of that service The OsgiServiceRegistry should also try and lookup a service like the OsgiComponentResolver does using a filter on a service property  I suggest that the filter be on a property called 'name' This means the method public lt Tgt  T lookup String name  Classlt Tgt  type  should try to lookup the service with the class from the type parameter and filter on ' name ' + name ' '      
0;Using annotations DSL in beans may cause async callback to be called twice   ;The bean processor and bean invocation logic may in cases when the EIP annotations is used on beans  cause the callback to be called twice Noticed this problem during investigation of See CAMEL   
0;CamelJob implementation rely on some inconsistent endpoints LRU cache  Camel endpoints may not be called on quartz fire after some days of uptime   ;CamelJobs rely on some endpoints LRU cache from camel context  If i'm not wrong  since LRU Cache relies on SoftReferences  Garbage Collector can decide to evict some entries and especially QuartzEndpoints It happens that sometimes endpoints evicted from LRU Caches are QuartzEndpoints  Since QuartzEnpoints are searched from CamelJob in LRU cache  they are not reachable anymore The side effect  is that CamelJob isntance initializes a new QuartzEndpoint  but loadbalancer is not initialized since it is initialized from QuartzConsumer The result is that quartz triggers jobs that instanciate Quartz endpoints with unintialized load balancers which are unable to call processor from the routes associated I have joined a fix that rely on the search of QuartzEndpoints from initalized routes of Camel context Fundamentally  the search of endpoints should not rely on endpoints LRU cache  It is a broken design Hope it helps By the way  there are other issues related to QuartzEndpoint load balancer initalization   If quartz starts before startup of Camel routes you will have the same issue   Correctly initialized QuartzEndpoints are not in LRU cache since Camel has not started routes  and so endpoints and consumers   Quartz will trigger job  and camel job will search for QuartzEndpoint and put it in LRUCache with uninitialized load balancer    
0;RestletComponent component is not removing added route from routers list although route is removed from Context    ;In RestletComponent class add entry to instance variable 'private final Maplt String  MethodBasedRoutergt  routers   new HashMaplt String  MethodBasedRoutergt   ' map while invoking getMethodRouter method  but it never remove in disconnect method  also disconnect method has local variable with same name as instance variable 'routes' Camel Development Forums                         http  camel  n nabble comCamelRestletRestletComponentcomponentdoesnotremoveaddedrouteformroutersalthoughrotd html   
1;Add PGP signature and signature verification support to PGPDataFormat   ;PGPDataFormat currently supports PGP encryption  equivalent to 'gpg e'  and decryption  equivalent to 'gpg d'   but does not support simultaneously encrypting and signing  equivalent to 'gpg e s'  or simultaneously decrypting and verifying  equivalent to 'gpg v d'  This patch adds three new optional attributes to the PGPDataFormat class  signatureKeyUserid  signatureKeyFileName  signaturePassword   which can be used to sign while encrypting  or to verify a signature while decrypting    
0;NoRedeliveryOnShutdown doesn't work for DeadLetterChannel   ;See http  camel  n nabble comWrongtestforallowRedeliveryWhileStoppingpossiblebugtd html for details The assumption is if we use 'allowRedeliveryWhileStopping false ' in an error handler definition which use a dead letter channel  the message should be send to the configured dead letter channel if we are in a delivery by stopping Camel  instead of dropping the message     
0;camelbindy fixed length record improvements   ;The attached patch provides the following improvements for the camelbindy fixed length record data format   full support for fixedlength header and footer records allows delimited  variable length  fields to be defined within 'fixedlength' records enables the length of a data field to be defined dynamically by another field in the same record fixedlength records can be defined using ordinal  relative pos valuesNew annotation properties  @DataField + lengthPos  int    Optionally identifies a data field in the record that defines the fixed length for this field + delimiter  String    Optional delimiter to be used if this field has a variable length@FixedLengthRecord + hasHeader  boolean    Indicates that the record s  of this type may be preceded by a single header record at the beginning of the file  stream + hasFooter  boolean    Indicates that the record s  of this type may be followed by a single footer record at the end of the file  stream + skipHeader  boolean    Configures the data format to skip marshalling  unmarshalling of the header record + skipFooter  boolean    Configures the data format to skip marshalling  unmarshalling of the footer record + isHeader  boolean    Identifies this FixedLengthRecord as a header record + isFooter  boolean    Identifies this FixedLengthRecord as a footer record   
0;Improve the BeanInfo performance   ;See http  camel  n nabble comBeanInfoperformanceissuestd html for details    
0;Camel Email Component Missing Attachments   ;see http  camel  n nabble comCamelEmailComponentMissingAttachmentstd htmlaThe disposition field is optional see RFC    so it is possible that camel misses attachments  if  disposition !  null amp amp   disposition equalsIgnoreCase Part ATTACHMENT  || disposition equalsIgnoreCase Part INLINE       only add named attachments String fileName   part getFileName    if  fileName !  null    LOG debug 'Mail contains file attachment   ' + fileName    Parts marked with a disposition of Part ATTACHMENT are clearly attachments CollectionHelper appendValue map  fileName  part getDataHandler        Adding the fileName check to the if should resolve the issue    
0;Camel Spring registry does not look into parent contexts   ;trunk componentscamelspringsrcmainjavaorgapachecamelspringspiApplicationContextRegistry javahas next method   @Override public lt Tgt  Maplt String  Tgt  findByTypeWithName Classlt Tgt  type    return applicationContext getBeansOfType type    but this method does not look into application context parent contexts org springframework beans factory BeanFactoryUtilsbeansOfTypeIncludingAncestors should be used instead    
0;camelrss and camelatom  Not installable in Karaf   ;karaf@rootgt  features  install camelrssError executing command   Manifest not present in the first entry of the zip mvn  org apache ws commons axiomaxiomimpl  I think we got a JAR that is flawed      
0;Check if body is a MimeMessage and send it directly without create a MimeMessage from body and headers   ;In a route with a component which create a MimeMessage and set it in body  the mail producer ignores the type of body and create his own MimeMessage from body content and headers The patch add the control of type and disable the override of MailProducer with his own message The MimeMessage contained in body is sent directly Patch contains test and fix   
0;CamelBlueprintContext may be wrongly started and this may lead to a deadlock   ;We observed a deadlock situation that seems to be caused by the change that came in with CAMEL  which changed the way how CamelBlueprintContext is started to solve another issue The current code listens to the service registered event for org osgi    BlueprintContainer  supposedly for its associated BP container  and decides to start itself if not started  From the description of the ticket  this change was intended to make sure the starting of the context occurs after its BP container is registered  In that case  should it be checking whether the received event belongs to the same bundle? This checking is missing in the current code and consequently  it may wrongly react to the event from another bundle's container registration event  When this happens under some specific timing situation  it may also lead to a deadlock So  should we be checking the event source in CamelBlueprintContext's serviceChanged method?Regards  akiStack trace from                                                                           Name   Blueprint Extender   State   BLOCKED on java lang Object@b owned by   Blueprint Extender   Total blocked    Total waited   Stack trace   org apache aries blueprint container BlueprintRepository createInstances BlueprintRepository java   org apache aries blueprint container BlueprintRepository createInstance BlueprintRepository java   org apache aries blueprint container BlueprintRepository create BlueprintRepository java   org apache aries blueprint container BlueprintContainerImpl getComponentInstance BlueprintContainerImpl java   org apache camel blueprint BlueprintContainerRegistry lookup BlueprintContainerRegistry java   org apache camel impl CompositeRegistry lookup CompositeRegistry java   org apache camel impl PropertyPlaceholderDelegateRegistry lookup PropertyPlaceholderDelegateRegistry java   org apache camel blueprint BlueprintComponentResolver resolveComponent BlueprintComponentResolver java   org apache camel impl DefaultCamelContext getComponent DefaultCamelContext java    locked java util HashMap@deorg apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java   org apache camel util CamelContextHelper getMandatoryEndpoint CamelContextHelper java   org apache camel model RouteDefinition resolveEndpoint RouteDefinition java   org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java   org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java   org apache camel model FromDefinition resolveEndpoint FromDefinition java   org apache camel impl DefaultRouteContext getEndpoint DefaultRouteContext java   org apache camel model RouteDefinition addRoutes RouteDefinition java   org apache camel model RouteDefinition addRoutes RouteDefinition java   org apache camel impl DefaultCamelContext startRoute DefaultCamelContext java   org apache camel impl DefaultCamelContext startRouteDefinitions DefaultCamelContext java   org apache camel impl DefaultCamelContext doStartCamel DefaultCamelContext java   org apache camel impl DefaultCamelContext doStart DefaultCamelContext java    locked org apache camel blueprint BlueprintCamelContext@bafaorg apache camel support ServiceSupport start ServiceSupport java   org apache camel impl DefaultCamelContext start DefaultCamelContext java   org apache camel blueprint BlueprintCamelContext maybeStart BlueprintCamelContext java   org apache camel blueprint BlueprintCamelContext serviceChanged BlueprintCamelContext java   org eclipse osgi internal serviceregistry FilteredServiceListener serviceChanged FilteredServiceListener java   org eclipse osgi framework internal core BundleContextImpl dispatchEvent BundleContextImpl java   org eclipse osgi framework eventmgr EventManager dispatchEvent EventManager java   org eclipse osgi framework eventmgr ListenerQueue dispatchEventSynchronous ListenerQueue java   org eclipse osgi internal serviceregistry ServiceRegistry publishServiceEventPrivileged ServiceRegistry java   org eclipse osgi internal serviceregistry ServiceRegistry publishServiceEvent ServiceRegistry java   org eclipse osgi internal serviceregistry ServiceRegistrationImpl register ServiceRegistrationImpl java   org eclipse osgi internal serviceregistry ServiceRegistry registerService ServiceRegistry java   org eclipse osgi framework internal core BundleContextImpl registerService BundleContextImpl java   org apache aries blueprint container BlueprintContainerImpl registerService BlueprintContainerImpl java   org apache aries blueprint container BlueprintContainerImpl doRun BlueprintContainerImpl java   org apache aries blueprint container BlueprintContainerImpl run BlueprintContainerImpl java    locked java util concurrent atomic AtomicBoolean@cbada locked java util concurrent atomic AtomicBoolean@bdjava util concurrent Executors$RunnableAdapter call Executors java   java util concurrent FutureTask$Sync innerRun FutureTask java   java util concurrent FutureTask run FutureTask java   java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask access$ ScheduledThreadPoolExecutor java   java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask run ScheduledThreadPoolExecutor java   java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java   java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java   java lang Thread run Thread java                                                                           Name   Blueprint Extender   State   BLOCKED onorg apache camel blueprint BlueprintCamelContext@bafa owned by   Blueprint Extender   Total blocked    Total waited   Stack trace   org apache camel impl DefaultCamelContext getTypeConverter DefaultCamelContext java   org apache camel util EndpointHelper setProperties EndpointHelper java   org apache camel impl DefaultComponent setProperties DefaultComponent java   org apache camel component file GenericFileComponent createEndpoint GenericFileComponent java   org apache camel component file GenericFileComponent createEndpoint GenericFileComponent java   org apache camel impl DefaultComponent createEndpoint DefaultComponent java   org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java   org apache camel core xml AbstractCamelEndpointFactoryBean getObject AbstractCamelEndpointFactoryBean java   sun reflect NativeMethodAccessorImpl invoke Native Method sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java   sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java   java lang reflect Method invoke Method java   org apache aries blueprint utils ReflectionUtils invoke ReflectionUtils java   org apache aries blueprint container BeanRecipe invoke BeanRecipe java   org apache aries blueprint container BeanRecipe getInstance BeanRecipe java   org apache aries blueprint container BeanRecipe internalCreate BeanRecipe java   org apache aries blueprint di AbstractRecipe create AbstractRecipe java    locked java lang Object@borg apache aries blueprint container BlueprintRepository createInstances BlueprintRepository java    locked java lang Object@borg apache aries blueprint container BlueprintRepository createAll BlueprintRepository java   org apache aries blueprint container BlueprintContainerImpl instantiateEagerComponents BlueprintContainerImpl java   org apache aries blueprint container BlueprintContainerImpl doRun BlueprintContainerImpl java   org apache aries blueprint container BlueprintContainerImpl run BlueprintContainerImpl java    locked java util concurrent atomic AtomicBoolean@b locked java util concurrent atomic AtomicBoolean@ajava util concurrent Executors$RunnableAdapter call Executors java   java util concurrent FutureTask$Sync innerRun FutureTask java   java util concurrent FutureTask run FutureTask java   java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask access$ ScheduledThreadPoolExecutor java   java util concurrent ScheduledThreadPoolExecutor$ScheduledFutureTask run ScheduledThreadPoolExecutor java   java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java   java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java   java lang Thread run Thread java      
0;SOAP over JMS does not work with camelcxf endpoint   ;If we would like to use SOAP over JMS using CXF amp  Camel     that fails The CXF endpoint receives well the incoming request from the JMS queue[aultMessageListenerContainer] HelloWorldServicePortType INFO Inbound MessageID   ContentType   textxmlHeaders    JMSMessageType [text] Payload   lt soapenv  Envelope xmlns  soapenv 'http  schemas xmlsoap orgsoapenvelope' xmlns  hel 'http  helloworld mycompany redhat com'gt  lt soapenv  Headergt  lt soapenv  Bodygt  lt hel  sayHellogt  lt hel  namegt fredlt hel  namegt  lt hel  sayHellogt  lt soapenv  Bodygt lt soapenv  Envelopegt [aultMessageListenerContainer] route INFO SOAP Request received message[aultMessageListenerContainer] route INFO Mock service repliedbut the response is not returned by CXF neither published in a  reply  queue Here is the Camel Route @Override public void configure   throws Exception  from 'cxf  bean  endpoint service worklist?dataFormat MESSAGE'   convertBodyTo String class   log 'SOAP Request received message'  setHeader 'JMSReplyTo'  constant 'supervisorworklist response'   transform   constant response   RESPONSE   SOAP MESSAGE  log 'Mock service replied'    amp  Configlt ?xml version ' ' encoding 'UTF'?gt lt beans xmlns 'http  www springframework orgschemabeans' xmlns  xsi 'http  www w orgXMLSchemainstance' xmlns  camel 'http  camel apache orgschemaspring' xmlns  osgi 'http  www springframework orgschemaosgi' xmlns  cxf 'http  camel apache orgschemacxf' xmlns  jms 'http  cxf apache orgtransportsjms' xsi  schemaLocation ' http  www springframework orgschemabeans http  www springframework orgschemabeansspringbeans xsd http  www springframework orgschemaosgi http  www springframework orgschemaosgispringosgi xsd http  camel apache orgschemaspring http  camel apache orgschemaspringcamelspring xsd http  camel apache orgschemacxf http  camel apache orgschemacxfcamelcxf  spring xsd http  cxf apache orgtransportsjms http  cxf apache orgschemasconfigurationjms xsd'gt  lt bean id 'jms connectionFactory' class 'org apache activemq ActiveMQConnectionFactory'gt  lt ! lt property name 'brokerURL' value 'vm  myEmbeddedBroker?broker persistent false' gt gt  lt property name 'brokerURL' value 'tcp  localhost  'gt  lt beangt  lt bean id 'jms config service' class 'org apache cxf transport jms JMSConfiguration'gt  lt property name 'connectionFactory' ref 'jms connectionFactory' gt  lt property name 'targetDestination' value 'supervisorworklist' gt  lt property name 'replyDestination' value 'supervisorworklist response'gt  lt beangt  lt bean id 'logginOutInterceptor' class 'org apache cxf interceptor LoggingOutInterceptor'gt  lt bean id 'logginInInterceptor' class 'org apache cxf interceptor LoggingInInterceptor'gt  lt ! Producer Endpoint gt  lt cxf  cxfEndpoint id 'endpoint service worklist' address 'jms  'serviceClass 'com redhat mycompany helloworld HelloWorldService' serviceName 's  HelloWorldService' endpointName 's  HelloWorldOverJms' xmlns  s 'http  helloworld atos redhat com'gt  lt cxf  featuresgt  lt bean xmlns 'http  www springframework orgschemabeans'class 'org apache cxf transport jms JMSConfigFeature'gt  lt property name 'jmsConfig' ref 'jms config service' gt  lt beangt  lt cxf  featuresgt  lt cxf  inInterceptorsgt  lt ref bean 'logginInInterceptor'gt  lt cxf  inInterceptorsgt  lt cxf  outInterceptorsgt  lt ref bean 'logginOutInterceptor'gt  lt cxf  outInterceptorsgt  lt cxf  cxfEndpointgt  lt camelContext xmlns 'http  camel apache orgschemaspring'gt  lt packagegt com redhat mycompany cxflt packagegt  lt camelContextgt lt beansgt    
0;CXFEndpoint blueprint config having binding element may lead to NPE   ;There seems to be an error in the EndpointpointDefinitionParser in parsing the binding element  Concretely speaking  that element is not parsed from the right element but wrongly from its parent element So  when you have something like lt camelcxf  cxfEndpoint id 'routerEndpoint'    gt      lt camelcxf  bindinggt  lt soap  soapBinding mtomEnabled 'true' version ' 'gt  lt camelcxf  bindinggt  lt camelcxf  cxfEndpointgt you may get an NPE  as shown in  java lang NullPointerException   null at org apache aries blueprint container RecipeBuilder getValue RecipeBuilder java    ~ na  na  at org apache aries blueprint container RecipeBuilder createBeanRecipe RecipeBuilder java    ~ na  na  at org apache aries blueprint container RecipeBuilder createRecipe RecipeBuilder java    ~ na  na  at org apache aries blueprint container RecipeBuilder createRepository RecipeBuilder java    ~ na  na  at org apache aries blueprint container BlueprintContainerImpl getRepository BlueprintContainerImpl java    ~ na  na  at org apache aries blueprint container BlueprintContainerImpl doRun BlueprintContainerImpl java    ~ na  na  at org apache aries blueprint container BlueprintContainerImpl run BlueprintContainerImpl java    ~[na  naFixing this line in EndpointDefinitionParser will fix this issue    
0;Improvement to SqlProducer class   ;I have came across a bug with the Microsoft SQL Server driver     in where the folowing line is problematic  int expected   ps getParameterMetaData   getParameterCount   If I run the following query through the component  INSERT INTO  NEW_TABLE  SELECT * FROM  OLD_TABLE  WHERE ID   expected is set to  which results in my value not being set Caused by   com microsoft sqlserver jdbc SQLServerException   The value is not set for the parameter number  While this is a SQL Server issue  unfortunately the source is not available and an update is not likely any time soon to return the correct meta data  It would be handy if this Producer put the query preperation a little more into the hands of the user  I e  let me say there are  parameters to be prepared along with the  values to use If the user has manually put  items in a Map in the body  then can we not just use the map length to identify how many values and then iterate them    
0;Race condition in AggregatorProcessor recovery sometimes causes duplicates   ;There seems to be a race condition in org apache camel processor aggregate AggregateProcessor's RecoverTask  That task calls recoverable scan   to find Exchanges that may need to be recovered  Since scan   might return Exchanges that are actually just in progress  the RecoverTask then checks to see if the Exchange really is in progress  It does this by calling inProgressCompleteExchanges contains exchangeId   However  that collection may have been modified during the time between when scan   returned and when contains   is called  This would happen if the inprogress Exchange completes before contains   is called  In that situation  inProgress would evaluate to false  so the Exchange would be recovered  This results in a duplicate Exchange being output by the Aggregator component  One possible solution might be to prevent updating the inProgressCompleteExchanges during the critical section  Another possible solution might be to copy inProgressCompleteExchanges before calling scan    I'm sure that there are other ways to deal with this also    
0;step in a  block runs when the  tag is closed in the wrong place   ;Example route  lt doTrygt  lt to     gt lt doTrygt lt doCatchgt  lt exceptiongt java lang Exceptionlt exceptiongt  lt to uri 'log     'gt lt doCatchgt The lt to uri 'log   'gt  line will execute every time  regardless if there is an exception or not I believe the preferred behavior would be that the route should fails to loadvalidate  Alternatively  the lt to uri 'log  ' gt  should not run when there is not an exception Thanks!   
0;cameljms   InOut exchange can time out even if response was received   ;When performing an InOut JMS exchange with a certain requestTimeout  if the reply message is received in time  but the following formula stands true   T + T gt   T!  where  T   JMS response timeT   remaining route processing time following the replyT!   requestTimeoutThen cameljms will throw an ExchangeTimedOutException regardless of the fact that the reply was truly received in time I'm surprised this bug has gone unnoticed until now  as it's been present since mid Example unit test   @Test public void testTimeoutNotTriggered   throws Exception   getMockEndpoint 'mock  exception'  expectedMessageCount    template requestBody 'activemq  test'  'lt hello gt '   assertMockEndpointsSatisfied      @Override protected RouteBuilder createRouteBuilder   throws Exception   return new RouteBuilder     @Override public void configure   throws Exception   onException ExchangeTimedOutException class   handled true   to 'mock  exception'   from 'activemq  test'   inOut 'activemq  test?requestTimeout '   delay constant     from 'activemq  test'   log 'test'            
0;Simple language  bean function  issue when parameter value has comma   ;See nabblehttp  camel  n nabble comProlemswithparametrizedbeanmethodcallviasimpletp html   
0;NPE when using the imap mail component with quartz or the timer and pollEnrich   ;There is a NPE when using the imap mail component with quartz or the timer and pollEnrich as dicussed here  http  camel  n nabble comSchedulefilemailendpointtd htmlaI reproduced it on version    and    with lt route id 'myTest'gt  lt from uri 'timer  foo?fixedRate trueamp period 'gt  lt pollEnrich uri 'imap  userName@hostName?password ***'gt   lt to uri 'log  testroute?showAll trueamp level INFO'gt  lt routegt We need to use it with the quartz component  so we can use a cron expression   but get the same error lt route id 'myTest'gt  lt from uri 'quartz  testTimer?cron +?'gt  lt pollEnrich uri 'imap  userName@hostName?password ***'gt   lt to uri 'log  testroute?showAll trueamp level INFO'gt  lt routegt        DefaultQuartzSchedulercontext_Worker  ERROR org apache camel processor DefaultErrorHandler  Failed delivery for  MessageId   IDW on ExchangeId   IDW   Exhausted after delivery attempt    caught   org apache camel CamelExchangeException   Error occurred during aggregation  Exchange[Message    Body is null ]  Caused by   [org apache camel RuntimeCamelException  Failed to extract body due to   null  Exchange   Exchange MailMessage   com sun mail imap IMAPMessage@afe   Message   com sun mail imap IMAPMessage@afe]org apache camel CamelExchangeException   Error occurred during aggregation  Exchange[Message    Body is null ]  Caused by   [org apache camel RuntimeCamelException  Failed to extract body due to   null  Exchange   Exchange MailMessage   com sun mail imap IMAPMessage@afe   Message   com sun mail imap IMAPMessage@afe] at org apache camel processor PollEnricher process PollEnricher java    camelcore   jar      at org apache camel util AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge process AsyncProcessorConverterHelper java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    camelcore   jar      at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    camelcore   jar      at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor interceptor DefaultChannel process DefaultChannel java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor Pipeline process Pipeline java    camelcore   jar      at org apache camel processor Pipeline process Pipeline java    camelcore   jar      at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor UnitOfWorkProcessor processAsync UnitOfWorkProcessor java    camelcore   jar      at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    camelcore   jar      at org apache camel processor RouteInflightRepositoryProcessor processNext RouteInflightRepositoryProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    camelcore   jar      at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    camelcore   jar      at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor loadbalancer QueueLoadBalancer process QueueLoadBalancer java    camelcore   jar      at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    camelcore   jar      at org apache camel processor loadbalancer QueueLoadBalancer process QueueLoadBalancer java    camelcore   jar      at org apache camel component quartz QuartzEndpoint onJobExecute QuartzEndpoint java    camelquartz   jar      at org apache camel component quartz CamelJob execute CamelJob java    camelquartz   jar      at org quartz core JobRunShell run JobRunShell java    quartz   jar    at org quartz simpl SimpleThreadPool$WorkerThread run SimpleThreadPool java    quartz   jar      
0;Camel stream producer never close the stream of file   ;When I was working on CAMEL  I found the file stream is never closed  even it met the close condition    
0;SQL component will not look for parameters in header when no body in message   ;Line  in SqlProducer checks if the body is null  This will cause any parameters in header fields not to be populated into the prepared statement  Sample scenario is with a cameljetty enriching a response using camelsql    
0;Aggregate EIP  Completion from batch consumer should trigger first   ;See nabblehttp  camel  n nabble comIssueAggregatorBatchCompletiondisturbedbyothercompletionsandfailstohappenwhenitprobabltp html   
0;camelhttp  When bridging endpoints then there may be double parameter values if client sends uri parameters   ;If you have a jettyhttp bridge endpoint  and the caller sends in a parameter with a value that has url encodings  then you may have double values when calling the bridge eg callinghttp  localhost  jettyTestRouteA?param BAnd having a jetty gt  http bridge  you can end up with double values Caused by   java lang AssertionError   expected  lt  gt  but was  lt [+  +]gt    
1;Camel    incapable of working with + in endpoint URIs   ;In the class org apache camel util URISupport which will be used to resolve endpoints  DefaultCamelContextnormalizeEndpointUri  the method parseParameters will be called At first the java net UrigetQuery will be called with according to the javadoc 'Returns the decoded query component of this URI' returns a decoded URI  If that fails the java net UrigetSchemeSpecificPart method will be called which according to the javadoc 'Returns the decoded schemespecific part of this URI ' returns a decoded URI So to summarize we get in any case a decoded URI As workaround for CAMEL all  are encoded  i e  replaced by  The URI will then be decoded again in the method org apache camel util URISupportparseQuery String  with java net URLDecoderdecode String String  This code leads to the following behaviour   If a + is properly encoded with fooBbar the fooBbar will be substituted by the first call with foo+bar and then decoded again which leads to foo bar  If the + is not encoded at all foo+bar will be decoded to foo bar in the first step and not be changed again in the second step  If the + is double encoded to fooBbar the first call will transform it to fooBbar  then the workaround for CAMEL will change it back to fooBbar and the final decode will change it again to fooBbar Thus  currently there is no way to use a + in passwords or similar parameter values if the parameter has to be supplied via endpoint URIs    
0;CamelAWS should support any implementation of AmazonXXX  not only AmazonXXXClient    ;See http  camel  n nabble comcamelpullrequestmakingchangesothatwecanusecamelawsintegrationtd html   
0;http component should default to charset based on content type   ;HttpProducer determines the charset of an outgoing StringEntity based on an Exchange property  Exchange CHARSET_NAME   using null if that property is not set  It also sets the contenttype based on the contenttype of the camel message  this may also contain a character encoding   If these two don't match the receiver of the http request will probably not be able to parse the message  It would be better if the charset of the StringEntity would by default match the charset specified in the contenttype  Matching these two is done when receiving response messages  in HttpProducer extractResponseBody      Suggested fix  in HttpProducer createRequestEntity     you could of course also do something like org apache camel component http helper HttpHelper setCharsetFromContentType   but my approach uses org apache http entity ContentType and java nio charset Charset instead of trying to determine the correct charset itself    be a bit careful with String as any type can most likely be converted to String so we only do an instanceof check and accept String if the body is really a String do not fallback to use the default charset as it can influence the request  for example applicationxwwwformurlencoded forms being sent String charset   IOHelper getCharsetName exchange  false  if  charset    null amp amp  contentType !  null   ContentType ct   ContentType parse contentType   if  ct !  null    Charset cs   ct getCharset    if  cs !  null    charset   cs name        StringEntity entity   new StringEntity  String  data  charset  entity setContentType contentType  answer   entity    
0;TransferExchage InOut ActiveMQ Exception   ;The scnearios are    when using the transferExchange option only on the producer  I don't get the body back  but not the header  When I use the transferExchange option on both producer and consumer  I get the headers back  but not the body  And instead I get the following exception[ryQueueReplyManager[temporary]] TemporaryQueueReplyManager WARN Execution of JMS message listener failed  Caused by   [java lang NullPointerException  null]java lang NullPointerException at org apache camel impl DefaultExchangeHolder unmarshal DefaultExchangeHolder java    at org apache camel component jms JmsBinding extractBodyFromJms JmsBinding java    at org apache camel component jms JmsMessage createBody JmsMessage java    at org apache camel impl MessageSupport getBody MessageSupport java    at org apache camel component jms reply ReplyManagerSupport processReply ReplyManagerSupport java    at org apache camel component jms reply TemporaryQueueReplyHandler onReply TemporaryQueueReplyHandler java    at org apache camel component jms reply TemporaryQueueReplyManager handleReplyMessage TemporaryQueueReplyManager java    at org apache camel component jms reply ReplyManagerSupport onMessage ReplyManagerSupport java    at org springframework jms listener AbstractMessageListenerContainer doInvokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer invokeListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractMessageListenerContainer doExecuteListener AbstractMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer doReceiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener AbstractPollingMessageListenerContainer receiveAndExecute AbstractPollingMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker invokeListener DefaultMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker executeOngoingLoop DefaultMessageListenerContainer java    at org springframework jms listener DefaultMessageListenerContainer$AsyncMessageListenerInvoker run DefaultMessageListenerContainer java    at java lang Thread run Thread java      
0;json data format  Add support for configuring gson options   ;Seehttp  stackoverflow comquestionsapachecamelgsonformatterWe should make it possible to configure those gson options in the DSL    
0;camelbindy  Multiple models in the same package lead to unpredictable results   ;BindyCsvDataFormat only holds one model  When multiple models are defined in the same package or field positions overlap  only one @DataField is kept  the last one  overwriting the previous mapping  This leads to unpredictable behavior  from the wrong field value being populated  to format mismatch exceptions for fields of different types This behavior is by design  as camel supports deep models  spread over multiple files  see AnnotationModelLoader loadModels   implementation where whole packages are scanned  The documentation is rather vague  but I believe supporting multiple models in the same package is not really feasible  and overkill at best  Therefore my preference would be to keep the functionality as is and document the limitation Currently the BindyCVSFieldEndingWithSeparatorIssueTest fails due to a conflict between MyCsvRecord class and BindyDoubleQuotesCsvUnmarshallTest Order class defined in the same package  Moving MyCsvRecord to a different package is a trivial fix  I will look into adding some model validation as well to WARN if the model is inconsistent  i e  has overlaps or gaps     
0;Http component does not support PATCH   ;If I try to use PATCH  it gives me an error about it not being in an enum  However  the HttpClient does support it http  hc apache orghttpcomponentsclientgahttpclientapidocsorgapachehttpclientmethodsHttpPatch html   
0;camel  run in blueprint is broken   ;Due the Aries blueprint upgrade then the blueprint extenders may run + due classpath issues    
0;camelaws  Possible concurrent modification exception   ;Noticed this from CI test serversStacktracejava util ConcurrentModificationException at java util ArrayList$Itr checkForComodification ArrayList java    at java util ArrayList$Itr next ArrayList java    at org apache camel component aws sqs SqsExtendMessageVisibilityTest longReceiveExtendsMessageVisibility SqsExtendMessageVisibilityTest java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org junit runners model FrameworkMethod$ runReflectiveCall FrameworkMethod java    at org junit internal runners model ReflectiveCallable run ReflectiveCallable java    at org junit runners model FrameworkMethod invokeExplosively FrameworkMethod java    at org junit internal runners statements InvokeMethod evaluate InvokeMethod java    at org junit internal runners statements RunBefores evaluate RunBefores java    at org junit internal runners statements RunAfters evaluate RunAfters java    at org junit rules TestWatcher$ evaluate TestWatcher java    at org junit rules RunRules evaluate RunRules java    at org junit runners ParentRunner runLeaf ParentRunner java    at org junit runners BlockJUnitClassRunner runChild BlockJUnitClassRunner java    at org junit runners BlockJUnitClassRunner runChild BlockJUnitClassRunner java    at org junit runners ParentRunner$ run ParentRunner java    at org junit runners ParentRunner$ schedule ParentRunner java    at org junit runners ParentRunner runChildren ParentRunner java    at org junit runners ParentRunner access$ ParentRunner java    at org junit runners ParentRunner$ evaluate ParentRunner java    at org junit internal runners statements RunAfters evaluate RunAfters java    at org junit runners ParentRunner run ParentRunner java    at org apache maven surefire junit JUnitTestSet execute JUnitTestSet java    at org apache maven surefire junit JUnitProvider executeTestSet JUnitProvider java    at org apache maven surefire junit JUnitProvider invoke JUnitProvider java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org apache maven surefire booter ProviderFactory$ClassLoaderProxy invoke ProviderFactory java    at com sun proxy $Proxy invoke Unknown Source  at org apache maven surefire booter SurefireStarter invokeProvider SurefireStarter java    at org apache maven surefire booter SurefireStarter runSuitesInProcess SurefireStarter java    at org apache maven surefire booter ForkedBooter main ForkedBooter java   Standard Output@SLTests run     Failures     Errors     Skipped     Time elapsed     sec@SLRunning org apache camel component aws sqs SqsExtendMessageVisibilityTest   
0;Sql component  Add noop option to execute the query but dont change the message body afterwards   ;Seehttp  blog mgmtp comcamelrouterpartcommentpagecommentEven if the query returns a result set  you may not want to grab that or change the message body For that we can have a noop true|false option  If there is a better name for the option then we can go for that  though noop was the first name that came to my mind    
0;Scheduled thread pools is not removed from JMX when shutting down   ;For example if a route use the aggragate eip with a completion timeout  then the scheduled thread pool is enlisted in JMX  But not removed when the route is removed  Though as failsafe we always remove the JMX when camel is stopping But for people doing dynamic addremove routes this can become a problem    
0;Simple ognl expression  Possible NPE when using String replaceFirst and replacing with an empty string   ;See nabblehttp  camel  n nabble comNPEwithreplaceFirsttp html   
0;org apache camel support ServiceSupport   InputStream not being explicitly closed   ;In method getVersion   of ServiceSupport there is an InputStream opened around line   InputStream is   getClass   getResourceAsStream 'METAINFmavenorg apache camelcamelcorepom properties'  This stream is not closed explicitly If you undeploy an application from a container like GlassFish you get a warning like this  [|T     +|WARNING|glassfish  |javax enterprise system core classloading com sun enterprise loader|_ThreadID  _ThreadName Thread |Input stream has been finalized or forced closed without being explicitly closed  stream instantiation reported in following stack tracejava lang Throwable at com sun enterprise loader ASURLClassLoader$SentinelInputStream lt initgt  ASURLClassLoader java    at com sun enterprise loader ASURLClassLoader$InternalJarURLConnection getInputStream ASURLClassLoader java    at java net URLClassLoader getResourceAsStream URLClassLoader java    at com sun enterprise loader ASURLClassLoader getResourceAsStream ASURLClassLoader java    at java lang Class getResourceAsStream Class java    at org apache camel support ServiceSupport getVersion ServiceSupport java    at org apache camel impl DefaultCamelContext start DefaultCamelContext java    at org apache camel cdi CdiCamelContext start CdiCamelContext java    at sun reflect NativeMethodAccessorImpl invoke Native Method      These were similar issues   XBEAN  JCR   
0;camelcxfrs blueprint configure could not be installed if there are some subelement settings   ;Got the OOM Exception when blueprint want to parser the setting like this lt camelcxf  rsClient id 'rsClient' address 'http  localhost  rest' serviceClass 'org apache camel itest osgi cxf jaxrs testbean CustomerService'gt  lt camelcxf  featuresgt  lt bean class 'org apache cxf feature LoggingFeature'gt  lt camelcxf  featuresgt  lt camelcxf  rsClientgt    
0;camelstream  Shutdown thread pool on consumer should happen faster   ;Should be faster to shutdown this pool as you may see WARN logs on stopping Camel[ Thread] DefaultShutdownStrategy INFO Starting to graceful shutdown  routes  timeout  seconds el  thread   ShutdownTask DefaultExecutorServiceManager INFO Waited   seconds for ExecutorService   org apache camel util concurrent RejectableThreadPoolExecutor@bdab Shutting down  pool size     active threads     queued tasks     completed tasks     stream  in?promptMessage Enter+somethingA+  to terminate   el  thread   ShutdownTask DefaultExecutorServiceManager INFO Waited   seconds for ExecutorService   org apache camel util concurrent RejectableThreadPoolExecutor@bdab Shutting down  pool size     active threads     queued tasks     completed tasks     stream  in?promptMessage Enter+somethingA+  to terminate      
0;StringQuoteHelper  Should ignore whitespace between quoted parameters   ;Need to merge to   branch when created    
0;Bean  Improve choose method logic for no parameter methods   ;We should optimize the logic and if a method name with no parameters has been defined  eg to 'bean  myBean?method foo  ' Or in ognl's such as when   simple '$ body foo    !  null'  to 'direct  foo' Then we should optimize the logic to filter out methods with methods  as foo has been declare with no methods explicit by       
0;camelexamplereportincident failed   ;       [main ] ERROR ContextLoader  Context initialization failedorg apache camel RuntimeCamelException   org apache camel FailedToCreateRouteException   Failed to create route route   Route route [[From[cxf  incident?bus cxfamp serviceClass org     because of Failed to resolve endpoint   cxf  incident?bus cxfamp serviceClass org apache camel example reportincident ReportIncidentEndpointamp wsdlURL etcFreport_incident wsdl due to   Could not find a suitable setter for property   bus as there isn't a setter method with same type   java lang String nor type conversion possible   No type converter available to convert from type   java lang String to the required type   org apache cxf Bus with value cxf at org apache camel util ObjectHelper wrapRuntimeCamelException ObjectHelper java    at org apache camel spring SpringCamelContext onApplicationEvent SpringCamelContext java    at org apache camel spring CamelContextFactoryBean onApplicationEvent CamelContextFactoryBean java    at org springframework context event SimpleApplicationEventMulticaster multicastEvent SimpleApplicationEventMulticaster java    at org springframework context support AbstractApplicationContext publishEvent AbstractApplicationContext java    at org springframework context support AbstractApplicationContext finishRefresh AbstractApplicationContext java    at org springframework context support AbstractApplicationContext refresh AbstractApplicationContext java    at org springframework web context ContextLoader configureAndRefreshWebApplicationContext ContextLoader java    at org springframework web context ContextLoader initWebApplicationContext ContextLoader java    at org springframework web context ContextLoaderListener contextInitialized ContextLoaderListener java    at org eclipse jetty server handler ContextHandler startContext ContextHandler java    at org eclipse jetty servlet ServletContextHandler startContext ServletContextHandler java    at org eclipse jetty webapp WebAppContext startContext WebAppContext java    at org eclipse jetty server handler ContextHandler doStart ContextHandler java    at org eclipse jetty webapp WebAppContext doStart WebAppContext java    at org mortbay jetty plugin JettyWebAppContext doStart JettyWebAppContext java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerCollection doStart HandlerCollection java    at org eclipse jetty server handler ContextHandlerCollection doStart ContextHandlerCollection java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerCollection doStart HandlerCollection java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerWrapper doStart HandlerWrapper java    at org eclipse jetty server Server doStart Server java    at org mortbay jetty plugin JettyServer doStart JettyServer java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org mortbay jetty plugin AbstractJettyMojo startJetty AbstractJettyMojo java    at org mortbay jetty plugin AbstractJettyMojo execute AbstractJettyMojo java    at org mortbay jetty plugin JettyRunMojo execute JettyRunMojo java    at org apache maven plugin DefaultBuildPluginManager executeMojo DefaultBuildPluginManager java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal LifecycleModuleBuilder buildProject LifecycleModuleBuilder java    at org apache maven lifecycle internal LifecycleModuleBuilder buildProject LifecycleModuleBuilder java    at org apache maven lifecycle internal LifecycleStarter singleThreadedBuild LifecycleStarter java    at org apache maven lifecycle internal LifecycleStarter execute LifecycleStarter java    at org apache maven DefaultMaven doExecute DefaultMaven java    at org apache maven DefaultMaven execute DefaultMaven java    at org apache maven cli MavenCli execute MavenCli java    at org apache maven cli MavenCli doMain MavenCli java    at org apache maven cli MavenCli main MavenCli java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org codehaus plexus classworlds launcher Launcher launchEnhanced Launcher java    at org codehaus plexus classworlds launcher Launcher launch Launcher java    at org codehaus plexus classworlds launcher Launcher mainWithExitCode Launcher java    at org codehaus plexus classworlds launcher Launcher main Launcher java   Caused by   org apache camel FailedToCreateRouteException   Failed to create route route   Route route [[From[cxf  incident?bus cxfamp serviceClass org     because of Failed to resolve endpoint   cxf  incident?bus cxfamp serviceClass org apache camel example reportincident ReportIncidentEndpointamp wsdlURL etcFreport_incident wsdl due to   Could not find a suitable setter for property   bus as there isn't a setter method with same type   java lang String nor type conversion possible   No type converter available to convert from type   java lang String to the required type   org apache cxf Bus with value cxf at org apache camel model RouteDefinition addRoutes RouteDefinition java    at org apache camel impl DefaultCamelContext startRoute DefaultCamelContext java    at org apache camel impl DefaultCamelContext startRouteDefinitions DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStartCamel DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStart DefaultCamelContext java    at org apache camel spring SpringCamelContext doStart SpringCamelContext java    at org apache camel support ServiceSupport start ServiceSupport java    at org apache camel impl DefaultCamelContext start DefaultCamelContext java    at org apache camel spring SpringCamelContext maybeStart SpringCamelContext java    at org apache camel spring SpringCamelContext onApplicationEvent SpringCamelContext java         moreCaused by   org apache camel ResolveEndpointFailedException   Failed to resolve endpoint   cxf  incident?bus cxfamp serviceClass org apache camel example reportincident ReportIncidentEndpointamp wsdlURL etcFreport_incident wsdl due to   Could not find a suitable setter for property   bus as there isn't a setter method with same type   java lang String nor type conversion possible   No type converter available to convert from type   java lang String to the required type   org apache cxf Bus with value cxf at org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java    at org apache camel util CamelContextHelper getMandatoryEndpoint CamelContextHelper java    at org apache camel model RouteDefinition resolveEndpoint RouteDefinition java    at org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java    at org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java    at org apache camel model FromDefinition resolveEndpoint FromDefinition java    at org apache camel impl DefaultRouteContext getEndpoint DefaultRouteContext java    at org apache camel model RouteDefinition addRoutes RouteDefinition java    at org apache camel model RouteDefinition addRoutes RouteDefinition java         moreCaused by   java lang IllegalArgumentException   Could not find a suitable setter for property   bus as there isn't a setter method with same type   java lang String nor type conversion possible   No type converter available to convert from type   java lang String to the required type   org apache cxf Bus with value cxf at org apache camel util IntrospectionSupport setProperty IntrospectionSupport java    at org apache camel util IntrospectionSupport setProperty IntrospectionSupport java    at org apache camel util IntrospectionSupport setProperties IntrospectionSupport java    at org apache camel util EndpointHelper setProperties EndpointHelper java    at org apache camel impl DefaultComponent setProperties DefaultComponent java    at org apache camel component cxf CxfComponent createEndpoint CxfComponent java    at org apache camel impl DefaultComponent createEndpoint DefaultComponent java    at org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java         more        WARN  oejw WebAppContext  Failed startup of context o m j p JettyWebAppContext{ file  UserscmuellerworkspaceReleasecamelexamplescamelexamplereportincidentsrcmainwebapp} file  UserscmuellerworkspaceReleasecamelexamplescamelexamplereportincidentsrcmainwebapporg apache camel RuntimeCamelException   org apache camel FailedToCreateRouteException   Failed to create route route   Route route [[From[cxf  incident?bus cxfamp serviceClass org     because of Failed to resolve endpoint   cxf  incident?bus cxfamp serviceClass org apache camel example reportincident ReportIncidentEndpointamp wsdlURL etcFreport_incident wsdl due to   Could not find a suitable setter for property   bus as there isn't a setter method with same type   java lang String nor type conversion possible   No type converter available to convert from type   java lang String to the required type   org apache cxf Bus with value cxf at org apache camel util ObjectHelper wrapRuntimeCamelException ObjectHelper java    at org apache camel spring SpringCamelContext onApplicationEvent SpringCamelContext java    at org apache camel spring CamelContextFactoryBean onApplicationEvent CamelContextFactoryBean java    at org springframework context event SimpleApplicationEventMulticaster multicastEvent SimpleApplicationEventMulticaster java    at org springframework context support AbstractApplicationContext publishEvent AbstractApplicationContext java    at org springframework context support AbstractApplicationContext finishRefresh AbstractApplicationContext java    at org springframework context support AbstractApplicationContext refresh AbstractApplicationContext java    at org springframework web context ContextLoader configureAndRefreshWebApplicationContext ContextLoader java    at org springframework web context ContextLoader initWebApplicationContext ContextLoader java    at org springframework web context ContextLoaderListener contextInitialized ContextLoaderListener java    at org eclipse jetty server handler ContextHandler startContext ContextHandler java    at org eclipse jetty servlet ServletContextHandler startContext ServletContextHandler java    at org eclipse jetty webapp WebAppContext startContext WebAppContext java    at org eclipse jetty server handler ContextHandler doStart ContextHandler java    at org eclipse jetty webapp WebAppContext doStart WebAppContext java    at org mortbay jetty plugin JettyWebAppContext doStart JettyWebAppContext java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerCollection doStart HandlerCollection java    at org eclipse jetty server handler ContextHandlerCollection doStart ContextHandlerCollection java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerCollection doStart HandlerCollection java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerWrapper doStart HandlerWrapper java    at org eclipse jetty server Server doStart Server java    at org mortbay jetty plugin JettyServer doStart JettyServer java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org mortbay jetty plugin AbstractJettyMojo startJetty AbstractJettyMojo java    at org mortbay jetty plugin AbstractJettyMojo execute AbstractJettyMojo java    at org mortbay jetty plugin JettyRunMojo execute JettyRunMojo java    at org apache maven plugin DefaultBuildPluginManager executeMojo DefaultBuildPluginManager java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal LifecycleModuleBuilder buildProject LifecycleModuleBuilder java    at org apache maven lifecycle internal LifecycleModuleBuilder buildProject LifecycleModuleBuilder java    at org apache maven lifecycle internal LifecycleStarter singleThreadedBuild LifecycleStarter java    at org apache maven lifecycle internal LifecycleStarter execute LifecycleStarter java    at org apache maven DefaultMaven doExecute DefaultMaven java    at org apache maven DefaultMaven execute DefaultMaven java    at org apache maven cli MavenCli execute MavenCli java    at org apache maven cli MavenCli doMain MavenCli java    at org apache maven cli MavenCli main MavenCli java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org codehaus plexus classworlds launcher Launcher launchEnhanced Launcher java    at org codehaus plexus classworlds launcher Launcher launch Launcher java    at org codehaus plexus classworlds launcher Launcher mainWithExitCode Launcher java    at org codehaus plexus classworlds launcher Launcher main Launcher java   Caused by  org apache camel FailedToCreateRouteException   Failed to create route route   Route route [[From[cxf  incident?bus cxfamp serviceClass org     because of Failed to resolve endpoint   cxf  incident?bus cxfamp serviceClass org apache camel example reportincident ReportIncidentEndpointamp wsdlURL etcFreport_incident wsdl due to   Could not find a suitable setter for property   bus as there isn't a setter method with same type   java lang String nor type conversion possible   No type converter available to convert from type   java lang String to the required type   org apache cxf Bus with value cxf at org apache camel model RouteDefinition addRoutes RouteDefinition java    at org apache camel impl DefaultCamelContext startRoute DefaultCamelContext java    at org apache camel impl DefaultCamelContext startRouteDefinitions DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStartCamel DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStart DefaultCamelContext java    at org apache camel spring SpringCamelContext doStart SpringCamelContext java    at org apache camel support ServiceSupport start ServiceSupport java    at org apache camel impl DefaultCamelContext start DefaultCamelContext java    at org apache camel spring SpringCamelContext maybeStart SpringCamelContext java    at org apache camel spring SpringCamelContext onApplicationEvent SpringCamelContext java    at org apache camel spring CamelContextFactoryBean onApplicationEvent CamelContextFactoryBean java    at org springframework context event SimpleApplicationEventMulticaster multicastEvent SimpleApplicationEventMulticaster java    at org springframework context support AbstractApplicationContext publishEvent AbstractApplicationContext java    at org springframework context support AbstractApplicationContext finishRefresh AbstractApplicationContext java    at org springframework context support AbstractApplicationContext refresh AbstractApplicationContext java    at org springframework web context ContextLoader configureAndRefreshWebApplicationContext ContextLoader java    at org springframework web context ContextLoader initWebApplicationContext ContextLoader java    at org springframework web context ContextLoaderListener contextInitialized ContextLoaderListener java    at org eclipse jetty server handler ContextHandler startContext ContextHandler java    at org eclipse jetty servlet ServletContextHandler startContext ServletContextHandler java    at org eclipse jetty webapp WebAppContext startContext WebAppContext java    at org eclipse jetty server handler ContextHandler doStart ContextHandler java    at org eclipse jetty webapp WebAppContext doStart WebAppContext java    at org mortbay jetty plugin JettyWebAppContext doStart JettyWebAppContext java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerCollection doStart HandlerCollection java    at org eclipse jetty server handler ContextHandlerCollection doStart ContextHandlerCollection java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerCollection doStart HandlerCollection java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerWrapper doStart HandlerWrapper java    at org eclipse jetty server Server doStart Server java    at org mortbay jetty plugin JettyServer doStart JettyServer java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org mortbay jetty plugin AbstractJettyMojo startJetty AbstractJettyMojo java    at org mortbay jetty plugin AbstractJettyMojo execute AbstractJettyMojo java    at org mortbay jetty plugin JettyRunMojo execute JettyRunMojo java    at org apache maven plugin DefaultBuildPluginManager executeMojo DefaultBuildPluginManager java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal LifecycleModuleBuilder buildProject LifecycleModuleBuilder java    at org apache maven lifecycle internal LifecycleModuleBuilder buildProject LifecycleModuleBuilder java    at org apache maven lifecycle internal LifecycleStarter singleThreadedBuild LifecycleStarter java    at org apache maven lifecycle internal LifecycleStarter execute LifecycleStarter java    at org apache maven DefaultMaven doExecute DefaultMaven java    at org apache maven DefaultMaven execute DefaultMaven java    at org apache maven cli MavenCli execute MavenCli java    at org apache maven cli MavenCli doMain MavenCli java    at org apache maven cli MavenCli main MavenCli java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org codehaus plexus classworlds launcher Launcher launchEnhanced Launcher java    at org codehaus plexus classworlds launcher Launcher launch Launcher java    at org codehaus plexus classworlds launcher Launcher mainWithExitCode Launcher java    at org codehaus plexus classworlds launcher Launcher main Launcher java   Caused by  org apache camel ResolveEndpointFailedException   Failed to resolve endpoint   cxf  incident?bus cxfamp serviceClass org apache camel example reportincident ReportIncidentEndpointamp wsdlURL etcFreport_incident wsdl due to   Could not find a suitable setter for property   bus as there isn't a setter method with same type   java lang String nor type conversion possible   No type converter available to convert from type   java lang String to the required type   org apache cxf Bus with value cxf at org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java    at org apache camel util CamelContextHelper getMandatoryEndpoint CamelContextHelper java    at org apache camel model RouteDefinition resolveEndpoint RouteDefinition java    at org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java    at org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java    at org apache camel model FromDefinition resolveEndpoint FromDefinition java    at org apache camel impl DefaultRouteContext getEndpoint DefaultRouteContext java    at org apache camel model RouteDefinition addRoutes RouteDefinition java    at org apache camel model RouteDefinition addRoutes RouteDefinition java    at org apache camel impl DefaultCamelContext startRoute DefaultCamelContext java    at org apache camel impl DefaultCamelContext startRouteDefinitions DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStartCamel DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStart DefaultCamelContext java    at org apache camel spring SpringCamelContext doStart SpringCamelContext java    at org apache camel support ServiceSupport start ServiceSupport java    at org apache camel impl DefaultCamelContext start DefaultCamelContext java    at org apache camel spring SpringCamelContext maybeStart SpringCamelContext java    at org apache camel spring SpringCamelContext onApplicationEvent SpringCamelContext java    at org apache camel spring CamelContextFactoryBean onApplicationEvent CamelContextFactoryBean java    at org springframework context event SimpleApplicationEventMulticaster multicastEvent SimpleApplicationEventMulticaster java    at org springframework context support AbstractApplicationContext publishEvent AbstractApplicationContext java    at org springframework context support AbstractApplicationContext finishRefresh AbstractApplicationContext java    at org springframework context support AbstractApplicationContext refresh AbstractApplicationContext java    at org springframework web context ContextLoader configureAndRefreshWebApplicationContext ContextLoader java    at org springframework web context ContextLoader initWebApplicationContext ContextLoader java    at org springframework web context ContextLoaderListener contextInitialized ContextLoaderListener java    at org eclipse jetty server handler ContextHandler startContext ContextHandler java    at org eclipse jetty servlet ServletContextHandler startContext ServletContextHandler java    at org eclipse jetty webapp WebAppContext startContext WebAppContext java    at org eclipse jetty server handler ContextHandler doStart ContextHandler java    at org eclipse jetty webapp WebAppContext doStart WebAppContext java    at org mortbay jetty plugin JettyWebAppContext doStart JettyWebAppContext java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerCollection doStart HandlerCollection java    at org eclipse jetty server handler ContextHandlerCollection doStart ContextHandlerCollection java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerCollection doStart HandlerCollection java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerWrapper doStart HandlerWrapper java    at org eclipse jetty server Server doStart Server java    at org mortbay jetty plugin JettyServer doStart JettyServer java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org mortbay jetty plugin AbstractJettyMojo startJetty AbstractJettyMojo java    at org mortbay jetty plugin AbstractJettyMojo execute AbstractJettyMojo java    at org mortbay jetty plugin JettyRunMojo execute JettyRunMojo java    at org apache maven plugin DefaultBuildPluginManager executeMojo DefaultBuildPluginManager java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal LifecycleModuleBuilder buildProject LifecycleModuleBuilder java    at org apache maven lifecycle internal LifecycleModuleBuilder buildProject LifecycleModuleBuilder java    at org apache maven lifecycle internal LifecycleStarter singleThreadedBuild LifecycleStarter java    at org apache maven lifecycle internal LifecycleStarter execute LifecycleStarter java    at org apache maven DefaultMaven doExecute DefaultMaven java    at org apache maven DefaultMaven execute DefaultMaven java    at org apache maven cli MavenCli execute MavenCli java    at org apache maven cli MavenCli doMain MavenCli java    at org apache maven cli MavenCli main MavenCli java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org codehaus plexus classworlds launcher Launcher launchEnhanced Launcher java    at org codehaus plexus classworlds launcher Launcher launch Launcher java    at org codehaus plexus classworlds launcher Launcher mainWithExitCode Launcher java    at org codehaus plexus classworlds launcher Launcher main Launcher java   Caused by  java lang IllegalArgumentException   Could not find a suitable setter for property   bus as there isn't a setter method with same type   java lang String nor type conversion possible   No type converter available to convert from type   java lang String to the required type   org apache cxf Bus with value cxf at org apache camel util IntrospectionSupport setProperty IntrospectionSupport java    at org apache camel util IntrospectionSupport setProperty IntrospectionSupport java    at org apache camel util IntrospectionSupport setProperties IntrospectionSupport java    at org apache camel util EndpointHelper setProperties EndpointHelper java    at org apache camel impl DefaultComponent setProperties DefaultComponent java    at org apache camel component cxf CxfComponent createEndpoint CxfComponent java    at org apache camel impl DefaultComponent createEndpoint DefaultComponent java    at org apache camel impl DefaultCamelContext getEndpoint DefaultCamelContext java    at org apache camel util CamelContextHelper getMandatoryEndpoint CamelContextHelper java    at org apache camel model RouteDefinition resolveEndpoint RouteDefinition java    at org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java    at org apache camel impl DefaultRouteContext resolveEndpoint DefaultRouteContext java    at org apache camel model FromDefinition resolveEndpoint FromDefinition java    at org apache camel impl DefaultRouteContext getEndpoint DefaultRouteContext java    at org apache camel model RouteDefinition addRoutes RouteDefinition java    at org apache camel model RouteDefinition addRoutes RouteDefinition java    at org apache camel impl DefaultCamelContext startRoute DefaultCamelContext java    at org apache camel impl DefaultCamelContext startRouteDefinitions DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStartCamel DefaultCamelContext java    at org apache camel impl DefaultCamelContext doStart DefaultCamelContext java    at org apache camel spring SpringCamelContext doStart SpringCamelContext java    at org apache camel support ServiceSupport start ServiceSupport java    at org apache camel impl DefaultCamelContext start DefaultCamelContext java    at org apache camel spring SpringCamelContext maybeStart SpringCamelContext java    at org apache camel spring SpringCamelContext onApplicationEvent SpringCamelContext java    at org apache camel spring CamelContextFactoryBean onApplicationEvent CamelContextFactoryBean java    at org springframework context event SimpleApplicationEventMulticaster multicastEvent SimpleApplicationEventMulticaster java    at org springframework context support AbstractApplicationContext publishEvent AbstractApplicationContext java    at org springframework context support AbstractApplicationContext finishRefresh AbstractApplicationContext java    at org springframework context support AbstractApplicationContext refresh AbstractApplicationContext java    at org springframework web context ContextLoader configureAndRefreshWebApplicationContext ContextLoader java    at org springframework web context ContextLoader initWebApplicationContext ContextLoader java    at org springframework web context ContextLoaderListener contextInitialized ContextLoaderListener java    at org eclipse jetty server handler ContextHandler startContext ContextHandler java    at org eclipse jetty servlet ServletContextHandler startContext ServletContextHandler java    at org eclipse jetty webapp WebAppContext startContext WebAppContext java    at org eclipse jetty server handler ContextHandler doStart ContextHandler java    at org eclipse jetty webapp WebAppContext doStart WebAppContext java    at org mortbay jetty plugin JettyWebAppContext doStart JettyWebAppContext java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerCollection doStart HandlerCollection java    at org eclipse jetty server handler ContextHandlerCollection doStart ContextHandlerCollection java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerCollection doStart HandlerCollection java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org eclipse jetty server handler HandlerWrapper doStart HandlerWrapper java    at org eclipse jetty server Server doStart Server java    at org mortbay jetty plugin JettyServer doStart JettyServer java    at org eclipse jetty util component AbstractLifeCycle start AbstractLifeCycle java    at org mortbay jetty plugin AbstractJettyMojo startJetty AbstractJettyMojo java    at org mortbay jetty plugin AbstractJettyMojo execute AbstractJettyMojo java    at org mortbay jetty plugin JettyRunMojo execute JettyRunMojo java    at org apache maven plugin DefaultBuildPluginManager executeMojo DefaultBuildPluginManager java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal MojoExecutor execute MojoExecutor java    at org apache maven lifecycle internal LifecycleModuleBuilder buildProject LifecycleModuleBuilder java    at org apache maven lifecycle internal LifecycleModuleBuilder buildProject LifecycleModuleBuilder java    at org apache maven lifecycle internal LifecycleStarter singleThreadedBuild LifecycleStarter java    at org apache maven lifecycle internal LifecycleStarter execute LifecycleStarter java    at org apache maven DefaultMaven doExecute DefaultMaven java    at org apache maven DefaultMaven execute DefaultMaven java    at org apache maven cli MavenCli execute MavenCli java    at org apache maven cli MavenCli doMain MavenCli java    at org apache maven cli MavenCli main MavenCli java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org codehaus plexus classworlds launcher Launcher launchEnhanced Launcher java    at org codehaus plexus classworlds launcher Launcher launch Launcher java    at org codehaus plexus classworlds launcher Launcher mainWithExitCode Launcher java    at org codehaus plexus classworlds launcher Launcher main Launcher java           INFO  oejs AbstractConnector  Started SelectChannelConnector@        
0;camelexamplecxftomcat failed   ;By accessing 'http  localhost  camelexamplecxftomcatwebservicesincident?wsdl' I get the following exception  Apr         PM org apache catalina core StandardWrapperValve invokeSEVERE   Allocate exception for servlet CXFServletorg springframework beans factory NoSuchBeanDefinitionException   No bean named 'cxf' is defined at org springframework beans factory support DefaultListableBeanFactory getBeanDefinition DefaultListableBeanFactory java    at org springframework beans factory support AbstractBeanFactory getMergedLocalBeanDefinition AbstractBeanFactory java    at org springframework beans factory support AbstractBeanFactory doGetBean AbstractBeanFactory java    at org springframework beans factory support AbstractBeanFactory getBean AbstractBeanFactory java    at org springframework context support AbstractApplicationContext getBean AbstractApplicationContext java    at org apache cxf transport servlet CXFServlet loadBus CXFServlet java    at org apache cxf transport servlet CXFNonSpringServlet init CXFNonSpringServlet java    at org apache catalina core StandardWrapper initServlet StandardWrapper java    at org apache catalina core StandardWrapper loadServlet StandardWrapper java    at org apache catalina core StandardWrapper allocate StandardWrapper java    at org apache catalina core StandardWrapperValve invoke StandardWrapperValve java    at org apache catalina core StandardContextValve invoke StandardContextValve java    at org apache catalina authenticator AuthenticatorBase invoke AuthenticatorBase java    at org apache catalina core StandardHostValve invoke StandardHostValve java    at org apache catalina valves ErrorReportValve invoke ErrorReportValve java    at org apache catalina valves AccessLogValve invoke AccessLogValve java    at org apache catalina core StandardEngineValve invoke StandardEngineValve java    at org apache catalina connector CoyoteAdapter service CoyoteAdapter java    at org apache coyote http AbstractHttpProcessor process AbstractHttpProcessor java    at org apache coyote AbstractProtocol$AbstractConnectionHandler process AbstractProtocol java    at org apache tomcat util net JIoEndpoint$SocketProcessor run JIoEndpoint java    at java util concurrent ThreadPoolExecutor$Worker runTask ThreadPoolExecutor java    at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java    at java lang Thread run Thread java      
0;Restarting routes using sql aggregation repository may lead to Class loading issues   ;Its the code in ClassLoadingAwareObjectInputStream in camelsql that has the bug    
0;Make SqsConsumer support async processors   ;Switch SqsConsumer from using getProcessor   process   to getAsyncProcessor   process   with a callback to allow use of async processors As I understand it is ok to always use the async processor call as its to show that 'the caller supports having the exchange asynchronously processed' rather than specifically always process it asynchronously    
0;Camel archetype component  Use bundle packaging so component is ready to install in OSGi   ;The component archetypes should have the pom xml changed so they generate a project that use bundle packaging with the felix bundle plugin Then the component is ready to install in OSGi See nabblehttp  camel  n nabble comCreatingnewprocessorcomponentstd html   
0;AdviceWith doesn't work with doTry   ;I have the following route definition   from 'direct  billing_' + operation   routeId getRouteId operation    errorHandler noErrorHandler     propagate exceptions to the parent route  validate body   isInstanceOf  com cleverlance cleverbss integration modules in customer model Customer class    beanRef BILLING_CUSTOMER_ROUTE_BEAN  'createRequestFor' + WordUtils capitalize operation    SetCustomer gt  XML  marshal jaxbIn   doTry    to uri + '?messageSender billingSender'  id 'toURI'   doCatch AlreadyExistsException class   setProperty exPropertyName  property Exchange EXCEPTION_CAUGHT    end    choice    when property exPropertyName  isNull     XML gt  SetCustomerResponse  unmarshal jaxbOut   endChoice   And I would like to replace TO in the tests   getCamelContext   getRouteDefinition BillingCustomerRoutes ROUTE_ID_UPDATE_CUSTOMER   adviceWith getCamelContext    new AdviceWithRouteBuilder     @Override public void configure   throws Exception   weaveByType ToDefinition class  replace   process new Processor     @Override public void process Exchange exchange  throws Exception   throw new AlreadyExistsException 'msg'  new AlreadyExists                When I use weaveById 'toURI'  or weaveByToString    it doesn't work neither    
0;Mina UDP default codec should keep the data as byte[]   ;The MinaUdpProtocolCodecFactory on the consumer side decodes data from an udp datagram to a byte[]  byte[] bytes   context getTypeConverter   convertTo byte[] class  in  On the provider side where it gets back to the wire it gets converted to a string   String value   context getTypeConverter   convertTo String class  message  and then set to the ByteBuffer with the given charset The result is that the original datagram is not valid anymore  The default codec should the data convert to a byte array or keep the data as byte array    
0;debugBefore   and debugAfter   not called if unit test extends CamelBlueprintTestSupport   ;A test that extends CamelBlueprintTestSupport does not get its debugBefore   and debugAfter   methods called    
0;Property placeholder optimization broke placeholders in Spring camelContext configuration   ;We are upgrading from    to     and are getting an error on startup Example Spring configuration  lt camelContext id 'camel' handleFault 'true' autoStartup '  autoStartup  ' xmlns 'http  camel apache orgschemaspring'gt  lt contextScan gt  lt jmxAgent id 'camelAgent' createConnector 'true' registryPort '  jmxPort  ' gt lt camelContextgt lt bean id 'properties' class 'org apache camel component properties PropertiesComponent'gt  lt property name 'location' value 'classpath  foo properties'gt lt beangt As you can see  we use the Camel properties component to configure Camel autostartup  JMX port  etc This is the error we're getting on startup  org springframework beans factory BeanCreationException   Error creating bean with name 'properties' defined in class path resource [orgapachecamelcomponentpropertiesSpringPropertiesComponentTest xml]   Initialization of bean failed  nested exception is org springframework beans factory BeanCreationException   Error creating bean with name 'camel'   Invocation of init method failed  nested exception is java lang IllegalArgumentException   PropertiesComponent with name properties must be defined in CamelContext to support property placeholders  at org springframework beans factory support AbstractAutowireCapableBeanFactory doCreateBean AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractAutowireCapableBeanFactory createBean AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractBeanFactory$ getObject AbstractBeanFactory java    at org springframework beans factory support DefaultSingletonBeanRegistry getSingleton DefaultSingletonBeanRegistry java    at org springframework beans factory support AbstractBeanFactory doGetBean AbstractBeanFactory java    at org springframework beans factory support AbstractBeanFactory getBean AbstractBeanFactory java    at org springframework beans factory support DefaultListableBeanFactory preInstantiateSingletons DefaultListableBeanFactory java    at org springframework context support AbstractApplicationContext finishBeanFactoryInitialization AbstractApplicationContext java    at org springframework context support AbstractApplicationContext refresh AbstractApplicationContext java    at org springframework context support ClassPathXmlApplicationContext lt initgt  ClassPathXmlApplicationContext java    at org springframework context support ClassPathXmlApplicationContext lt initgt  ClassPathXmlApplicationContext java    at org apache camel component properties SpringPropertiesComponentTest createApplicationContext SpringPropertiesComponentTest java    at org apache camel spring SpringTestSupport setUp SpringTestSupport java    at junit framework TestCase runBare TestCase java    at org apache camel TestSupport runBare TestSupport java    at junit framework TestResult$ protect TestResult java    at junit framework TestResult runProtected TestResult java    at junit framework TestResult run TestResult java    at junit framework TestCase run TestCase java    at junit framework TestSuite runTest TestSuite java    at junit framework TestSuite run TestSuite java    at org junit internal runners JUnitClassRunner run JUnitClassRunner java    at org eclipse jdt internal junit runner JUnitTestReference run JUnitTestReference java    at org eclipse jdt internal junit runner TestExecution run TestExecution java    at org eclipse jdt internal junit runner RemoteTestRunner runTests RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner runTests RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner run RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner main RemoteTestRunner java   Caused by   org springframework beans factory BeanCreationException   Error creating bean with name 'camel'   Invocation of init method failed  nested exception is java lang IllegalArgumentException   PropertiesComponent with name properties must be defined in CamelContext to support property placeholders  at org springframework beans factory support AbstractAutowireCapableBeanFactory initializeBean AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractAutowireCapableBeanFactory doCreateBean AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractAutowireCapableBeanFactory createBean AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractBeanFactory$ getObject AbstractBeanFactory java    at org springframework beans factory support DefaultSingletonBeanRegistry getSingleton DefaultSingletonBeanRegistry java    at org springframework beans factory support AbstractBeanFactory doGetBean AbstractBeanFactory java    at org springframework beans factory support AbstractBeanFactory getBean AbstractBeanFactory java    at org springframework context support AbstractApplicationContext getBean AbstractApplicationContext java    at org apache camel spring CamelBeanPostProcessor$ getOrLookupCamelContext CamelBeanPostProcessor java    at org apache camel impl DefaultCamelBeanPostProcessor postProcessBeforeInitialization DefaultCamelBeanPostProcessor java    at org apache camel spring CamelBeanPostProcessor postProcessBeforeInitialization CamelBeanPostProcessor java    at org springframework beans factory support AbstractAutowireCapableBeanFactory applyBeanPostProcessorsBeforeInitialization AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractAutowireCapableBeanFactory initializeBean AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractAutowireCapableBeanFactory doCreateBean AbstractAutowireCapableBeanFactory java         moreCaused by   java lang IllegalArgumentException   PropertiesComponent with name properties must be defined in CamelContext to support property placeholders  at org apache camel impl DefaultCamelContext resolvePropertyPlaceholders DefaultCamelContext java    at org apache camel util CamelContextHelper parseBoolean CamelContextHelper java    at org apache camel core xml AbstractCamelContextFactoryBean initCamelContext AbstractCamelContextFactoryBean java    at org apache camel core xml AbstractCamelContextFactoryBean afterPropertiesSet AbstractCamelContextFactoryBean java    at org springframework beans factory support AbstractAutowireCapableBeanFactory invokeInitMethods AbstractAutowireCapableBeanFactory java    at org springframework beans factory support AbstractAutowireCapableBeanFactory initializeBean AbstractAutowireCapableBeanFactory java         moreI believe this is a sideeffect of the optimization introduced in CAMEL  which was incorporated into    and    I'll attach a small patch that modifies one of the unit tests in the camelspring component to reproduce the issue    
0;Camelvalidator not able to resolve schema when using useSharedSchema false   ;This one works   lt to uri 'validator  METAINFxsdfundscheckmaintainavailablebalance xsd' gt This one doesn't   lt to uri 'validator  METAINFxsdfundscheckmaintainavailablebalance xsd?useSharedSchema false' gt it fails with  org xml sax SAXParseException   schema_reference    Failed to read schema document 'null'  because   could not find the document    the document could not be read    the root element of the document is not lt xsd  schemagt  The streamsource object in the validator is populated  but the buffered inputstream object has no content   
0;Moving logic out of getTypeConverter   ;TypeConverter is never added as a service if we use the method setTypeConverter    Used through camelguice you had expect this service to be active without additional instruction See    http  camel  n nabble comAmbiguityinDefaultCamelContextwithTypeConvertertd html   
0;Control Bus  Add suspend and resume actions   ;We have start and stop actions  But we need suspend and resume as well    
0;camelnetty  Loading key store and trust stores should support classpath as well   ;The options keyStoreFile and trustStoreFile is currently java io File based We should use the resource loader API in Camel so we can load from classpath as well    
1;DefaultShutdownStrategy shutdown timeout of  will never timeout and go in negative time   ;A timeout of  won't timeout in the instant  the time will go negative  camelcontext stopRoute routeId    TimeUnit SECONDS  false    org apache camel impl DefaultShutdownStrategy     Waiting as there are still  inflight and pending exchanges to complete  timeout in  seconds  org apache camel impl DefaultShutdownStrategy     Waiting as there are still  inflight and pending exchanges to complete  timeout in  seconds  org apache camel impl DefaultShutdownStrategy     Waiting as there are still  inflight and pending exchanges to complete  timeout in  seconds  Found a post related to it there    http  camel  n nabble comForcefullyshuttingdownroutestd html   
0;link to camel registry in camelstax is missing   ;   
0;Validations exception should include linecolumn   ;When a 'validator  ' route step reports exceptions  they should include the linecolumn location Here is a small patch that adds support for it    
0;camelsjms  Consumers should always use dedicated Sessions   ;If you add more then one MessageListener to a Session then that session will use a single thread to notify each MessageListener in turn  Which defeats the purpose of using multiple MessageListeners  at least in my opinion sessionCount in SjmsEndpoint should be ignored for Consumers  each Consumer  consumerCount  should instead use a dedicated Session  like what happens when transactions are enabled    
0;vm component  Stopping a route when using multipleConsumers should not stop MP if there is other routes using it   ;See nabblehttp  camel  n nabble comRemovingroutestopsotherroutesfromthesameproducertp html   
0;Headers are not set correctly in some situation   ;If I define a route like this   from 'lt MyUrlgt test'   setHeader Exchange HTTP_RESPONSE_CODE  simple ''    my http client get a  response code  If a add something else on the route like   from 'lt MyUrlgt test'   setHeader Exchange HTTP_RESPONSE_CODE  simple ''    log ''  my http client get a  response code as expected  forum   http  camel  n nabble comroutehttpcodetd html   
0;New restlet endpoints don't work if route is created after restlet server is started    ;If a route with restlet endponit is created after restlet server is started  restlet can't handle the endpoint correctly  because restlet translate all URI pattern of routes at server starting  but don't it for later attached routes  So we must translate the URI pattern before attach it to restlet after restlet server is started  See http  restlet tigris orgissuesshow_bug cgi?id     
0;Route with suspended SedaConsumer can't be stopped correctly   ;Route with suspended SedaConsumer can't be stopped correctly  Here is test   @Test public void testOriginalSedaShutdownSuspended   throws Exception   SedaEndpoint endpoint   context   getEndpoint 'seda  test'  SedaEndpoint class   context   addRouteDefinition new RouteDefinition    id 'testRoute'   from endpoint   to 'log  body'     Setlt SedaConsumergt  consumers   endpoint getConsumers    Assert assertFalse consumers isEmpty     for  SedaConsumer sedaConsumer   consumers    sedaConsumer suspend      Assert assertTrue context   stopRoute 'testRoute'    TimeUnit SECONDS  true        
0;cxf endpoint's should log the parsing exception when failing to extract the root element name   ;When the content is not xml and the root element is not correctly extracted by the CxfEndpoint's root element extraction method  the original exception is not logged but a subsequent exception  not the original one  will be thrown upwards  This behavior is confusing and could potentially lead to another issue depending on what the stax parser does on its getLocalName   Currently  when r next   throws an exception  it's ignored and the subsequent call to r getLocalName  's exception is thrown So I think it's preferable to log the original exception and simply return null as in the other cases for not finding the root element Logging the original exception will provide a more helpful information in spotting the issue  as it will show up like  com ctc wstx exc WstxUnexpectedCharException   Unexpected character 'c'  code   in prolog  expected 'lt 'This is an action to the point raised in http  camel  n nabble comTestroutewithCXFendpointtd html   
0;File consumer  Race condition for markerFile read lock strategy   ;See nabblehttp  camel  n nabble comFilemarkerFilestrategyraceconditiontp htmlWe should delete the  camelLock file last  as currently we move the processed file first  And there is a very tiny tiny window where another process could potential see the file and pickup it    
0;baseResource of Jetty ServletContextHandler does not work when project deployed as a bundle   ;If we package a camel websocket route  'websocket       newsTopic?sendToAll trueamp staticResources classpath  webapp'  as a bundle and set the staticResources as parameter  classpath  webapp   then the pages cannot be accessed from the browserCode should be  if  resources[] equals 'classpath'     URL url   this getCamelContext   getClassResolver   loadResourceAsURL resources[]   context setBaseResource Resource newResource url      else if  resources[] equals 'file'     context setBaseResource Resource newResource resources[]        
0;endChoice   has no effect in nested choice definition   ;I just upgraded from    to    and noticed that nested choice definitions started acting strangely  For example    choice    when header Exchange EXCEPTION_CAUGHT  isNotNull       setBody exceptionMessage   append SystemUtils LINE_SEPARATOR  append exceptionStackTrace      choice    when header HEADER_CONTROLLER_ID  isNotNull     a  setHeader Exchange FILE_NAME  simple AUDIT_CONTROLLER_FAILED_FILENAME + ' error log'    to ENDPOINT_AUDIT_DIR   otherwise    b  setHeader Exchange FILE_NAME  simple AUDIT_FAILED_FILENAME + ' error log'    to ENDPOINT_AUDIT_DIR   INSERTING  end   here solves the issue  endChoice    log LoggingLevel WARN  'DLQ written   $ in header CamelExceptionCaught '  otherwise      log LoggingLevel WARN  'DLQ written' + MESSAGE_LOG_FORMAT   end  I have a test that is supposed to go through  and a  However it now passes through  and !It looks like the endChoice   in b has no effect and the otherwise   in  is executed instead of b  Inserting and end   statement as shown seems to solve the issue  but it looks suspicious It's probably a regression introduced by the fix for CAMEL  but I'm not  sure    
0;camelquartz  Stateful job  Redeploying bundlewar and having changed endpoint uri issue   ;Seehttp  camel  n nabble comIncamequartzrouteafterbundleupdatejobsarenottriggredtp htmlIn these situations we should use job name to name the job unique so when you change the endpoint uri and redeploy the appsbundles  then camelquartz can find the old job in the quartz persistent store There may be logic needed to lookup using job name as the unique name in these situations  and then allow endpoint uri options to change over time  such as the cron trigger etc  Which should be adjusted accordingly as well    
0;connectionTimeout property is ignored by JavaMail   ;JavaMail ignores the timeout values set via the connectionTimeout property  Within MailConfiguration    createJavaMailProperties the mail lt protocolgt  timeout and mail lt protocolgt  connectionTimeout parameters are set as long values In com sun mail util PropUtil    getInt  line   the property is ignored since it is a long valueChanging the type of connectionTimeout from long to int would be the cleanest solution  another suggestion would be to downcast the connectionTimeout in MailConfiguration    createJavaMailProperties   
0;NULL values are not supported in named parameters   ;Due to the bug in the DefaultSqlPrepareStatementStrategy there no ability to use NULL values Following query will be failed  if we try to use NULL as a parameter value  select a  b from foo where    param IS NOT NULL AND a gt     OR    param IS NOT NULL AND b gt   We'll get an error   Caused by   java sql SQLException   Number of parameters mismatch  Expected     was  at org apache camel component sql DefaultSqlPrepareStatementStrategy populateStatement DefaultSqlPrepareStatementStrategy java    ~ camelsql   jar      at org apache camel component sql SqlProducer$ doInPreparedStatement SqlProducer java    ~ camelsql   jar      at org apache camel component sql SqlProducer$ doInPreparedStatement SqlProducer java    ~ camelsql   jar      at org springframework jdbc core JdbcTemplate execute JdbcTemplate java    ~ springjdbc   RELEASE jar     RELEASE Fix is quite simple   iterator implementation  returned by DefaultSqlPrepareStatementStrategy createPopulateIterator    should be changed as follows   return new Iteratorlt Objectgt      private NamedQueryParser parser   new NamedQueryParser query   private String nextParam  private boolean done  @Override public boolean hasNext     if  done    return false    if  nextParam    null    nextParam   parser next    if  nextParam    null    done   true      return nextParam !  null    @Override public Object next     if !hasNext     throw new NoSuchElementException      boolean contains   bodyMap !  null ? bodyMap containsKey nextParam     false  contains |  headerMap !  null ? headerMap containsKey nextParam     false  if  !contains    throw new RuntimeExchangeException 'Cannot find key [' + nextParam + '] in message body or headers to use when setting named parameter in query [' + query + ']'  exchange      get from body before header Object next   bodyMap !  null ? bodyMap get nextParam     null  if  next    null    next   headerMap !  null ? headerMap get nextParam     null    nextParam   null  return next    @Override public void remove      noop        
0;Can't access to length of Array  java  from simple language   ;Cannot evaluate length on java lang String[] in simpleI suspect this is because this is part of the language itself  But still  why not?repro steprun this   ?xml version ' ' encoding 'UTF'?gt lt routes xmlns 'http  camel apache orgschemaspring' gt  lt routegt  lt from uri 'timer  test?repeatCount 'gt  lt setBodygt  lt groovygt [[  'Chaine_avec_des_underscores'    'c']  ['d'  'e'  'f']]lt groovygt  lt setBodygt  lt splitgt  lt simplegt $ body lt simplegt  lt setHeader headerName 'splittedColumn'gt  lt simplegt $ body[] split '_'  lt simplegt  lt setHeadergt  lt log message '$ header splittedColumn length 'gt  lt splitgt  lt routegt lt routesgt errors with  org apache camel language bean RuntimeBeanExpressionException   Failed to invoke method    length on null due to   org apache camel language bean RuntimeBeanExpressionException   Failed to invoke method   length on null due to   org apache camel component bean MethodNotFoundException   Method with name   length not found on bean   [Ljava lang String @ of type   [Ljava lang String   Exchange[Message   [d  e  f]]   
0;org apache camel main MaindoStop   throws java lang IndexOutOfBoundsException   ;When calling a Camel application with parameter h all parameters are printed an the program exits But it is no clean exit  it throws an java lang IndexOutOfBoundsException The reason for this is the expression in doStop    +getCamelContexts   get   stop   get   returns null  if no context is initialized yet See camelusers mailinglist  thread 'Bug in org apache camel main MaindoStop   ?'   
0;SFTP   NPE if no private key file is supplied   ;Hi a NPE is thrown if no private key file is supplied in the configuration for SFTP  The error isCaused by   java lang NullPointerException   while trying to get the length of an array loaded from local variable 'foo'at com jcraft jsch Buffer putString Buffer java   I have analysed the code a bit and found that the problem is causedby the class SftpOperations  The method createSession sets the userInfo for the seesion by an inline class  Here the method promptKeyboardInteractive does not work correctly if no private key file is supplied  In that case JSCH switches to userpw authorization and this method is called  But since there is no password maintained the configation object returns NULL  The present implementation adds it to the string array causing the error in JSCH  JSCH either wants a NULL string array or an empty string array  I have tested both   So the code should look e g  as follows   public String[] promptKeyboardInteractive String destination  String name  String instruction  String[] prompt  boolean[] echo    String password   configuration getPassword    if  password    null    return new String[]    else   return new String[]   password       With that change JSCH returnsCaused by   java io FileNotFoundException    datasshid_rsa  No such file or directory  at java io FileInputStream open Native Method and that is the real cause of the error Best Regards J?rg   
0;Routing slip EIP  Does not send ExchangeSentEvent notifications   ;When using routing slip eip  then we only get the ExchangeSendingEvent  what we miss is the ExchangSentEvent    
0;FtpConsumer fills up log file with 'Cannot connectlogin' WARN level messages   ;If the FTP server becomes unavailable  the container log gets flooded with WARNlevel messages and gets filled with lines like        WARN  org apache camel component file remote FtpConsumer  Cannot connectlogin to   ftp  adpt@localhost    Will skip this poll       WARN  org apache camel component file remote FtpConsumer  Cannot connectlogin to   ftp  adpt@localhost    Will skip this poll       WARN  org apache camel component file remote FtpConsumer  Cannot connectlogin to   ftp  adpt@localhost    Will skip this poll i e  a WARN message gets added to the log every five seconds  We only need to be notified once per incidence The issue is in org apache camel component file remote RemoteFileConsumer prePollCheck   I recommend a table of latches  keyed by endpoint key  The latch is set when the initial warning is logged  then cleared upon any subsequent successful connection    
0;camelnetty  unable to consume on UDP multicast addresses   ;When using a route to listen to UDP multicast address   no messages seem to get consumed  No exceptions are observed  Multicast address is defined as addresses in the range of     through      http  en wikipedia orgwikiMulticast_address Input was simple string  e g  'Test String' Example Route  lt routegt  lt from uri 'netty  udp       ?allowDefaultCodec falseamp sync falseamp broadcast true'gt lt routegt Found an old topic in the user discussion forum that seems related  Did not find any unit tests in the Camel source code exercising this behavior   http  camel  n nabble comcamelnettyandmulticasttt html    
0;Wrong InputStream reference is used in method storeFile of class ScpOperations   ;In method storeFile String name  Exchange exchange  of class org apache camel component jsch ScpOperations the wrong reference of the required input stream is used  line    Should be write channel  file  is  cfg   instead of write channel  file  exchange getIn   getMandatoryBody InputStream class   cfg     
0;camelcxf should shutdown the bus when the endpoint is stopped    ;If the bus is create by cxfEndpoint itself  cxfEndpoint should shutdown it when the endpoint is stopped    
0;JMX  browsable endpoints such as seda has some attributes listed as unavaiable   ;See screenshotThe problem is related to extending a ManagedEndpoint then some options is shown as unavaiable in JMX consoles    
0;SFTP endpoint fails if the server disconnected the socket   ;If the ssh server disconnects the socket held by an SFTP endpoint  and the disconnect option is not set to true  the next call to this endpoint will fail  A call after the failed call will reconnect  and succeed if the server is available again  The error message is as follows  SftpSimpleProduceDisconnectTestorg apache camel component file remote sftp SftpSimpleProduceDisconnectTesttestSftpSimpleProduce org apache camel component file remote sftp SftpSimpleProduceDisconnectTest org apache camel CamelExecutionException   Exception occurred during execution on the exchange   Exchange Message   Hello World  at org apache camel util ObjectHelper wrapCamelExecutionException ObjectHelper java    at org apache camel util ExchangeHelper extractResultBody ExchangeHelper java    at org apache camel impl DefaultProducerTemplate extractResultBody DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate extractResultBody DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate sendBodyAndHeader DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate sendBodyAndHeader DefaultProducerTemplate java    at org apache camel component file remote sftp SftpSimpleProduceDisconnectTest testSftpSimpleProduce SftpSimpleProduceDisconnectTest java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke Unknown Source  at sun reflect DelegatingMethodAccessorImpl invoke Unknown Source  at java lang reflect Method invoke Unknown Source  at org junit runners model FrameworkMethod$ runReflectiveCall FrameworkMethod java    at org junit internal runners model ReflectiveCallable run ReflectiveCallable java    at org junit runners model FrameworkMethod invokeExplosively FrameworkMethod java    at org junit internal runners statements InvokeMethod evaluate InvokeMethod java    at org junit internal runners statements RunBefores evaluate RunBefores java    at org junit internal runners statements RunAfters evaluate RunAfters java    at org junit rules TestWatcher$ evaluate TestWatcher java    at org junit rules RunRules evaluate RunRules java    at org junit runners ParentRunner runLeaf ParentRunner java    at org junit runners BlockJUnitClassRunner runChild BlockJUnitClassRunner java    at org junit runners BlockJUnitClassRunner runChild BlockJUnitClassRunner java    at org junit runners ParentRunner$ run ParentRunner java    at org junit runners ParentRunner$ schedule ParentRunner java    at org junit runners ParentRunner runChildren ParentRunner java    at org junit runners ParentRunner access$ ParentRunner java    at org junit runners ParentRunner$ evaluate ParentRunner java    at org junit internal runners statements RunBefores evaluate RunBefores java    at org junit internal runners statements RunAfters evaluate RunAfters java    at org junit runners ParentRunner run ParentRunner java    at org eclipse jdt internal junit runner JUnitTestReference run JUnitTestReference java    at org eclipse jdt internal junit runner TestExecution run TestExecution java    at org eclipse jdt internal junit runner RemoteTestRunner runTests RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner runTests RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner run RemoteTestRunner java    at org eclipse jdt internal junit runner RemoteTestRunner main RemoteTestRunner java   Caused by   org apache camel component file GenericFileOperationFailedException   Cannot change directory to   target at org apache camel component file remote SftpOperations doChangeDirectory SftpOperations java    at org apache camel component file remote SftpOperations changeCurrentDirectory SftpOperations java    at org apache camel component file remote SftpOperations storeFile SftpOperations java    at org apache camel component file GenericFileProducer writeFile GenericFileProducer java    at org apache camel component file GenericFileProducer processExchange GenericFileProducer java    at org apache camel component file remote RemoteFileProducer process RemoteFileProducer java    at org apache camel util AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge process AsyncProcessorConverterHelper java    at org apache camel processor CamelInternalProcessor process CamelInternalProcessor java    at org apache camel processor UnitOfWorkProducer process UnitOfWorkProducer java    at org apache camel impl ProducerCache$ doInProducer ProducerCache java    at org apache camel impl ProducerCache$ doInProducer ProducerCache java    at org apache camel impl ProducerCache doInProducer ProducerCache java    at org apache camel impl ProducerCache sendExchange ProducerCache java    at org apache camel impl ProducerCache send ProducerCache java    at org apache camel impl DefaultProducerTemplate send DefaultProducerTemplate java    at org apache camel impl DefaultProducerTemplate sendBodyAndHeader DefaultProducerTemplate java         moreCaused by       at com jcraft jsch ChannelSftp cd ChannelSftp java    at org apache camel component file remote SftpOperations doChangeDirectory SftpOperations java         moreCaused by   java io IOException   Pipe closed at java io PipedInputStream read Unknown Source  at java io PipedInputStream read Unknown Source  at com jcraft jsch ChannelSftp fill ChannelSftp java    at com jcraft jsch ChannelSftp header ChannelSftp java    at com jcraft jsch ChannelSftp _realpath ChannelSftp java    at com jcraft jsch ChannelSftp cd ChannelSftp java         more   
0;Predicates from java dsl are not dumped to xml correctly   ;Predicates defined in the java dsl are not dumped to xml when using jmx Eg  this java dsl route  from 'seda  a'  choice   when header 'test'  isNotNull    log 'not null'  end   to 'mock  a'  Will be dumped as this  lt ?xml version ' ' encoding 'UTF' standalone 'yes'?gt lt route group 'com example TestRoute' id 'route' xmlns 'http  camel apache orgschemaspring'gt  lt from uri 'seda  a'gt  lt choice id 'choice'gt  lt when id 'when'gt  lt expressionDefinitiongt  lt log message 'not null' id 'log'gt  lt whengt  lt choicegt  lt to uri 'mock  a' id 'to'gt lt routegt The lt expressionDefinitiongt  element should contain the expression This seems similar to CAMEL    
0;camelcmis component   test packages have the wrong name   ;Unit tests for camelcmis are under package org apache camel componenet instead of org apache camel componentActions    Rename folder srctestjavaorgapachecamelcomponenet to srctestjavaorgapachecamelcomponent  Fix the package name in each unit testAffected version    SNAPSHOT and before   
0;camelcxf ClassCastException when use cxf FailoverFeature   ;With PAYLOAD data format used  the first element in argument is casted to a CxfPayload instance and the argument is changed into a Listlt DOMSourcegt  instance by the method 'setParameters' in class org apache camel component cxf CxfEndpoint Then FailoverFeature calls retry  the classcast action throws a ClassCastException btw   'message remove DataFormat class ' at the end of the method 'setParameters' dosn't work  The method 'remove' is inherited from Map  and a new message with data format PAYLOAD is created when retry    
0;Add ability to connect to SQS queue of different owner   ;Unable to connect to Amazon SQS queue owned by a different account  In BB scenario  would like to have different accounts for owner  writer  and reader of a queue    
0;Support attaching to SQS queues where the user doesn't have permission to list the queues  manually build URL    ;Currently the code assume that the user either has permission to list all the queues on their account or run a query request to get the queue url  In situations where security is more controlled you might have permission to readwrite tofrom a queue but not have permission to query SQS for the URL  In these cases there needs to be a way to manually build the URL from the pieces in the configuration    
0;Add requestBufferSize and requestHeaderSize options for jetty   ;Add requestBufferSize and requestHeaderSize options for jetty server to allow configuration of allowable request header limitThis option is exposed by standalone jetty server but not exposed by cameljetty    
0;SimpleLanguage simple should detect if its a predicate and use that instead   ;When using predicates with the simple language static methods  then ppl should use the correct method  We should improve the javadoc  and as well add methods for easy to create predicates See nabblehttp  camel  n nabble comHowtocheckthatafileisemptytp html   
0;SJMS component throws class cast error when used with IBM Webshpere MQ   ;When using the IBM MQ JMS classes and pubsub over a TOPIC the JmsObjectFactory createMessageConsumer method throws a cast class exception  The session is being cast to a TopicSession which for MQ it is not Using pure jms this cast is not required as the session class is aware of the destination type    
0;FTP consumer  Add option to not use LIST command   ;If you want to download a single file  and you know the absolute name of the file  then you should be able to download the file  without using any LIST commands  As some usecases have permissions disabled for this  so you can only download that file only The ftpsftp consumers should have an option to ?useList false  so they do not use the list command    
0;Add allowNull option to @Converter to allow type converters to return null as valid response for special usecases   ;See nabblehttp  camel  n nabble comXpathparameterbindingNodeListvsNodetp htmlThis avoids the situation with the NodeList gt  Node converter that may return null the st time  and then its regarded as a misses for conversion in future attempts Just be annotation the method from@Converterto  @Converter allowNull   true Should allow to fix this  As then the type converter registry knows that a null response is valid    
0;Throttler does not honor time slots after period expires   ;Camel's Throttler eip uses time slots to calc what tasks need to be delayed and which don't  The time slots don't take into account period elapse  See from this mailing list question  http  camel  n nabble comCamelThrottlernotthrottlingasexpectedtd htmlI can recreate  and working on a patch    
0;Simple language  Have singleton language for better performance   ;We can optimize the simple language using in eg bean ognl expressions and the likes    
0;cameldozer  Does not work well in OSGi Blueprint   ;Dozer doesnt work to well in OSGi  It seems to work with spring  but fails with OSGi blueprint        | ERROR | l Console Thread | BlueprintContainerImpl | container BlueprintContainerImpl  |   org apache aries blueprint core     | Unable to start blueprint container for bundle blueorg osgi service blueprint container ComponentDefinitionException   Error when instantiating bean dozerMapper of class class org dozer DozerBeanMapper at org apache aries blueprint container BeanRecipe getInstance BeanRecipe java   [  org apache aries blueprint core    ] at org apache aries blueprint container BeanRecipe internalCreate BeanRecipe java   [  org apache aries blueprint core    ] at org apache aries blueprint container BeanRecipe internalCreate BeanRecipe java   [  org apache aries blueprint core    ] at org apache aries blueprint di AbstractRecipe$ call AbstractRecipe java   [  org apache aries blueprint core    ] at java util concurrent FutureTask$Sync innerRun FutureTask java   [    _] at java util concurrent FutureTask run FutureTask java   [    _] at org apache aries blueprint di AbstractRecipe create AbstractRecipe java   [  org apache aries blueprint core    ] at org apache aries blueprint container BlueprintRepository createInstances BlueprintRepository java   [  org apache aries blueprint core    ] at org apache aries blueprint container BlueprintRepository createAll BlueprintRepository java   [  org apache aries blueprint core    ] at org apache aries blueprint container BlueprintContainerImpl instantiateEagerComponents BlueprintContainerImpl java   [  org apache aries blueprint core    ] at org apache aries blueprint container BlueprintContainerImpl doRun BlueprintContainerImpl java   [  org apache aries blueprint core    ] at org apache aries blueprint container BlueprintContainerImpl run BlueprintContainerImpl java   [  org apache aries blueprint core    ] at org apache aries blueprint container BlueprintExtender createContainer BlueprintExtender java   [  org apache aries blueprint core    ] at org apache aries blueprint container BlueprintExtender modifiedBundle BlueprintExtender java   [  org apache aries blueprint core    ] at org apache aries util tracker hook BundleHookBundleTracker$Tracked customizerModified BundleHookBundleTracker java   [  org apache aries util    ] at org apache aries util tracker hook BundleHookBundleTracker$Tracked customizerModified BundleHookBundleTracker java   [  org apache aries util    ] at org apache aries util tracker hook BundleHookBundleTracker$AbstractTracked track BundleHookBundleTracker java   [  org apache aries util    ] at org apache aries util tracker hook BundleHookBundleTracker$Tracked bundleChanged BundleHookBundleTracker java   [  org apache aries util    ] at org apache aries util tracker hook BundleHookBundleTracker$BundleEventHook event BundleHookBundleTracker java   [  org apache aries util    ] at org apache felix framework util SecureAction invokeBundleEventHook SecureAction java   [org apache felix framework   jar  ] at org apache felix framework util EventDispatcher createWhitelistFromHooks EventDispatcher java   [org apache felix framework   jar  ] at org apache felix framework util EventDispatcher fireBundleEvent EventDispatcher java   [org apache felix framework   jar  ] at org apache felix framework Felix fireBundleEvent Felix java   [org apache felix framework   jar  ] at org apache felix framework Felix startBundle Felix java   [org apache felix framework   jar  ] at org apache felix framework Felix updateBundle Felix java   [org apache felix framework   jar  ] at org apache felix framework BundleImpl update BundleImpl java   [org apache felix framework   jar  ] at org apache felix framework BundleImpl update BundleImpl java   [org apache felix framework   jar  ] at org apache karaf shell osgi UpdateBundle doExecute UpdateBundle java   [  org apache karaf shell osgi    ] at org apache karaf shell osgi BundleCommand doExecute BundleCommand java   [  org apache karaf shell osgi    ] at org apache karaf shell console OsgiCommandSupport execute OsgiCommandSupport java   [  org apache karaf shell console    ] at org apache felix gogo commands basic AbstractCommand execute AbstractCommand java   [  org apache karaf shell console    ] at org apache felix gogo runtime CommandProxy execute CommandProxy java   [  org apache karaf shell console    ] at org apache felix gogo runtime Closure executeCmd Closure java   [  org apache karaf shell console    ] at org apache felix gogo runtime Closure executeStatement Closure java   [  org apache karaf shell console    ] at org apache felix gogo runtime Pipe run Pipe java   [  org apache karaf shell console    ] at org apache felix gogo runtime Closure execute Closure java   [  org apache karaf shell console    ] at org apache felix gogo runtime Closure execute Closure java   [  org apache karaf shell console    ] at org apache felix gogo runtime CommandSessionImpl execute CommandSessionImpl java   [  org apache karaf shell console    ] at org apache karaf shell console jline Console run Console java   [  org apache karaf shell console    ] at java lang Thread run Thread java   [    _]Caused by   org dozer MappingException   java lang ClassNotFoundException   org dozer util DefaultClassLoader at org dozer util MappingUtils throwMappingException MappingUtils java    at org dozer util DefaultClassLoader loadClass DefaultClassLoader java    at org dozer DozerInitializer loadBeanType DozerInitializer java    at org dozer DozerInitializer initialize DozerInitializer java    at org dozer DozerInitializer init DozerInitializer java    at org dozer DozerBeanMapper init DozerBeanMapper java    at org dozer DozerBeanMapper lt initgt  DozerBeanMapper java    at org dozer DozerBeanMapper lt initgt  DozerBeanMapper java    at sun reflect NativeConstructorAccessorImpl newInstance Native Method [    _] at sun reflect NativeConstructorAccessorImpl newInstance NativeConstructorAccessorImpl java   [    _] at sun reflect DelegatingConstructorAccessorImpl newInstance DelegatingConstructorAccessorImpl java   [    _] at java lang reflect Constructor newInstance Constructor java   [    _] at org apache aries blueprint utils ReflectionUtils newInstance ReflectionUtils java   [  org apache aries blueprint core    ] at org apache aries blueprint container BeanRecipe newInstance BeanRecipe java   [  org apache aries blueprint core    ] at org apache aries blueprint container BeanRecipe getInstance BeanRecipe java   [  org apache aries blueprint core    ]      moreCaused by   java lang ClassNotFoundException   org dozer util DefaultClassLoader at java net URLClassLoader$ run URLClassLoader java   [    _] at java net URLClassLoader$ run URLClassLoader java   [    _] at java security AccessController doPrivileged Native Method [    _] at java net URLClassLoader findClass URLClassLoader java   [    _] at java lang ClassLoader loadClass ClassLoader java   [    _] at sun misc Launcher$AppClassLoader loadClass Launcher java   [    _] at java lang ClassLoader loadClass ClassLoader java   [    _] at java lang Class forName Native Method [    _] at java lang Class forName Class java   [    _] at org apache commons lang ClassUtils getClass ClassUtils java    at org apache commons lang ClassUtils getClass ClassUtils java    at org apache commons lang ClassUtils getClass ClassUtils java    at org dozer util DefaultClassLoader loadClass DefaultClassLoader java         more   
0;Using simple language OGNL expressions doesn't work for Bean Binding when a field is null   ;The following functionality doesn't work  when one of the fields is null   http  camel apache orgbeanbinding htmlYou can also use the OGNL support of the Simple expression language  Now suppose the message body is an object which has a method named asXml  To invoke the asXml method we can do as follows   bean OrderService class  'doSomething $ body asXml   $ header high  ' Instead of using  bean as shown in the examples above  you may want to use  to instead as shown   to 'bean  orderService?method doSomething $ body asXml   $ header high  ' A test case is provided  Instead of getting values of fields 'foo' and 'bar' respectively  the first parameter  which should be null  receives value of pojo toString    while the second parameter receives the correct value    
0;Memory leak SoapOutInterceptor writeSoapEnvelopeStart with security headers   ;When proxying the WSSecurity request through camel route with CXF_MESSAGE data format  we will get the endless loop that eat up the memory 'qtp' prio  tid xfde nid xcf runnable [xfdd] java lang Thread State   RUNNABLE at org apache cxf staxutils WCDOMStreamWriter writeCharacters WCDOMStreamWriter java    at org apache cxf staxutils DelegatingXMLStreamWriter writeCharacters DelegatingXMLStreamWriter java    at org apache cxf staxutils StaxUtils copy StaxUtils java    at org apache cxf staxutils StaxUtils copy StaxUtils java    at org apache cxf staxutils StaxUtils copy StaxUtils java    at org apache cxf binding soap interceptor SoapOutInterceptor writeSoapEnvelopeStart SoapOutInterceptor java    at org apache cxf binding soap interceptor SoapOutInterceptor handleMessage SoapOutInterceptor java    at org apache cxf binding soap interceptor SoapOutInterceptor handleMessage SoapOutInterceptor java    at org apache cxf phase PhaseInterceptorChain doIntercept PhaseInterceptorChain java     locked lt xeafagt   a org apache cxf phase PhaseInterceptorChain  at org apache cxf endpoint ClientImpl doInvoke ClientImpl java    at org apache cxf endpoint ClientImpl invoke ClientImpl java    at org apache camel component cxf CxfProducer process CxfProducer java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor SendProcessor$ doInAsyncProducer SendProcessor java    at org apache camel impl ProducerCache doInAsyncProducer ProducerCache java    at org apache camel processor SendProcessor process SendProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor TraceInterceptor process TraceInterceptor java    at org apache camel processor interceptor HandleFaultInterceptor process HandleFaultInterceptor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel fabric FabricTraceProcessor process FabricTraceProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor RedeliveryErrorHandler processErrorHandler RedeliveryErrorHandler java    at org apache camel processor RedeliveryErrorHandler process RedeliveryErrorHandler java    at org apache camel processor interceptor StreamCachingInterceptor process StreamCachingInterceptor java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor interceptor DefaultChannel process DefaultChannel java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor Pipeline process Pipeline java    at org apache camel processor RouteContextProcessor processNext RouteContextProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel processor UnitOfWorkProcessor processAsync UnitOfWorkProcessor java    at org apache camel processor UnitOfWorkProcessor process UnitOfWorkProcessor java    at org apache camel processor RouteInflightRepositoryProcessor processNext RouteInflightRepositoryProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel util AsyncProcessorHelper process AsyncProcessorHelper java    at org apache camel processor DelegateAsyncProcessor processNext DelegateAsyncProcessor java    at org apache camel processor DelegateAsyncProcessor process DelegateAsyncProcessor java    at org apache camel management InstrumentationProcessor process InstrumentationProcessor java    at org apache camel component cxf CxfConsumer$ asyncInvoke CxfConsumer java     locked lt xedgt   a org apache cxf transport http_jetty continuations JettyContinuationWrapper  at org apache camel component cxf CxfConsumer$ invoke CxfConsumer java    at org apache cxf interceptor ServiceInvokerInterceptor$ run ServiceInvokerInterceptor java    at java util concurrent Executors$RunnableAdapter call Executors java    at java util concurrent FutureTask$Sync innerRun FutureTask java    at java util concurrent FutureTask run FutureTask java    at org apache cxf workqueue SynchronousExecutor execute SynchronousExecutor java    at org apache cxf interceptor ServiceInvokerInterceptor handleMessage ServiceInvokerInterceptor java     locked lt xeafgt   a org apache cxf interceptor ServiceInvokerInterceptor$  at org apache cxf phase PhaseInterceptorChain doIntercept PhaseInterceptorChain java     locked lt xeedbgt   a org apache cxf phase PhaseInterceptorChain  at org apache cxf transport ChainInitiationObserver onMessage ChainInitiationObserver java    at org apache cxf transport http AbstractHTTPDestination invoke AbstractHTTPDestination java    at org apache cxf transport servlet ServletController invokeDestination ServletController java    at org apache cxf transport servlet ServletController invoke ServletController java    at org apache cxf transport servlet CXFNonSpringServlet invoke CXFNonSpringServlet java    at org apache cxf transport servlet AbstractHTTPServlet handleRequest AbstractHTTPServlet java    at org apache cxf transport servlet AbstractHTTPServlet doPost AbstractHTTPServlet java    at javax servlet http HttpServlet service HttpServlet java    at org apache cxf transport servlet AbstractHTTPServlet service AbstractHTTPServlet java    at sun reflect NativeMethodAccessorImpl invoke Native Method  at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java    at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java    at java lang reflect Method invoke Method java    at org opsj pax web service internal HttpServiceStarted$ invoke HttpServiceStarted java    at org opsj pax web service internal $Proxy service Unknown Source  at org eclipse jetty servlet ServletHolder handle ServletHolder java    at org eclipse jetty servlet ServletHandler doHandle ServletHandler java    at org opsj pax web service jetty internal HttpServiceServletHandler doHandle HttpServiceServletHandler java    at org eclipse jetty server handler ScopedHandler handle ScopedHandler java    at org eclipse jetty security SecurityHandler handle SecurityHandler java    at org eclipse jetty server session SessionHandler doHandle SessionHandler java    at org eclipse jetty server handler ContextHandler doHandle ContextHandler java    at org opsj pax web service jetty internal HttpServiceContext doHandle HttpServiceContext java    at org eclipse jetty servlet ServletHandler doScope ServletHandler java    at org eclipse jetty server session SessionHandler doScope SessionHandler java    at org eclipse jetty server handler ContextHandler doScope ContextHandler java    at org eclipse jetty server handler ScopedHandler handle ScopedHandler java    at org opsj pax web service jetty internal JettyServerHandlerCollection handle JettyServerHandlerCollection java    at org eclipse jetty server handler HandlerWrapper handle HandlerWrapper java    at org eclipse jetty server Server handle Server java    at org eclipse jetty server AbstractHttpConnection handleRequest AbstractHttpConnection java    at org eclipse jetty server AbstractHttpConnection content AbstractHttpConnection java    at org eclipse jetty server AbstractHttpConnection$RequestHandler content AbstractHttpConnection java    at org eclipse jetty http HttpParser parseNext HttpParser java    at org eclipse jetty http HttpParser parseAvailable HttpParser java    at org eclipse jetty server AsyncHttpConnection handle AsyncHttpConnection java    at org eclipse jetty io nio SelectChannelEndPoint handle SelectChannelEndPoint java    at org eclipse jetty io nio SelectChannelEndPoint$ run SelectChannelEndPoint java    at org eclipse jetty util thread QueuedThreadPool runJob QueuedThreadPool java    at org eclipse jetty util thread QueuedThreadPool$ run QueuedThreadPool java    at java lang Thread run Thread java      
0;seda  queue size compare should use equals   ;See nabblehttp  camel  n nabble comCamelSedaComponentissueswithQueuesizetp html   
0;mbeansRegistered in DefaultManagementAgent isn't ThreadSafe   ;This is more or less a 'cornercase' I stumbled upon  thoughthe HashSetHashMap     camel versions  in the DefaultManagementAgent containing the registered Mbean mbeansRegistered isn't ThreadSafe  This has been an issue for us while using the ProducerTemplate in a wrongful way  by instantiating the ProducerTemplate during every Route run  As this might be a common mistake by users I'd suggest to improve the mbeansRegistered by using a Synchronized Map    
0;cameltestblueprint  Allow to register custom services in OSGi registry before Camel starts   ;If you have some services your Camel apps uses during testing  then its not easy to enlist them before CamelContext starts We should allow people to enlist services from the unit test class  so they can enlist mock services  shared services that are mocked or what  so they can do their unit tests    
0;camelblueprint  Using  and referrring to SSLContextParameters with property placeholders can lead to CircularDependencyException   ;Configuring a blueprint xml file with lt endpoint id 'myNettyServer' uri 'nettyhttp  http         port  foo?ssl trueamp amp sslContextParameters mySsl'gt Can lead to ciruclar exceptionsCaused by   org apache aries blueprint di CircularDependencyException   [BeanRecipe[name 'mySsl']  BeanRecipe[name ' camelBlueprint factory mySsl']  BeanRecipe[name 'camel']  BeanRecipe[name 'myNettyServer']  BeanRecipe[name 'mySsl']] at org apache aries blueprint container BlueprintRepository push BlueprintRepository java   [  org apache aries blueprint core    ] at org apache aries blueprint di AbstractRecipe create AbstractRecipe java   [  org apache aries blueprint core    ] at org apache aries blueprint container BlueprintRepository createInstances BlueprintRepository java   [  org apache aries blueprint core    ] at org apache aries blueprint container BlueprintRepository createInstance BlueprintRepository java   [  org apache aries blueprint core    ] at org apache aries blueprint container BlueprintRepository create BlueprintRepository java   [  org apache aries blueprint core    ] at org apache aries blueprint container BlueprintContainerImpl getComponentInstance BlueprintContainerImpl java   [  org apache aries blueprint core    ] at org apache camel blueprint BlueprintContainerRegistry lookupByNameAndType BlueprintContainerRegistry java    at org apache camel impl CompositeRegistry lookupByNameAndType CompositeRegistry java         more   
0;DefaultStreamCachingStrategy  Check for enabled in shouldSpoolCache method   ;If stream caching is disabled then we should not spool to disk  This allows components and whatnot to safely use CachedOutputStream and not cause spool to disk  even if stream caching is disabled    
0;camelyammer  Endpoint yammer  current throwns JsonMappingException exception   ;Getting org codehaus jackson map JsonMappingException   Can not deserialize instance of java util ArrayList out of START_OBJECT tokenwhen trying to return the current user using yammer  current  Workaround is to just add ?useJson true and do marshaling manually  Fixing on master shortly    
0;Installation of camelstomp feature fails   ;ChristiansMacBookPro  bin cmueller$  karaf clean __ __ ____  _____ __________ _ __   lt   __ ' ___ __ ' _  | | _    _  __ _ |_|__ __ __ __ Apache Karaf     Hit 'lt tabgt ' for a list of available commandsand '[cmd] help' for help on a specific command Hit 'lt ctrldgt ' or type 'osgi  shutdown' or 'logout' to shutdown Karaf karaf@rootgt  features  chooseurl camel   adding feature url mvn  org apache camel karafapachecamel  xmlfeatureskaraf@rootgt  features  install camelstompError executing command   Could not start bundle mvn  org apache geronimo specsgeronimojms_ _spec   in feature s  springjms   RELEASE  camelspringws    springjms   RELEASE  springjms   RELEASE  cameljms    camelbam    camelstomp    camelsjms    cameljpa     Unresolved constraint in bundle org apache geronimo specs geronimojms_ _spec []   Unable to resolve     missing requirement [ ] osgi wiring package   osgi wiring package javax transaction xa    
0;binding component  Should startstop its child services   ;We should ensure all the child services the binding component create is also startedstopped so they can do initialization logic    
0;Add cache option to beanRef and  in the DSL   ;Added cache option to beanRef and lt beangt  in the DSL  This avoids looking up the Bean from the Registry on each usage  this can safely be done for singleton beans    
0;CamelRedis   Serializer passed through URI is used only on consumer   ;Please add camelredis componentThe serializer passed through URI is used only on consumer and not on producer  Beside been unexpected and undocumented I think it can cause problems on interacting with the Redis DB if the same serializer is not used in both ways You can find the example and discussion of this problem on this thread on the forum  http  camel  n nabble comcamelredisstringsserializationtd htmlI put as minor because from the discussion it looks like it is possible to have a workaround using a RedisTemplate    
0;XML Signature Component   Stream not closed in XmlSignerHelper getXslTransform String path    ;Component camelxmlsecurity   InputStream is not closed after it is read in method XmlSignerHelper getXslTransform String path    
0;cameljt  no longer able to configure a pollStrategy on JtDataQueueEndpoint   ;With camel    we were able to configure a pollStrategy in the URL of an endpoint consuming information from a data queue After upgrading to    we get an exception during camel startup stating 'Unknown consumer parameters [ pollStrategy jtPollStrategy ]'  The application no longer starts Downgrading to    allows the application to be started normally The problem seems to originate from the fact that Camel  in DefaultPollingEndpoint createConsumer    creates a new DefaultScheduledPollConsumer  which gets the poll strategy  no problem   Then afterwards in JtDataQueueEndpoint createPollingConsumer   a JtDataQueueConsumer is created and inside configureConsumer   normal flow is stopped because there is no pollStrategy property in a JtDataQueueConsumer  and there is an entry for this property in the endpoint's consumerProperties map I suspect that the consumerProperty pollStrategy should be removed from the endpoint's consumerProperties after it has been set on the DefaultScheduledPollConsumer      
0;mustache component  Should use app class loader to load templates   ;It uses the TCCL to load the templates  We should use the App CL which then would allow to better load templates from OSGi    
0;Bean binding to covariant methods throws AmbiguousMethodCallException   ;Attached is a patch and test case for an issue in the bean binding code which prevents binding to an overloaded method with a covariant return type from the base class  The fix is to check for method covariance at the last moment before throwing AmbiguousMethodCallException  If all methods remaining are covariant  any one of them can be called  Unfortunately this happens in  places in the code if we prefiltered the list of methods then we could lose annotations on either of the method signature which could be problematic depending on the resolution type    
0;UnitUtilsTest cant manage a locale different from US   ;When locale is set to a language different from english  for example italian   the unit test in org apache camel util UnitUtilsTest fail  because in the italian locale the decimal separator is the comma  not the dot The test compare the results of printUnitFromBytes to static strings formatted with the dot  and in an italian locale fails because it espects ' ' and get instead ' ' I have patched the test code to make it works in every locale  building the expected results with the current locale decimal separator   and i have attached the patch to this issue    
0;scp task does not respect StrictHostKeyChecking option   ;The SCP component does not currently do anything with the StrictHostKeyChecking option  as documented  The attached patch fixes this  no test case I'm afraid     
0;Null Pointer exception when removing SjmsComponent   ;NullPointer exception in SjmsComponent when trying to remove it from camel context          WARN  org apache camel impl DefaultCamelContext removeComponent DefaultCamelContext java     org apache camel spring SpringCamelContext   Error stopping component org apache camel component sjms SjmsComponent@ec  This exception will be ignored java lang NullPointerException at org apache camel component sjms SjmsComponent doStop SjmsComponent java    at org apache camel support ServiceSupport stop ServiceSupport java    at org apache camel util ServiceHelper stopService ServiceHelper java    at org apache camel impl DefaultCamelContext stopServices DefaultCamelContext java    at org apache camel impl DefaultCamelContext removeComponent DefaultCamelContext java      
0;HttpConnectionManagerParams doesn't take effect when it is set to HttpComponent   ;Here is the user complain It is caused by the patch of CAMEL which override the setting of HttpConnectionManagerParams    
0;InterceptFrom  Add support for using property placeholders   ;InterceptFrom does not support property placeholders  We should add support for that Seehttp  camel  n nabble comUsageofpropertyplaceholdersintheinterceptFromStringmethodcallstp html   
0;rabbitmq component sends basic ack after channel closed when endpoint is set to autoAck   ;Consuming from a rabbitmq endpoint uri that is configured to autoAck generates errors and fails Example URI   rabbitmq  localhost  test?autoAck trueamp queue testamp autoDelete falseamp username guestamp password guestHere's the relevant log output         osisht TRACE o a c c rabbitmq RabbitMQConsumer  Acknowleding receipt  delivery_tag         osisht WARN o a c c rabbitmq RabbitMQConsumer  Error processing exchange  Exchange Message   WTF   Caused by    com rabbitmq client AlreadyClosedException  clean connection shutdown  reason   Attempt to use closed channel com rabbitmq client AlreadyClosedException   clean connection shutdown  reason   Attempt to use closed channel at com rabbitmq client impl AMQChannel ensureIsOpen AMQChannel java    ~ amqpclient   jar  na  at com rabbitmq client impl AMQChannel transmit AMQChannel java    ~ amqpclient   jar  na  at com rabbitmq client impl AMQChannel transmit AMQChannel java    ~ amqpclient   jar  na  at com rabbitmq client impl ChannelN basicAck ChannelN java    ~ amqpclient   jar  na  at org apache camel component rabbitmq RabbitMQConsumer$RabbitConsumer handleDelivery RabbitMQConsumer java    ~ camelrabbitmq   jar      at com rabbitmq client impl ConsumerDispatcher$ run ConsumerDispatcher java     amqpclient   jar  na  at com rabbitmq client impl ConsumerWorkService$WorkPoolRunnable run ConsumerWorkService java     amqpclient   jar  na  at java util concurrent ThreadPoolExecutor runWorker ThreadPoolExecutor java     na    _  at java util concurrent ThreadPoolExecutor$Worker run ThreadPoolExecutor java     na    _  at java lang Thread run Thread java     na    _    